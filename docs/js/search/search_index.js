var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AceComponent.html",[0,0.237,1,1.237]],["body/components/AceComponent.html",[0,0.4,1,1.746,2,0.178,3,0.178,4,0.599,5,0.816,6,0.816,7,1.12,8,0.156,9,2.422,10,0.308,11,2.865,12,6.058,13,4.979,14,2.404,15,1.804,16,4.101,17,4.591,18,2.038,19,1.884,20,3.136,21,2.854,22,0.668,23,1.603,24,0.007,25,0.847,26,2.28,27,1.963,28,1.56,29,4.591,30,1.216,31,4.591,32,0.337,33,0.614,34,2.614,35,1.811,36,3.792,37,4.116,38,1.369,39,1.954,40,2.954,41,1.717,42,2.61,43,1.916,44,0.744,45,4.672,46,3.212,47,3.654,48,2.865,49,3.792,50,4.591,51,4.591,52,2.754,53,7.607,54,7.769,55,0.873,56,2.806,57,6.322,58,2.148,59,4.663,60,0.377,61,3.53,62,3.654,63,6.322,64,0.859,65,1.866,66,1.235,67,2.967,68,2.967,69,2.967,70,1.696,71,0.773,72,1.909,73,3.298,74,1.813,75,1.071,76,1.203,77,1.99,78,2.967,79,2.754,80,2.967,81,2.754,82,2.967,83,3.132,84,2.146,85,3.132,86,0.987,87,0.903,88,0.687,89,2.754,90,2.967,91,4.591,92,2.967,93,4.541,94,4.083,95,4.591,96,4.591,97,2.967,98,4.591,99,2.754,100,2.967,101,2.989,102,2.654,103,1.66,104,3.654,105,1.254,106,2.038,107,2.967,108,1.615,109,2.967,110,1.715,111,2.967,112,1.838,113,0.862,114,2.333,115,2.967,116,2.637,117,2.967,118,2.038,119,2.564,120,2.967,121,1.499,122,2.564,123,3.792,124,2.26,125,2.26,126,1.17,127,2.865,128,2.26,129,2.26,130,1.603,131,2.754,132,0.268,133,2.754,134,1.17,135,1.387,136,2.638,137,2.967,138,2.422,139,2.131,140,2.26,141,1.073,142,0.718,143,1.78,144,1.78,145,0.129,146,0.084,147,2.26,148,4.591,149,4.591,150,2.967,151,2.967,152,5.161,153,2.967,154,3.498,155,2.638,156,5.616,157,2.967,158,5.616,159,2.967,160,3.132,161,2.967,162,1.56,163,4.083,164,2.967,165,1.553,166,2.967,167,1.285,168,2.131,169,2.638,170,2.26,171,1.144,172,2.638,173,1.715,174,1.851,175,2.422,176,2.967,177,2.967,178,2.967,179,4.083,180,2.967,181,1.78,182,0.547,183,1.194,184,0.911,185,1.144,186,1.225,187,1.424,188,1.706,189,0.816,190,0.816,191,0.731,192,0.758,193,1.033,194,0.928,195,1.88,196,0.772,197,1.738,198,0.772,199,0.816,200,0.758,201,1.262,202,0.772,203,0.816,204,0.758,205,0.816,206,0.731,207,0.744,208,1.381,209,1.544,210,0.731,211,0.758,212,0.758,213,0.744,214,0.816,215,0.772,216,1.544,217,0.816,218,0.816,219,0.772,220,1.738,221,0.758,222,1.544,223,0.772,224,0.772,225,0.758,226,0.816,227,0.744,228,0.772,229,0.816,230,0.758,231,0.816,232,0.816,233,0.758,234,0.816,235,0.731,236,0.758,237,0.816,238,0.744,239,0.816,240,0.668,241,0.816,242,0.744,243,1.408,244,0.816,245,0.744,246,0.816,247,0.744,248,0.816,249,0.705,250,0.816,251,0.758,252,0.692,253,0.758,254,0.772,255,0.816,256,0.758,257,0.816,258,0.816,259,0.758,260,0.816,261,0.758,262,0.816,263,0.705,264,0.816,265,0.758,266,0.758,267,0.816,268,0.758,269,0.772,270,0.816,271,0.731,272,0.731,273,1.627,274,0.744,275,0.588,276,0.758,277,0.744,278,0.744,279,0.758,280,0.744,281,0.758,282,0.816,283,0.744,284,0.816,285,0.758,286,0.816,287,0.758,288,0.816,289,0.758,290,0.816,291,0.758,292,0.718,293,0.731,294,0.816,295,0.744,296,0.816,297,0.744,298,0.816,299,0.744,300,0.816,301,0.744,302,0.786,303,0.816,304,0.744,305,0.772,306,0.731,307,0.816,308,0.003,309,0.003]],["title/modules/AceModule.html",[310,1.014,311,3.48]],["body/modules/AceModule.html",[1,2.506,2,0.394,3,0.394,8,0.345,23,2.274,24,0.007,25,1.687,58,2.231,60,0.405,132,0.594,141,3.104,145,0.389,146,0.186,182,1.211,308,0.006,309,0.006,310,1.669,311,6.76,312,2.588,313,5.836,314,5.836,315,5.836,316,5.836,317,3.215,318,2.476,319,2.186,320,6.563,321,4.45,322,3.007,323,6.563]],["title/components/AdminEntryInputComponent.html",[0,0.237,191,1.193]],["body/components/AdminEntryInputComponent.html",[0,0.413,1,1.074,2,0.252,3,0.252,4,1.393,5,1.156,6,1.156,8,0.221,10,0.437,18,2.639,19,2.085,22,0.946,24,0.007,26,2.314,27,1.996,30,1.575,32,0.477,33,0.795,35,1.767,39,2.229,40,3.504,41,2.111,42,3.095,43,2.176,55,0.718,60,0.353,64,0.871,66,1.151,86,0.657,87,0.937,88,0.457,108,1.519,110,1.055,112,1.729,113,0.811,121,1.941,122,3.32,123,4.497,124,3.203,125,3.203,126,1.658,127,3.71,128,3.203,129,3.203,130,2.272,132,0.38,145,0.183,146,0.119,173,2.431,182,0.776,183,1.547,184,1.179,188,2.023,189,1.156,190,1.156,191,1.846,192,1.074,193,1.338,194,1.139,195,2.175,196,1.094,197,2.061,198,1.094,199,1.156,200,1.074,201,1.635,202,1.094,203,1.156,204,1.074,205,1.156,206,1.036,207,1.055,208,1.816,209,1.896,210,1.036,211,1.074,212,1.074,213,1.055,214,1.156,215,1.094,216,1.896,217,1.156,218,1.156,219,1.094,220,2.061,221,1.074,222,1.896,223,1.094,224,1.094,225,1.074,226,1.156,227,1.055,228,1.094,229,1.156,230,1.074,231,1.156,232,1.156,233,1.074,234,1.156,235,1.036,236,1.074,237,1.156,238,1.055,239,1.156,240,0.946,241,1.156,242,1.055,243,1.73,244,1.156,245,1.055,246,1.156,247,1.055,248,1.156,249,0.999,250,1.156,251,1.074,252,0.981,253,1.074,254,1.094,255,1.156,256,1.074,257,1.156,258,1.156,259,1.074,260,1.156,261,1.074,262,1.156,263,0.999,264,1.156,265,1.074,266,1.074,267,1.156,268,1.074,269,1.094,270,1.156,271,1.036,272,1.036,273,1.848,274,1.055,275,0.834,276,1.074,277,1.055,278,1.055,279,1.074,280,1.055,281,1.074,282,1.156,283,1.055,284,1.156,285,1.074,286,1.156,287,1.074,288,1.156,289,1.074,290,1.156,291,1.074,292,1.017,293,1.036,294,1.156,295,1.055,296,1.156,297,1.055,298,1.156,299,1.055,300,1.156,301,1.055,302,1.114,303,1.156,304,1.055,305,1.094,306,1.036,307,1.156,308,0.004,309,0.004,324,5.386,325,5.386,326,3.02,327,3.021,328,3.437,329,5.287,330,6.704,331,3.942,332,3.566,333,4.055,334,4.854,335,5.386,336,5.946,337,4.854,338,4.53,339,3.266,340,0.946,341,2.202,342,3.033,343,5.946,344,3.739,345,3.433,346,3.433,347,2.624,348,3.433,349,2.076,350,2.624,351,4.205,352,3.203,353,3.433,354,3.433,355,4.854,356,3.71]],["title/directives/AssetDirective.html",[184,0.961,293,1.193]],["body/directives/AssetDirective.html",[2,0.287,3,0.287,4,1.674,8,0.342,10,0.497,15,1.856,21,3.753,22,1.077,24,0.007,25,1.199,26,1.517,32,0.543,33,0.87,35,1.863,39,2.193,44,1.054,46,4.027,55,1.057,60,0.374,64,0.922,65,1.933,66,1.266,70,1.767,71,1.094,74,1.631,76,1.237,77,1.222,86,1.015,87,0.706,88,0.706,103,2.351,113,1.081,116,3.297,121,2.123,132,0.433,142,1.157,145,0.209,146,0.136,184,1.572,193,2.185,293,1.602,308,0.005,309,0.005,331,4.272,339,3.61,340,1.077,341,2.505,342,3.157,349,2.362,352,3.645,356,4.945,357,2.124,358,4.255,359,4.212,360,4.303,361,7.778,362,5.406,363,5.628,364,4.971,365,2.537,366,6.503,367,1.545,368,5.309,369,4.809,370,4.785,371,4.785,372,5.309,373,1.573,374,4.785,375,4.785,376,2.454,377,4.785,378,3.513,379,1.502,380,2.749,381,4.785,382,5.783,383,4.785,384,2.402,385,5.783,386,2.124,387,4.785,388,4.671,389,4.785,390,4.785,391,4.255,392,2.87,393,4.785,394,2.023,395,4.785,396,3.264,397,4.785,398,4.785,399,4.785,400,4.785,401,3.264,402,3.264,403,2.297,404,3.115,405,3.645,406,6.503,407,7.048,408,3.645,409,1.418,410,2.87,411,4.785,412,3.645,413,3.115,414,4.255,415,5.309,416,4.785,417,3.645,418,4.785,419,4.785]],["title/components/AssetListPopComponent.html",[0,0.237,192,1.237]],["body/components/AssetListPopComponent.html",[0,0.378,1,0.813,2,0.191,3,0.191,4,0.643,5,1.332,6,0.875,8,0.167,10,0.331,18,2.15,19,0.77,22,0.716,24,0.007,25,0.894,26,2.288,27,1.974,28,1.646,30,1.283,32,0.361,33,0.648,34,1.752,35,1.618,38,1.063,39,2.047,43,1.554,44,1.063,55,0.898,60,0.385,64,0.852,65,1.071,66,1.208,71,0.535,74,1.77,76,1.075,77,1.802,84,0.999,86,1.024,87,0.919,88,0.712,108,1.237,110,0.798,112,2.316,113,1.014,123,4.636,132,0.288,145,0.139,146,0.09,171,1.868,182,0.587,183,1.26,184,0.961,188,1.77,189,0.875,190,0.875,191,0.784,192,1.675,193,1.873,194,1.55,195,1.94,196,0.828,197,1.803,198,0.828,199,0.875,200,0.813,201,1.332,202,0.828,203,0.875,204,0.813,205,0.875,206,0.784,207,0.798,208,1.837,209,1.613,210,0.784,211,0.813,212,0.813,213,0.798,214,0.875,215,0.828,216,1.613,217,0.875,218,0.875,219,0.828,220,1.803,221,0.813,222,1.613,223,0.828,224,0.828,225,0.813,226,0.875,227,0.798,228,0.828,229,0.875,230,0.813,231,0.875,232,0.875,233,0.813,234,0.875,235,0.784,236,0.813,237,0.875,238,0.798,239,0.875,240,0.716,241,0.875,242,0.798,243,1.471,244,0.875,245,0.798,246,0.875,247,0.798,248,0.875,249,0.756,250,0.875,251,0.813,252,0.742,253,0.813,254,0.828,255,0.875,256,0.813,257,0.875,258,0.875,259,0.813,260,0.875,261,0.813,262,0.875,263,0.756,264,0.875,265,0.813,266,0.813,267,0.875,268,0.813,269,0.828,270,0.875,271,2.084,272,0.784,273,1.673,274,0.798,275,0.631,276,0.813,277,0.798,278,0.798,279,0.813,280,0.798,281,0.813,282,0.875,283,0.798,284,0.875,285,0.813,286,0.875,287,0.813,288,0.875,289,0.813,290,0.875,291,0.813,292,2.075,293,0.784,294,0.875,295,0.798,296,0.875,297,0.798,298,0.875,299,0.798,300,0.875,301,0.798,302,0.843,303,0.875,304,0.798,305,0.828,306,1.445,307,0.875,308,0.003,309,0.003,339,3.069,340,1.32,342,2.745,350,3.023,365,2.099,367,1.151,373,1.798,376,1.828,379,2.426,380,2.448,384,2.942,392,2.906,401,2.17,402,2.17,409,0.943,420,7.257,421,6.662,422,2.597,423,4.499,424,3.955,425,3.955,426,3.955,427,2.461,428,2.098,429,4.091,430,1.752,431,3.267,432,3.48,433,4.308,434,4.308,435,3.955,436,3.955,437,5.376,438,2.935,439,4.845,440,3.586,441,4.638,442,4.594,443,2.166,444,3.67,445,3.89,446,4.594,447,2.83,448,4.84,449,4.233,450,3.662,451,4.308,452,2.048,453,4.308,454,2.617,455,4.308,456,3.182,457,4.233,458,3.182,459,3.182,460,1.909,461,2.424,462,3.182,463,3.182,464,3.304,465,2.722,466,3.182,467,4.845,468,3.182,469,2.705,470,4.845,471,3.182,472,4.845,473,3.182,474,2.705,475,2.705,476,3.182,477,2.83,478,3.182,479,2.597,480,2.83,481,2.264,482,3.182,483,2.597,484,1.617,485,2.597,486,2.83,487,1.617,488,2.286,489,1.617,490,2.597,491,2.597,492,3.182,493,2.424,494,2.597,495,1.039,496,3.182,497,3.819,498,2.83,499,2.83,500,3.182,501,3.182,502,2.286,503,3.182,504,3.182,505,3.182,506,3.955,507,4.845]],["title/injectables/AuthGuard.html",[367,1.151,508,3.48]],["body/injectables/AuthGuard.html",[2,0.348,3,0.348,8,0.305,10,0.603,15,1.655,24,0.007,25,1.07,32,0.658,33,0.987,34,2.668,38,0.94,44,1.196,55,1.032,56,3.276,60,0.416,64,0.806,66,1.107,71,1.242,73,5.301,76,1.174,86,0.905,87,0.63,88,0.63,113,0.791,126,2.91,132,0.525,145,0.253,146,0.164,252,1.722,308,0.005,309,0.005,339,3.527,340,1.305,341,3.037,342,3.331,345,4.734,365,2.363,367,1.928,394,2.451,444,3.643,495,1.894,508,5.301,509,7.599,510,5.158,511,7.381,512,3.864,513,5.617,514,4.427,515,3.642,516,4.927,517,4.617,518,4.605,519,3.643,520,7.067,521,9.02,522,3.794,523,4.102,524,7.381,525,5.8,526,5.331,527,5.18,528,3.75,529,6.025,530,4.805,531,1.955,532,3.238,533,4.418,534,3.479,535,1.857,536,5.8,537,4.418,538,5.158,539,5.8,540,5.8,541,7.381,542,5.8,543,5.8,544,5.158,545,5.8,546,5.8,547,5.8]],["title/modules/AuthModule.html",[310,1.014,548,3.48]],["body/modules/AuthModule.html",[0,0.366,2,0.355,3,0.355,8,0.311,10,0.615,23,2.338,24,0.007,58,2.01,60,0.449,76,0.855,132,0.535,134,2.332,141,2.962,145,0.387,146,0.168,182,1.091,249,2.274,268,2.445,269,1.538,308,0.005,309,0.005,310,1.802,312,2.332,317,3.014,318,2.232,319,1.97,322,2.82,359,2.561,449,4.913,450,5.061,452,3.158,508,6.511,548,7.009,549,5.259,550,5.259,551,5.259,552,5.259,553,5.259,554,5.437,555,4.828,556,3.492,557,3.402,558,2.625,559,6.645,560,5.588,561,6.645,562,5.259,563,5.259,564,4.828,565,4.828,566,5.915,567,5.915,568,5.915,569,4.828,570,2.625,571,6.1,572,5.915,573,5.915,574,5.915]],["title/injectables/AuthService.html",[367,1.151,450,2.705]],["body/injectables/AuthService.html",[2,0.351,3,0.19,8,0.166,10,0.329,23,2.325,24,0.007,25,1.078,27,0.974,32,0.359,37,3.14,38,1.06,39,1.994,44,1.434,45,2.893,55,0.896,60,0.35,64,0.737,65,2.078,66,1.183,70,1.168,72,1.457,74,1.64,75,1.855,76,1.408,79,2.893,86,1.319,87,0.918,88,0.975,103,1.144,113,1.052,116,2.521,121,1.575,132,0.286,142,1.414,145,0.138,146,0.09,252,1.642,269,2.006,273,1.315,275,0.956,308,0.006,309,0.003,318,1.82,331,4.589,333,4.801,337,6.054,339,2.413,340,0.712,342,2.739,367,1.553,369,3.805,384,1.781,386,3.529,403,1.518,404,2.059,412,5.876,430,2.682,443,2.414,449,1.897,450,2.693,495,1.575,513,2.893,526,3.009,535,1.013,556,3.604,570,1.404,575,2.813,576,3.674,577,3.464,578,6.295,579,3.937,580,4.198,581,4.198,582,5.198,583,3.937,584,5.65,585,3.674,586,3.464,587,2.902,588,5.337,589,2.693,590,3.937,591,4.289,592,4.289,593,4.823,594,4.289,595,4.823,596,4.823,597,4.289,598,6.538,599,6.538,600,4.823,601,4.823,602,7.038,603,3.163,604,4.141,605,3.163,606,4.289,607,4.823,608,3.163,609,5.54,610,5.14,611,4.289,612,3.163,613,4.823,614,3.163,615,1.575,616,4.98,617,4.823,618,5.557,619,3.532,620,3.163,621,4.823,622,3.163,623,4.256,624,2.813,625,3.163,626,4.769,627,6.596,628,4.823,629,3.163,630,3.163,631,4.823,632,3.163,633,4.823,634,3.163,635,2.788,636,3.163,637,3.163,638,2.582,639,2.582,640,2.059,641,1.829,642,2.41,643,1.973,644,3.163,645,6.538,646,6.538,647,4.823,648,4.823,649,4.823,650,5.814,651,4.823,652,3.163,653,4.823,654,3.163,655,5.845,656,5.845,657,3.163,658,3.163,659,4.289,660,3.163,661,2.813,662,2.813,663,3.163,664,1.897,665,3.163,666,3.163,667,3.163,668,3.163,669,3.163,670,3.163,671,3.163,672,4.823,673,3.163,674,4.823,675,3.163,676,2.893,677,3.163,678,2.693,679,3.009,680,3.163,681,4.823,682,4.823,683,3.163,684,3.163,685,3.163,686,3.464,687,4.823,688,3.163,689,4.823,690,3.674,691,4.823,692,4.823,693,3.674,694,4.823,695,4.823,696,4.289,697,4.823,698,3.163,699,4.823,700,3.163,701,3.163,702,3.163,703,3.163,704,3.163,705,3.163,706,3.163,707,3.163,708,2.272,709,2.813,710,1.829,711,3.163]],["title/classes/Collection.html",[146,0.137,712,2.537]],["body/classes/Collection.html",[2,0.206,3,0.206,7,3.358,8,0.18,10,0.356,24,0.007,25,1.704,32,0.827,33,0.685,34,2.947,38,1.321,39,1.918,43,2.576,44,0.831,60,0.242,64,0.884,66,1.203,71,1.226,74,1.708,75,2.093,76,1.342,77,1.567,84,1.609,86,1.301,87,0.905,88,0.935,113,1.112,121,1.119,142,1.763,145,0.149,146,0.207,162,1.742,194,1.014,308,0.004,309,0.004,340,0.771,357,1.522,373,2.293,376,2.57,379,2.887,386,2.275,409,2.552,438,1.119,454,2.769,469,3.802,475,4.27,481,2.868,526,4.249,527,4.737,528,3.46,529,2.798,534,2.056,589,3.427,615,3.042,635,1.982,712,4.895,713,3.048,714,5.01,715,5.125,716,4.675,717,3.422,718,3.775,719,5.125,720,5.125,721,6.81,722,5.125,723,5.125,724,5.125,725,5.125,726,4.557,727,5.457,728,3.213,729,3.548,730,3.428,731,3.197,732,7.914,733,3.428,734,5.125,735,5.125,736,7.756,737,3.428,738,4.433,739,4.084,740,5.125,741,5.125,742,3.428,743,5.125,744,3.681,745,3.904,746,5.125,747,3.428,748,5.125,749,5.125,750,3.428,751,5.125,752,5.125,753,3.428,754,3.428,755,5.125,756,3.428,757,5.125,758,5.125,759,3.428,760,5.125,761,3.428,762,3.428,763,3.048,764,3.048,765,3.048,766,3.048,767,3.048,768,3.048,769,3.048,770,3.048,771,2.232,772,2.139,773,4.945,774,3.495,775,6.137,776,5.125,777,3.428,778,3.428,779,1.795,780,3.428,781,3.428,782,6.137,783,6.81,784,6.137,785,7.927,786,3.428,787,3.428,788,3.428,789,3.428,790,3.048,791,3.428]],["title/classes/Config.html",[146,0.137,443,1.789]],["body/classes/Config.html",[2,0.358,3,0.358,8,0.313,10,0.619,24,0.007,32,0.676,33,1.287,38,0.966,39,2.062,41,1.783,44,1.472,55,0.72,56,3.83,64,0.857,65,2.037,66,1.024,75,2.118,76,1.287,86,0.93,87,0.647,88,0.893,103,2.714,113,0.813,145,0.26,146,0.233,167,2.58,308,0.005,309,0.005,353,4.864,386,2.645,430,3.284,443,3.636,495,2.684,519,3.706,792,5.299,793,4.827,794,4.34,795,5.959,796,5.959,797,5.959,798,6.129,799,7.508,800,4.518,801,7.508,802,7.508,803,7.508,804,5.719,805,5.121,806,4.539,807,3.219,808,5.959,809,5.959,810,5.959,811,7.508,812,8.22,813,5.959]],["title/components/CrudComponent.html",[0,0.237,200,1.237]],["body/components/CrudComponent.html",[0,0.326,1,0.715,2,0.168,3,0.168,4,1.344,5,0.77,6,0.77,7,1.057,8,0.147,10,0.291,15,1.253,19,0.677,20,3.022,22,0.63,24,0.007,25,1.302,26,2.273,27,1.96,28,1.492,30,1.163,32,0.318,33,0.724,35,1.545,38,0.712,39,2.088,41,1.677,43,2.024,44,1.303,47,3.542,55,0.853,58,1.492,60,0.417,64,0.839,65,1.471,66,1.208,71,0.739,75,1.024,76,1.304,77,1.121,84,1.378,86,1.039,87,0.928,88,0.873,103,2.906,105,2.813,106,2.72,108,1.565,110,0.702,112,1.782,113,0.963,132,0.253,135,1.309,145,0.122,146,0.153,162,1.84,171,1.693,174,1.747,182,0.517,183,1.408,184,0.871,185,1.08,186,1.156,187,1.344,188,1.654,189,0.77,190,0.77,191,0.69,192,0.715,193,0.988,194,1.472,195,1.829,196,0.728,197,1.685,198,0.728,199,0.77,200,1.803,201,1.207,202,0.728,203,0.77,204,0.715,205,0.77,206,0.69,207,0.702,208,1.744,209,1.488,210,0.69,211,0.715,212,0.715,213,0.702,214,0.77,215,0.728,216,1.488,217,0.77,218,0.77,219,1.142,220,1.685,221,1.7,222,1.488,223,1.731,224,0.728,225,0.715,226,0.77,227,0.702,228,0.728,229,0.77,230,0.715,231,0.77,232,0.77,233,0.715,234,0.77,235,0.69,236,0.715,237,0.77,238,0.702,239,0.77,240,1.497,241,0.77,242,0.702,243,1.358,244,0.77,245,0.702,246,0.77,247,0.702,248,0.77,249,0.665,250,0.77,251,0.715,252,0.653,253,0.715,254,0.728,255,0.77,256,0.715,257,0.77,258,0.77,259,0.715,260,0.77,261,0.715,262,0.77,263,0.665,264,0.77,265,0.715,266,0.715,267,0.77,268,0.715,269,0.728,270,0.77,271,0.69,272,0.69,273,1.588,274,0.702,275,0.555,276,0.715,277,0.702,278,0.702,279,0.715,280,0.702,281,0.715,282,0.77,283,0.702,284,0.77,285,0.715,286,0.77,287,0.715,288,0.77,289,0.715,290,0.77,291,0.715,292,0.677,293,0.69,294,0.77,295,0.702,296,0.77,297,0.702,298,0.77,299,0.702,300,0.77,301,0.702,302,0.742,303,0.77,304,0.702,305,0.728,306,0.69,307,0.77,308,0.003,309,0.003,319,1.462,339,1.812,340,0.63,341,1.466,342,2.263,359,2.344,364,3.247,365,2.13,373,1.062,379,1.378,380,2.56,384,1.621,394,1.184,403,1.344,409,1.301,410,1.68,423,3.113,428,2.653,429,1.747,438,2.756,440,2.23,443,1.999,445,2.863,446,3.524,449,3.247,450,3.421,457,3.991,460,2.633,465,2.723,489,1.423,490,2.286,495,2.624,502,2.012,512,3.864,515,1.156,522,3.756,523,2.942,532,1.564,533,2.133,535,0.896,570,1.948,615,2.001,635,1.619,664,1.68,793,2.298,804,2.133,814,2.49,815,3.153,816,2.371,817,3.583,818,3.344,819,4.389,820,3.022,821,3.377,822,2.599,823,3.903,824,3.903,825,6.128,826,3.214,827,5.42,828,5.449,829,3.903,830,4.389,831,4.389,832,4.389,833,3.864,834,3.129,835,2.235,836,2.59,837,5.378,838,4.389,839,5.449,840,2.633,841,2.8,842,2.8,843,2.8,844,4.404,845,2.8,846,2.8,847,2.8,848,3.903,849,4.419,850,4.124,851,3.903,852,2.8,853,4.389,854,2.8,855,3.903,856,4.389,857,2.8,858,2.537,859,2.8,860,4.389,861,2.8,862,2.8,863,2.8,864,2.994,865,2.8,866,2.8,867,2.8,868,2.286,869,2.133,870,1.747,871,2.286,872,2.286,873,2.286,874,2.49,875,2.49,876,2.286,877,1.823,878,1.513,879,2.286,880,2.286,881,2.286,882,2.8,883,2.8,884,2.133,885,2.8,886,2.8,887,2.8,888,1.564,889,2.012,890,2.8,891,4.814,892,2.49,893,2.49,894,2.8,895,2.286,896,2.8,897,2.8,898,1.91,899,2.8,900,2.8,901,5.413,902,2.286,903,2.49,904,2.49,905,2.8,906,2.8,907,2.858,908,3.888,909,2.8,910,2.994,911,2.8,912,1.747,913,2.133,914,2.8,915,1.823,916,3.903,917,3.903]],["title/interfaces/CrudConfig.html",[457,2.906,918,1.463]],["body/interfaces/CrudConfig.html",[0,0.409,2,0.266,3,0.266,8,0.233,10,0.461,18,2.739,24,0.007,25,1.714,27,1.246,32,0.503,33,0.825,38,1.001,44,1.417,53,5.488,55,1.086,60,0.335,64,0.937,65,2.04,70,3.227,71,1.038,88,1.057,113,1.047,145,0.193,146,0.237,162,2.098,171,2.38,186,2.548,193,1.727,194,1.38,208,1.85,240,1.727,263,1.823,273,1.389,275,1.6,308,0.004,309,0.004,359,3.617,364,5.01,373,2.333,376,2.679,392,3.702,423,4.567,426,5.038,432,4.433,438,2.727,455,5.488,457,4.603,489,2.253,517,4.147,522,3.903,609,6,615,2.634,616,4.702,676,4.603,678,3.964,679,4.429,717,2.49,794,3.568,807,3.335,815,4.433,822,2.963,826,3.803,872,3.62,918,1.864,919,3.944,920,2.767,921,6.172,922,4.104,923,7.675,924,7.675,925,6.819,926,7.675,927,7.675,928,7.675,929,7.675,930,7.675,931,6.825,932,6.825,933,5.038,934,4.997,935,4.433,936,5.488,937,2.672,938,5.847,939,4.433,940,6.172,941,4.702,942,3.446,943,6.172,944,3.047,945,6.825,946,5.847,947,5.235,948,6.825,949,5.038,950,3.568,951,4.21,952,3.379,953,4.435]],["title/injectables/CrudService.html",[367,1.151,954,2.618]],["body/injectables/CrudService.html",[0,0.257,2,0.213,3,0.213,8,0.186,10,0.368,24,0.007,25,1.364,32,0.402,33,1.072,38,1.542,41,1.248,44,0.852,55,0.836,60,0.378,61,1.979,62,2.049,64,0.897,65,1.994,66,1.167,70,3.277,71,1.348,72,1.071,75,2.165,76,1.376,79,2.126,84,2.937,86,1.312,87,0.913,88,0.913,103,3.137,112,1.031,113,0.484,114,1.801,116,2.67,126,2.072,132,0.321,142,1.271,145,0.229,146,0.1,162,1.205,167,1.535,194,0.868,208,1.948,275,1.667,308,0.004,309,0.006,332,3.755,339,2.858,340,0.798,341,1.856,342,2.557,360,1.657,364,3.151,367,1.756,373,1.514,378,4.183,379,1.649,380,1.23,386,1.573,403,1.702,430,3.286,452,2.221,454,1.915,465,3.091,469,4.128,475,2.934,495,2.044,518,3.278,527,4.323,534,2.126,535,1.135,664,3.755,678,2.934,679,3.278,717,3.837,772,2.212,779,3.278,800,3.871,822,2.522,864,3.584,888,2.934,918,1.071,942,4.128,946,2.701,947,2.418,954,3.382,955,2.894,956,3.151,957,3.584,958,3.151,959,2.522,960,3.151,961,2.275,962,3.421,963,4.672,964,4.289,965,4.672,966,5.254,967,4.289,968,3.545,969,4.289,970,3.95,971,4.289,972,3.545,973,3.774,974,4.672,975,3.545,976,4.672,977,5.48,978,3.545,979,4.289,980,3.545,981,3.774,982,4.076,983,4.289,984,3.545,985,4.003,986,4.289,987,4.672,988,3.545,989,3.421,990,4.672,991,4.672,992,3.545,993,3.584,994,2.212,995,2.894,996,2.894,997,2.308,998,2.701,999,2.894,1000,2.894,1001,2.894,1002,2.894,1003,2.894,1004,2.894,1005,2.894,1006,2.894,1007,3.152,1008,3.152,1009,3.152,1010,5.567,1011,5.11,1012,2.894,1013,3.037,1014,2.894,1015,2.894,1016,3.152,1017,4.672,1018,4.289,1019,2.212,1020,3.152,1021,5.11,1022,2.894,1023,2.894,1024,2.894,1025,2.894,1026,5.11,1027,2.212,1028,2.894,1029,3.152,1030,2.894,1031,3.152,1032,3.152]],["title/modules/DataModule.html",[310,1.014,1033,3.305]],["body/modules/DataModule.html",[2,0.25,3,0.25,8,0.219,23,2.337,24,0.007,58,1.418,60,0.457,76,0.603,103,2.138,132,0.377,134,1.645,141,2.483,145,0.326,146,0.118,173,3.418,174,3.689,182,0.77,191,2.119,200,2.315,206,2.119,207,2.158,208,1.792,219,2.358,221,2.315,223,2.358,224,2.394,272,1.027,273,1.843,274,1.046,275,1.173,276,1.066,277,1.046,278,1.046,279,1.066,297,2.273,299,2.273,308,0.004,309,0.004,310,1.238,312,1.645,317,2.385,318,1.574,319,1.39,321,3.301,322,2.591,325,2.997,340,0.939,532,2.329,548,6.511,554,5.437,557,2.692,558,1.852,559,5.258,564,3.406,578,5.665,580,4.247,586,4.247,641,3.418,805,2.846,868,3.406,869,3.178,870,3.689,876,3.406,877,4.471,954,4.425,1033,6.744,1034,3.71,1035,3.71,1036,3.71,1037,3.71,1038,3.71,1039,6.511,1040,6.182,1041,5.901,1042,5.884,1043,5.333,1044,4.735,1045,4.172,1046,4.247,1047,5.258,1048,2.846,1049,3.406,1050,3.546,1051,4.172,1052,2.997,1053,3.71,1054,4.504,1055,2.716,1056,2.502,1057,3.406,1058,4.172,1059,4.172,1060,4.172,1061,4.172,1062,3.178,1063,4.247,1064,3.178,1065,3.71,1066,3.406,1067,3.71,1068,4.172,1069,3.406,1070,4.172]],["title/components/DatetimeComponent.html",[0,0.237,204,1.237]],["body/components/DatetimeComponent.html",[0,0.401,1,0.975,2,0.229,3,0.229,4,0.771,5,1.05,6,1.05,7,1.441,8,0.201,10,0.397,15,2.269,16,5.139,19,0.924,22,0.859,23,1.865,24,0.007,25,1.323,26,2.307,27,1.989,28,1.886,30,1.47,32,0.433,33,0.742,35,1.822,36,4.303,38,1.163,39,1.639,40,2.593,44,0.9,48,4.476,49,4.769,52,3.328,55,0.67,60,0.338,64,0.79,65,1.444,66,1.187,71,0.934,75,1.294,76,0.945,77,1.669,81,3.328,84,2.252,86,0.866,87,0.931,88,0.603,89,3.328,99,3.328,103,2.006,105,1.614,106,2.463,108,1.417,110,0.958,112,1.614,113,1.039,114,2.82,122,4.693,131,3.328,132,0.345,133,3.328,134,1.506,143,2.291,144,2.291,145,0.166,146,0.108,181,2.291,182,0.704,183,1.443,184,1.101,185,1.473,186,1.577,187,1.833,188,1.936,189,1.05,190,1.05,191,0.941,192,0.975,193,1.249,194,1.08,195,2.095,196,0.993,197,1.972,198,1.982,199,1.05,200,0.975,201,1.526,202,0.993,203,1.05,204,1.946,205,1.05,206,0.941,207,0.958,208,1.539,209,1.797,210,0.941,211,0.975,212,0.975,213,0.958,214,1.05,215,0.993,216,1.797,217,1.05,218,1.05,219,0.993,220,1.972,221,0.975,222,1.797,223,0.993,224,0.993,225,0.975,226,1.05,227,0.958,228,0.993,229,1.05,230,0.975,231,1.05,232,1.05,233,0.975,234,1.05,235,0.941,236,0.975,237,1.05,238,0.958,239,1.05,240,0.859,241,1.05,242,0.958,243,1.639,244,1.05,245,0.958,246,1.05,247,0.958,248,1.05,249,0.907,250,1.05,251,0.975,252,0.891,253,0.975,254,0.993,255,1.05,256,0.975,257,1.05,258,1.05,259,0.975,260,1.05,261,0.975,262,1.05,263,0.907,264,1.05,265,0.975,266,0.975,267,1.05,268,0.975,269,0.993,270,1.05,271,0.941,272,0.941,273,1.789,274,0.958,275,0.757,276,0.975,277,0.958,278,0.958,279,0.975,280,0.958,281,0.975,282,1.05,283,0.958,284,1.05,285,0.975,286,1.05,287,0.975,288,1.05,289,0.975,290,1.05,291,0.975,292,0.924,293,0.941,294,1.05,295,0.958,296,1.05,297,0.958,298,1.05,299,0.958,300,1.05,301,0.958,302,1.012,303,1.05,304,0.958,305,0.993,306,0.941,307,1.05,308,0.004,309,0.004,327,2.82,373,1.342,429,3.462,438,1.812,484,2.82,615,1.812,1071,3.396,1072,5.466,1073,5.55,1074,5.55,1075,5.55,1076,6.057,1077,7.175,1078,5.562,1079,6.537,1080,4.255,1081,2.594,1082,3.462,1083,4.935,1084,3.819,1085,3.819,1086,3.819,1087,5.55,1088,3.819,1089,3.819,1090,3.819,1091,3.819,1092,3.819,1093,3.819,1094,3.613,1095,3.819,1096,4.228,1097,5.55,1098,3.613,1099,2.605,1100,3.819,1101,3.819,1102,3.819]],["title/pipes/DatetimePipe.html",[1103,2.537,1104,3.48]],["body/pipes/DatetimePipe.html",[2,0.371,3,0.371,8,0.325,10,0.643,15,1.766,22,1.393,24,0.007,25,1.142,33,1.028,38,1.523,43,2.318,44,1.003,55,0.929,60,0.394,64,0.764,65,2.144,66,0.844,72,2.322,75,1.793,76,1.265,86,0.966,87,0.909,88,0.672,113,0.844,126,3.032,132,0.56,142,1.497,145,0.27,146,0.175,308,0.006,309,0.006,386,2.747,535,1.981,615,2.51,731,4.797,835,2.555,836,3.25,878,3.344,970,3.5,1072,5.857,1078,5.218,1098,5.006,1099,4.222,1103,4.379,1104,5.523,1105,5.504,1106,5.244,1107,5.857,1108,4.154,1109,5.504,1110,6.462,1111,7.343,1112,6.19,1113,6.837,1114,5.244,1115,6.19,1116,6.19,1117,6.19,1118,6.19,1119,6.19,1120,6.19]],["title/interfaces/Day.html",[918,1.463,1096,3.691]],["body/interfaces/Day.html",[0,0.253,2,0.208,3,0.208,8,0.182,10,0.36,15,0.988,20,2.883,21,2.623,24,0.007,25,1.416,26,0.808,27,0.699,28,1.177,30,0.917,32,0.965,33,0.69,34,1.867,35,1.749,39,1.548,47,2.002,56,1.537,60,0.345,64,0.899,65,1.907,71,1.232,74,1.716,75,1.791,76,1.3,77,1.748,84,2.497,88,0.561,119,1.933,121,2.777,132,0.313,142,1.77,145,0.225,146,0.175,162,1.755,165,3.233,261,0.884,275,1.024,308,0.004,309,0.004,349,1.709,365,1.976,373,2.137,376,2.762,380,2.539,409,1.53,428,2.963,430,1.252,431,1.464,438,2.669,444,1.709,465,1.336,474,4.441,481,2.885,497,4.456,527,4.087,534,2.077,615,2.016,716,3.933,717,2.083,738,3.362,745,2.638,816,1.871,835,1.43,836,2.182,878,1.871,918,2.067,933,2.827,1027,2.16,1076,4.703,1078,5.512,1081,1.867,1082,2.16,1083,7.563,1096,7.336,1098,5.321,1099,2.362,1121,3.079,1122,8.834,1123,7.32,1124,6.82,1125,6.059,1126,8.355,1127,3.709,1128,3.709,1129,7.072,1130,8.74,1131,5.514,1132,3.079,1133,3.463,1134,2.638,1135,3.463,1136,3.463,1137,5.214,1138,3.249,1139,3.463,1140,4.592,1141,3.079,1142,7.677,1143,3.463,1144,3.463,1145,3.463,1146,3.079,1147,3.463,1148,2.077,1149,3.463,1150,3.463,1151,6.174,1152,3.079,1153,3.463,1154,3.463,1155,5.164,1156,3.463,1157,3.463,1158,3.463,1159,3.463,1160,3.463,1161,3.463,1162,3.463,1163,3.463,1164,7.677,1165,5.164,1166,6.174,1167,5.164,1168,6.174,1169,5.164,1170,3.463,1171,3.463,1172,3.463,1173,3.463,1174,3.463,1175,7.32,1176,3.463,1177,3.463,1178,3.463,1179,3.463,1180,3.463,1181,6.844,1182,3.463,1183,5.164,1184,5.164,1185,4.435,1186,3.463,1187,3.463,1188,3.463,1189,3.463,1190,3.463,1191,5.164,1192,2.827,1193,3.463,1194,3.463,1195,3.463,1196,3.463,1197,3.463,1198,3.463,1199,5.164,1200,3.463,1201,3.463,1202,3.079,1203,3.463,1204,3.463,1205,3.463,1206,3.463,1207,3.463,1208,3.463,1209,3.463,1210,6.174,1211,3.463,1212,6.174,1213,3.463,1214,3.463,1215,3.463,1216,3.463,1217,5.164,1218,3.463,1219,3.463,1220,3.463,1221,3.463,1222,3.463,1223,2.002,1224,3.463,1225,3.079,1226,3.463,1227,5.164,1228,3.463,1229,3.463,1230,3.463,1231,3.463,1232,3.463,1233,3.463,1234,3.463,1235,3.463,1236,3.463,1237,3.463,1238,3.463,1239,3.463,1240,3.463,1241,3.463,1242,3.463,1243,3.463,1244,2.638,1245,3.463,1246,3.463,1247,3.463,1248,3.463]],["title/components/DefaultEntryInputComponent.html",[0,0.237,206,1.193]],["body/components/DefaultEntryInputComponent.html",[0,0.417,1,1.11,2,0.261,3,0.261,4,1.617,5,1.195,6,1.195,8,0.228,10,0.452,18,2.701,19,2.103,22,0.978,24,0.007,26,2.317,27,1.999,30,1.612,32,0.493,33,0.814,35,1.85,39,2.245,40,3.555,41,2.065,42,3.141,43,2.199,55,0.735,60,0.331,64,0.864,66,1.132,86,0.679,87,0.945,88,0.472,108,1.554,110,1.09,112,1.77,113,1.132,122,3.398,123,4.563,124,3.311,125,3.311,126,1.714,127,3.797,128,3.311,129,3.311,130,2.348,132,0.393,145,0.189,146,0.123,173,2.513,182,0.802,183,1.583,184,1.207,188,2.053,189,1.195,190,1.195,191,1.07,192,1.11,193,1.369,194,1.16,195,2.202,196,1.131,197,2.091,198,1.131,199,1.195,200,1.11,201,1.673,202,1.131,203,1.195,204,1.11,205,1.195,206,1.874,207,1.09,208,1.808,209,1.93,210,1.07,211,1.11,212,1.11,213,1.09,214,1.195,215,1.131,216,1.93,217,1.195,218,1.195,219,1.131,220,2.091,221,1.11,222,1.93,223,1.131,224,1.131,225,1.11,226,1.195,227,1.09,228,1.131,229,1.195,230,1.11,231,1.195,232,1.195,233,1.11,234,1.195,235,1.07,236,1.11,237,1.195,238,1.09,239,1.195,240,0.978,241,1.195,242,1.09,243,1.761,244,1.195,245,1.09,246,1.195,247,1.09,248,1.195,249,1.032,250,1.195,251,1.11,252,1.014,253,1.11,254,1.131,255,1.195,256,1.11,257,1.195,258,1.195,259,1.11,260,1.195,261,1.11,262,1.195,263,1.032,264,1.195,265,1.11,266,1.11,267,1.195,268,1.11,269,1.131,270,1.195,271,1.07,272,1.07,273,1.867,274,1.09,275,0.862,276,1.11,277,1.09,278,1.09,279,1.11,280,1.09,281,1.11,282,1.195,283,1.09,284,1.195,285,1.11,286,1.195,287,1.11,288,1.195,289,1.11,290,1.195,291,1.11,292,1.051,293,1.07,294,1.195,295,1.09,296,1.195,297,1.09,298,1.195,299,1.09,300,1.195,301,1.09,302,1.151,303,1.195,304,1.09,305,1.131,306,1.07,307,1.195,308,0.004,309,0.004,324,5.044,326,3.122,327,3.092,335,4.371,338,4.636,339,3.306,340,0.978,341,2.276,342,3.065,345,3.548,346,3.548,347,2.712,349,2.145,350,2.712,354,3.548,355,4.968,356,3.797,1050,4.212,1127,4.371,1249,4.346,1250,4.346]],["title/components/DefaultEntryOutputComponent.html",[0,0.237,207,1.215]],["body/components/DefaultEntryOutputComponent.html",[0,0.437,1,1.164,2,0.273,3,0.273,4,1.454,5,1.253,6,1.253,8,0.24,10,0.474,19,1.102,22,1.025,24,0.007,26,2.322,27,2.004,30,1.666,32,0.517,33,0.841,35,0.954,41,2.146,43,2.394,60,0.339,64,0.771,66,0.858,87,0.938,108,1.606,110,1.143,113,1.2,132,0.412,145,0.199,146,0.129,182,0.841,183,1.636,184,1.247,188,2.096,189,1.253,190,1.253,191,1.122,192,1.164,193,1.415,194,1.189,195,2.24,196,1.185,197,2.135,198,1.185,199,1.253,200,1.164,201,1.729,202,1.185,203,1.253,204,1.164,205,1.253,206,1.122,207,1.947,208,1.859,209,1.98,210,1.122,211,1.164,212,1.164,213,1.143,214,1.253,215,1.185,216,1.98,217,1.253,218,1.253,219,1.185,220,2.135,221,1.164,222,1.98,223,1.185,224,1.185,225,1.164,226,1.253,227,1.143,228,1.185,229,1.253,230,1.164,231,1.253,232,1.253,233,1.164,234,1.253,235,1.122,236,1.164,237,1.253,238,1.143,239,1.253,240,1.025,241,1.253,242,1.143,243,1.806,244,1.253,245,1.143,246,1.253,247,1.143,248,1.253,249,1.082,250,1.253,251,1.164,252,1.063,253,1.164,254,1.185,255,1.253,256,1.164,257,1.253,258,1.253,259,1.164,260,1.253,261,1.164,262,1.253,263,1.082,264,1.253,265,1.164,266,1.164,267,1.253,268,1.164,269,1.185,270,1.253,271,1.122,272,1.122,273,1.895,274,1.143,275,0.904,276,1.164,277,1.143,278,1.143,279,1.164,280,1.143,281,1.164,282,1.253,283,1.143,284,1.253,285,1.164,286,1.253,287,1.164,288,1.253,289,1.164,290,1.253,291,1.164,292,1.102,293,1.122,294,1.253,295,1.143,296,1.253,297,1.143,298,1.253,299,1.143,300,1.253,301,1.143,302,1.207,303,1.253,304,1.143,305,1.185,306,1.122,307,1.253,308,0.005,309,0.005,324,5.173,327,3.196,335,4.518,354,3.72,355,5.134,356,3.924,365,2.893,487,2.316,643,3.924,1050,4.32,1081,2.274,1127,4.518,1251,3.72,1252,5.593,1253,4.558,1254,4.558,1255,2.967,1256,5.593]],["title/components/DefaultInputComponent.html",[0,0.237,19,1.172]],["body/components/DefaultInputComponent.html",[0,0.419,1,1.133,2,0.266,3,0.266,4,1.434,5,1.219,6,1.219,8,0.233,10,0.461,19,1.856,22,0.998,24,0.007,26,2.318,27,2,30,1.635,32,0.503,33,0.825,35,1.689,39,2.298,40,3.903,41,2.176,42,3.448,43,2.381,55,0.927,60,0.362,64,0.83,66,1.047,87,0.931,88,0.67,108,1.576,110,1.112,112,2.232,113,1.047,122,4.285,126,2.434,127,4.788,130,3.335,132,0.401,134,1.749,145,0.193,146,0.126,182,0.818,183,1.605,184,1.224,188,2.071,189,1.219,190,1.219,191,1.092,192,1.133,193,1.389,194,1.172,195,2.218,196,1.154,197,2.11,198,1.154,199,1.219,200,1.133,201,1.697,202,1.154,203,1.219,204,1.133,205,1.219,206,1.092,207,1.112,208,1.629,209,1.951,210,1.092,211,1.133,212,1.133,213,1.112,214,1.219,215,1.154,216,1.951,217,1.219,218,1.219,219,1.154,220,2.11,221,1.133,222,1.951,223,1.154,224,1.154,225,1.133,226,1.219,227,1.112,228,1.154,229,1.219,230,1.133,231,1.219,232,1.219,233,1.133,234,1.219,235,1.092,236,1.133,237,1.219,238,1.112,239,1.219,240,0.998,241,1.219,242,1.112,243,1.78,244,1.219,245,1.112,246,1.219,247,1.112,248,1.219,249,1.053,250,1.219,251,1.133,252,1.034,253,1.133,254,1.154,255,1.219,256,1.133,257,1.219,258,1.219,259,1.133,260,1.219,261,1.133,262,1.219,263,1.053,264,1.219,265,1.133,266,1.133,267,1.219,268,1.133,269,1.154,270,1.219,271,1.092,272,1.092,273,1.879,274,1.112,275,0.88,276,1.133,277,1.112,278,1.112,279,1.133,280,1.112,281,1.133,282,1.219,283,1.112,284,1.219,285,1.133,286,1.219,287,1.133,288,1.219,289,1.133,290,1.219,291,1.133,292,1.073,293,1.092,294,1.219,295,1.112,296,1.219,297,1.112,298,1.219,299,1.112,300,1.219,301,1.112,302,1.175,303,1.219,304,1.112,305,1.154,306,1.092,307,1.219,308,0.004,309,0.004,326,3.186,327,3.136,338,4.702,344,3.944,347,5.034,1255,2.887,1257,6.586,1258,4.433,1259,4.435,1260,4.435,1261,4.435,1262,2.564]],["title/components/DefaultOutputComponent.html",[0,0.237,210,1.193]],["body/components/DefaultOutputComponent.html",[0,0.397,1,1.148,2,0.27,3,0.27,4,1.444,5,1.235,6,1.235,8,0.236,10,0.467,19,1.087,22,1.011,24,0.007,26,2.321,27,2.003,28,2.117,30,1.65,32,0.51,33,0.833,35,1.497,38,1.01,41,2.181,43,2.433,60,0.337,64,0.619,66,0.85,87,0.934,108,1.591,110,1.127,113,1.196,130,3.365,132,0.406,145,0.196,146,0.127,182,0.829,183,1.62,184,1.235,188,2.083,189,1.235,190,1.235,191,1.107,192,1.148,193,1.401,194,1.181,195,2.228,196,1.169,197,2.122,198,1.169,199,1.235,200,1.148,201,1.712,202,1.169,203,1.235,204,1.148,205,1.235,206,1.107,207,1.127,208,1.637,209,1.965,210,1.901,211,1.148,212,1.148,213,1.127,214,1.235,215,1.169,216,1.965,217,1.235,218,1.235,219,1.169,220,2.122,221,1.148,222,1.965,223,1.169,224,1.169,225,1.148,226,1.235,227,1.127,228,1.169,229,1.235,230,1.148,231,1.235,232,1.235,233,1.148,234,1.235,235,1.107,236,1.148,237,1.235,238,1.127,239,1.235,240,1.011,241,1.235,242,1.127,243,1.793,244,1.235,245,1.127,246,1.235,247,1.127,248,1.235,249,1.067,250,1.235,251,1.148,252,1.048,253,1.148,254,1.169,255,1.235,256,1.148,257,1.235,258,1.235,259,1.148,260,1.235,261,1.148,262,1.235,263,1.067,264,1.235,265,1.148,266,1.148,267,1.235,268,1.148,269,1.169,270,1.235,271,1.107,272,1.107,273,1.887,274,1.127,275,0.891,276,1.148,277,1.127,278,1.127,279,1.148,280,1.127,281,1.148,282,1.235,283,1.127,284,1.235,285,1.148,286,1.235,287,1.148,288,1.235,289,1.148,290,1.235,291,1.148,292,1.087,293,1.107,294,1.235,295,1.127,296,1.235,297,1.127,298,1.235,299,1.127,300,1.235,301,1.127,302,1.19,303,1.235,304,1.127,305,1.169,306,1.107,307,1.235,308,0.004,309,0.004,327,3.164,365,2.471,643,3.886,937,2.697,1081,2.252,1251,3.668,1252,5.538,1255,2.925,1256,8.433,1257,5.835,1262,2.597,1263,4.876,1264,5.538,1265,4.493,1266,4.493,1267,6.228,1268,4.493,1269,6.228,1270,3.736]],["title/directives/DropzoneDirective.html",[184,0.961,295,1.215]],["body/directives/DropzoneDirective.html",[2,0.326,3,0.326,8,0.475,10,0.565,22,1.223,24,0.007,25,1.595,26,1.652,32,0.617,35,1.746,38,0.881,60,0.256,64,0.782,66,1.232,71,0.915,76,1.206,86,0.849,87,0.591,88,0.591,104,4.821,108,2.13,113,0.742,132,0.492,145,0.237,146,0.223,184,1.715,295,1.776,306,1.744,308,0.005,309,0.005,340,1.223,365,2.67,373,1.904,379,2.834,380,2.893,409,2.713,425,5.78,434,6.296,444,4.735,465,3.217,495,1.775,506,7.622,535,1.741,1185,5.655,1271,4.835,1272,5.78,1273,7.08,1274,8.648,1275,5.37,1276,7.873,1277,7.873,1278,6.427,1279,8.34,1280,8.866,1281,4.835,1282,5.438,1283,5.78,1284,5.78,1285,5.438,1286,5.438,1287,5.438,1288,5.655,1289,5.438,1290,5.438,1291,6.754,1292,5.438,1293,5.438,1294,5.438,1295,5.438,1296,5.438,1297,5.438,1298,5.438,1299,7.873,1300,5.655,1301,7.69,1302,5.438,1303,5.438,1304,4.142,1305,5.438,1306,5.438,1307,5.438,1308,5.438]],["title/components/DynamicRackComponent.html",[0,0.237,211,1.237]],["body/components/DynamicRackComponent.html",[0,0.401,1,1.188,2,0.279,3,0.279,4,0.939,5,1.278,6,1.278,8,0.244,10,0.483,19,1.125,22,1.046,23,1.82,24,0.007,26,2.323,27,2.008,30,1.69,35,0.974,41,1.515,55,1.024,60,0.301,64,0.634,66,0.634,70,2.355,72,1.926,86,0.726,87,0.96,88,0.505,106,2.064,108,1.629,110,1.166,112,1.854,113,0.87,132,0.421,145,0.203,146,0.132,171,1.794,182,0.858,183,1.659,184,1.553,188,2.114,189,1.278,190,1.278,191,1.145,192,1.188,193,1.435,194,1.355,195,2.256,196,1.21,197,2.153,198,1.21,199,1.278,200,1.188,201,1.753,202,1.21,203,1.278,204,1.188,205,1.278,206,1.145,207,1.166,208,1.657,209,2.001,210,1.145,211,2,212,1.188,213,1.964,214,1.278,215,1.21,216,2.001,217,1.278,218,1.278,219,1.21,220,2.153,221,1.188,222,2.001,223,1.21,224,1.21,225,1.188,226,1.278,227,1.166,228,1.21,229,1.278,230,1.188,231,1.278,232,1.278,233,1.188,234,1.278,235,1.145,236,1.188,237,1.278,238,1.166,239,1.278,240,1.046,241,1.278,242,1.166,243,1.825,244,1.278,245,1.166,246,1.278,247,1.166,248,1.278,249,1.104,250,1.278,251,1.188,252,1.085,253,1.188,254,1.21,255,1.278,256,1.188,257,1.278,258,1.278,259,1.188,260,1.278,261,1.188,262,1.278,263,1.104,264,1.278,265,1.188,266,1.188,267,1.278,268,1.188,269,1.21,270,1.278,271,1.145,272,1.145,273,1.907,274,1.166,275,0.922,276,1.188,277,1.166,278,1.166,279,1.188,280,1.166,281,1.188,282,1.278,283,1.166,284,1.278,285,1.188,286,1.278,287,1.188,288,1.278,289,1.188,290,1.278,291,1.188,292,1.125,293,1.145,294,1.278,295,1.166,296,1.278,297,1.166,298,1.278,299,1.166,300,1.278,301,1.166,302,1.232,303,1.278,304,1.166,305,1.21,306,1.145,307,1.278,308,0.005,309,0.005,340,1.638,428,2.761,535,1.489,1081,2.306,1138,2.831,1309,5.206,1310,5.206,1311,4.135,1312,4.858,1313,6.378,1314,4.135,1315,7.538,1316,4.65,1317,5.206,1318,5.206,1319,5.671,1320,4.65,1321,4.65,1322,4.65]],["title/components/DynamicSlotComponent.html",[0,0.237,212,1.237]],["body/components/DynamicSlotComponent.html",[0,0.435,1,1.076,2,0.253,3,0.253,4,0.851,5,1.158,6,1.158,8,0.221,10,0.438,19,1.019,22,0.948,23,1.699,24,0.007,26,2.316,27,2.001,30,1.577,32,0.478,33,0.796,35,0.882,38,0.683,41,1.952,43,1.577,44,0.965,55,1.042,60,0.281,64,0.839,66,0.942,70,2.199,72,1.798,74,1.493,75,1.389,76,0.861,86,0.929,87,0.953,88,0.647,105,1.78,106,2.642,108,1.52,110,1.056,112,1.731,113,1.08,121,1.944,132,0.381,142,1.67,145,0.184,146,0.119,171,2.296,182,0.777,183,1.549,184,1.488,188,2.025,189,1.158,190,1.158,191,1.037,192,1.076,193,1.339,194,1.307,195,2.176,196,1.096,197,2.063,198,1.096,199,1.158,200,1.076,201,1.637,202,1.096,203,1.158,204,1.076,205,1.158,206,1.037,207,1.056,208,1.599,209,1.898,210,1.037,211,1.076,212,1.916,213,1.985,214,1.158,215,1.096,216,1.898,217,1.158,218,1.158,219,1.096,220,2.063,221,1.076,222,1.898,223,1.096,224,1.096,225,1.076,226,1.158,227,1.056,228,1.096,229,1.158,230,1.076,231,1.158,232,1.158,233,1.076,234,1.158,235,1.037,236,1.076,237,1.158,238,1.056,239,1.158,240,0.948,241,1.158,242,1.056,243,1.731,244,1.158,245,1.056,246,1.158,247,1.056,248,1.158,249,1,250,1.158,251,1.076,252,0.983,253,1.076,254,1.096,255,1.158,256,1.076,257,1.158,258,1.158,259,1.076,260,1.158,261,1.076,262,1.158,263,1,264,1.158,265,1.076,266,1.076,267,1.158,268,1.076,269,1.096,270,1.158,271,1.037,272,1.037,273,1.849,274,1.056,275,0.835,276,1.076,277,1.056,278,1.056,279,1.076,280,1.056,281,1.076,282,1.158,283,1.056,284,1.158,285,1.076,286,1.158,287,1.076,288,1.158,289,1.076,290,1.158,291,1.076,292,1.019,293,1.037,294,1.158,295,1.056,296,1.158,297,1.056,298,1.158,299,1.056,300,1.158,301,1.056,302,1.116,303,1.158,304,1.985,305,1.952,306,1.037,307,1.158,308,0.004,309,0.004,340,1.553,359,2.578,428,3.249,430,2.496,535,1.349,950,3.441,1081,2.152,1138,2.642,1309,6.125,1312,4.535,1314,3.746,1315,7.307,1317,5.636,1318,4.86,1319,5.294,1323,5.39,1324,3.746,1325,4.86,1326,6.707,1327,4.86,1328,5.953,1329,4.86,1330,3.602,1331,4.213,1332,6.462,1333,4.86,1334,3.746,1335,4.213,1336,4.213,1337,4.213,1338,4.213,1339,4.213,1340,4.213,1341,4.213]],["title/directives/EntriesDirective.html",[184,0.961,297,1.215]],["body/directives/EntriesDirective.html",[0,0.207,2,0.254,3,0.254,4,0.855,7,1.598,8,0.223,10,0.44,15,1.705,21,3.518,22,0.953,24,0.007,25,1.463,26,1.394,27,0.855,32,0.48,33,0.799,35,1.809,38,1.122,39,1.736,43,2.327,44,0.969,45,2.54,46,3.821,55,0.837,60,0.399,61,3.336,64,0.873,65,1.32,66,1.279,75,1.754,76,1.356,77,1.921,86,0.933,87,0.649,88,0.862,103,3.176,113,1.082,116,3.174,121,2.456,132,0.383,135,1.979,142,1.024,145,0.185,146,0.12,162,1.439,167,1.834,184,1.373,185,1.633,186,1.748,187,2.033,194,1.144,208,1.798,240,1.558,297,1.499,308,0.004,309,0.004,339,3.105,340,0.953,341,2.217,342,2.778,357,1.88,359,4.092,363,5.275,367,1.419,372,4.878,373,1.819,384,2.778,388,4.292,403,2.033,405,3.226,408,3.226,409,2.052,410,4.511,415,6.14,443,2.207,495,2.687,528,4.389,531,1.583,535,1.356,774,4.723,820,3.866,826,3.611,864,6.524,889,3.042,904,3.766,977,4.692,994,2.642,995,3.457,1342,3.766,1343,4.878,1344,6.14,1345,6.688,1346,6.688,1347,6.14,1348,5.976,1349,6.924,1350,5.976,1351,4.235,1352,3.728,1353,5.976,1354,4.235,1355,4.235,1356,4.235,1357,7.521,1358,4.235,1359,4.235,1360,4.552,1361,4.235,1362,4.235,1363,4.235,1364,4.235,1365,4.235,1366,4.235,1367,5.976,1368,4.235,1369,4.235,1370,4.235,1371,4.235,1372,4.235,1373,4.235,1374,6.924,1375,5.976,1376,3.457,1377,4.235,1378,4.235,1379,4.235,1380,3.457,1381,4.235,1382,6.924,1383,6.157,1384,7.521,1385,6.924,1386,4.235,1387,4.235,1388,4.235,1389,4.235,1390,4.235,1391,4.235,1392,4.235,1393,4.235]],["title/directives/EntryDirective.html",[184,0.961,299,1.215]],["body/directives/EntryDirective.html",[2,0.303,3,0.303,4,1.705,7,1.905,8,0.265,10,0.525,15,1.924,21,3.857,22,1.136,24,0.007,25,1.243,26,1.572,27,1.019,32,0.572,33,0.901,35,1.886,44,1.093,46,4.116,55,1.071,60,0.382,64,0.906,65,1.79,66,1.267,71,0.849,76,1.256,77,1.289,86,0.788,87,0.548,88,0.548,103,3.206,113,0.919,116,3.349,121,2.201,132,0.457,135,2.359,145,0.22,146,0.143,184,1.607,185,1.947,186,2.084,187,2.423,208,1.959,240,1.708,299,1.691,308,0.005,309,0.005,339,3.344,340,1.136,341,2.643,342,2.991,356,5.054,357,2.24,359,4.229,360,4.058,363,5.782,364,5.063,365,2.593,367,1.601,372,5.503,373,1.63,376,2.544,378,3.642,379,1.585,380,2.81,384,2.49,385,5.995,388,4.842,391,4.489,392,3.027,403,2.423,405,3.845,408,3.845,409,1.496,410,4.043,415,5.503,535,1.616,820,4.238,826,3.843,889,3.626,903,4.489,977,3.149,994,3.149,1030,4.12,1343,5.503,1344,6.196,1383,4.489,1394,4.489,1395,6.75,1396,6.741,1397,5.048,1398,5.048,1399,5.048,1400,5.048,1401,5.048,1402,5.048,1403,5.048,1404,5.048,1405,5.048,1406,5.048,1407,6.741,1408,5.048,1409,5.048,1410,5.048]],["title/components/EntryListComponent.html",[0,0.237,221,1.237]],["body/components/EntryListComponent.html",[0,0.336,1,0.767,2,0.18,3,0.18,4,0.607,5,0.826,6,0.826,7,1.134,8,0.158,10,0.312,18,2.825,19,0.727,22,0.676,24,0.007,25,0.554,26,2.282,27,1.965,28,1.575,30,1.228,32,0.341,33,0.972,34,1.676,35,1.521,38,1.228,39,1.725,41,1.344,43,0.796,44,1.032,46,2.355,55,0.56,60,0.404,64,0.87,65,1.52,66,1.237,70,1.109,71,0.505,72,1.922,74,0.753,75,1.32,76,1.207,77,1.856,84,2.159,86,0.994,87,0.92,88,0.872,103,3.016,105,1.959,108,1.184,110,0.753,113,0.772,116,2.183,123,5.202,130,1.623,132,0.272,142,1.121,145,0.131,146,0.085,167,2.007,182,0.554,183,1.206,184,0.919,185,1.159,186,1.24,187,1.442,188,1.717,189,0.826,190,0.826,191,0.74,192,0.767,193,1.043,194,1.525,195,1.89,196,0.781,197,1.749,198,0.781,199,0.826,200,0.767,201,1.274,202,0.781,203,0.826,204,0.767,205,0.826,206,0.74,207,0.753,208,1.769,209,1.556,210,0.74,211,0.767,212,0.767,213,0.753,214,0.826,215,0.781,216,1.556,217,0.826,218,0.826,219,0.781,220,1.749,221,1.856,222,1.556,223,0.781,224,0.781,225,0.767,226,0.826,227,0.753,228,0.781,229,0.826,230,0.767,231,0.826,232,0.826,233,0.767,234,0.826,235,1.394,236,0.767,237,0.826,238,0.753,239,0.826,240,1.043,241,0.826,242,0.753,243,1.42,244,0.826,245,0.753,246,0.826,247,0.753,248,0.826,249,0.714,250,0.826,251,0.767,252,0.701,253,0.767,254,0.781,255,0.826,256,0.767,257,0.826,258,0.826,259,0.767,260,0.826,261,0.767,262,0.826,263,0.714,264,0.826,265,0.767,266,0.767,267,0.826,268,0.767,269,0.781,270,0.826,271,0.74,272,0.74,273,1.844,274,0.753,275,0.596,276,0.767,277,2.248,278,0.753,279,0.767,280,0.753,281,0.767,282,0.826,283,0.753,284,0.826,285,0.767,286,0.826,287,0.767,288,0.826,289,0.767,290,0.826,291,0.767,292,0.727,293,0.74,294,0.826,295,0.753,296,0.826,297,0.753,298,0.826,299,0.753,300,0.826,301,0.753,302,0.796,303,0.826,304,0.753,305,0.781,306,0.74,307,0.826,308,0.003,309,0.003,324,5.44,331,2.717,339,2.627,340,1.274,342,2.35,350,2.892,357,1.333,359,2.978,365,1.484,373,0.727,379,0.943,380,1.042,384,1.712,386,1.333,392,1.802,403,1.442,424,2.452,427,1.526,438,0.981,443,2.889,452,1.27,465,1.159,469,1.677,475,1.677,489,1.526,494,2.452,512,4.368,517,3.058,523,3.055,528,1.526,532,1.677,533,2.289,556,2.645,570,1.333,587,1.333,604,3.839,619,1.623,626,1.802,641,1.737,710,1.737,716,5.959,717,2.567,822,3.055,826,2.577,833,3.805,834,3.679,835,2.627,836,2.69,837,5.959,864,4.341,869,5.77,870,1.874,873,2.452,878,1.623,888,1.677,889,4.939,915,3.685,922,4.378,952,2.289,954,3.438,970,2.577,977,3.532,994,1.874,1043,4.143,1048,2.049,1049,2.452,1056,1.802,1192,2.452,1244,2.289,1343,3.784,1411,2.672,1412,5.661,1413,4.636,1414,4.122,1415,4.636,1416,7.574,1417,6.364,1418,4.636,1419,6.462,1420,3.162,1421,3.004,1422,3.861,1423,4.367,1424,4.636,1425,4.122,1426,3.004,1427,4.122,1428,2.672,1429,2.672,1430,3.004,1431,3.004,1432,3.004,1433,3.004,1434,2.672,1435,3.004,1436,1.368,1437,3.004,1438,3.004,1439,3.004,1440,3.004,1441,3.004,1442,4.29,1443,2.672,1444,3.004,1445,2.049,1446,3.004,1447,3.004,1448,3.004,1449,3.004,1450,3.004,1451,3.004,1452,3.004,1453,3.162,1454,3.004,1455,3.004,1456,3.004,1457,3.004,1458,3.004,1459,1.956,1460,3.004,1461,1.802,1462,3.004,1463,3.004,1464,3.004,1465,3.004,1466,3.004,1467,3.004,1468,3.004,1469,3.004,1470,3.004,1471,3.004,1472,4.636,1473,4.636,1474,1.874,1475,3.004,1476,3.004,1477,2.672,1478,2.289,1479,3.004,1480,3.004,1481,3.004,1482,4.122]],["title/components/ErrorComponent.html",[0,0.237,225,1.237]],["body/components/ErrorComponent.html",[0,0.391,1,1.107,2,0.26,3,0.26,4,0.875,5,1.192,6,1.192,8,0.228,10,0.451,15,1.733,19,1.048,20,3.915,21,3.563,22,0.975,24,0.007,26,2.318,27,2,30,1.609,32,0.492,35,1.675,44,0.985,46,3.861,47,4.393,60,0.286,64,0.603,66,1.091,76,1.099,77,1.791,84,1.907,86,0.677,87,0.972,88,0.471,103,2.196,108,1.551,110,1.087,113,0.828,119,3.391,132,0.392,142,1.048,145,0.189,146,0.123,182,0.799,183,1.58,184,1.205,188,2.051,189,1.192,190,1.192,191,1.067,192,1.107,193,1.367,194,1.321,195,2.199,196,1.127,197,2.089,198,1.127,199,1.192,200,1.791,201,1.67,202,1.127,203,1.192,204,1.107,205,1.192,206,1.067,207,1.087,208,1.72,209,1.928,210,1.067,211,1.107,212,1.107,213,1.087,214,1.192,215,1.127,216,1.928,217,1.192,218,1.192,219,1.127,220,2.089,221,1.107,222,1.928,223,1.127,224,1.127,225,1.941,226,1.192,227,1.087,228,1.127,229,1.192,230,1.107,231,1.192,232,1.192,233,1.107,234,1.192,235,1.067,236,1.107,237,1.192,238,1.087,239,1.192,240,0.975,241,1.192,242,1.087,243,1.759,244,1.192,245,1.087,246,1.192,247,1.087,248,1.192,249,1.029,250,1.192,251,1.107,252,1.011,253,1.107,254,1.127,255,1.192,256,1.107,257,1.192,258,1.192,259,1.107,260,1.192,261,1.107,262,1.192,263,1.029,264,1.192,265,1.107,266,1.107,267,1.192,268,1.107,269,1.127,270,1.192,271,1.067,272,1.067,273,1.866,274,1.087,275,0.86,276,1.107,277,1.087,278,1.087,279,1.107,280,1.087,281,1.107,282,1.192,283,1.087,284,1.192,285,1.107,286,1.192,287,1.107,288,1.192,289,1.107,290,1.192,291,1.107,292,1.048,293,1.067,294,1.192,295,1.087,296,1.192,297,1.087,298,1.192,299,1.087,300,1.192,301,1.087,302,1.148,303,1.192,304,1.087,305,1.127,306,1.067,307,1.192,308,0.004,309,0.004,319,2.023,339,1.789,340,0.975,515,3.693,516,4.467,535,1.388,570,2.696,717,3.609,815,4.363,816,3.282,817,4.958,818,4.627,835,2.507,836,3.212,878,2.342,1081,2.535,1483,3.855,1484,6.074,1485,3.113,1486,6.074,1487,4.335,1488,4.335,1489,4.335,1490,4.335,1491,5.401,1492,4.335,1493,4.335,1494,4.335,1495,4.335,1496,4.335,1497,4.335,1498,4.335,1499,4.335,1500,4.335]],["title/classes/Field.html",[41,1.151,146,0.137]],["body/classes/Field.html",[0,0.362,2,0.214,3,0.214,7,1.99,8,0.187,15,1.505,24,0.007,25,1.158,32,0.598,33,1.216,34,1.288,35,1.793,38,1.512,41,2.231,42,2.592,43,1.664,44,1.258,55,0.937,56,3.288,60,0.168,64,0.943,65,2.135,66,1.295,71,0.6,75,1.23,76,1.072,86,0.556,87,0.895,88,1.047,112,2.583,113,1.124,118,3.081,142,1.276,145,0.155,146,0.243,171,3.179,194,1.39,308,0.004,309,0.004,328,4.484,340,0.802,357,1.582,360,3.625,365,2.372,373,2.225,376,2.369,384,1.316,396,3.597,409,2.299,423,2.68,430,2.27,431,1.506,432,3.788,438,1.722,443,3.208,445,3.243,454,2.85,570,3.081,577,3.788,587,2.787,726,4.69,800,2.762,858,3.049,895,2.909,937,3.708,944,1.759,970,3.899,1019,3.291,1080,4.602,1081,2.805,1107,4.018,1108,3.393,1127,2.56,1131,2.56,1138,3.658,1148,3.163,1436,1.622,1445,3.597,1474,3.291,1501,3.169,1502,4.815,1503,6.172,1504,5.287,1505,4.163,1506,5.05,1507,5.666,1508,4.84,1509,4.84,1510,6.941,1511,5.274,1512,3.563,1513,4.305,1514,3.563,1515,3.563,1516,3.563,1517,4.305,1518,3.788,1519,4.69,1520,3.563,1521,3.563,1522,4.69,1523,4.018,1524,3.563,1525,4.305,1526,5.274,1527,4.305,1528,3.563,1529,3.563,1530,3.563,1531,3.563,1532,4.69,1533,3.049,1534,3.563,1535,3.563,1536,3.563,1537,7.758,1538,3.563,1539,3.597,1540,3.563,1541,3.563,1542,3.563,1543,3.563,1544,3.563,1545,3.563,1546,4.69,1547,2.32,1548,2.909,1549,2.715,1550,2.945,1551,2.43,1552,3.169,1553,3.163,1554,2.137,1555,2.06,1556,2.909,1557,3.169,1558,3.169,1559,2.909,1560,1.866,1561,3.169,1562,2.909,1563,2.909,1564,4.018,1565,4.305,1566,1.99,1567,3.169,1568,4.018,1569,3.169,1570,3.169,1571,2.43,1572,3.169,1573,3.169,1574,2.909,1575,2.909,1576,3.169,1577,2.715,1578,2.56,1579,2.715,1580,2.43,1581,3.169,1582,2.715,1583,4.305,1584,3.563,1585,3.563,1586,3.169,1587,3.563,1588,3.169]],["title/interfaces/FieldConfig.html",[918,1.463,1589,2.906]],["body/interfaces/FieldConfig.html",[2,0.437,3,0.437,8,0.383,10,0.757,24,0.007,32,0.826,41,2.13,65,1.874,66,0.993,112,2.465,145,0.317,194,1.203,308,0.006,309,0.006,793,4.696,800,4.439,918,2.561,920,4.543,959,4.07,1502,5.54,1589,5.085,1590,7.54,1591,7.282]],["title/interfaces/FileOptions.html",[918,1.463,1592,3.305]],["body/interfaces/FileOptions.html",[0,0.186,2,0.228,3,0.228,8,0.441,10,0.395,24,0.007,25,1.202,32,0.431,33,0.74,39,1.991,41,0.903,43,2.303,55,0.919,60,0.415,64,0.85,65,1.921,70,2.042,71,1.482,72,1.148,75,0.887,76,1.372,79,2.28,84,2.247,87,0.601,88,1.004,103,1.374,112,1.896,116,2.761,118,2.455,126,1.499,132,0.344,142,1.981,145,0.284,146,0.108,162,2.215,167,1.646,171,2.761,193,2.154,194,1.182,208,1.316,273,1.467,275,0.754,292,2.103,308,0.004,309,0.004,332,3.91,339,2.283,342,2.042,360,1.776,362,5.414,367,1.548,373,2.07,378,2.054,379,1.193,380,2.483,394,2.337,401,4.883,402,2.593,403,1.825,409,1.126,417,2.896,442,3.6,452,1.607,454,2.054,465,2.133,481,2.584,495,2.128,518,2.371,531,1.007,535,1.217,556,3.046,604,3.64,615,1.806,640,2.475,641,3.197,678,3.64,686,2.73,717,2.63,807,2.988,822,1.825,888,2.122,898,3.772,918,2.297,935,2.73,937,2.395,954,2.054,956,2.28,957,2.593,958,2.28,959,1.825,960,2.28,961,1.646,962,2.475,970,1.73,993,2.593,997,2.475,1013,2.197,1044,3.197,1055,2.475,1056,2.28,1138,1.687,1262,2.197,1270,2.28,1304,4.213,1330,2.655,1352,2.371,1423,3.64,1436,1.73,1442,3.45,1459,2.475,1461,3.317,1508,2.371,1550,2.122,1592,4.446,1593,2.896,1594,5.453,1595,6.479,1596,5.453,1597,5.453,1598,5.453,1599,3.972,1600,3.45,1601,3.972,1602,3.45,1603,4.514,1604,4.514,1605,4.514,1606,3.103,1607,4.213,1608,2.896,1609,3.103,1610,3.103,1611,2.371,1612,3.103,1613,3.103,1614,2.054,1615,2.475,1616,2.593,1617,3.103,1618,3.103,1619,3.103,1620,3.103,1621,2.593,1622,2.73,1623,2.371,1624,3.103,1625,6.209,1626,3.103,1627,3.103,1628,4.213,1629,5.321,1630,3.103,1631,4.514,1632,4.514,1633,4.514,1634,4.514,1635,4.514,1636,4.514,1637,4.514,1638,4.514,1639,4.514,1640,4.514,1641,4.966,1642,2.896,1643,3.103,1644,3.103,1645,3.103,1646,3.103,1647,4.514,1648,3.103,1649,4.514,1650,2.896,1651,3.103,1652,5.321,1653,3.103,1654,3.6,1655,3.103,1656,4.514,1657,3.103,1658,3.103,1659,2.122,1660,2.593,1661,3.103,1662,3.103,1663,3.103,1664,3.103,1665,3.103,1666,3.103,1667,3.103]],["title/injectables/FileService.html",[367,1.151,1611,3.023]],["body/injectables/FileService.html",[0,0.245,2,0.199,3,0.199,8,0.424,10,0.345,24,0.007,25,1.394,32,0.377,33,0.669,38,0.976,39,2.307,41,1.189,43,2.23,44,0.811,55,0.948,60,0.403,64,0.849,65,1.825,66,1.101,70,2.475,71,1.489,72,1.003,75,1.167,76,1.376,79,1.992,84,2.462,86,1.18,87,0.852,88,0.977,103,1.201,112,1.751,113,0.821,116,3.025,118,2.673,126,1.973,132,0.3,142,1.897,145,0.262,146,0.094,162,2.046,165,2.62,167,2.167,171,1.93,193,2.141,194,1.188,208,1.526,273,1.355,275,0.992,292,2.158,308,0.004,309,0.004,331,2.402,332,4.02,339,2.767,340,0.747,341,1.739,342,2.475,360,1.552,362,5.35,367,1.708,373,1.456,378,2.704,379,1.571,380,2.72,386,2.221,394,2.833,401,4.904,402,2.265,403,1.594,409,0.984,412,2.53,417,2.53,430,1.809,442,4.92,452,2.115,454,2.704,465,2.322,481,2.338,495,1.966,518,3.122,531,0.88,535,1.063,556,2.814,604,4.379,615,2.188,640,2.162,641,2.893,678,3.362,686,2.386,717,2.901,807,1.794,822,2.402,888,2.794,898,3.413,918,1.819,935,3.594,937,2.902,954,1.794,956,3.001,957,3.413,958,3.001,959,2.402,960,3.001,961,2.167,962,3.258,970,2.278,993,3.413,997,2.162,1013,2.893,1044,3.875,1055,2.162,1056,1.992,1138,2.221,1262,1.92,1270,3.001,1304,3.812,1330,2.891,1352,3.122,1423,4.379,1436,2.278,1442,3.122,1459,2.162,1461,1.992,1508,3.122,1550,1.854,1592,5.155,1593,2.53,1594,2.53,1595,4.085,1596,2.53,1597,2.53,1598,2.53,1599,2.386,1600,2.072,1601,2.386,1602,2.072,1603,2.711,1604,2.711,1605,4.085,1606,2.711,1607,4.587,1608,2.53,1609,2.711,1610,2.711,1611,3.122,1612,5.471,1613,4.085,1614,2.704,1615,3.258,1616,4.107,1617,4.085,1618,2.711,1619,2.711,1620,2.711,1621,2.265,1622,2.386,1623,2.072,1624,2.711,1625,6.402,1626,4.085,1627,4.915,1628,3.812,1629,4.915,1630,2.711,1631,4.085,1632,4.085,1633,4.085,1634,4.085,1635,4.085,1636,4.085,1637,4.085,1638,4.085,1639,4.085,1640,4.085,1641,4.587,1642,2.53,1643,4.085,1644,2.711,1645,2.711,1646,2.711,1647,4.085,1648,2.711,1649,4.085,1650,2.53,1651,4.085,1652,4.915,1653,2.711,1654,3.258,1655,2.711,1656,4.085,1657,2.711,1658,2.711,1659,1.854,1660,2.265,1661,2.711,1662,2.711,1663,2.711,1664,2.711,1665,2.711,1666,2.711,1667,2.711,1668,5.004,1669,5.004,1670,5.004,1671,5.004,1672,5.004,1673,3.321,1674,3.321,1675,3.321,1676,3.321,1677,3.321,1678,3.321,1679,3.321,1680,3.321,1681,3.321]],["title/modules/FilesModule.html",[310,1.014,1039,3.48]],["body/modules/FilesModule.html",[2,0.323,3,0.323,8,0.283,23,2.234,24,0.007,58,1.827,60,0.453,132,0.486,134,2.12,141,2.831,145,0.362,146,0.152,182,0.992,185,2.074,192,2.413,193,1.581,194,1.161,196,2.482,291,2.437,293,2.327,295,2.369,301,2.369,308,0.005,309,0.005,310,1.471,312,2.12,317,2.835,318,2.029,319,1.791,321,3.924,322,2.652,421,4.389,491,4.389,554,5.301,557,3.2,558,2.386,564,4.389,877,3.5,1039,7.085,1040,6.029,1041,6.151,1046,5.048,1054,4.096,1057,4.389,1067,4.781,1611,5.515,1682,4.781,1683,4.781,1684,5.377,1685,4.781,1686,4.781,1687,5.377,1688,3.862,1689,3.5,1690,4.781,1691,5.377,1692,4.781,1693,5.377,1694,5.377]],["title/interfaces/FormConfig.html",[918,1.463,1695,3.955]],["body/interfaces/FormConfig.html",[2,0.442,3,0.442,8,0.387,10,0.765,18,3.787,24,0.007,60,0.347,145,0.321,308,0.006,309,0.006,424,6.964,489,3.74,918,2.577,920,4.592,1695,7.566,1696,6.545,1697,6.433,1698,6.008]],["title/modules/FormModule.html",[310,1.014,1699,3.305]],["body/modules/FormModule.html",[2,0.279,3,0.279,8,0.245,19,2.138,23,2.078,24,0.007,58,1.582,60,0.455,113,0.87,132,0.421,134,1.836,141,2.633,145,0.342,146,0.132,173,2.691,174,2.904,182,0.859,198,2.403,202,2.403,204,2.359,210,2.178,227,2.317,228,2.403,261,2.359,287,2.359,308,0.005,309,0.005,310,1.336,312,1.836,317,2.574,318,1.756,319,1.55,321,3.563,322,2.408,347,2.904,445,2.175,557,2.905,558,2.066,560,4.967,1052,3.344,1104,6.635,1263,3.175,1699,6.767,1700,4.139,1701,4.139,1702,4.139,1703,4.139,1704,4.139,1705,6.635,1706,6.635,1707,6.301,1708,6.014,1709,5.29,1710,5.783,1711,5.52,1712,6.09,1713,4.655,1714,3.8,1715,4.655,1716,4.655,1717,4.139,1718,4.655,1719,4.655,1720,4.655,1721,4.655,1722,4.655,1723,4.139,1724,3.546,1725,4.139,1726,4.655,1727,3.8,1728,4.655,1729,4.655]],["title/injectables/FormService.html",[367,1.151,1712,3.48]],["body/injectables/FormService.html",[2,0.31,3,0.31,8,0.272,10,0.538,14,4.023,24,0.007,32,0.587,39,2.193,40,4.086,41,2.309,42,3.683,44,1.111,55,0.928,60,0.386,64,0.813,66,1.116,71,1.432,72,2.07,75,1.908,76,1.349,77,1.321,86,1.277,87,0.889,88,0.889,112,2.821,119,3.826,122,2.888,127,5.103,132,0.468,134,2.04,142,2.115,145,0.226,146,0.218,167,2.24,171,1.995,308,0.005,309,0.005,367,1.825,409,1.533,427,3.482,452,2.896,485,5.593,515,3.172,570,3.041,587,2.296,619,3.702,717,2.087,718,3.382,779,3.588,918,2.07,1255,3.368,1509,5.821,1712,4.922,1730,4.6,1731,4.275,1732,6.852,1733,6.852,1734,6.852,1735,6.852,1736,6.852,1737,5.173,1738,6.852,1739,5.173,1740,6.852,1741,5.173,1742,6.852,1743,6.833,1744,6.852,1745,5.173,1746,8.18,1747,7.684,1748,4.6,1749,6.852,1750,5.173,1751,4.6,1752,5.173,1753,6.852,1754,5.173,1755,6.852,1756,5.173,1757,5.173,1758,5.173,1759,5.173,1760,5.173,1761,5.173,1762,5.173,1763,5.173,1764,5.173,1765,5.173]],["title/injectables/GeocodeService.html",[367,1.151,1766,3.154]],["body/injectables/GeocodeService.html",[2,0.3,3,0.3,8,0.263,10,0.52,11,4.182,24,0.007,32,0.568,35,1.69,39,2.284,44,1.087,60,0.397,64,0.836,66,1.148,71,1.358,75,2.021,76,1.352,86,1.314,87,0.914,88,0.914,108,2.062,116,3.114,132,0.453,141,2.424,142,1.828,145,0.218,146,0.142,188,1.351,243,2.284,308,0.006,309,0.005,331,3.218,340,1.126,367,1.795,376,2.529,427,3.406,469,4.7,495,1.634,535,1.602,772,3.123,779,2.621,794,3.875,807,4.362,973,3.595,1108,3.622,1272,5.472,1283,5.472,1445,4.572,1766,4.364,1767,4.086,1768,5.799,1769,7.559,1770,6.704,1771,6.704,1772,6.704,1773,6.704,1774,5.005,1775,8.073,1776,7.868,1777,5.005,1778,6.704,1779,6.704,1780,5.005,1781,6.871,1782,5.472,1783,6.704,1784,5.005,1785,5.472,1786,7.485,1787,5.472,1788,6.704,1789,5.005,1790,6.704,1791,6.704,1792,5.005,1793,4.086,1794,5.005,1795,5.005,1796,5.005,1797,5.005,1798,4.451,1799,5.005,1800,5.005,1801,5.005,1802,5.005,1803,4.182,1804,5.005,1805,5.005,1806,6.704,1807,4.086,1808,5.961,1809,5.005,1810,5.961,1811,5.005,1812,5.005,1813,5.005,1814,5.005,1815,5.005,1816,5.005,1817,4.086,1818,5.005,1819,5.005,1820,5.961,1821,5.005,1822,5.005,1823,5.005,1824,5.005,1825,5.005,1826,5.005,1827,5.005,1828,5.005,1829,5.005,1830,5.005]],["title/pipes/GroupPipe.html",[1103,2.537,1106,3.305]],["body/pipes/GroupPipe.html",[2,0.397,3,0.397,8,0.347,10,0.687,15,1.886,22,1.487,24,0.007,33,1.246,38,1.542,42,3.304,43,2.497,44,1.071,55,0.967,60,0.377,64,0.657,65,1.903,66,0.901,72,2.417,75,1.867,76,1.294,86,1.032,87,0.935,88,0.718,126,3.156,132,0.598,145,0.288,146,0.187,308,0.006,309,0.006,487,3.358,615,2.992,731,4.993,970,3.644,1103,4.508,1106,6.103,1107,6.097,1108,3.57,1114,5.459,1831,5.877,1832,8.004,1833,6.609,1834,6.609,1835,6.609]],["title/injectables/HistoryService.html",[367,1.151,1042,3.48]],["body/injectables/HistoryService.html",[2,0.253,3,0.415,8,0.222,10,0.439,24,0.007,32,0.479,33,0.798,38,1.284,39,2.278,44,1.121,60,0.407,64,0.922,65,1.908,66,1.214,71,0.711,72,2.269,75,1.972,76,1.249,77,1.079,84,2.358,86,1.173,87,0.816,88,0.816,103,2.156,113,1.081,116,3.056,121,1.947,132,0.382,135,1.974,142,1.672,145,0.184,146,0.12,165,3.123,208,1.204,273,1.975,275,1.371,308,0.004,309,0.004,330,6.9,340,1.342,348,3.448,359,3.253,367,1.642,379,1.872,394,1.785,409,1.767,413,2.75,414,3.756,441,4.687,444,2.944,514,2.533,515,2.462,523,3.948,532,2.358,556,4.336,586,5.396,678,2.358,679,2.635,708,4.284,710,3.448,717,3.589,794,4.343,800,4.756,827,5.914,833,4.756,834,4.581,907,2.75,977,5.274,994,2.635,1042,5.396,1223,3.448,1330,3.606,1423,5.072,1459,2.75,1614,3.222,1641,4.544,1836,3.756,1837,4.544,1838,8.453,1839,5.964,1840,5.964,1841,3.756,1842,5.964,1843,5.964,1844,4.224,1845,4.068,1846,5.304,1847,8.224,1848,5.964,1849,8.453,1850,4.224,1851,3.708,1852,5.396,1853,5.964,1854,4.224,1855,4.869,1856,5.304,1857,4.224,1858,4.224,1859,4.224,1860,6.68,1861,4.224,1862,4.224,1863,4.224,1864,4.224,1865,4.224,1866,8.453,1867,4.224,1868,4.224,1869,4.224,1870,5.964,1871,6.914,1872,4.544,1873,4.224,1874,4.224,1875,5.964,1876,4.224,1877,4.224,1878,5.964,1879,5.964,1880,4.224,1881,4.224]],["title/components/IconComponent.html",[0,0.237,230,1.237]],["body/components/IconComponent.html",[0,0.409,1,1.038,2,0.244,3,0.244,4,0.821,5,1.118,6,1.118,8,0.214,10,0.423,15,1.657,19,0.983,20,3.78,22,0.915,24,0.007,26,2.313,27,1.997,30,1.538,32,0.461,33,0.776,34,2.099,35,1.635,44,0.941,47,4.269,55,0.892,60,0.368,64,0.673,65,1.283,66,1.007,73,4.17,74,1.456,75,0.948,76,0.588,77,1.038,86,0.635,87,1.022,88,0.442,108,1.483,110,1.02,113,0.924,118,3.278,121,2.55,132,0.368,139,5.305,145,0.295,146,0.192,182,0.75,183,1.51,184,1.151,188,1.993,189,1.118,190,1.118,191,1.001,192,1.038,193,1.306,194,1.118,195,2.147,196,1.058,197,2.03,198,1.058,199,1.118,200,1.038,201,1.596,202,1.058,203,1.118,204,1.038,205,1.118,206,1.001,207,1.02,208,1.577,209,1.861,210,1.001,211,1.038,212,1.038,213,1.02,214,1.118,215,1.058,216,1.861,217,1.118,218,1.118,219,1.058,220,2.03,221,1.038,222,1.861,223,1.058,224,1.058,225,1.038,226,1.118,227,1.02,228,1.058,229,1.118,230,1.886,231,1.118,232,1.118,233,1.038,234,1.118,235,1.001,236,1.038,237,1.118,238,1.02,239,1.118,240,0.915,241,1.118,242,1.02,243,1.698,244,1.118,245,1.02,246,1.118,247,1.02,248,1.118,249,0.966,250,1.118,251,1.038,252,0.948,253,1.038,254,1.058,255,1.118,256,1.038,257,1.118,258,1.118,259,1.038,260,1.118,261,1.038,262,1.118,263,0.966,264,1.118,265,1.038,266,1.038,267,1.118,268,1.038,269,1.058,270,1.118,271,1.001,272,1.001,273,1.827,274,1.02,275,0.806,276,1.038,277,1.02,278,1.02,279,1.038,280,1.02,281,1.038,282,1.118,283,1.02,284,1.118,285,1.038,286,1.118,287,1.038,288,1.118,289,1.038,290,1.118,291,1.038,292,0.983,293,1.001,294,1.118,295,1.02,296,1.118,297,1.02,298,1.118,299,1.02,300,1.118,301,1.02,302,1.077,303,1.118,304,1.02,305,1.058,306,1.001,307,1.118,308,0.004,309,0.005,340,0.915,349,2.866,357,1.805,514,4.061,517,3.136,530,2.647,535,1.302,585,3.097,835,3.049,1081,2.448,1223,2.35,1453,4.618,1474,2.537,1506,6.335,1882,3.616,1883,6.628,1884,4.607,1885,5.805,1886,4.066,1887,5.968,1888,5.805,1889,4.066,1890,4.066,1891,5.805,1892,4.739,1893,3.616,1894,3.319,1895,4.422,1896,5.162,1897,5.162,1898,3.616,1899,3.616,1900,3.616,1901,3.616,1902,5.805,1903,4.066,1904,4.066,1905,4.066,1906,2.773,1907,4.066,1908,5.805]],["title/modules/IconModule.html",[310,1.014,1709,3.023]],["body/modules/IconModule.html",[2,0.41,3,0.41,8,0.359,23,2.491,24,0.007,58,2.32,60,0.436,132,0.617,141,3.156,145,0.394,146,0.193,182,1.259,230,2.49,308,0.006,309,0.006,310,1.708,312,2.691,317,3.292,318,2.575,319,2.273,322,3.079,557,3.715,558,3.029,1709,6.005,1887,6.11,1900,6.069,1909,6.069,1910,6.069,1911,6.069,1912,6.069,1913,6.825,1914,6.825]],["title/injectables/IconService.html",[367,1.151,1887,3.154]],["body/injectables/IconService.html",[2,0.397,3,0.397,8,0.347,10,0.687,18,2.933,24,0.007,27,1.851,32,0.75,33,1.07,38,1.071,39,2.159,55,0.967,60,0.422,64,0.657,66,0.901,74,2.336,83,6.103,113,1.174,118,3.552,121,2.613,132,0.598,145,0.288,146,0.187,308,0.006,309,0.006,328,4.627,367,2.045,452,3.782,835,3.694,836,3.383,1506,6.344,1602,4.993,1883,6.817,1887,5.211,1901,5.877,1915,5.877,1916,7.028,1917,6.609,1918,5.877]],["title/directives/ImageDirective.html",[184,0.961,301,1.215]],["body/directives/ImageDirective.html",[2,0.281,3,0.281,4,1.294,8,0.246,10,0.487,15,1.828,18,2.078,21,3.711,22,1.053,24,0.007,25,1.182,26,1.495,32,0.531,33,0.857,35,1.854,38,0.759,39,1.97,44,1.039,46,3.991,55,0.994,60,0.4,64,0.903,65,2.043,66,1.239,71,0.788,76,1.314,77,1.636,86,1.226,87,0.853,88,0.853,104,5.027,108,1.636,113,0.639,118,3.486,132,0.424,145,0.204,146,0.133,184,1.558,193,2.044,293,1.578,301,1.607,302,2.081,308,0.005,309,0.005,339,3.396,340,1.053,341,2.452,342,3.137,349,2.311,357,2.078,359,4.004,360,3.844,362,5.357,363,4.881,369,3.048,373,1.55,382,5.698,384,2.366,386,2.078,401,5.611,402,3.194,403,2.248,404,3.048,405,3.567,407,5.698,408,3.567,409,2.165,410,2.808,495,1.529,610,2.808,898,3.194,949,5.23,1013,2.707,1019,3.998,1607,6.625,1608,3.567,1654,3.048,1659,4.593,1692,4.164,1919,4.164,1920,7.331,1921,6.408,1922,5.23,1923,6.307,1924,5.984,1925,8.982,1926,6.408,1927,6.715,1928,6.408,1929,4.682,1930,6.412,1931,5.698,1932,4.682,1933,5.698,1934,4.682,1935,4.682,1936,6.408,1937,6.408,1938,4.682,1939,6.408,1940,4.682,1941,6.408,1942,4.682,1943,4.682,1944,4.682,1945,4.682,1946,7.305,1947,4.682,1948,4.682,1949,4.682,1950,5.698,1951,4.682,1952,4.682,1953,5.23,1954,4.682,1955,6.408,1956,4.682,1957,4.682,1958,4.682,1959,6.408,1960,4.682]],["title/components/InputComponent.html",[0,0.237,110,1.215]],["body/components/InputComponent.html",[0,0.447,1,0.806,2,0.189,3,0.189,4,1.178,5,0.867,6,0.867,8,0.166,10,0.328,13,2.6,15,1.373,16,3.5,18,2.136,19,1.411,21,2.965,22,0.71,23,1.665,24,0.007,25,0.888,26,2.287,27,1.975,30,1.275,32,0.358,33,1.089,35,1.891,36,3.916,38,1.201,40,3.713,41,2.1,42,3.28,43,2.269,44,0.78,46,3.317,48,3.003,49,3.916,52,2.887,55,0.931,60,0.363,64,0.885,65,1.064,66,1.216,71,0.531,72,1.972,74,0.791,75,0.736,76,1.072,77,1.667,81,2.887,83,3.283,84,2.721,85,3.283,86,0.911,87,0.951,88,0.634,89,2.887,99,2.887,101,3.133,102,2.782,103,1.74,105,1.333,106,1.4,108,1.229,110,1.933,112,2.547,113,1.084,114,2.445,121,1.03,122,3.258,123,2.887,127,3.641,131,2.887,132,0.285,133,2.887,134,1.244,139,3.457,142,1.164,143,1.892,144,1.892,145,0.138,146,0.089,167,1.366,171,1.217,173,1.824,181,1.892,182,0.582,183,1.252,184,1.295,188,1.762,189,0.867,190,0.867,191,0.777,192,0.806,193,1.083,194,1.161,195,1.933,196,0.821,197,1.795,198,0.821,199,0.867,200,0.806,201,1.323,202,0.821,203,0.867,204,0.806,205,0.867,206,0.777,207,0.791,208,1.42,209,1.604,210,0.777,211,0.806,212,1.892,213,1.637,214,0.867,215,0.821,216,1.604,217,0.867,218,0.867,219,0.821,220,1.795,221,0.806,222,1.604,223,0.821,224,0.821,225,0.806,226,0.867,227,0.791,228,0.821,229,0.867,230,0.806,231,0.867,232,0.867,233,0.806,234,0.867,235,0.777,236,0.806,237,0.867,238,0.791,239,0.867,240,0.71,241,0.867,242,0.791,243,1.463,244,0.867,245,0.791,246,0.867,247,0.791,248,0.867,249,0.749,250,0.867,251,0.806,252,0.736,253,0.806,254,0.821,255,0.867,256,0.806,257,0.867,258,0.867,259,0.806,260,0.867,261,0.806,262,0.867,263,0.749,264,0.867,265,0.806,266,0.806,267,0.867,268,0.806,269,0.821,270,0.867,271,0.777,272,0.777,273,1.667,274,0.791,275,0.626,276,0.806,277,0.791,278,0.791,279,0.806,280,0.791,281,0.806,282,0.867,283,0.791,284,0.867,285,0.806,286,0.867,287,0.806,288,0.867,289,0.806,290,0.867,291,0.806,292,0.763,293,0.777,294,0.867,295,0.791,296,0.867,297,0.791,298,0.867,299,0.791,300,0.867,301,0.791,302,0.836,303,0.867,304,1.463,305,0.821,306,0.777,307,0.867,308,0.003,309,0.003,327,2.445,328,2.782,347,1.968,359,1.366,365,2.09,379,1.832,380,2.024,428,2.527,429,3.003,430,1.74,465,2.518,481,2.249,484,2.445,519,2.376,570,1.4,774,3.283,779,1.652,950,1.824,956,2.887,1050,1.892,1081,1.74,1255,2.054,1262,1.824,1312,3.667,1323,4.191,1325,3.929,1326,5.329,1327,3.929,1329,2.575,1330,3.134,1332,4.763,1333,2.575,1453,3.283,1555,2.782,1588,2.805,1654,2.054,1748,2.805,1851,2.376,1953,2.575,1961,2.805,1962,6.529,1963,6.252,1964,3.155,1965,6.589,1966,3.155,1967,4.28,1968,3.155,1969,3.155,1970,3.155,1971,3.155,1972,3.155,1973,4.813,1974,4.813,1975,3.155,1976,3.155,1977,3.155,1978,3.155,1979,3.155,1980,2.805,1981,3.155,1982,3.133,1983,4.28,1984,3.929,1985,4.813,1986,3.283,1987,4.813,1988,4.813,1989,3.155,1990,2.805,1991,2.575,1992,5.806,1993,3.155,1994,4.813,1995,3.155,1996,3.155,1997,3.155,1998,3.155,1999,4.813,2000,3.155,2001,3.155,2002,3.155,2003,2.805,2004,3.155,2005,3.155,2006,3.155,2007,3.155,2008,3.155,2009,3.155,2010,3.155,2011,3.155,2012,3.155]],["title/components/InputErrorsComponent.html",[0,0.237,233,1.237]],["body/components/InputErrorsComponent.html",[0,0.414,1,1.079,2,0.253,3,0.253,4,1.396,5,1.161,6,1.161,8,0.222,10,0.439,19,1.021,22,0.95,24,0.007,26,2.316,27,1.998,28,2.027,30,1.58,32,0.479,33,0.798,35,1.884,39,1.496,40,4.102,44,1.218,55,0.721,60,0.373,64,0.687,66,1.025,76,1,86,0.659,87,0.938,88,0.459,108,1.523,110,1.059,112,2.391,113,0.814,122,3.861,126,2.352,132,0.382,134,1.666,145,0.184,146,0.12,171,1.629,182,0.779,183,1.551,184,1.183,188,2.027,189,1.161,190,1.161,191,1.04,192,1.079,193,1.342,194,1.142,195,2.178,196,1.099,197,2.065,198,1.099,199,1.161,200,1.079,201,1.64,202,1.099,203,1.161,204,1.079,205,1.161,206,1.04,207,1.059,208,1.6,209,1.901,210,1.04,211,1.079,212,1.079,213,1.059,214,1.161,215,1.099,216,1.901,217,1.161,218,1.161,219,1.099,220,2.065,221,1.079,222,1.901,223,1.099,224,1.099,225,1.079,226,1.161,227,1.059,228,1.099,229,1.161,230,1.079,231,1.161,232,1.161,233,1.919,234,1.161,235,1.04,236,1.079,237,1.161,238,1.059,239,1.161,240,0.95,241,1.161,242,1.059,243,1.734,244,1.161,245,1.059,246,1.161,247,1.059,248,1.161,249,1.003,250,1.161,251,1.079,252,0.985,253,1.079,254,1.099,255,1.161,256,1.079,257,1.161,258,1.161,259,1.079,260,1.161,261,1.079,262,1.161,263,1.003,264,1.161,265,1.079,266,1.079,267,1.161,268,1.079,269,1.099,270,1.161,271,1.04,272,1.04,273,1.85,274,1.059,275,0.838,276,1.079,277,1.059,278,1.059,279,1.079,280,1.059,281,1.079,282,1.161,283,1.059,284,1.161,285,1.079,286,1.161,287,1.079,288,1.161,289,1.079,290,1.161,291,1.079,292,1.021,293,1.04,294,1.161,295,1.059,296,1.161,297,1.059,298,1.161,299,1.059,300,1.161,301,1.059,302,1.119,303,1.161,304,1.059,305,1.099,306,1.04,307,1.161,308,0.004,309,0.004,340,0.95,349,2.085,430,2.156,495,2.258,515,3.624,516,4.592,626,3.577,800,4.149,835,3.271,836,3.476,910,2.881,1081,2.156,1223,3.448,1485,3.034,1837,5.723,1918,3.756,2013,7.046,2014,6.468,2015,3.756,2016,5.304,2017,5.964,2018,5.964,2019,5.964,2020,7.513,2021,5.964,2022,4.224,2023,4.869,2024,4.284,2025,4.224,2026,4.224,2027,5.964,2028,4.224,2029,4.224,2030,4.224,2031,5.964]],["title/modules/IoModule.html",[310,1.014,1707,3.305]],["body/modules/IoModule.html",[2,0.342,3,0.342,8,0.299,19,1.947,23,2.082,24,0.007,35,1.193,58,1.936,60,0.449,110,2.41,132,0.515,134,2.246,141,2.91,145,0.37,146,0.161,173,3.293,182,1.051,210,1.982,211,2.433,212,2.433,213,1.83,233,2.454,265,2.454,304,2.389,305,1.482,308,0.005,309,0.005,310,1.528,312,2.246,317,2.943,318,2.149,319,1.897,321,4.074,322,2.753,347,3.554,557,3.322,558,2.528,560,5.49,1050,4.376,1052,4.092,1263,3.885,1310,4.65,1323,4.092,1334,5.065,1707,6.683,1991,4.65,2014,4.65,2032,5.065,2033,5.065,2034,5.065,2035,5.696,2036,5.696,2037,5.696,2038,5.696,2039,5.696]],["title/interfaces/ItemConfig.html",[918,1.463,1697,3.305]],["body/interfaces/ItemConfig.html",[2,0.318,3,0.318,8,0.279,10,0.551,24,0.007,32,0.602,33,1.243,34,2.519,38,1.261,41,2.163,43,2.558,55,1.1,56,3.909,60,0.367,64,0.95,65,2.084,72,2.104,74,1.747,85,4.752,88,1.049,116,2.046,118,3.909,126,2.747,145,0.231,167,2.297,171,2.687,308,0.005,309,0.005,394,3.722,430,2.813,438,2.275,443,2.873,489,2.695,530,4.536,570,3.909,732,6.195,771,5.733,806,5.307,858,4.027,918,2.104,920,3.31,937,3.577,942,4.344,1081,2.987,1110,5.004,1128,5.004,1461,4.179,1502,3.182,1548,5.687,1553,3.182,1556,5.687,1581,6.195,1582,4.041,1589,4.955,1614,4.92,1697,5.635,1782,5.687,1986,4.752,2040,4.717,2041,6.195,2042,6.195,2043,6.744,2044,6.744,2045,6.918,2046,5.687,2047,6.967,2048,6.967,2049,6.195,2050,5.004,2051,6.967,2052,5.004,2053,6.195,2054,3.81]],["title/components/ListComponent.html",[0,0.237,235,1.193]],["body/components/ListComponent.html",[0,0.355,1,0.764,2,0.18,3,0.18,4,0.933,5,0.823,6,0.823,7,2.131,8,0.157,10,0.311,15,1.319,19,0.724,21,2.869,22,0.673,24,0.007,25,1.171,26,2.281,27,1.964,28,1.571,30,1.225,32,0.886,33,0.618,34,1.671,35,1.794,38,0.915,41,0.711,42,1.236,43,2.435,44,0.749,46,2.349,55,0.767,59,2.041,60,0.299,64,0.828,66,1.204,70,1.105,71,1.349,72,1.706,75,1.481,76,1.184,77,1.622,84,2.374,86,0.882,87,0.951,88,0.69,108,1.181,110,0.751,113,0.77,121,1.509,132,0.271,145,0.13,146,0.085,162,1.919,171,1.783,182,0.552,183,1.202,184,0.917,185,1.783,186,1.908,187,2.219,188,1.714,189,0.823,190,0.823,191,0.737,192,0.764,193,1.04,194,1.535,195,1.887,196,0.779,197,1.746,198,0.779,199,0.823,200,0.764,201,1.271,202,0.779,203,0.823,204,0.764,205,0.823,206,0.737,207,0.751,208,1.386,209,1.552,210,0.737,211,0.764,212,0.764,213,0.751,214,0.823,215,0.779,216,1.552,217,0.823,218,0.823,219,0.779,220,1.746,221,0.764,222,1.552,223,0.779,224,0.779,225,0.764,226,0.823,227,0.751,228,0.779,229,0.823,230,0.764,231,0.823,232,0.823,233,0.764,234,0.823,235,1.787,236,0.764,237,0.823,238,0.751,239,0.823,240,0.673,241,0.823,242,0.751,243,1.416,244,0.823,245,0.751,246,0.823,247,0.751,248,0.823,249,0.711,250,0.823,251,0.764,252,0.698,253,0.764,254,0.779,255,0.823,256,0.764,257,0.823,258,0.823,259,0.764,260,0.823,261,0.764,262,0.823,263,0.711,264,0.823,265,0.764,266,0.764,267,0.823,268,0.764,269,0.779,270,0.823,271,0.737,272,0.737,273,1.632,274,0.751,275,0.594,276,0.764,277,0.751,278,0.751,279,0.764,280,0.751,281,0.764,282,0.823,283,0.751,284,0.823,285,0.764,286,0.823,287,0.764,288,0.823,289,0.764,290,0.823,291,0.764,292,0.724,293,0.737,294,0.823,295,0.751,296,0.823,297,0.751,298,0.823,299,0.751,300,0.823,301,0.751,302,0.793,303,0.823,304,0.751,305,0.779,306,0.737,307,0.823,308,0.003,309,0.003,357,1.328,365,2.198,373,1.118,376,2.131,379,2.278,380,2.623,386,2.052,409,0.887,430,1.082,438,3.06,443,3.024,445,2.968,446,4.469,464,4.332,474,1.671,481,1.399,487,1.521,489,1.521,497,4.469,502,2.15,528,3.488,610,1.795,615,1.844,712,4.487,774,2.041,816,2.497,844,2.884,913,2.28,915,3.677,922,4.372,937,2.445,1081,2.042,1148,2.772,1192,3.773,1258,4.056,1262,1.73,1288,3.32,1330,1.437,1414,4.111,1420,3.852,1436,2.571,1478,2.28,1482,4.111,1533,2.672,1549,3.521,1551,2.041,2054,2.15,2055,2.662,2056,4.623,2057,4.623,2058,4.623,2059,3.521,2060,3.521,2061,4.623,2062,4.623,2063,6.351,2064,6.351,2065,6.351,2066,5.328,2067,2.993,2068,2.993,2069,2.993,2070,2.993,2071,2.993,2072,2.993,2073,2.993,2074,2.993,2075,2.993,2076,4.111,2077,2.993,2078,4.111,2079,4.332,2080,4.623,2081,4.623,2082,4.623,2083,2.993,2084,6.351,2085,4.623,2086,2.993,2087,2.993,2088,2.993,2089,3.32,2090,2.993,2091,4.111,2092,2.993,2093,2.041,2094,2.662,2095,2.443,2096,2.443,2097,2.443,2098,5.604,2099,5.604,2100,2.443,2101,2.041,2102,2.443,2103,2.443,2104,2.662,2105,3.521,2106,2.662,2107,3.773,2108,2.662,2109,2.28,2110,2.993,2111,2.662,2112,2.662,2113,2.993,2114,2.993,2115,2.993,2116,5.184,2117,2.993,2118,2.993,2119,2.993,2120,4.111,2121,2.993,2122,2.993,2123,2.662,2124,2.443,2125,2.443,2126,2.993,2127,2.993,2128,2.993,2129,2.993,2130,4.623,2131,2.993,2132,2.993,2133,4.623,2134,4.623,2135,4.623,2136,4.623,2137,6.351]],["title/interfaces/ListConfig.html",[918,1.463,922,2.801]],["body/interfaces/ListConfig.html",[2,0.292,3,0.292,8,0.256,10,0.505,18,2.918,24,0.007,25,1.648,32,0.552,33,1.149,38,1.066,43,2.114,60,0.229,64,0.951,65,2.04,74,2.001,84,2.064,87,0.714,88,1.061,113,1.088,121,2.147,145,0.212,146,0.186,194,1.555,308,0.005,309,0.006,365,2.105,373,2.288,376,3.553,394,3.631,409,1.948,431,3.372,438,2.605,444,3.939,445,3.072,446,4.28,454,3.552,489,2.471,517,3.552,531,2.367,615,2.147,676,3.943,793,3.442,794,4.612,800,3.442,844,4.102,918,1.986,920,3.034,922,3.801,970,4.067,1148,5.152,1272,5.367,1420,5.859,1539,4.484,1549,6.078,1566,5.11,1600,4.102,1659,4.988,1697,5.08,1698,3.97,2052,4.722,2101,4.484,2138,4.324,2139,7.979,2140,7.095,2141,6.513,2142,7.979,2143,7.095,2144,8.591,2145,7.639,2146,7.979,2147,5.847,2148,5.847,2149,4.722,2150,5.009,2151,6.575,2152,6.575]],["title/components/ListHeaderComponent.html",[0,0.237,236,1.237]],["body/components/ListHeaderComponent.html",[0,0.401,1,0.975,2,0.229,3,0.229,4,0.771,5,1.05,6,1.05,8,0.201,10,0.397,19,0.924,22,0.859,23,1.584,24,0.007,26,2.307,27,1.989,28,1.886,30,1.47,32,0.433,33,0.959,34,2.006,35,1.665,38,1.163,39,2.236,40,3.055,41,1.81,44,0.9,60,0.375,64,0.757,66,1.146,72,2.167,75,1.674,76,1.15,77,1.669,86,1.12,87,0.978,88,0.864,105,2.346,106,2.463,108,1.417,110,0.958,112,1.614,113,0.757,121,1.812,132,0.345,145,0.166,146,0.108,182,0.704,183,1.443,184,1.101,188,1.936,189,1.05,190,1.05,191,0.941,192,0.975,193,1.249,194,1.553,195,2.095,196,0.993,197,1.972,198,0.993,199,1.05,200,0.975,201,1.526,202,0.993,203,1.05,204,0.975,205,1.05,206,0.941,207,0.958,208,1.539,209,1.797,210,0.941,211,0.975,212,0.975,213,0.958,214,1.05,215,0.993,216,1.797,217,1.05,218,1.05,219,0.993,220,1.972,221,0.975,222,1.797,223,0.993,224,0.993,225,0.975,226,1.05,227,1.911,228,0.993,229,1.05,230,0.975,231,1.05,232,1.05,233,0.975,234,1.05,235,0.941,236,1.832,237,1.05,238,0.958,239,1.05,240,0.859,241,1.05,242,0.958,243,1.639,244,1.05,245,0.958,246,1.05,247,0.958,248,1.05,249,0.907,250,1.05,251,0.975,252,0.891,253,0.975,254,0.993,255,1.05,256,0.975,257,1.05,258,1.05,259,0.975,260,1.05,261,0.975,262,1.05,263,0.907,264,1.05,265,0.975,266,0.975,267,1.05,268,0.975,269,0.993,270,1.05,271,1.367,272,0.941,273,1.789,274,0.958,275,0.757,276,0.975,277,0.958,278,0.958,279,0.975,280,0.958,281,0.975,282,1.05,283,0.958,284,1.05,285,0.975,286,1.05,287,0.975,288,1.05,289,0.975,290,1.05,291,0.975,292,0.924,293,0.941,294,1.05,295,0.958,296,1.05,297,0.958,298,1.05,299,0.958,300,1.05,301,0.958,302,1.012,303,1.05,304,0.958,305,0.993,306,0.941,307,1.05,308,0.004,309,0.004,327,2.82,409,1.132,423,4.354,438,2.744,445,2.593,484,1.941,487,1.941,816,2.998,871,3.118,934,3.613,952,2.91,958,3.328,970,4.059,1148,4.303,1845,3.785,2149,3.986,2153,6.995,2154,6.995,2155,3.396,2156,5.55,2157,5.55,2158,5.55,2159,5.55,2160,5.55,2161,5.55,2162,3.819,2163,3.819,2164,5.55,2165,3.819,2166,5.55,2167,5.55,2168,3.819,2169,4.935,2170,7.175,2171,3.819,2172,5.55,2173,3.819,2174,3.819,2175,3.785,2176,5.857,2177,4.935,2178,3.819,2179,4.935,2180,3.396,2181,3.819,2182,3.819,2183,3.819,2184,3.819,2185,3.819,2186,3.819,2187,3.819,2188,3.819,2189,5.55,2190,3.819]],["title/components/ListItemsComponent.html",[0,0.237,238,1.215]],["body/components/ListItemsComponent.html",[0,0.375,1,0.988,2,0.232,3,0.232,4,0.781,5,1.064,6,1.064,8,0.203,10,0.402,15,1.598,19,0.936,21,3.345,22,0.87,23,1.598,24,0.007,25,1.033,26,2.308,27,1.99,28,1.904,30,1.484,32,0.439,35,1.766,40,2.618,43,2.518,44,0.908,46,3.667,55,0.872,60,0.34,64,0.793,66,1.123,71,0.651,72,2.18,75,1.307,76,0.81,77,1.431,86,0.604,87,0.916,88,0.832,108,1.431,110,0.97,113,0.764,132,0.35,145,0.169,146,0.11,165,3.448,182,0.714,183,1.457,184,1.111,188,1.948,189,1.064,190,1.064,191,0.953,192,0.988,193,1.26,194,1.574,195,2.106,196,1.006,197,1.984,198,1.006,199,1.064,200,0.988,201,1.54,202,1.006,203,1.064,204,0.988,205,1.064,206,0.953,207,0.97,208,1.547,209,1.81,210,0.953,211,0.988,212,0.988,213,0.97,214,1.064,215,1.006,216,1.81,217,1.064,218,1.064,219,1.006,220,1.984,221,0.988,222,1.81,223,1.006,224,1.006,225,0.988,226,1.064,227,0.97,228,1.006,229,1.064,230,0.988,231,1.064,232,1.064,233,0.988,234,1.064,235,1.379,236,0.988,237,1.064,238,2.003,239,1.064,240,0.87,241,1.064,242,0.97,243,1.651,244,1.064,245,0.97,246,1.064,247,0.97,248,1.064,249,0.919,250,1.064,251,0.988,252,0.902,253,0.988,254,1.006,255,1.064,256,0.988,257,1.064,258,1.064,259,0.988,260,1.064,261,0.988,262,1.064,263,0.919,264,1.064,265,0.988,266,0.988,267,1.064,268,0.988,269,1.006,270,1.064,271,0.953,272,0.953,273,1.797,274,0.97,275,0.767,276,0.988,277,0.97,278,0.97,279,0.988,280,0.97,281,0.988,282,1.064,283,0.97,284,1.064,285,0.988,286,1.064,287,0.988,288,1.064,289,0.988,290,1.064,291,0.988,292,0.936,293,0.953,294,1.064,295,0.97,296,1.064,297,0.97,298,1.064,299,0.97,300,1.064,301,0.97,302,1.025,303,1.064,304,0.97,305,1.006,306,1.886,307,1.064,308,0.004,309,0.004,365,2.311,373,1.355,379,2.507,380,2.504,438,2.918,441,3.495,445,2.618,446,4.987,464,3.821,487,1.966,497,2.519,502,2.779,517,3.026,526,3.495,528,2.846,615,2.357,771,3.647,774,3.821,844,4.503,870,2.414,913,2.947,944,2.765,1081,2.61,1094,3.647,1148,3.36,1300,2.779,1420,4.491,1436,2.55,1518,4.023,2076,4.981,2116,4.572,2123,3.44,2124,3.158,2125,3.158,2149,4.023,2153,6.885,2191,6.885,2192,3.44,2193,5.602,2194,5.602,2195,3.238,2196,5.602,2197,5.602,2198,5.602,2199,4.572,2200,5.602,2201,3.869,2202,3.869,2203,3.869,2204,3.869,2205,3.869,2206,3.869,2207,3.869,2208,3.44,2209,3.869,2210,3.44]],["title/modules/ListModule.html",[310,1.014,2211,3.305]],["body/modules/ListModule.html",[2,0.346,3,0.346,8,0.303,23,2.098,24,0.007,58,1.959,60,0.45,132,0.521,141,2.927,145,0.372,146,0.163,182,1.063,194,1.214,235,2.35,236,2.437,238,2.393,266,2.437,308,0.005,309,0.005,310,1.539,312,2.273,317,2.966,318,2.175,319,1.92,322,2.774,557,3.347,558,2.559,870,3.597,1106,6.508,1699,6.508,1709,5.618,1711,5.863,1724,4.392,1727,4.706,2154,4.706,2191,4.706,2211,6.724,2212,5.126,2213,5.126,2214,5.765,2215,5.126,2216,5.765,2217,5.765,2218,5.765,2219,5.765,2220,5.765,2221,5.126]],["title/components/LoaderComponent.html",[0,0.237,240,1.09]],["body/components/LoaderComponent.html",[0,0.387,1,0.872,2,0.205,3,0.205,4,1.236,5,0.938,6,0.938,7,1.288,8,0.179,10,0.355,19,0.826,22,0.768,24,0.007,25,0.63,26,2.296,27,1.98,28,1.736,30,1.353,32,0.387,33,0.683,35,0.715,38,0.828,44,1.238,55,1.005,59,3.484,60,0.289,61,2.852,62,2.953,64,0.608,66,1.08,71,0.86,74,1.704,75,1.697,76,0.983,77,1.305,86,0.798,87,0.904,88,0.555,102,3.928,104,3.928,108,1.736,110,0.856,113,0.992,116,3.527,118,2.717,121,1.668,126,2.68,130,1.844,132,0.309,135,1.595,142,0.826,145,0.223,146,0.173,170,2.6,182,0.63,183,1.329,184,1.214,185,1.316,186,1.409,187,1.639,188,1.834,189,0.938,190,0.938,191,0.841,192,0.872,193,1.149,194,1.011,195,2,196,0.888,197,1.868,198,0.888,199,0.938,200,0.872,201,1.404,202,0.888,203,0.938,204,0.872,205,0.938,206,0.841,207,0.856,208,1.469,209,1.683,210,0.841,211,0.872,212,0.872,213,0.856,214,0.938,215,0.888,216,1.683,217,0.938,218,0.938,219,0.888,220,1.868,221,0.872,222,1.683,223,0.888,224,0.888,225,0.872,226,0.938,227,0.856,228,0.888,229,0.938,230,0.872,231,0.938,232,0.938,233,0.872,234,0.938,235,0.841,236,0.872,237,0.938,238,0.856,239,0.938,240,1.781,241,0.938,242,0.856,243,1.535,244,0.938,245,0.856,246,0.938,247,0.856,248,0.938,249,0.811,250,0.938,251,0.872,252,0.796,253,0.872,254,0.888,255,0.938,256,0.872,257,0.938,258,0.938,259,0.872,260,0.938,261,0.872,262,0.938,263,0.811,264,0.938,265,0.872,266,0.872,267,0.938,268,0.872,269,0.888,270,0.938,271,0.841,272,0.841,273,1.718,274,0.856,275,0.677,276,0.872,277,0.856,278,0.856,279,0.872,280,0.856,281,0.872,282,0.938,283,0.856,284,0.938,285,0.872,286,0.938,287,0.872,288,0.938,289,0.872,290,0.938,291,0.872,292,0.826,293,0.841,294,0.938,295,0.856,296,0.938,297,0.856,298,0.938,299,0.856,300,0.938,301,0.856,302,0.904,303,0.938,304,0.856,305,0.888,306,2.049,307,0.938,308,0.004,309,0.004,319,1.137,340,0.768,357,1.515,359,3.603,367,1.213,373,0.826,384,1.261,409,1.814,413,2.222,427,1.734,431,3.582,440,3.88,444,3.022,445,3.96,452,1.443,460,2.047,475,2.852,479,4.17,484,3.11,495,2.928,514,2.047,515,2.109,531,0.904,535,1.635,587,1.515,610,2.047,659,4.543,712,3.998,718,1.685,739,3.064,826,4.293,833,3.558,939,2.452,944,1.685,959,2.452,960,2.047,962,3.326,1125,3.892,1275,2.328,1505,2.047,1539,3.484,1547,2.222,1550,2.852,1560,1.787,1578,2.452,1599,2.452,1602,3.187,1803,3.187,1817,4.997,1820,4.543,1851,1.685,2079,4.175,2222,3.035,2223,5.108,2224,5.108,2225,4.17,2226,5.108,2227,5.108,2228,5.108,2229,6.18,2230,8.475,2231,6.233,2232,3.414,2233,5.108,2234,3.414,2235,3.414,2236,4.543,2237,3.414,2238,5.108,2239,4.543,2240,3.414,2241,3.414,2242,5.108,2243,2.222,2244,4.635,2245,3.985,2246,3.035,2247,2.047,2248,3.035,2249,3.035,2250,4.543,2251,3.035,2252,5.443,2253,3.035,2254,4.543,2255,5.443,2256,5.443,2257,3.035,2258,3.035,2259,2.786,2260,3.035,2261,3.035,2262,3.035,2263,3.035,2264,3.035,2265,3.035,2266,3.035,2267,3.414,2268,3.414,2269,3.414,2270,3.035,2271,3.035,2272,5.108,2273,3.414,2274,3.035,2275,3.414]],["title/modules/LoaderModule.html",[310,1.014,1710,3.305]],["body/modules/LoaderModule.html",[2,0.406,3,0.406,8,0.356,23,2.482,24,0.007,58,2.3,60,0.435,132,0.612,141,3.145,145,0.393,146,0.192,182,1.248,240,2.192,308,0.006,309,0.006,310,1.7,312,2.669,317,3.275,318,2.554,319,2.254,322,3.064,557,3.696,558,3.004,833,4.904,1710,6.556,2276,6.018,2277,6.018,2278,6.018,2279,6.018,2280,6.767,2281,5.524,2282,6.767]],["title/injectables/LoaderService.html",[367,1.151,833,2.537]],["body/injectables/LoaderService.html",[2,0.363,3,0.363,8,0.318,10,0.629,24,0.007,32,0.686,33,1.013,38,0.981,44,1.229,55,1.101,60,0.357,64,0.822,66,1.129,74,2.176,75,2.158,76,1.255,77,1.545,83,5.169,86,1.183,87,0.823,88,0.823,113,0.825,116,3.665,132,0.547,145,0.264,146,0.171,240,2.138,308,0.005,309,0.005,329,6.74,367,1.966,410,4.964,452,3.203,826,4.502,833,3.968,944,3.741,1376,4.938,1539,5.169,1851,3.741,1982,4.934,2079,5.646,2231,7.442,2236,6.74,2244,6.218,2281,4.938,2283,5.379,2284,7.579,2285,6.049,2286,6.049,2287,6.049,2288,6.049]],["title/components/LocationMapComponent.html",[0,0.237,242,1.215]],["body/components/LocationMapComponent.html",[0,0.41,1,1.046,2,0.246,3,0.246,4,0.827,5,1.126,6,1.126,8,0.215,10,0.426,19,0.991,22,0.922,24,0.007,25,1.077,26,2.313,27,1.995,28,1.984,30,1.546,32,0.465,35,1.825,38,1.465,44,0.946,60,0.193,64,0.809,66,1.111,71,0.689,74,1.858,76,0.983,77,1.491,84,2.808,86,0.911,87,0.947,88,0.634,108,1.491,110,1.028,112,1.697,113,0.927,132,0.371,142,0.991,145,0.179,146,0.116,160,2.795,182,0.756,183,1.518,184,1.158,188,2,189,1.126,190,1.126,191,1.009,192,1.046,193,1.313,194,1.123,195,2.153,196,1.066,197,2.037,198,1.066,199,1.126,200,1.046,201,1.605,202,1.066,203,1.126,204,1.046,205,1.126,206,1.009,207,1.028,208,1.582,209,1.869,210,1.009,211,1.046,212,1.046,213,1.028,214,1.126,215,1.066,216,1.869,217,1.126,218,1.126,219,1.066,220,2.037,221,1.046,222,1.869,223,1.066,224,1.066,225,1.046,226,1.126,227,1.028,228,1.066,229,1.126,230,1.046,231,1.126,232,1.126,233,1.046,234,1.126,235,1.009,236,1.046,237,1.126,238,1.028,239,1.126,240,0.922,241,1.126,242,1.858,243,2.186,244,1.126,245,1.028,246,1.126,247,1.028,248,1.126,249,0.973,250,1.126,251,1.046,252,0.956,253,1.046,254,1.066,255,1.126,256,1.046,257,1.126,258,1.126,259,1.046,260,1.126,261,1.046,262,1.126,263,0.973,264,1.126,265,1.046,266,1.046,267,1.126,268,1.046,269,1.066,270,1.126,271,1.009,272,1.009,273,1.832,274,1.028,275,0.813,276,1.046,277,1.028,278,1.028,279,1.046,280,1.028,281,1.046,282,1.126,283,1.028,284,1.126,285,1.046,286,1.126,287,1.046,288,1.126,289,1.046,290,1.126,291,1.046,292,0.991,293,1.009,294,1.126,295,1.028,296,1.126,297,1.028,298,1.126,299,1.028,300,1.126,301,1.028,302,1.085,303,1.126,304,1.028,305,1.066,306,1.009,307,1.126,308,0.004,309,0.004,365,2.372,373,1.412,376,2.203,379,1.286,380,2.57,431,2.467,465,2.251,498,3.643,794,3.374,807,4.627,1768,4.193,1807,5.551,1808,6.966,1810,6.966,2050,4.884,2289,6.383,2290,3.643,2291,5.837,2292,5.837,2293,5.837,2294,5.191,2295,7.451,2296,5.837,2297,5.837,2298,5.837,2299,4.097,2300,8.143,2301,4.097,2302,4.097,2303,4.097,2304,5.837,2305,4.097,2306,5.837,2307,5.191,2308,4.097,2309,5.837,2310,4.097,2311,4.097,2312,4.097,2313,4.097,2314,4.097,2315,4.097]],["title/modules/LocationModule.html",[310,1.014,2316,3.691]],["body/modules/LocationModule.html",[0,0.401,2,0.356,3,0.356,8,0.312,10,0.616,23,2.34,24,0.007,58,2.015,60,0.449,132,0.536,134,2.338,135,2.771,141,2.965,142,1.434,145,0.376,146,0.168,182,1.094,242,2.39,243,2.057,245,2.39,247,2.39,308,0.005,309,0.005,310,1.86,312,2.338,317,3.019,318,2.237,319,1.975,321,4.179,322,2.824,327,3.803,452,3.163,554,5.44,556,3.498,557,3.407,558,2.632,560,5.105,1766,5.905,1793,4.84,1803,3.699,2316,7.419,2317,5.272,2318,5.272,2319,5.929,2320,5.272,2321,5.272,2322,4.84,2323,7.485,2324,7.251,2325,5.929,2326,4.84,2327,5.272,2328,5.929,2329,5.272,2330,5.929,2331,5.929,2332,5.929,2333,5.929,2334,5.929]],["title/components/LocationPickerComponent.html",[0,0.237,245,1.215]],["body/components/LocationPickerComponent.html",[0,0.403,1,0.842,2,0.198,3,0.198,4,0.666,5,0.907,6,0.907,8,0.173,10,0.343,13,2.69,15,1.906,16,4.3,18,2.21,19,1.948,22,0.742,23,1.711,24,0.007,25,1.39,26,2.292,27,1.974,28,1.692,30,1.319,32,0.374,33,0.666,35,1.88,36,4.006,38,1.418,39,2.14,40,3.522,41,1.79,42,2.757,43,1.997,44,0.807,48,3.106,49,4.006,52,2.986,55,0.601,60,0.355,64,0.859,65,1.1,66,1.233,74,1.248,76,1.09,77,1.831,81,2.986,84,2.097,86,1.043,87,0.927,88,0.726,89,2.986,99,2.986,101,3.241,102,2.878,103,1.8,105,2.104,106,2.661,108,1.271,110,1.798,112,2.192,113,0.911,114,2.529,122,4.498,123,4.006,124,2.513,125,2.513,126,1.301,127,3.106,128,2.513,129,2.513,130,1.782,131,2.986,132,0.298,133,2.986,134,1.301,135,1.541,142,0.798,143,1.978,144,1.978,145,0.144,146,0.093,175,2.692,181,1.978,182,0.608,183,1.295,184,0.987,188,1.802,189,0.907,190,0.907,191,0.812,192,0.842,193,1.12,194,0.99,195,1.971,196,0.858,197,1.836,198,0.858,199,0.907,200,0.842,201,1.369,202,0.858,203,0.907,204,0.842,205,0.907,206,0.812,207,0.827,208,1.448,209,1.648,210,0.812,211,0.842,212,0.842,213,0.827,214,0.907,215,0.858,216,1.648,217,0.907,218,0.907,219,0.858,220,1.836,221,0.842,222,1.648,223,0.858,224,0.858,225,0.842,226,0.907,227,0.827,228,0.858,229,0.907,230,0.842,231,0.907,232,0.907,233,0.842,234,0.907,235,0.812,236,0.842,237,0.907,238,0.827,239,0.907,240,0.742,241,0.907,242,1.962,243,2.267,244,0.907,245,1.798,246,0.907,247,1.962,248,0.907,249,0.783,250,0.907,251,0.842,252,0.769,253,0.842,254,0.858,255,0.907,256,0.842,257,0.907,258,0.907,259,0.842,260,0.907,261,0.842,262,0.907,263,0.783,264,0.907,265,0.842,266,0.842,267,0.907,268,0.842,269,0.858,270,0.907,271,0.812,272,0.812,273,1.696,274,0.827,275,0.654,276,0.842,277,0.827,278,0.827,279,0.842,280,0.827,281,0.842,282,0.907,283,0.827,284,0.907,285,0.842,286,0.907,287,0.842,288,0.907,289,0.842,290,0.907,291,0.842,292,0.798,293,0.812,294,0.907,295,0.827,296,0.907,297,0.827,298,0.907,299,0.827,300,0.907,301,0.827,302,0.874,303,0.907,304,0.827,305,0.858,306,0.812,307,0.907,308,0.004,309,0.004,327,2.529,340,1.12,350,2.058,373,1.45,386,1.464,445,2.326,453,4.427,643,3.106,717,2.008,807,4.352,950,3.861,1094,3.241,1111,4.064,1517,5.452,1766,5.557,1781,4.064,1785,4.064,1786,4.427,1787,4.064,2289,6.731,2294,4.427,2307,4.427,2326,2.692,2327,2.933,2329,2.933,2335,2.933,2336,4.978,2337,4.978,2338,4.978,2339,6.679,2340,5.996,2341,2.933,2342,4.978,2343,3.298,2344,3.298,2345,3.298,2346,3.298,2347,6.679,2348,3.298,2349,3.298,2350,4.978,2351,3.298,2352,3.298,2353,3.298,2354,3.298,2355,3.298,2356,3.298,2357,3.298,2358,3.298,2359,4.978,2360,4.978,2361,3.298,2362,3.298,2363,3.298,2364,5.996,2365,3.298,2366,3.298,2367,3.298,2368,3.298,2369,4.978]],["title/components/LocationSearchComponent.html",[0,0.237,247,1.215]],["body/components/LocationSearchComponent.html",[0,0.385,1,1.061,2,0.249,3,0.249,4,0.839,5,1.142,6,1.142,8,0.218,10,0.432,15,1.682,19,1.005,22,0.935,24,0.007,26,2.314,27,1.997,30,1.562,32,0.471,33,0.788,35,1.912,38,1.111,44,0.956,55,0.712,60,0.323,64,0.681,66,1.116,71,0.699,76,0.853,77,1.505,84,2.641,86,0.649,87,0.934,88,0.451,104,4.311,105,1.756,106,2.616,108,1.904,110,1.042,113,0.935,132,0.376,145,0.181,146,0.118,182,0.766,183,1.533,184,1.169,188,2.012,189,1.142,190,1.142,191,1.023,192,1.061,193,1.326,194,1.132,195,2.165,196,1.081,197,2.05,198,1.081,199,1.142,200,1.061,201,1.62,202,1.081,203,1.142,204,1.061,205,1.142,206,1.023,207,1.042,208,1.59,209,1.884,210,1.023,211,1.061,212,1.061,213,1.042,214,1.142,215,1.081,216,1.884,217,1.142,218,1.142,219,1.081,220,2.05,221,1.061,222,1.884,223,1.081,224,1.081,225,1.061,226,1.142,227,1.042,228,1.081,229,1.142,230,1.061,231,1.142,232,1.142,233,1.061,234,1.142,235,1.023,236,1.061,237,1.142,238,1.042,239,1.142,240,0.935,241,1.142,242,1.042,243,2.249,244,1.142,245,1.042,246,1.142,247,1.87,248,1.142,249,0.987,250,1.142,251,1.061,252,0.969,253,1.061,254,1.081,255,1.142,256,1.061,257,1.142,258,1.142,259,1.061,260,1.142,261,1.061,262,1.142,263,0.987,264,1.142,265,1.061,266,1.061,267,1.142,268,1.061,269,1.081,270,1.142,271,1.023,272,1.023,273,1.84,274,1.042,275,0.824,276,1.061,277,1.042,278,1.042,279,1.061,280,1.042,281,1.061,282,1.142,283,1.042,284,1.142,285,1.061,286,1.142,287,1.061,288,1.142,289,1.061,290,1.142,291,1.061,292,1.005,293,1.023,294,1.142,295,1.042,296,1.142,297,1.042,298,1.142,299,1.042,300,1.142,301,1.042,302,1.101,303,1.142,304,1.042,305,1.081,306,1.023,307,1.142,308,0.004,309,0.005,340,1.326,365,2.387,379,1.304,380,2.586,438,1.925,465,2.273,495,1.925,807,3.185,888,3.826,1027,5.103,1080,4.397,1517,6.677,1766,5.596,1768,4.234,1776,7.481,1781,4.812,1782,6.087,1807,5.593,2289,6.409,2326,3.391,2341,3.694,2370,3.694,2371,5.593,2372,5.895,2373,7.457,2374,6.087,2375,5.895,2376,4.154,2377,4.154,2378,4.154,2379,4.154,2380,4.154,2381,4.154,2382,4.154,2383,4.154,2384,4.154,2385,4.154]],["title/components/LoginComponent.html",[0,0.237,249,1.151]],["body/components/LoginComponent.html",[0,0.371,1,0.96,2,0.226,3,0.226,4,0.759,5,1.033,6,1.033,7,1.418,8,0.198,10,0.391,15,1.565,19,0.909,22,0.846,24,0.007,25,0.693,26,2.305,27,1.987,30,1.453,32,0.426,33,0.734,35,1.585,38,0.609,39,2.099,44,0.889,55,0.86,60,0.394,64,0.831,66,1.164,71,0.633,72,1.657,76,0.544,77,0.96,86,0.856,87,0.927,88,0.774,93,3.94,105,1.589,106,2.435,108,1.401,110,0.943,113,1.033,126,2.163,132,0.34,135,1.757,142,0.909,145,0.164,146,0.107,182,0.693,183,1.427,184,1.088,185,1.45,186,1.552,187,1.805,188,1.922,189,1.033,190,1.033,191,0.926,192,0.96,193,1.234,194,1.07,195,2.082,196,0.978,197,1.958,198,0.978,199,1.033,200,0.96,201,1.508,202,0.978,203,1.033,204,0.96,205,1.033,206,0.926,207,0.943,208,1.529,209,1.781,210,0.926,211,0.96,212,0.96,213,0.943,214,1.033,215,0.978,216,1.781,217,1.033,218,1.033,219,0.978,220,1.958,221,0.96,222,1.781,223,0.978,224,0.978,225,0.96,226,1.033,227,0.943,228,0.978,229,1.033,230,0.96,231,1.033,232,1.033,233,0.96,234,1.033,235,0.926,236,0.96,237,1.033,238,0.943,239,1.033,240,1.234,241,1.033,242,0.943,243,1.624,244,1.033,245,0.943,246,1.033,247,0.943,248,1.033,249,1.691,250,1.033,251,1.654,252,2.11,253,0.96,254,0.978,255,1.033,256,0.96,257,1.033,258,1.033,259,0.96,260,1.033,261,0.96,262,1.033,263,0.893,264,1.033,265,0.96,266,0.96,267,1.033,268,0.96,269,1.685,270,1.033,271,0.926,272,0.926,273,1.779,274,0.943,275,0.746,276,0.96,277,0.943,278,0.943,279,0.96,280,0.943,281,0.96,282,1.033,283,0.943,284,1.033,285,0.96,286,1.033,287,0.96,288,1.033,289,0.96,290,1.033,291,0.96,292,0.909,293,0.926,294,1.033,295,0.943,296,1.033,297,0.943,298,1.033,299,0.943,300,1.033,301,0.943,302,0.996,303,1.033,304,0.943,305,0.978,306,0.926,307,1.033,308,0.004,309,0.004,331,3.11,340,0.846,349,1.856,352,2.864,365,2.28,369,4.93,379,1.18,380,2.47,394,2.319,404,2.447,427,2.787,431,2.319,440,2.787,449,4.542,450,4.842,515,2.94,519,2.708,520,4.179,522,4.228,523,3.796,527,4.415,528,3.618,530,3.572,531,1.453,569,3.069,623,3.572,624,3.343,635,2.173,638,3.069,639,3.069,820,3.617,821,4.041,826,3.81,834,4.571,835,3.264,836,3.342,878,2.031,879,3.069,880,3.069,881,3.069,884,2.864,907,3.572,908,4.653,912,2.345,1474,3.423,1602,3.423,2386,3.343,2387,5.486,2388,5.331,2389,5.486,2390,4.478,2391,3.343,2392,5.486,2393,5.486,2394,3.759,2395,3.759,2396,3.759,2397,4.478,2398,3.759,2399,3.759,2400,3.759,2401,3.759,2402,3.759,2403,3.343,2404,3.759,2405,3.759,2406,3.343,2407,3.759,2408,3.343,2409,3.343]],["title/components/LoginFormComponent.html",[0,0.237,251,1.237]],["body/components/LoginFormComponent.html",[0,0.393,1,0.772,2,0.181,3,0.181,4,0.61,5,0.831,6,0.831,7,1.14,8,0.159,10,0.314,15,1.329,18,1.341,19,0.731,20,3.172,22,0.68,24,0.007,25,1.4,26,2.282,27,1.965,28,1.582,30,1.234,32,0.343,33,0.623,34,1.683,35,1.775,38,1.27,39,1.827,41,1.95,42,1.922,44,1.035,47,3.69,60,0.343,64,0.778,65,1.255,66,1.231,71,0.783,75,1.086,76,1.053,77,1.189,86,0.887,87,0.892,88,0.617,108,1.189,110,0.758,112,2.665,113,1.14,119,2.6,126,2.517,127,3.982,132,0.273,134,1.191,142,0.731,145,0.132,146,0.161,165,3.342,182,0.557,183,1.211,184,0.923,185,1.165,186,1.247,187,1.45,188,1.723,189,0.831,190,0.831,191,0.744,192,0.772,193,1.048,194,0.938,195,1.895,196,0.786,197,1.755,198,0.786,199,0.831,200,0.772,201,1.28,202,0.786,203,0.831,204,0.772,205,0.831,206,0.744,207,0.758,208,1.392,209,1.562,210,0.744,211,0.772,212,0.772,213,0.758,214,0.831,215,0.786,216,1.562,217,0.831,218,0.831,219,0.786,220,1.755,221,0.772,222,1.562,223,0.786,224,0.786,225,0.772,226,0.831,227,0.758,228,0.786,229,0.831,230,0.772,231,0.831,232,0.831,233,0.772,234,0.831,235,0.744,236,0.772,237,0.831,238,0.758,239,0.831,240,1.436,241,0.831,242,0.758,243,1.425,244,0.831,245,0.758,246,0.831,247,0.758,248,0.831,249,0.718,250,0.831,251,1.63,252,2.155,253,0.772,254,0.786,255,0.831,256,0.772,257,0.831,258,0.831,259,0.772,260,0.831,261,0.772,262,0.831,263,0.718,264,0.831,265,0.772,266,0.772,267,0.831,268,0.772,269,2.135,270,0.831,271,0.744,272,0.744,273,1.639,274,0.758,275,0.923,276,0.772,277,0.758,278,0.758,279,0.772,280,0.758,281,0.772,282,0.831,283,0.758,284,0.831,285,0.772,286,0.831,287,0.772,288,0.831,289,0.772,290,0.831,291,0.772,292,0.731,293,0.744,294,0.831,295,0.758,296,0.831,297,0.758,298,0.831,299,0.758,300,0.831,301,0.758,302,0.8,303,0.831,304,0.758,305,0.786,306,0.744,307,0.831,308,0.003,309,0.003,318,1.757,331,2.727,340,0.68,357,1.341,365,2.207,367,1.106,373,1.374,378,2.516,379,2.577,380,2.632,384,2.69,410,1.812,431,1.968,432,3.344,465,2.809,469,1.687,495,1.855,515,3.449,516,2.6,517,2.516,522,3.757,535,0.967,623,3.698,661,2.687,772,1.885,820,3.172,826,3.139,840,1.812,910,2.061,937,3.393,938,4.863,941,3.547,1027,2.905,1080,3.564,1291,3.547,1509,3.982,1851,2.298,2388,4.135,2397,4.637,2409,2.687,2410,8.071,2411,7.408,2412,2.687,2413,6.383,2414,7.722,2415,4.656,2416,4.656,2417,4.656,2418,7.284,2419,5.676,2420,6.383,2421,5.681,2422,6.895,2423,6.895,2424,5.681,2425,5.681,2426,5.681,2427,5.681,2428,3.021,2429,7.284,2430,4.656,2431,4.656,2432,1.582,2433,3.021,2434,3.021,2435,6.968,2436,3.021,2437,4.141,2438,3.021,2439,4.656,2440,3.021,2441,6.477,2442,3.021,2443,3.021,2444,4.656,2445,3.021,2446,3.021,2447,4.656,2448,3.021,2449,4.656,2450,3.021,2451,4.141,2452,4.656,2453,3.021,2454,3.021,2455,4.656,2456,3.021,2457,3.021,2458,3.021,2459,4.656,2460,3.801,2461,3.021,2462,2.466,2463,3.021,2464,3.021,2465,3.021,2466,3.021,2467,3.021,2468,3.021,2469,4.656,2470,3.021,2471,2.466,2472,4.656,2473,3.021,2474,3.021,2475,3.021,2476,3.021,2477,3.021,2478,3.021,2479,3.021,2480,3.021,2481,3.021,2482,3.021,2483,3.021]],["title/pipes/MaxItemsPipe.html",[1103,2.537,1705,3.48]],["body/pipes/MaxItemsPipe.html",[2,0.409,3,0.409,8,0.358,10,0.708,15,1.945,22,1.533,24,0.007,38,1.105,43,2.16,44,1.105,60,0.321,64,0.677,66,0.93,76,1.179,86,1.064,87,0.948,88,0.74,113,0.93,132,0.616,145,0.297,146,0.193,308,0.006,309,0.006,376,3.54,481,3.81,615,3.063,1082,5.443,1103,4.839,1108,3.682,1114,5.561,1507,7.658,1705,5.857,2484,7.251,2485,6.061,2486,7.251,2487,8.154,2488,8.154,2489,6.816,2490,6.816]],["title/components/MediumEditorComponent.html",[0,0.237,253,1.237]],["body/components/MediumEditorComponent.html",[0,0.391,1,0.895,2,0.21,3,0.21,4,0.707,5,0.963,6,0.963,7,1.322,8,0.184,10,0.364,11,3.249,13,4.984,15,1.486,16,3.729,19,0.847,20,3.471,22,0.788,23,1.774,24,0.007,25,0.961,26,2.298,27,1.981,28,1.77,30,1.38,32,0.397,33,0.696,34,2.787,35,1.671,36,4.128,37,5.019,38,1.403,39,1.559,44,0.844,45,3.124,47,3.979,48,3.249,49,4.128,52,3.124,60,0.293,64,0.833,65,1.151,66,1.219,71,0.876,72,1.573,76,1.064,77,1.969,81,3.124,84,2.161,86,0.813,87,0.91,88,0.867,89,3.124,99,3.124,101,3.391,102,3.011,103,2.886,104,3.979,105,1.481,106,2.312,108,1.758,110,0.879,112,1.514,113,0.848,114,2.646,116,2.837,121,1.701,131,3.124,132,0.317,133,3.124,134,1.382,143,2.101,144,2.101,145,0.153,146,0.099,147,2.669,152,2.86,154,2.669,155,3.115,160,3.552,163,3.115,181,2.101,182,0.646,183,1.355,184,1.033,185,1.351,186,1.446,187,1.682,188,1.858,189,0.963,190,0.963,191,0.863,192,0.895,193,1.172,194,1.027,195,2.022,196,0.911,197,1.892,198,0.911,199,0.963,200,0.895,201,1.432,202,0.911,203,0.963,204,0.895,205,0.963,206,0.863,207,0.879,208,1.486,209,1.709,210,0.863,211,0.895,212,0.895,213,0.879,214,0.963,215,0.911,216,1.709,217,0.963,218,0.963,219,0.911,220,1.892,221,0.895,222,1.709,223,0.911,224,0.911,225,0.895,226,0.963,227,0.879,228,0.911,229,0.963,230,0.895,231,0.963,232,0.963,233,0.895,234,0.963,235,0.863,236,0.895,237,0.963,238,0.879,239,0.963,240,0.788,241,0.963,242,0.879,243,1.559,244,0.963,245,0.879,246,0.963,247,0.879,248,0.963,249,0.832,250,0.963,251,0.895,252,0.817,253,1.879,254,2.218,255,0.963,256,0.895,257,0.963,258,0.963,259,0.895,260,0.963,261,0.895,262,0.963,263,0.832,264,0.963,265,0.895,266,0.895,267,0.963,268,0.895,269,0.911,270,0.963,271,0.863,272,0.863,273,1.735,274,0.879,275,0.695,276,0.895,277,0.879,278,0.879,279,0.895,280,0.879,281,0.895,282,0.963,283,0.879,284,0.963,285,0.895,286,0.963,287,0.895,288,0.963,289,0.895,290,0.963,291,0.895,292,0.847,293,0.863,294,0.963,295,0.879,296,0.963,297,0.879,298,0.963,299,0.879,300,0.963,301,0.879,302,0.928,303,0.963,304,0.879,305,0.911,306,0.863,307,0.963,308,0.004,309,0.004,365,2.203,379,1.1,380,2.387,454,2.814,464,3.552,495,2.03,889,2.516,1080,4.107,1330,2.5,1380,2.86,1586,3.115,2059,3.968,2060,3.968,2109,2.669,2491,6.862,2492,8.01,2493,3.115,2494,5.208,2495,5.208,2496,5.528,2497,5.208,2498,5.208,2499,6.121,2500,6.217,2501,3.503,2502,7.71,2503,3.503,2504,3.503,2505,3.503,2506,3.503,2507,4.632,2508,3.503,2509,3.503,2510,3.503,2511,3.503,2512,3.503,2513,3.503,2514,3.503,2515,3.503,2516,3.503,2517,3.503,2518,3.503,2519,3.503,2520,3.503,2521,3.503,2522,3.503,2523,3.503,2524,3.503,2525,2.669,2526,3.503,2527,3.115]],["title/modules/MediumModule.html",[310,1.014,2528,3.48]],["body/modules/MediumModule.html",[2,0.392,3,0.392,8,0.344,23,2.269,24,0.007,25,1.685,58,2.221,60,0.42,132,0.591,141,3.098,145,0.389,146,0.185,182,1.206,253,2.493,254,1.7,308,0.006,309,0.006,310,1.665,312,2.578,317,3.207,318,2.466,319,2.177,322,3,557,3.62,558,2.901,2491,4.979,2528,6.755,2529,5.812,2530,5.812,2531,6.536,2532,5.812,2533,6.536,2534,6.536]],["title/components/MenuComponent.html",[0,0.237,256,1.237]],["body/components/MenuComponent.html",[0,0.332,1,0.744,2,0.175,3,0.175,4,0.589,5,0.801,6,0.801,8,0.153,10,0.303,14,3.279,15,1.292,19,0.705,21,2.822,22,0.656,24,0.007,25,1.324,26,2.278,27,1.96,28,1.539,30,1.2,32,0.331,33,0.606,35,1.733,38,1.214,39,1.393,43,2.404,44,0.734,46,3.182,55,0.867,60,0.262,64,0.744,65,1.655,66,1.238,75,1.461,76,1.365,77,1.599,84,1.422,86,1.242,87,0.954,88,0.864,108,1.157,110,0.731,113,1.085,119,1.627,121,2.528,132,0.264,142,0.705,145,0.127,146,0.083,162,0.991,167,1.262,182,0.538,183,1.178,184,0.898,188,1.69,189,0.801,190,0.801,191,0.718,192,0.744,193,1.019,194,0.917,195,1.864,196,0.758,197,1.721,198,0.758,199,0.801,200,0.744,201,1.245,202,0.758,203,0.801,204,0.744,205,0.801,206,0.718,207,0.731,208,1.369,209,1.527,210,0.718,211,0.744,212,0.744,213,0.731,214,0.801,215,0.758,216,1.527,217,0.801,218,0.801,219,0.758,220,1.721,221,0.744,222,1.527,223,0.758,224,0.758,225,0.744,226,0.801,227,0.731,228,0.758,229,0.801,230,0.744,231,0.801,232,0.801,233,0.744,234,0.801,235,0.718,236,0.744,237,0.801,238,0.731,239,0.801,240,0.656,241,0.801,242,0.731,243,1.393,244,0.801,245,0.731,246,0.801,247,0.731,248,0.801,249,0.692,250,0.801,251,0.744,252,0.68,253,0.744,254,0.758,255,0.801,256,1.833,257,1.527,258,0.801,259,0.744,260,0.801,261,0.744,262,0.801,263,0.692,264,0.801,265,0.744,266,0.744,267,0.801,268,0.744,269,0.758,270,0.801,271,0.718,272,0.718,273,1.615,274,0.731,275,0.898,276,0.744,277,0.731,278,0.731,279,0.744,280,0.731,281,0.744,282,0.801,283,0.731,284,0.801,285,0.744,286,0.801,287,0.744,288,0.801,289,0.744,290,0.801,291,0.744,292,0.705,293,0.718,294,0.801,295,0.731,296,0.801,297,0.731,298,0.801,299,0.731,300,0.801,301,0.731,302,0.772,303,0.801,304,0.731,305,0.758,306,0.718,307,0.801,308,0.003,309,0.003,319,1.508,340,0.656,364,4.493,367,1.076,373,1.343,376,2.363,394,3.166,427,2.301,437,5.468,438,1.479,444,3.543,481,3.169,495,1.813,512,4.865,517,2.447,532,1.627,535,0.933,615,1.479,717,1.827,731,2.825,771,5.042,807,2.447,816,2.447,827,5.292,950,4.149,1137,6.059,1461,5.043,1505,2.716,1555,3.62,2247,2.716,2535,2.592,2536,7.664,2537,4.529,2538,4.529,2539,8.129,2540,8.129,2541,6.262,2542,4.529,2543,4.529,2544,4.529,2545,4.529,2546,4.529,2547,4.529,2548,6.262,2549,4.027,2550,4.529,2551,6.781,2552,6.781,2553,2.592,2554,4.529,2555,4.529,2556,6.262,2557,4.529,2558,4.529,2559,4.529,2560,2.915,2561,4.529,2562,3.45,2563,2.915,2564,2.915,2565,2.915,2566,2.915,2567,2.915,2568,4.529,2569,4.027,2570,2.915,2571,2.915,2572,4.529,2573,4.529,2574,2.915,2575,4.529,2576,2.915,2577,4.529,2578,2.915,2579,4.529,2580,4.529,2581,2.915,2582,4.027,2583,4.529,2584,2.915,2585,4.027,2586,4.529,2587,2.915,2588,2.915,2589,4.529,2590,2.915,2591,4.529,2592,2.915,2593,2.915,2594,2.915,2595,4.027,2596,2.915,2597,4.529,2598,2.915,2599,2.915,2600,2.915,2601,2.915,2602,5.553,2603,2.915,2604,4.529,2605,2.915,2606,2.915,2607,7.178,2608,2.915,2609,2.915,2610,2.915,2611,2.915,2612,2.915,2613,2.915,2614,5.553,2615,3.45,2616,2.915,2617,2.915,2618,2.915,2619,6.781,2620,2.915,2621,6.262]],["title/components/MockupComponent.html",[0,0.237,259,1.237]],["body/components/MockupComponent.html",[0,0.393,1,0.911,2,0.377,3,0.214,4,0.721,5,0.981,6,0.981,8,0.188,10,0.371,19,0.863,22,0.803,24,0.007,26,2.3,27,1.982,28,1.794,30,1.399,35,0.747,43,1.399,60,0.168,87,0.872,108,1.349,110,0.895,113,0.72,132,0.323,145,0.156,146,0.178,162,3.352,171,2.036,182,0.658,183,1.373,184,1.047,188,1.874,189,0.981,190,0.981,191,0.879,192,0.911,193,1.188,194,1.038,195,2.038,196,0.928,197,1.909,198,0.928,199,0.981,200,0.911,201,1.452,202,0.928,203,0.981,204,0.911,205,0.981,206,0.879,207,0.895,208,1.497,209,1.728,210,0.879,211,0.911,212,0.911,213,0.895,214,0.981,215,0.928,216,1.728,217,0.981,218,0.981,219,0.928,220,1.909,221,0.911,222,1.728,223,0.928,224,0.928,225,0.911,226,0.981,227,0.895,228,0.928,229,0.981,230,0.911,231,0.981,232,0.981,233,0.911,234,0.981,235,0.879,236,0.911,237,0.981,238,0.895,239,0.981,240,0.803,241,0.981,242,0.895,243,1.576,244,0.981,245,0.895,246,0.981,247,0.895,248,0.981,249,0.848,250,0.981,251,0.911,252,0.832,253,0.911,254,0.928,255,0.981,256,0.911,257,0.981,258,0.981,259,1.774,260,0.981,261,0.911,262,0.981,263,0.848,264,0.981,265,0.911,266,0.911,267,0.981,268,0.911,269,0.928,270,0.981,271,0.879,272,0.879,273,1.746,274,0.895,275,1.912,276,0.911,277,0.895,278,0.895,279,0.911,280,0.895,281,0.911,282,0.981,283,0.895,284,0.981,285,0.911,286,0.981,287,0.911,288,0.981,289,0.911,290,0.981,291,0.911,292,0.863,293,0.879,294,0.981,295,0.895,296,0.981,297,0.895,298,0.981,299,0.895,300,0.981,301,0.895,302,0.945,303,0.981,304,0.895,305,0.928,306,0.879,307,0.981,308,0.004,309,0.004,327,2.683,438,1.724,515,2.18,937,4.27,1275,3.601,2388,3.167,2622,3.173,2623,3.438,2624,5.28,2625,5.28,2626,5.28,2627,5.28,2628,6.946,2629,5.28,2630,9.624,2631,9.738,2632,9.738,2633,9.593,2634,9.593,2635,4.695,2636,5.28,2637,5.28]],["title/interfaces/ModelConfig.html",[918,1.463,1422,3.305]],["body/interfaces/ModelConfig.html",[2,0.423,3,0.423,8,0.371,10,0.733,24,0.007,32,0.8,33,1.113,41,2.246,60,0.333,64,0.701,74,2.087,88,0.904,145,0.308,308,0.006,309,0.006,430,3.009,487,3.585,615,2.718,793,4.358,918,2.762,920,4.403,959,3.996,961,3.604,1048,4.813,1422,5.677,1502,5.31,1589,5.485,2638,5.069,2639,6.795,2640,5.193]],["title/injectables/ModelConfigService.html",[367,1.151,1043,3.154]],["body/injectables/ModelConfigService.html",[2,0.185,3,0.185,7,2.435,8,0.162,10,0.321,18,1.37,24,0.007,25,1.549,32,0.35,33,1.239,34,1.711,38,1.191,41,2.151,42,1.953,43,1.525,44,1.046,55,0.841,60,0.407,64,0.9,65,2.012,66,1.103,70,1.748,74,1.842,75,2.086,76,1.344,77,0.788,86,1.232,87,0.956,88,0.897,103,3.209,112,1.877,113,1.126,114,2.924,116,2.489,132,0.279,142,1.561,145,0.135,146,0.163,162,1.608,167,1.336,169,4.208,308,0.003,309,0.004,328,1.784,333,2.105,339,2.376,340,0.694,342,2.712,350,1.925,360,3.016,367,1.653,373,0.746,386,2.1,394,2.942,403,1.481,409,2.266,443,3.454,457,4.732,460,2.838,481,1.442,488,2.216,489,2.924,495,2.273,514,2.838,519,2.336,526,2.952,535,0.988,556,2.69,615,2.273,626,4.732,641,1.784,728,1.616,773,2.952,779,3.379,793,3.379,805,3.228,822,2.272,835,2.376,836,2.728,878,1.667,898,2.105,902,2.519,922,1.784,937,3.416,952,2.351,954,3.968,956,2.838,977,1.925,981,4.636,982,4.532,994,1.925,1019,2.952,1043,3.081,1044,3.731,1048,5.632,1049,2.519,1081,2.333,1098,3.081,1099,2.105,1110,2.216,1111,4.698,1138,2.1,1202,4.208,1262,1.784,1270,2.838,1443,2.744,1445,3.228,1453,5.01,1477,2.744,1502,1.851,1505,3.871,1508,2.952,1582,2.351,1589,5.512,1600,1.925,1614,1.667,1615,2.009,1616,3.926,1621,2.105,1922,3.863,2043,2.519,2044,2.519,2050,2.216,2093,3.228,2244,4.748,2245,4.782,2638,5.931,2639,5.996,2640,2.952,2641,2.351,2642,4.732,2643,7.193,2644,4.208,2645,7.345,2646,4.732,2647,4.732,2648,4.732,2649,4.732,2650,4.732,2651,3.086,2652,3.086,2653,4.732,2654,3.086,2655,4.732,2656,3.086,2657,4.732,2658,3.086,2659,4.732,2660,4.208,2661,3.863,2662,4.732,2663,3.086,2664,4.208,2665,3.086,2666,3.926,2667,4.732,2668,2.744,2669,4.732,2670,3.086,2671,4.732,2672,4.732,2673,4.732,2674,3.086,2675,3.086,2676,3.086,2677,3.086,2678,4.732,2679,3.086,2680,3.086,2681,4.208,2682,3.086,2683,4.732,2684,3.086,2685,3.086,2686,3.086,2687,3.086,2688,2.744,2689,2.744,2690,4.732,2691,4.208,2692,4.208,2693,4.732,2694,3.086,2695,3.086,2696,3.086,2697,3.086,2698,3.086,2699,5.118,2700,4.732,2701,3.086,2702,3.086,2703,4.732,2704,3.086,2705,3.086,2706,4.732,2707,4.732,2708,3.086,2709,3.086,2710,3.086,2711,3.086,2712,4.732,2713,6.454,2714,3.086,2715,3.086,2716,3.086,2717,4.732,2718,3.086,2719,3.086,2720,3.086,2721,3.086,2722,3.086,2723,3.086,2724,3.086,2725,3.086,2726,3.086,2727,3.086,2728,2.519,2729,2.519,2730,2.744,2731,2.351,2732,3.086,2733,4.732,2734,3.086,2735,3.086]],["title/interfaces/ModelConfiguration.html",[918,1.463,2736,3.955]],["body/interfaces/ModelConfiguration.html",[2,0.423,3,0.423,8,0.371,10,0.733,24,0.007,32,0.8,33,1.113,41,2.246,60,0.333,64,0.701,74,2.087,88,0.904,145,0.308,308,0.006,309,0.006,430,3.009,487,3.585,615,2.718,793,4.358,918,2.762,959,3.996,961,3.604,1048,4.813,1502,5.31,1589,5.485,2638,5.069,2639,6.795,2640,5.193,2736,6.795,2737,6.275]],["title/classes/Notification.html",[146,0.137,522,2.264]],["body/classes/Notification.html",[2,0.451,3,0.297,8,0.26,10,0.781,24,0.007,25,1.227,27,1.343,32,0.561,33,0.89,38,1.078,55,0.804,60,0.233,64,0.955,65,2.008,66,1.28,74,2.303,75,2.014,86,0.773,87,0.538,88,1.05,121,2.172,126,2.623,145,0.216,146,0.189,263,2.051,306,2.126,308,0.005,309,0.005,328,3.846,340,1.691,373,1.817,376,2.836,386,2.953,394,3.791,428,3.479,440,4.083,444,4.262,445,3.109,483,5.43,484,4.083,513,3.99,515,3.969,516,4.821,517,3.594,519,3.284,522,4.564,615,2.624,635,4.991,834,3.846,912,5.013,1081,3.122,1128,4.778,1352,5.387,1436,3.029,1505,3.99,1580,4.537,1583,4.039,1967,5.916,2169,5.916,2175,4.537,2388,3.99,2738,4.4,2739,6.652,2740,6.652,2741,6.652,2742,4.82,2743,4.949,2744,4.949,2745,4.949,2746,4.778,2747,4.949,2748,4.949,2749,6.652,2750,5.068,2751,4.949,2752,5.43,2753,6.652,2754,4.949,2755,4.949,2756,6.652,2757,4.949,2758,4.4,2759,4.949,2760,4.949]],["title/components/NotificationsComponent.html",[0,0.237,263,1.151]],["body/components/NotificationsComponent.html",[0,0.409,1,0.882,2,0.207,3,0.207,4,1.041,5,1.695,6,0.95,7,1.945,8,0.182,10,0.359,15,1.471,19,0.836,22,0.777,24,0.007,25,0.637,26,2.297,27,1.98,28,1.752,30,1.366,32,0.392,33,0.825,35,1.531,38,0.56,39,1.293,55,0.826,56,1.534,60,0.322,64,0.762,66,0.841,71,1.037,72,1.044,74,1.834,75,1.202,76,0.892,86,0.539,87,0.887,88,0.56,108,1.317,110,0.867,113,1.046,121,1.683,132,0.313,140,2.632,145,0.298,146,0.217,182,0.637,183,1.341,184,1.022,185,1.333,186,1.426,187,1.659,188,1.845,189,0.95,190,0.95,191,0.851,192,0.882,193,1.16,194,1.018,195,2.011,196,0.899,197,1.879,198,0.899,199,0.95,200,0.882,201,1.417,202,0.899,203,0.95,204,0.882,205,0.95,206,0.851,207,0.867,208,1.477,209,1.695,210,0.851,211,0.882,212,0.882,213,0.867,214,0.95,215,0.899,216,1.695,217,0.95,218,0.95,219,0.899,220,1.879,221,0.882,222,1.695,223,0.899,224,0.899,225,0.882,226,0.95,227,0.867,228,0.899,229,0.95,230,0.882,231,0.95,232,0.95,233,0.882,234,0.95,235,0.851,236,0.882,237,0.95,238,0.867,239,0.95,240,0.777,241,0.95,242,0.867,243,1.546,244,0.95,245,0.867,246,0.95,247,0.867,248,0.95,249,0.821,250,0.95,251,0.882,252,0.806,253,0.882,254,0.899,255,0.95,256,0.882,257,0.95,258,0.95,259,0.882,260,0.95,261,0.882,262,0.95,263,1.737,264,0.95,265,0.882,266,0.882,267,0.95,268,0.882,269,0.899,270,0.95,271,0.851,272,0.851,273,1.726,274,0.867,275,0.685,276,0.882,277,0.867,278,0.867,279,0.882,280,0.867,281,0.882,282,0.95,283,0.867,284,0.95,285,0.882,286,0.95,287,0.882,288,0.95,289,0.882,290,0.95,291,0.882,292,0.836,293,0.851,294,0.95,295,0.867,296,0.95,297,0.867,298,0.95,299,0.867,300,0.95,301,0.867,302,0.915,303,0.95,304,0.867,305,0.899,306,1.889,307,0.95,308,0.004,309,0.004,310,0.723,340,1.16,357,1.534,376,1.945,394,3.242,427,1.756,428,2.232,430,1.249,431,2.179,440,4.15,445,3.195,452,1.46,465,1.988,474,1.929,481,1.615,484,4.038,515,3.372,516,3.443,519,2.545,522,4.522,523,3.922,535,1.974,537,4.697,587,1.534,615,1.128,635,3.564,664,2.072,676,2.072,708,2.482,712,4.016,739,2.072,821,3.216,834,4.228,858,1.997,907,3.356,908,4.429,910,2.357,912,3.847,918,1.044,941,2.632,944,1.706,951,2.357,959,2.475,961,1.496,1081,2.229,1223,1.997,1352,2.156,1436,1.573,1505,2.072,1513,4.208,1550,1.929,1560,3.228,1600,3.847,1615,3.356,1803,3.216,1841,3.073,1851,2.545,1872,2.632,1892,2.821,2089,3.703,2150,2.632,2199,4.208,2229,3.703,2243,3.356,2247,3.092,2266,3.073,2388,3.092,2460,2.821,2615,2.632,2666,2.357,2742,2.072,2761,3.073,2762,6.079,2763,5.155,2764,5.155,2765,5.155,2766,5.155,2767,5.155,2768,3.455,2769,3.073,2770,3.073,2771,2.357,2772,4.584,2773,3.073,2774,5.483,2775,5.033,2776,4.208,2777,2.821,2778,3.073,2779,3.073,2780,3.073,2781,2.821,2782,3.073,2783,3.073,2784,3.073,2785,3.073,2786,3.073,2787,2.482,2788,2.821,2789,2.821,2790,3.073,2791,3.073,2792,4.584,2793,3.073,2794,3.073,2795,4.584,2796,3.073,2797,3.073,2798,3.073,2799,2.357,2800,3.073,2801,3.073,2802,6.166,2803,3.455,2804,3.455,2805,3.455,2806,3.455,2807,6.166,2808,5.483,2809,3.455,2810,3.455,2811,3.455,2812,3.455,2813,3.455,2814,3.455,2815,5.155,2816,3.455,2817,3.073,2818,4.584,2819,3.073,2820,3.455]],["title/modules/NotificationsModule.html",[310,1.014,2821,3.48]],["body/modules/NotificationsModule.html",[2,0.376,3,0.376,8,0.33,23,2.508,24,0.007,58,2.131,60,0.447,132,0.567,141,3.042,145,0.383,146,0.178,182,1.157,225,2.464,263,2.292,308,0.006,309,0.006,310,1.623,312,2.473,317,3.127,318,2.366,319,2.089,322,2.925,409,1.858,523,4.416,557,3.529,558,2.783,580,4.504,1708,5.988,1709,5.739,1714,5.119,1724,4.777,2758,5.576,2801,5.576,2821,7.017,2822,5.576,2823,5.576,2824,6.271,2825,5.576,2826,5.576,2827,6.271,2828,6.271,2829,5.576]],["title/injectables/NotificationsService.html",[367,1.151,523,2.326]],["body/injectables/NotificationsService.html",[0,0.309,2,0.276,3,0.276,8,0.241,10,0.477,23,2.41,24,0.007,25,1.437,27,1.277,32,0.521,33,0.845,38,1.172,39,2.118,44,1.025,55,0.764,60,0.367,64,0.812,66,1.18,70,1.696,71,1.421,72,1.91,74,1.813,76,1.275,77,1.173,86,1.129,87,0.785,88,0.785,93,4.542,113,1.18,116,2.439,132,0.415,138,3.749,141,1.66,142,1.749,145,0.2,146,0.13,185,1.771,186,1.896,306,1.919,308,0.005,309,0.005,310,1.324,335,4.542,340,1.627,367,2.005,373,1.749,376,2.386,378,3.416,386,2.038,431,3.293,452,2.672,464,6.174,465,3.257,469,4.715,484,3.213,495,2.544,513,2.754,516,2.564,517,3.416,522,4.587,523,3.035,527,4.921,528,3.213,534,2.754,579,5.161,580,4.542,609,6.065,643,2.865,693,3.498,738,4.116,772,2.865,773,2.865,912,2.865,925,5.161,944,2.267,951,4.313,1138,2.806,1553,2.754,1600,2.865,2093,4.313,2615,3.498,2661,5.161,2808,4.084,2817,4.084,2818,5.623,2819,4.084,2829,7.509,2830,3.749,2831,6.323,2832,9.283,2833,7.791,2834,6.323,2835,7.791,2836,4.592,2837,6.323,2838,6.323,2839,4.592,2840,7.791,2841,6.928,2842,8.444,2843,6.323,2844,4.592,2845,6.323,2846,4.592,2847,6.323,2848,4.592,2849,6.323,2850,4.592,2851,5.509,2852,4.084,2853,4.592,2854,4.592,2855,4.592,2856,4.592,2857,4.592,2858,4.592,2859,4.592,2860,4.084,2861,4.592,2862,4.592,2863,4.592,2864,4.592,2865,4.592,2866,4.592,2867,4.592,2868,4.592]],["title/components/OutputComponent.html",[0,0.237,265,1.237]],["body/components/OutputComponent.html",[0,0.443,1,1.056,2,0.248,3,0.248,4,1.38,5,1.137,6,1.137,8,0.217,10,0.43,15,1.677,18,2.608,19,1,21,3.473,22,0.931,24,0.007,26,2.314,27,1.996,28,1.997,30,1.557,32,0.469,33,0.995,35,1.71,38,0.67,41,2.22,43,2.435,44,0.953,46,3.781,55,0.826,60,0.371,64,0.811,66,1.072,72,1.775,74,1.714,75,1.834,76,0.85,77,1.056,86,0.646,87,0.933,88,0.449,105,1.748,106,1.836,108,1.501,110,1.037,113,1.015,121,1.35,123,3.525,132,0.374,145,0.18,146,0.117,171,1.595,182,0.763,183,1.529,184,1.165,188,2.008,189,1.137,190,1.137,191,1.019,192,1.056,193,1.322,194,1.129,195,2.161,196,1.076,197,2.046,198,1.076,199,1.137,200,1.056,201,1.615,202,1.076,203,1.137,204,1.056,205,1.137,206,1.019,207,1.037,208,1.588,209,1.879,210,1.936,211,1.056,212,2.086,213,2.048,214,1.137,215,1.076,216,1.879,217,1.137,218,1.137,219,1.076,220,2.046,221,1.056,222,1.879,223,1.076,224,1.076,225,1.056,226,1.137,227,1.037,228,1.076,229,1.137,230,1.056,231,1.137,232,1.137,233,1.056,234,1.137,235,1.019,236,1.056,237,1.137,238,1.037,239,1.137,240,0.931,241,1.137,242,1.037,243,1.714,244,1.137,245,1.037,246,1.137,247,1.037,248,1.137,249,0.982,250,1.137,251,1.056,252,0.965,253,1.056,254,1.076,255,1.137,256,1.056,257,1.137,258,1.137,259,1.056,260,1.137,261,1.056,262,1.137,263,0.982,264,1.137,265,1.901,266,1.056,267,1.137,268,1.056,269,1.076,270,1.137,271,1.019,272,1.019,273,1.838,274,1.037,275,0.82,276,1.056,277,1.037,278,1.037,279,1.056,280,1.037,281,1.056,282,1.137,283,1.037,284,1.137,285,1.056,286,1.137,287,1.056,288,1.137,289,1.056,290,1.137,291,1.056,292,1,293,1.019,294,1.137,295,1.037,296,1.137,297,1.037,298,1.137,299,1.037,300,1.137,301,1.037,302,1.096,303,1.137,304,1.714,305,1.076,306,1.019,307,1.137,308,0.004,309,0.004,356,3.666,359,2.96,365,2.615,388,4.221,428,1.791,430,2.125,774,4.008,816,4.021,950,2.391,1050,2.481,1052,2.971,1255,2.693,1262,2.391,1263,2.821,1264,5.226,1323,4.91,1325,4.797,1326,6.075,1327,4.797,1329,3.376,1330,2.821,1332,3.376,1333,3.376,1965,5.226,1980,3.678,1990,3.678,1991,3.376,1992,5.226,2869,3.678,2870,4.136,2871,4.136,2872,4.136,2873,4.136]],["title/classes/Pagination.html",[146,0.137,2195,2.801]],["body/classes/Pagination.html",[2,0.352,3,0.191,7,1.202,8,0.167,10,0.331,23,1.384,24,0.007,25,1.426,32,0.361,33,0.648,38,0.786,39,1.865,40,2.266,43,2.111,44,0.786,45,2.909,55,0.709,60,0.277,64,0.841,66,1.253,71,1.188,72,1.465,74,1.216,75,1.735,76,1.381,77,2.218,84,2.802,86,1.207,87,0.84,88,0.887,113,0.895,121,2.803,142,0.771,145,0.139,146,0.186,162,2.952,308,0.003,309,0.003,332,2.909,340,0.717,357,1.414,359,3.8,373,1.799,376,3.62,378,2.62,384,1.177,386,2.606,410,4.638,413,4.597,430,1.753,438,2.143,443,3.32,444,2.394,469,4.153,474,4.726,481,1.489,489,1.619,495,1.917,515,2.709,519,2.394,527,3.943,528,4.231,531,2.583,534,1.911,615,2.803,690,3.694,716,6.22,717,1.956,772,1.988,804,3.694,915,2.074,922,4.814,944,1.573,945,4.312,958,3.936,959,2.328,1125,6.539,1223,1.842,1330,2.328,1345,5.836,1346,5.836,1347,5.357,1436,2.988,1478,4.473,1533,2.803,1539,2.173,1555,1.842,1560,1.668,1659,4.726,1660,2.173,1837,4.473,2023,3.959,2024,4.217,2089,3.483,2140,5.221,2195,5.288,2486,5.836,2549,4.312,2562,3.694,2640,3.026,2664,5.836,2841,6.614,2874,2.833,2875,8.927,2876,7.97,2877,5.836,2878,6.563,2879,4.312,2880,4.312,2881,4.85,2882,6.563,2883,3.186,2884,4.85,2885,3.186,2886,3.186,2887,3.186,2888,4.312,2889,3.186,2890,3.186,2891,3.186,2892,4.85,2893,3.186,2894,3.186,2895,3.186,2896,3.186,2897,4.85,2898,3.186,2899,3.186,2900,3.186,2901,3.186,2902,4.85,2903,3.186,2904,4.85,2905,3.186,2906,4.85,2907,5.871,2908,4.85,2909,3.186,2910,4.312,2911,4.85,2912,3.186,2913,2.427,2914,2.833,2915,2.833,2916,2.833,2917,2.833,2918,3.186,2919,3.186,2920,3.186,2921,3.186,2922,7.733,2923,3.186,2924,3.186,2925,8.465,2926,5.836,2927,7.061,2928,3.186,2929,3.186,2930,5.871,2931,3.186,2932,3.186,2933,3.186,2934,3.186,2935,3.186,2936,3.186,2937,5.871,2938,3.186,2939,3.186]],["title/components/PaginationComponent.html",[0,0.237,266,1.237]],["body/components/PaginationComponent.html",[0,0.387,1,0.872,2,0.205,3,0.205,4,0.69,5,0.939,6,0.939,8,0.18,10,0.355,15,1.458,19,0.826,20,3.419,21,3.112,22,0.769,24,0.007,26,2.296,27,1.978,28,1.737,30,1.354,32,0.387,33,0.683,34,3.216,35,1.599,37,3.987,38,0.554,44,0.829,45,3.673,46,3.454,47,3.93,55,0.821,60,0.32,64,0.759,65,1.129,66,1.174,71,0.86,72,2.053,75,1.192,76,1.204,77,1.859,84,2.134,86,0.798,87,0.904,88,0.555,104,4.577,105,2.588,106,2.718,108,1.736,110,0.857,113,0.697,121,2,132,0.309,142,1.481,145,0.149,146,0.174,147,2.602,162,2.881,167,1.479,182,0.63,183,1.329,184,1.014,188,1.834,189,0.939,190,0.939,191,0.841,192,0.872,193,1.15,194,1.011,195,2.001,196,0.889,197,1.869,198,0.889,199,0.939,200,0.872,201,1.405,202,0.889,203,0.939,204,0.872,205,0.939,206,0.841,207,0.857,208,1.47,209,1.684,210,0.841,211,0.872,212,0.872,213,0.857,214,0.939,215,0.889,216,1.684,217,0.939,218,0.939,219,0.889,220,1.869,221,0.872,222,1.684,223,0.889,224,0.889,225,0.872,226,0.939,227,0.857,228,0.889,229,0.939,230,0.872,231,0.939,232,0.939,233,0.872,234,0.939,235,0.841,236,0.872,237,0.939,238,0.857,239,0.939,240,0.769,241,0.939,242,0.857,243,1.536,244,0.939,245,0.857,246,0.939,247,0.857,248,0.939,249,0.811,250,0.939,251,0.872,252,0.797,253,0.872,254,0.889,255,0.939,256,0.872,257,0.939,258,0.939,259,0.872,260,0.939,261,0.872,262,0.939,263,0.811,264,0.939,265,0.872,266,1.736,267,0.939,268,0.872,269,0.889,270,0.939,271,0.841,272,0.841,273,1.718,274,0.857,275,0.677,276,0.872,277,0.857,278,0.857,279,0.872,280,0.857,281,0.872,282,0.939,283,0.857,284,0.939,285,0.872,286,0.939,287,0.872,288,0.939,289,0.872,290,0.939,291,0.872,292,0.826,293,0.841,294,0.939,295,0.857,296,0.939,297,0.857,298,0.939,299,0.857,300,0.939,301,0.857,302,0.905,303,0.939,304,0.857,305,0.889,306,0.841,307,0.939,308,0.004,309,0.004,356,3.189,357,1.516,373,0.826,379,1.604,388,3.671,443,3.006,445,2.388,474,2.854,487,1.736,489,1.736,495,2.718,531,2.447,728,2.676,816,2.761,835,3.598,888,2.854,915,3.327,1128,4.883,1138,2.268,1436,2.327,1659,2.854,1725,3.038,2066,4.177,2176,5.549,2177,4.545,2195,5.286,2208,3.038,2371,4.999,2374,5.549,2879,4.545,2926,3.038,2940,3.038,2941,5.111,2942,5.111,2943,6.798,2944,5.111,2945,6.798,2946,3.416,2947,3.416,2948,5.111,2949,3.416,2950,3.416,2951,7.537,2952,3.416,2953,3.416,2954,3.416,2955,4.545,2956,3.416,2957,3.416,2958,3.416,2959,5.111,2960,3.416,2961,5.111,2962,3.416,2963,4.545,2964,5.111,2965,3.416,2966,3.416,2967,5.111,2968,3.416,2969,3.416,2970,5.111,2971,3.416,2972,3.416,2973,6.124,2974,3.416,2975,6.124,2976,3.416,2977,6.124,2978,3.416,2979,3.416,2980,3.416,2981,3.416,2982,3.416,2983,3.416,2984,3.416,2985,3.416,2986,5.111,2987,5.111,2988,5.111,2989,5.111,2990,5.111,2991,5.111,2992,5.111,2993,5.111,2994,5.111,2995,5.111,2996,5.111,2997,5.111]],["title/classes/PaginationConfig.html",[146,0.137,2066,3.305]],["body/classes/PaginationConfig.html",[0,0.374,2,0.368,3,0.368,8,0.322,10,0.638,24,0.007,32,0.696,33,1.022,38,0.994,40,3.573,60,0.289,64,0.866,66,1.189,86,0.958,87,0.666,88,0.666,113,1.136,121,2.496,145,0.267,146,0.217,162,2.598,308,0.005,309,0.005,340,1.874,373,2.213,376,3.29,440,4.431,443,3.22,445,3.573,474,4.269,531,2.523,728,4.566,729,4.42,793,4.003,836,2.593,840,4.586,878,3.314,920,3.827,1019,4.77,1081,2.764,1125,5.825,1555,4.42,1583,5.007,2066,6.12,2195,4.42,2880,6.799,2998,7.979,2999,8.72,3000,8.72,3001,8.34,3002,7.646,3003,6.134,3004,6.241,3005,6.134,3006,6.799,3007,7.646,3008,7.646,3009,7.646]],["title/components/PasswordResetComponent.html",[0,0.237,268,1.237]],["body/components/PasswordResetComponent.html",[0,0.37,1,0.956,2,0.225,3,0.225,4,0.756,5,1.029,6,1.029,8,0.197,10,0.389,15,1.561,19,0.906,22,0.843,24,0.007,25,1.192,26,2.305,27,1.987,30,1.449,32,0.425,33,0.731,35,1.653,38,0.607,39,1.896,41,1.299,44,0.887,55,0.859,60,0.335,64,0.83,65,1.428,66,1.182,71,0.63,72,1.652,76,0.542,77,0.956,86,0.585,87,0.908,88,0.702,105,1.583,106,2.428,108,1.397,110,0.939,112,2.067,113,0.882,132,0.339,135,1.75,142,0.906,145,0.163,146,0.106,165,2.864,171,2.11,182,0.691,183,1.423,184,1.085,188,1.918,189,1.029,190,1.029,191,0.922,192,0.956,193,1.231,194,1.067,195,2.078,196,0.974,197,1.954,198,0.974,199,1.029,200,0.956,201,1.504,202,0.974,203,1.029,204,0.956,205,1.029,206,0.922,207,0.939,208,1.527,209,1.777,210,0.922,211,0.956,212,0.956,213,0.939,214,1.029,215,0.974,216,1.777,217,1.029,218,1.029,219,0.974,220,1.954,221,0.956,222,1.777,223,0.974,224,0.974,225,0.956,226,1.029,227,0.939,228,0.974,229,1.029,230,0.956,231,1.029,232,1.029,233,0.956,234,1.029,235,0.922,236,0.956,237,1.029,238,0.939,239,1.029,240,1.231,241,1.029,242,0.939,243,1.621,244,1.029,245,0.939,246,1.029,247,0.939,248,1.029,249,0.889,250,1.029,251,0.956,252,0.873,253,0.956,254,0.974,255,1.029,256,0.956,257,1.029,258,1.029,259,0.956,260,1.029,261,0.956,262,1.029,263,0.889,264,1.029,265,0.956,266,0.956,267,1.029,268,1.815,269,2.174,270,1.029,271,0.922,272,0.922,273,1.777,274,0.939,275,0.743,276,0.956,277,0.939,278,0.939,279,0.956,280,0.939,281,0.956,282,1.029,283,0.939,284,1.029,285,0.956,286,1.029,287,0.956,288,1.029,289,0.956,290,1.029,291,0.956,292,0.906,293,0.922,294,1.029,295,0.939,296,1.029,297,0.939,298,1.029,299,0.939,300,1.029,301,0.939,302,0.992,303,1.029,304,0.939,305,0.974,306,0.922,307,1.029,308,0.004,309,0.004,318,3.269,331,3.63,340,0.843,349,1.848,352,2.853,365,2.275,368,4.465,369,4.208,373,1.563,379,2.029,380,2.465,394,2.312,404,2.438,431,2.312,449,4.535,450,4.667,513,4.263,515,2.258,516,2.091,522,3.906,523,3.791,537,4.167,544,3.33,565,7.168,569,3.057,623,5.442,820,3.609,826,3.806,884,2.853,912,3.413,1080,4.222,1436,2.49,1852,3.929,1930,7.073,2388,4.736,2391,3.33,2406,3.33,2408,3.33,2435,6.321,2437,4.864,2441,5.747,2781,3.057,3010,7.809,3011,3.33,3012,7.022,3013,5.47,3014,7.108,3015,5.47,3016,3.745,3017,3.745,3018,3.745,3019,3.745,3020,5.47,3021,3.745,3022,3.745,3023,5.47,3024,4.864,3025,4.864,3026,3.745,3027,3.745,3028,3.745,3029,3.745,3030,3.33,3031,3.745,3032,3.745,3033,3.745,3034,3.745,3035,3.745,3036,3.745,3037,3.745,3038,6.463,3039,3.745]],["title/components/PopComponent.html",[0,0.237,271,1.193]],["body/components/PopComponent.html",[0,0.366,1,0.929,2,0.218,3,0.218,4,0.734,5,1.747,6,1,7,1.372,8,0.191,10,0.378,19,0.879,22,0.818,24,0.007,25,1.441,26,2.302,27,1.99,28,1.82,30,1.418,32,0.412,33,0.716,34,2.534,35,1.636,38,1.136,39,2.122,44,0.868,55,0.647,56,2.376,60,0.252,64,0.776,66,1.131,71,0.612,74,2.158,76,1.014,77,1.623,84,1.681,86,0.836,87,0.919,88,0.582,108,1.367,110,0.912,113,1.102,132,0.329,145,0.159,146,0.152,182,0.671,183,1.393,184,1.062,185,1.402,186,1.501,187,1.746,188,1.891,189,1,190,1,191,0.896,192,0.929,193,1.205,194,1.049,195,2.054,196,0.946,197,1.927,198,0.946,199,1,200,0.929,201,1.472,202,0.946,203,1,204,0.929,205,1,206,0.896,207,0.912,208,1.509,209,1.747,210,0.896,211,0.929,212,0.929,213,0.912,214,1,215,0.946,216,1.747,217,1,218,1,219,0.946,220,1.927,221,0.929,222,1.747,223,0.946,224,0.946,225,0.929,226,1,227,0.912,228,0.946,229,1,230,0.929,231,1,232,1,233,0.929,234,1,235,0.896,236,0.929,237,1,238,0.912,239,1,240,0.818,241,1,242,0.912,243,1.594,244,1,245,0.912,246,1,247,0.912,248,1,249,0.864,250,1,251,0.929,252,0.848,253,0.929,254,0.946,255,1,256,0.929,257,1,258,1,259,0.929,260,1,261,0.929,262,1,263,0.864,264,1,265,0.929,266,0.929,267,1,268,0.929,269,0.946,270,1,271,1.726,272,0.896,273,1.758,274,0.912,275,0.721,276,0.929,277,0.912,278,0.912,279,0.929,280,0.912,281,0.929,282,1,283,0.912,284,1,285,0.929,286,1,287,0.929,288,1,289,0.929,290,1,291,0.929,292,0.879,293,0.896,294,1,295,0.912,296,1,297,0.912,298,1,299,0.912,300,1,301,0.912,302,0.963,303,1,304,0.912,305,0.946,306,0.896,307,1,308,0.004,309,0.004,340,0.818,357,1.614,365,2.244,373,2.081,376,2.02,379,1.142,380,2.431,409,2.077,423,4.689,431,3.577,435,4.37,436,4.37,437,6.316,440,4.212,441,4.875,444,4.307,445,4.369,447,3.234,448,5.087,460,3.211,461,4.079,465,3.014,474,3.914,475,3.914,477,4.761,479,5.722,481,3.275,483,4.37,484,2.72,485,4.37,494,2.968,528,1.848,531,0.963,961,1.575,1301,4.761,1425,4.761,1523,2.77,1525,2.968,1553,2.181,1560,1.904,1845,2.48,1884,3.964,2054,2.612,2111,3.234,2112,3.234,2247,2.181,2270,3.234,2274,3.234,2615,4.079,2623,2.367,2742,2.181,3040,3.234,3041,4.761,3042,7.009,3043,5.354,3044,5.354,3045,5.354,3046,3.637,3047,3.637,3048,3.637,3049,3.637,3050,3.637,3051,3.637,3052,3.234,3053,3.234,3054,2.968,3055,3.234,3056,3.234,3057,3.234,3058,3.637,3059,3.637,3060,3.637,3061,3.637,3062,6.354,3063,3.637]],["title/modules/PopModule.html",[310,1.014,1708,3.154]],["body/modules/PopModule.html",[2,0.406,3,0.406,8,0.356,23,2.482,24,0.007,58,2.3,60,0.435,132,0.612,141,3.145,145,0.393,146,0.192,182,1.248,271,2.399,308,0.006,309,0.006,310,1.7,312,2.669,317,3.275,318,2.554,319,2.254,322,3.064,448,6.098,557,3.696,558,3.004,877,4.406,1708,6.258,3057,6.018,3064,6.018,3065,6.018,3066,6.018,3067,6.018,3068,6.767]],["title/injectables/PopService.html",[367,1.151,448,3.154]],["body/injectables/PopService.html",[2,0.379,3,0.379,8,0.332,10,0.657,24,0.007,32,0.717,33,1.042,38,1.025,60,0.398,64,0.628,66,1.062,71,1.311,113,0.862,121,2.543,132,0.572,142,1.529,145,0.276,146,0.179,162,2.148,271,1.557,308,0.006,309,0.006,327,3.957,340,1.9,367,2.005,379,2.65,423,4.861,440,3.957,448,5.071,475,4.349,487,3.211,712,4.825,800,4.078,877,4.115,934,6,1845,5.312,2229,6.872,2762,7.837,3069,5.621,3070,9.051,3071,7.789,3072,8.813,3073,7.789,3074,6.321,3075,6.321,3076,6.321,3077,6.321,3078,6.321,3079,6.321,3080,6.321,3081,6.321,3082,6.321]],["title/injectables/ResourceConfig.html",[367,1.151,604,2.705]],["body/injectables/ResourceConfig.html",[2,0.129,3,0.129,4,0.717,8,0.276,10,0.369,24,0.007,25,1.757,27,0.717,32,0.244,34,0.778,35,0.743,38,1.407,39,1.137,41,2.118,42,2.587,44,0.853,55,0.429,60,0.312,64,0.713,65,2.042,66,1.009,70,3.206,71,0.362,74,0.54,75,0.828,76,1.353,86,0.909,87,0.894,88,0.632,94,1.914,103,1.284,112,2.365,113,0.718,114,1.093,118,2.012,130,1.163,132,0.195,145,0.094,146,0.061,167,0.932,172,1.914,173,2.053,191,0.874,193,1.41,194,1.479,206,0.874,208,0.915,273,1.491,275,1.043,308,0.003,309,0.003,325,1.546,328,2.053,333,3.588,334,1.757,340,0.484,362,4.726,367,1.077,373,1.908,376,0.812,394,3.127,396,5.469,409,2.773,442,2.312,443,3.134,457,4.156,481,2.458,488,1.546,489,1.093,495,0.703,513,1.291,514,1.291,535,0.689,556,2.458,581,1.546,584,2.705,604,1.983,609,4.761,615,1.48,623,2.951,640,4.938,641,1.244,643,4.135,678,2.937,679,3.91,710,1.244,779,1.127,793,1.127,794,1.244,800,1.127,805,1.468,807,1.918,835,2.403,836,2.802,878,1.163,937,4.172,958,1.291,970,3.895,981,6.041,1013,2.053,1044,3.041,1050,1.291,1055,1.401,1078,2.828,1081,3.01,1137,1.639,1138,4.223,1436,0.98,1442,1.343,1485,1.546,1504,1.639,1508,5.195,1564,2.705,1578,2.551,1601,1.546,1614,4.498,1616,3.092,1621,2.422,1622,1.546,1623,1.343,1642,1.639,1650,1.639,1920,3.7,1927,3.7,1950,4.031,2043,6.638,2045,5.572,2050,3.779,2243,1.401,2245,2.312,2641,1.639,2668,1.914,2688,4.031,2691,3.158,2692,3.158,2728,5.115,2729,1.757,2730,1.914,2731,5.278,2771,2.422,3083,5.448,3084,5.261,3085,7.182,3086,3.551,3087,3.551,3088,6.929,3089,2.152,3090,2.152,3091,6.267,3092,3.551,3093,3.551,3094,1.914,3095,2.152,3096,3.551,3097,2.152,3098,2.152,3099,2.152,3100,6.039,3101,3.551,3102,2.152,3103,3.551,3104,2.152,3105,2.152,3106,1.914,3107,2.152,3108,2.152,3109,2.152,3110,1.757,3111,1.914,3112,3.551,3113,2.152,3114,2.152,3115,2.152,3116,1.914,3117,2.152,3118,2.152,3119,2.152,3120,3.551,3121,2.152,3122,2.152,3123,2.152,3124,8.019,3125,4.533,3126,2.152,3127,2.152,3128,4.533,3129,2.152,3130,3.551,3131,5.261,3132,2.152,3133,2.152,3134,2.152,3135,2.152,3136,1.757,3137,2.152,3138,8.132,3139,8.132,3140,2.152,3141,2.152,3142,2.152,3143,2.152,3144,2.152,3145,2.152,3146,2.152,3147,2.152,3148,2.152,3149,2.152,3150,5.261,3151,2.152,3152,2.152,3153,1.914,3154,4.533,3155,3.551,3156,3.551,3157,2.152,3158,3.551,3159,3.551,3160,2.152,3161,2.152,3162,2.152,3163,2.152,3164,2.152,3165,2.152,3166,2.152,3167,2.152,3168,2.152,3169,2.152,3170,2.152,3171,2.152,3172,1.914,3173,2.152,3174,2.152,3175,2.152,3176,2.152,3177,2.152,3178,1.639,3179,2.152,3180,2.152,3181,2.152,3182,2.152,3183,2.152,3184,2.152,3185,2.152,3186,2.152,3187,2.152,3188,2.152,3189,2.152,3190,2.152,3191,4.533,3192,5.261,3193,3.551,3194,4.533,3195,3.551,3196,3.551,3197,2.152,3198,3.158,3199,2.152,3200,2.152,3201,2.152,3202,2.152,3203,2.152,3204,2.152,3205,2.152,3206,2.152,3207,2.152,3208,2.152,3209,2.152,3210,2.152,3211,2.152,3212,2.152,3213,3.551,3214,2.152,3215,2.152,3216,2.152,3217,2.152,3218,2.152,3219,2.152,3220,2.152,3221,2.152,3222,2.152,3223,2.152,3224,2.152,3225,2.152,3226,2.152,3227,2.152,3228,2.152,3229,2.152,3230,2.152,3231,2.152,3232,2.152,3233,2.152,3234,3.551,3235,2.152,3236,2.152,3237,1.914,3238,1.639,3239,2.152,3240,2.152,3241,2.152,3242,2.152,3243,2.152,3244,3.551,3245,2.152,3246,3.551,3247,2.152,3248,3.551,3249,2.152,3250,2.152,3251,2.152]],["title/components/ResourceCrudComponent.html",[0,0.237,272,1.193]],["body/components/ResourceCrudComponent.html",[0,0.33,1,0.738,2,0.173,3,0.173,4,1.364,5,0.794,6,0.794,8,0.152,10,0.3,15,1.284,19,0.699,20,3.084,22,0.65,24,0.007,25,0.83,26,2.277,27,1.964,28,1.529,30,1.192,32,0.328,33,0.602,35,1.617,38,0.468,39,1.989,43,1.192,44,1.36,47,3.603,55,0.933,60,0.413,64,0.855,65,1.493,66,1.222,70,2.852,71,0.929,75,1.454,76,1.257,77,1.592,84,1.412,86,0.862,87,0.934,88,0.839,105,2.855,106,2.767,108,1.592,110,0.725,113,1.019,132,0.261,135,1.351,145,0.126,146,0.157,162,0.982,167,1.251,171,1.735,174,1.803,182,0.533,183,1.437,184,0.892,188,1.682,189,0.794,190,0.794,191,0.712,192,0.738,193,1.012,194,1.46,195,1.857,196,0.752,197,1.714,198,0.752,199,0.794,200,0.738,201,1.237,202,0.752,203,0.794,204,0.738,205,0.794,206,0.712,207,0.725,208,1.364,209,1.518,210,0.712,211,0.738,212,0.738,213,0.725,214,0.794,215,0.752,216,1.518,217,0.794,218,0.794,219,0.752,220,1.714,221,0.738,222,1.518,223,0.752,224,0.752,225,0.738,226,0.794,227,0.725,228,0.752,229,0.794,230,0.738,231,0.794,232,0.794,233,0.738,234,0.794,235,0.712,236,0.738,237,0.794,238,0.725,239,0.794,240,1.52,241,0.794,242,0.725,243,1.385,244,0.794,245,0.725,246,0.794,247,0.725,248,0.794,249,0.686,250,0.794,251,0.738,252,0.674,253,0.738,254,0.752,255,0.794,256,0.738,257,0.794,258,0.794,259,0.738,260,0.794,261,0.738,262,0.794,263,0.686,264,0.794,265,0.738,266,0.738,267,0.794,268,0.738,269,0.752,270,0.794,271,0.712,272,1.762,273,2.058,274,0.725,275,0.573,276,1.149,277,1.873,278,1.694,279,0.738,280,0.725,281,0.738,282,0.794,283,0.725,284,0.794,285,0.738,286,0.794,287,0.738,288,0.794,289,0.738,290,0.794,291,0.738,292,0.699,293,0.712,294,0.794,295,0.725,296,0.794,297,0.725,298,0.794,299,0.725,300,0.794,301,0.725,302,0.766,303,0.794,304,0.725,305,0.752,306,0.712,307,0.794,308,0.003,309,0.003,319,1.498,331,3.707,339,2.28,340,0.65,341,1.513,342,2.302,359,1.948,365,2.472,373,0.699,379,1.734,380,2.813,384,1.661,403,1.387,423,4.12,428,2.699,438,2.838,443,2.04,446,4.397,449,3.313,450,3.48,457,4.051,460,2.698,465,2.404,488,2.076,489,1.468,490,2.359,495,1.803,502,2.076,512,3.745,523,2.992,526,1.803,528,2.286,532,1.614,533,2.202,535,0.925,556,3.156,570,1.997,587,1.997,615,2.035,619,2.984,626,2.698,642,2.202,804,2.202,815,3.231,816,2.43,817,3.672,818,3.427,820,3.084,822,2.16,823,4,824,4,826,3.256,827,5.462,828,5.543,829,4,833,3.91,834,3.193,837,5.449,839,4,840,2.698,844,2.807,848,4,849,3.672,850,3.427,851,4,870,1.803,871,2.359,872,2.359,873,2.359,874,2.57,875,2.57,877,1.882,884,2.202,891,4.912,892,2.57,893,2.57,913,2.202,915,1.882,916,4,917,4,934,2.929,938,4.749,1056,1.733,1062,2.202,1063,2.076,1064,6.867,1419,4,1427,6.006,1428,4,1429,4,1434,4,2046,3.672,2640,2.807,2750,2.202,3083,6.475,3238,2.202,3252,2.57,3253,6.234,3254,5.524,3255,4.499,3256,2.89,3257,2.89,3258,2.89,3259,2.89,3260,2.89,3261,6.234,3262,2.89,3263,2.89,3264,2.89,3265,2.89,3266,2.89,3267,2.89,3268,4,3269,2.89,3270,2.89,3271,2.89,3272,2.89,3273,2.89,3274,2.89,3275,2.89,3276,2.89,3277,2.89,3278,2.89,3279,2.89,3280,2.89,3281,2.89,3282,2.89,3283,2.89,3284,2.89,3285,2.57,3286,2.89]],["title/components/ResourceDeletePopComponent.html",[0,0.237,274,1.215]],["body/components/ResourceDeletePopComponent.html",[0,0.39,1,0.891,2,0.209,3,0.209,4,0.704,5,0.959,6,0.959,8,0.183,10,0.363,19,0.844,20,1.948,22,0.785,24,0.007,26,2.298,27,1.98,28,1.764,30,1.375,32,0.396,33,0.694,35,1.611,38,0.842,39,2.054,44,1.248,55,0.627,60,0.346,64,0.859,65,1.147,66,1.162,71,0.587,74,1.722,75,1.713,76,0.897,77,1.326,86,0.968,87,0.925,88,0.674,105,1.474,106,2.304,108,1.326,110,0.875,113,0.937,132,0.315,135,1.63,142,0.844,145,0.152,146,0.099,182,0.643,183,1.613,184,1.03,188,1.854,189,0.959,190,0.959,191,0.859,192,0.891,193,1.168,194,1.024,195,2.019,196,0.907,197,1.888,198,0.907,199,0.959,200,0.891,201,1.427,202,0.907,203,0.959,204,0.891,205,0.959,206,0.859,207,0.875,208,1.483,209,1.705,210,0.859,211,0.891,212,0.891,213,0.875,214,0.959,215,0.907,216,1.705,217,0.959,218,0.959,219,0.907,220,1.888,221,0.891,222,1.705,223,0.907,224,0.907,225,0.891,226,0.959,227,0.875,228,0.907,229,0.959,230,0.891,231,0.959,232,0.959,233,0.891,234,0.959,235,0.859,236,0.891,237,0.959,238,0.875,239,0.959,240,0.785,241,0.959,242,0.875,243,1.555,244,0.959,245,0.875,246,0.959,247,0.875,248,0.959,249,0.828,250,0.959,251,0.891,252,0.814,253,0.891,254,0.907,255,0.959,256,0.891,257,0.959,258,0.959,259,0.891,260,0.959,261,0.891,262,0.959,263,0.828,264,0.959,265,0.891,266,0.891,267,0.959,268,0.891,269,0.907,270,0.959,271,1.808,272,0.859,273,2.179,274,1.722,275,1.932,276,0.891,277,0.875,278,0.875,279,0.891,280,0.875,281,0.891,282,0.959,283,0.875,284,0.959,285,0.891,286,0.959,287,0.891,288,0.959,289,0.891,290,0.959,291,0.891,292,0.844,293,0.859,294,0.959,295,0.875,296,0.959,297,0.875,298,0.959,299,0.875,300,0.959,301,0.875,302,0.924,303,0.959,304,0.875,305,0.907,306,0.859,307,0.959,308,0.004,309,0.004,340,0.785,349,1.722,365,2.464,367,1.233,379,1.095,380,2.382,384,1.917,392,3.114,394,2.194,422,2.847,423,4.447,428,2.248,431,2.194,435,4.238,436,4.238,451,3.102,480,3.102,495,1.139,515,1.44,523,3.695,556,3.431,686,2.505,826,3.504,833,4.289,834,4.45,835,3.569,836,3.462,878,1.885,907,3.38,964,4.238,997,3.38,1063,6.21,1138,2.304,1423,4.451,1459,2.271,1485,2.505,1851,2.563,1872,2.657,2243,3.38,2388,3.719,3083,6.21,3110,2.847,3287,8.192,3288,5.192,3289,5.192,3290,3.488,3291,3.488,3292,5.192,3293,3.488,3294,7.697,3295,5.192,3296,3.488,3297,3.488,3298,3.488,3299,2.847,3300,2.847,3301,3.488,3302,3.488,3303,2.847,3304,3.488,3305,3.488,3306,3.488,3307,3.102,3308,5.192,3309,5.192,3310,5.192]],["title/modules/ResourceModule.html",[310,1.014,1040,3.305]],["body/modules/ResourceModule.html",[2,0.317,3,0.317,8,0.277,23,2.214,24,0.007,58,1.793,60,0.452,132,0.477,134,2.08,135,2.465,141,2.805,145,0.359,146,0.15,174,3.291,182,0.973,185,2.035,272,2.32,273,2.047,274,2.363,275,1.377,276,2.406,277,2.387,278,2.363,279,2.406,308,0.005,309,0.005,310,1.453,312,2.08,317,2.8,318,1.991,319,1.757,321,3.876,322,2.619,554,5.65,557,3.16,558,2.342,604,4.91,640,3.435,641,3.05,870,3.291,877,4.519,1040,6.726,1041,6.133,1046,4.986,1054,4.019,1056,3.164,1057,4.306,1062,4.019,1063,4.986,1064,4.019,1065,4.691,1066,4.306,1423,4.91,1459,3.435,1688,3.789,1689,3.435,3311,4.691,3312,4.691,3313,5.276,3314,4.691,3315,4.691,3316,5.276]],["title/injectables/ResourceService.html",[367,1.151,1423,2.705]],["body/injectables/ResourceService.html",[0,0.244,2,0.198,3,0.198,8,0.173,10,0.343,24,0.007,25,1.521,32,0.374,33,1.046,38,1.538,39,1.89,41,1.182,43,1.899,44,0.807,55,0.807,56,1.464,60,0.396,64,0.892,65,1.984,66,1.164,70,3.152,71,1.317,72,0.996,75,2.144,76,1.366,79,1.978,84,2.91,86,1.287,87,0.895,88,0.895,112,0.959,113,0.679,114,1.676,116,2.907,126,1.963,132,0.298,142,1.45,145,0.217,146,0.093,162,1.121,194,0.99,208,1.349,273,2.164,275,1.666,308,0.004,309,0.006,331,3.756,332,3.596,339,2.757,340,0.742,341,1.727,342,2.467,360,1.541,367,1.703,373,1.45,378,4.072,379,1.563,380,1.144,386,1.464,403,1.583,409,1.979,430,3.247,443,2.784,452,2.104,454,1.782,465,3.018,469,4.003,475,2.78,487,1.676,518,3.106,527,4.209,534,1.978,535,1.056,556,4.088,604,4.209,619,4.228,641,1.907,642,2.513,664,3.596,678,2.78,679,3.106,717,3.819,772,2.058,779,3.497,800,3.754,822,2.39,888,2.78,902,2.692,918,0.996,942,4.003,946,2.513,947,2.25,954,1.782,956,2.986,957,3.395,958,2.986,959,2.39,960,2.986,961,2.156,962,3.241,963,4.427,964,4.064,965,4.427,967,4.064,969,4.064,970,3.886,971,4.064,973,3.576,979,4.064,981,3.576,982,3.904,983,4.064,985,3.792,986,4.064,989,3.241,993,3.395,996,2.692,997,2.147,998,2.513,999,2.692,1000,2.692,1001,2.692,1002,2.692,1003,2.692,1004,2.692,1005,2.692,1011,4.895,1012,2.692,1013,2.878,1014,2.692,1015,2.692,1018,4.064,1019,2.058,1021,4.895,1022,2.692,1023,2.692,1024,2.692,1025,2.692,1026,5.852,1027,2.058,1028,2.692,1056,1.978,1395,2.933,1423,2.78,1442,3.106,1527,2.692,1614,2.69,3083,6.213,3110,2.692,3317,2.933,3318,4.978,3319,3.298,3320,6.679,3321,6.679,3322,3.298,3323,4.978,3324,3.298,3325,4.978,3326,3.298,3327,3.298,3328,3.298,3329,4.978,3330,3.298,3331,4.978,3332,4.978,3333,3.298,3334,3.298,3335,3.298,3336,3.298,3337,3.298,3338,3.298,3339,3.298,3340,3.298,3341,3.298,3342,5.996,3343,3.298,3344,4.978,3345,3.298,3346,3.298,3347,3.298,3348,3.298]],["title/pipes/SafeHtmlPipe.html",[1103,2.537,3349,3.48]],["body/pipes/SafeHtmlPipe.html",[2,0.408,3,0.408,8,0.358,10,0.707,15,1.942,22,1.531,24,0.007,38,1.413,44,1.103,55,0.984,60,0.384,66,0.928,76,1.178,86,1.063,87,0.947,88,0.739,132,0.616,145,0.297,146,0.193,183,2.351,185,2.625,308,0.006,309,0.006,367,1.616,535,2.179,1103,4.565,1108,4.711,1109,7.245,1114,5.557,1689,4.431,3349,5.852,3350,7.245,3351,6.052,3352,8.147,3353,6.65,3354,7.245,3355,8.147,3356,8.147,3357,6.806,3358,8.72,3359,6.806,3360,6.806]],["title/modules/SdkModule.html",[310,1.014,1041,3.154]],["body/modules/SdkModule.html",[2,0.42,3,0.42,8,0.368,23,2.517,24,0.007,58,2.377,60,0.43,132,0.633,141,2.994,145,0.385,146,0.198,182,1.29,185,2.698,308,0.006,309,0.006,310,1.734,312,2.758,317,3.34,318,2.639,319,2.33,321,3.905,322,3.125,342,3.485,1041,6.144,1688,5.024,1689,4.554,3361,6.22,3362,6.22,3363,6.995,3364,6.995]],["title/injectables/SdkService.html",[342,1.789,367,1.151]],["body/injectables/SdkService.html",[2,0.36,3,0.198,8,0.174,10,0.343,23,2.152,24,0.007,25,1.444,32,0.375,33,0.666,34,1.802,37,4.91,38,1.269,39,2.369,44,1.083,45,4.523,55,1.015,60,0.38,64,0.869,65,1.585,66,1.248,70,1.84,71,1.269,72,2.713,73,3.579,74,2.021,75,1.559,76,1.346,77,1.273,86,1.222,87,0.85,88,0.951,103,2.594,105,1.396,113,1.125,116,3.293,118,2.212,119,1.844,121,2.886,132,0.299,145,0.144,146,0.094,154,3.796,179,2.937,193,1.121,308,0.004,309,0.004,330,2.696,331,4.546,333,5.969,340,0.743,342,2.468,348,2.696,353,6.578,356,3.109,360,2.804,367,1.704,369,5.369,373,1.451,384,2.649,404,2.15,409,0.979,413,4.351,430,1.802,449,2.989,495,1.959,513,4.946,515,2.057,556,3.123,576,3.796,577,3.579,578,6.685,579,4.068,580,3.579,581,5.152,582,4.431,583,4.068,584,5.092,585,3.796,586,3.579,587,2.967,588,5.456,589,2.782,590,4.068,591,4.431,592,4.431,594,4.431,597,2.937,606,4.431,610,2.989,611,4.431,619,3.611,638,5.456,639,2.696,642,2.516,643,2.061,650,5.944,662,2.937,664,1.981,693,2.516,710,5.109,712,2.609,779,1.729,794,2.881,798,4.068,858,2.881,1128,3.579,1291,3.796,1555,2.881,1580,3.399,1930,4.068,2225,4.068,2403,2.937,2643,5.944,2731,3.796,3106,2.937,3172,4.431,3365,2.937,3366,6.684,3367,6.684,3368,8.405,3369,4.983,3370,4.983,3371,6.001,3372,3.303,3373,4.983,3374,3.303,3375,6.001,3376,4.983,3377,3.303,3378,4.983,3379,8.059,3380,4.983,3381,3.303,3382,7.173,3383,4.983,3384,3.303,3385,4.983,3386,3.303,3387,4.431,3388,3.303,3389,3.303,3390,3.303,3391,3.399,3392,3.303,3393,3.303,3394,4.983,3395,3.303,3396,3.303,3397,3.303,3398,3.303,3399,3.303,3400,3.303,3401,3.303,3402,3.303,3403,3.303,3404,3.303,3405,3.303,3406,3.303,3407,3.303,3408,3.303,3409,6.001,3410,3.303,3411,3.303,3412,4.983,3413,3.303,3414,3.303,3415,3.303,3416,6.001,3417,2.937,3418,3.303,3419,3.303,3420,3.303,3421,4.983,3422,3.303,3423,3.303,3424,3.303,3425,3.303,3426,3.303,3427,4.983,3428,3.303,3429,3.303,3430,3.303,3431,3.303,3432,3.303,3433,3.303,3434,6.684,3435,3.303,3436,6.001,3437,3.303,3438,3.303,3439,3.303]],["title/components/SelectComponent.html",[0,0.237,280,1.215]],["body/components/SelectComponent.html",[0,0.321,1,0.693,2,0.163,3,0.163,4,0.548,5,0.746,6,0.746,7,1.024,8,0.143,10,0.282,15,1.222,16,3.181,19,0.656,20,2.961,21,2.694,22,0.61,23,1.513,24,0.007,25,1.111,26,2.269,27,1.952,28,1.455,30,1.134,32,0.308,33,0.573,35,1.754,36,3.612,38,1.447,39,1.747,43,2.39,44,0.694,46,3.06,47,3.481,48,2.671,49,3.612,52,2.568,55,0.881,60,0.309,64,0.833,65,0.946,66,1.252,70,2.224,71,1.103,72,1.602,75,1.625,76,1.264,77,2.167,81,2.568,84,2.55,86,1.214,87,0.941,88,0.845,89,2.568,99,2.568,103,1.548,105,1.147,106,1.9,108,1.093,110,0.68,113,0.894,114,2.175,119,2.39,131,2.568,132,0.245,133,2.568,134,1.07,142,0.656,143,1.627,144,1.627,145,0.118,146,0.077,160,3.617,165,3.647,181,1.627,182,0.5,183,1.114,184,0.849,185,1.046,186,1.12,187,1.302,188,1.625,189,0.746,190,0.746,191,0.668,192,0.693,193,0.963,194,1.465,195,1.802,196,0.706,197,1.655,198,0.706,199,0.746,200,0.693,201,1.177,202,0.706,203,0.746,204,0.693,205,0.746,206,0.668,207,0.68,208,1.324,209,1.458,210,0.668,211,0.693,212,0.693,213,0.68,214,0.746,215,0.706,216,1.458,217,0.746,218,0.746,219,0.706,220,1.655,221,0.693,222,1.458,223,0.706,224,0.706,225,0.693,226,0.746,227,0.68,228,0.706,229,0.746,230,0.693,231,0.746,232,0.746,233,0.693,234,0.746,235,0.668,236,0.693,237,0.746,238,0.68,239,0.746,240,0.61,241,0.746,242,0.68,243,1.33,244,0.746,245,0.68,246,0.746,247,0.68,248,0.746,249,0.644,250,0.746,251,0.693,252,0.633,253,0.693,254,0.706,255,0.746,256,0.693,257,0.746,258,0.746,259,0.693,260,0.746,261,0.693,262,0.746,263,0.644,264,0.746,265,0.693,266,0.693,267,0.746,268,0.693,269,0.706,270,0.746,271,1.614,272,0.668,273,1.567,274,0.68,275,0.538,276,0.693,277,0.68,278,0.68,279,0.693,280,1.829,281,0.693,282,0.746,283,0.68,284,0.746,285,0.693,286,0.746,287,0.693,288,0.746,289,0.693,290,0.746,291,0.693,292,0.656,293,0.668,294,0.746,295,0.68,296,0.746,297,0.68,298,0.746,299,0.68,300,0.746,301,0.68,302,0.719,303,0.746,304,0.68,305,0.706,306,0.668,307,0.746,308,0.003,309,0.003,357,1.204,365,2.098,373,1.035,378,2.313,379,2.593,380,2.529,384,2.572,386,1.204,409,0.804,423,3.84,428,1.854,430,1.548,438,3.09,440,2.175,441,4.346,443,2.872,445,2.001,464,4.107,475,2.39,484,1.378,487,1.378,495,1.731,497,3.453,499,2.413,615,2.14,676,2.568,712,3.153,717,1.094,793,2.242,805,1.851,816,2.313,844,4.346,915,5.064,922,4.027,1080,3.66,1185,1.949,1262,1.568,1278,4.329,1288,1.949,1300,1.949,1420,5.305,1478,4.04,1522,3.807,1851,1.339,2059,3.262,2060,3.262,2078,3.807,2079,2.92,2109,2.067,2116,4.915,2120,2.413,2124,2.215,2125,3.495,2179,5.355,2180,2.413,2451,2.413,3268,3.807,3285,4.716,3299,2.215,3303,3.495,3440,2.413,3441,4.281,3442,4.281,3443,4.281,3444,6.022,3445,4.281,3446,6.022,3447,4.281,3448,4.281,3449,5.303,3450,4.281,3451,2.713,3452,2.713,3453,2.713,3454,2.713,3455,2.713,3456,2.713,3457,2.713,3458,2.713,3459,2.713,3460,2.713,3461,2.713,3462,2.713,3463,4.281,3464,2.713,3465,4.281,3466,4.281,3467,2.713,3468,2.713,3469,2.713,3470,2.713,3471,2.713,3472,2.713,3473,4.281,3474,2.713,3475,2.713,3476,4.281,3477,2.713,3478,4.281,3479,2.713,3480,4.281,3481,2.713,3482,2.713,3483,2.713,3484,2.713,3485,2.413,3486,2.713,3487,2.713,3488,5.303,3489,2.713,3490,4.281,3491,2.713,3492,2.713,3493,2.713,3494,2.713,3495,2.713,3496,2.713,3497,4.281,3498,2.713,3499,2.713,3500,2.713,3501,2.713,3502,2.713,3503,2.713,3504,2.713,3505,2.713,3506,2.713,3507,4.281,3508,2.713]],["title/modules/SelectModule.html",[310,1.014,3509,3.48]],["body/modules/SelectModule.html",[2,0.38,3,0.38,8,0.333,23,2.226,24,0.007,25,1.671,58,2.154,60,0.435,132,0.573,141,3.056,145,0.385,146,0.18,182,1.169,280,2.44,308,0.006,309,0.006,310,1.633,312,2.499,317,3.147,318,2.391,319,2.111,322,2.944,557,3.552,558,2.813,1054,4.828,2211,6.59,3509,6.874,3510,5.635,3511,5.635,3512,6.337,3513,6.337,3514,5.635,3515,6.337,3516,5.635]],["title/directives/SlotHostDirective.html",[184,0.961,304,1.215]],["body/directives/SlotHostDirective.html",[0,0.456,2,0.396,3,0.396,8,0.347,10,0.686,22,1.485,24,0.007,26,1.865,27,1.615,32,0.748,33,1.069,34,2.891,39,2.006,41,1.899,55,0.966,60,0.311,64,0.794,66,1.091,86,1.03,87,0.717,88,0.717,102,4.623,132,0.597,145,0.288,146,0.187,184,1.707,304,2.006,305,2.08,306,2.203,308,0.006,309,0.006,340,1.936,349,3.258,359,3.873,428,3.463,576,6.092,587,3.549,826,3.641,1138,3.549,1317,7.896,1360,6.092,3517,7.652,3518,5.869,3519,7.997,3520,6.6,3521,6.6,3522,7.997,3523,6.6]],["title/classes/Sorter.html",[146,0.137,3524,3.48]],["body/classes/Sorter.html",[2,0.28,3,0.28,7,1.762,8,0.245,10,0.665,24,0.007,25,1.179,32,0.827,33,1.282,34,2.836,38,1.182,43,2.493,44,1.272,55,0.564,60,0.22,64,0.902,65,2.007,66,0.995,71,0.786,75,2.027,76,1.361,86,0.998,87,0.695,88,0.944,113,0.637,118,2.838,142,1.764,145,0.342,146,0.207,162,2.479,308,0.006,309,0.005,332,2.8,357,2.072,373,2.052,376,3.101,386,3.237,427,3.249,430,2.971,460,2.8,495,2.381,514,2.8,570,3.482,576,3.556,587,2.072,615,3.056,690,6.62,738,4.163,790,4.152,806,3.556,858,4.216,973,3.353,1069,7.412,1284,3.811,1360,3.556,1376,5.954,1445,4.362,1550,2.607,1560,2.444,1566,5.378,1654,3.039,1698,3.811,1785,5.22,1884,3.99,2052,3.353,2141,6.708,2147,5.686,2243,4.163,2877,6.976,2913,4.871,3524,6.096,3525,3.556,3526,6.395,3527,7.845,3528,6.395,3529,5.22,3530,5.22,3531,5.22,3532,4.669,3533,6.395,3534,4.669,3535,8.218,3536,6.395,3537,4.669,3538,3.353,3539,5.22,3540,3.811,3541,4.152,3542,4.152,3543,4.152,3544,3.184,3545,4.152,3546,4.669,3547,4.152,3548,4.152,3549,4.669,3550,6.395,3551,4.669,3552,4.669,3553,4.669,3554,4.669,3555,4.669,3556,6.395,3557,4.669,3558,4.669,3559,4.669,3560,4.669,3561,4.669,3562,4.669,3563,4.669,3564,4.669]],["title/interfaces/Symbol.html",[835,2,918,1.463]],["body/interfaces/Symbol.html",[2,0.413,3,0.413,8,0.362,10,0.715,24,0.007,32,0.781,33,1.097,56,3.641,64,0.815,65,2.1,74,2.057,87,1.047,88,0.952,93,4.945,139,5.892,145,0.3,308,0.006,309,0.006,736,6.122,835,3.923,918,2.478,1270,4.92,1509,5.118,1856,7.294,1884,5.929,1986,5.595,3565,6.122,3566,8.203,3567,7.294,3568,8.203]],["title/modules/SymbolModule.html",[310,1.014,1711,3.154]],["body/modules/SymbolModule.html",[2,0.42,3,0.42,8,0.368,23,2.519,24,0.007,58,2.381,60,0.439,132,0.634,141,2.996,145,0.385,146,0.199,182,1.292,308,0.006,309,0.006,310,1.735,312,2.762,317,3.343,318,2.643,319,2.333,322,3.127,557,3.773,558,3.109,836,3.99,1711,6.146,3569,6.229,3570,6.229,3571,7.005,3572,5.718,3573,6.724,3574,7.005]],["title/injectables/SymbolPipe.html",[367,1.151,3573,3.691]],["body/injectables/SymbolPipe.html",[2,0.509,3,0.383,8,0.335,10,0.663,15,1.82,24,0.007,32,0.724,44,1.27,58,2.168,60,0.4,64,0.634,65,2.005,66,0.87,75,1.827,76,1.226,86,0.996,87,1.026,88,0.693,132,0.577,145,0.278,146,0.181,183,1.659,308,0.006,309,0.006,340,1.435,367,2.013,384,2.893,430,2.307,535,2.042,587,3.477,589,4.374,835,3.975,836,3.835,1006,6.394,1103,4.629,1108,4.232,1114,5.343,1884,4.887,2951,6.966,3572,5.208,3573,5.968,3575,5.673,3576,7.834,3577,6.38,3578,7.834,3579,5.673,3580,6.38]],["title/injectables/SymbolService.html",[367,1.151,836,2.048]],["body/injectables/SymbolService.html",[2,0.292,3,0.292,8,0.256,10,0.506,24,0.007,32,0.846,33,0.88,38,1.067,39,2.156,44,1.067,55,1.106,60,0.376,64,0.9,65,2.081,66,1.219,71,0.82,74,2.392,75,2.005,76,1.293,77,1.904,83,5.447,86,1.302,87,1.011,88,0.906,93,4.729,113,1.089,118,3.815,121,2.607,132,0.441,142,1.592,145,0.212,146,0.138,162,1.656,168,4.729,308,0.005,309,0.005,340,1.678,367,1.771,413,3.172,452,3.375,635,3.806,779,2.551,794,3.806,800,4.5,835,4.059,836,2.783,989,3.172,1601,4.729,1883,7.09,1884,4.108,2245,4.286,2644,5.855,2752,5.374,3579,4.333,3581,4.333,3582,8.596,3583,6.584,3584,4.873,3585,6.584,3586,4.873,3587,6.584,3588,4.873,3589,6.584,3590,4.873,3591,6.584,3592,5.855,3593,6.584,3594,4.873,3595,6.584,3596,4.873,3597,4.873,3598,7.986,3599,4.873,3600,6.584,3601,4.873,3602,4.873,3603,4.873,3604,4.873,3605,4.873,3606,4.873,3607,4.873,3608,4.873,3609,4.873,3610,4.873,3611,4.873,3612,4.873,3613,4.873]],["title/components/TabComponent.html",[0,0.237,281,1.237]],["body/components/TabComponent.html",[0,0.379,1,1.019,2,0.239,3,0.239,4,0.805,5,1.096,6,1.096,8,0.21,10,0.414,19,0.964,22,0.897,24,0.007,25,1.235,26,2.311,27,1.993,28,1.946,30,1.517,32,0.452,33,0.766,35,1.74,39,1.436,44,0.928,60,0.27,64,0.845,65,1.618,66,1.199,71,0.963,74,1.836,75,1.335,76,0.828,77,1.462,86,0.623,87,0.924,88,0.433,104,4.665,108,1.462,110,1,113,0.781,126,2.258,132,0.361,145,0.174,146,0.113,182,0.736,183,1.489,184,1.136,188,1.975,189,1.096,190,1.096,191,0.982,192,1.019,193,1.288,194,1.106,195,2.131,196,1.037,197,2.012,198,1.037,199,1.096,200,1.019,201,1.574,202,1.037,203,1.096,204,1.019,205,1.096,206,0.982,207,1,208,1.565,209,1.841,210,0.982,211,1.019,212,1.019,213,1,214,1.096,215,1.037,216,1.841,217,1.096,218,1.096,219,1.037,220,2.012,221,1.019,222,1.841,223,1.037,224,1.037,225,1.019,226,1.096,227,1,228,1.037,229,1.096,230,1.019,231,1.096,232,1.096,233,1.019,234,1.096,235,0.982,236,1.019,237,1.096,238,1,239,1.096,240,0.897,241,1.096,242,1,243,1.68,244,1.096,245,1,246,1.096,247,1,248,1.096,249,0.947,250,1.096,251,1.019,252,0.93,253,1.019,254,1.037,255,1.096,256,1.019,257,1.096,258,1.096,259,1.019,260,1.096,261,1.019,262,1.096,263,0.947,264,1.096,265,1.019,266,1.019,267,1.096,268,1.019,269,1.037,270,1.096,271,0.982,272,0.982,273,1.815,274,1,275,0.791,276,1.019,277,1,278,1,279,1.019,280,1,281,1.87,282,1.096,283,2.231,284,1.096,285,1.019,286,1.096,287,1.019,288,1.096,289,1.019,290,1.096,291,1.019,292,0.964,293,0.982,294,1.096,295,1,296,1.096,297,1,298,1.096,299,1,300,1.096,301,1,302,1.057,303,1.096,304,1,305,1.037,306,0.982,307,1.096,308,0.004,309,0.004,340,1.507,349,1.969,365,2.772,373,1.385,379,1.797,380,2.883,409,1.182,428,2.479,438,2.828,444,4.541,465,2.823,497,3.727,512,4.059,528,3.719,718,2.826,771,5.537,937,3.357,1082,3.572,1244,4.362,1281,3.546,1283,6.328,1513,4.674,1803,3.572,3614,3.546,3615,7.118,3616,5.726,3617,5.726,3618,8.66,3619,5.726,3620,5.726,3621,3.988,3622,3.988,3623,3.988,3624,3.988,3625,3.988,3626,3.988,3627,3.988,3628,5.726,3629,3.988,3630,3.546,3631,3.988,3632,3.988]],["title/components/TabsComponent.html",[0,0.237,283,1.215]],["body/components/TabsComponent.html",[0,0.403,1,0.988,2,0.232,3,0.232,4,1.131,5,1.064,6,1.064,7,1.46,8,0.203,10,0.402,15,1.598,19,0.936,22,0.87,24,0.007,26,2.308,27,1.99,28,1.904,30,1.484,32,0.439,33,0.749,35,1.604,44,0.908,55,0.467,56,2.486,60,0.31,64,0.761,65,1.455,66,1.123,72,1.692,73,4.023,74,1.405,75,1.684,76,1.108,77,1.843,86,1.028,87,0.948,88,0.715,105,1.635,108,1.431,110,0.97,113,0.764,119,3.128,132,0.35,142,1.355,145,0.169,146,0.11,162,1.315,167,1.675,182,0.714,183,1.457,184,1.111,185,1.492,186,1.597,187,1.857,188,1.948,189,1.064,190,1.064,191,0.953,192,0.988,193,1.26,194,1.087,195,2.106,196,1.006,197,1.984,198,1.006,199,1.064,200,0.988,201,1.54,202,1.006,203,1.064,204,0.988,205,1.064,206,0.953,207,0.97,208,1.547,209,1.81,210,0.953,211,0.988,212,0.988,213,0.97,214,1.064,215,1.006,216,1.81,217,1.064,218,1.064,219,1.006,220,1.984,221,0.988,222,1.81,223,1.006,224,1.006,225,0.988,226,1.064,227,0.97,228,1.006,229,1.064,230,0.988,231,1.064,232,1.064,233,0.988,234,1.064,235,0.953,236,0.988,237,1.064,238,0.97,239,1.064,240,0.87,241,1.064,242,0.97,243,1.651,244,1.064,245,0.97,246,1.064,247,0.97,248,1.064,249,0.919,250,1.064,251,0.988,252,0.902,253,0.988,254,1.006,255,1.064,256,0.988,257,1.064,258,1.064,259,0.988,260,1.064,261,0.988,262,1.064,263,0.919,264,1.064,265,0.988,266,0.988,267,1.064,268,0.988,269,1.006,270,1.064,271,0.953,272,0.953,273,1.797,274,0.97,275,0.767,276,0.988,277,0.97,278,0.97,279,0.988,280,0.97,281,2.258,282,1.064,283,2.003,284,1.064,285,0.988,286,1.064,287,0.988,288,1.064,289,0.988,290,1.064,291,0.988,292,0.936,293,0.953,294,1.064,295,0.97,296,1.064,297,0.97,298,1.064,299,0.97,300,1.064,301,0.97,302,1.025,303,1.064,304,0.97,305,1.457,306,0.953,307,1.064,308,0.004,309,0.005,327,2.846,340,0.87,357,1.717,379,1.214,438,2.887,461,2.947,495,1.263,497,3.647,512,4.011,519,2.765,532,2.16,535,1.238,618,3.821,779,2.026,827,5.199,837,5.499,950,3.238,1148,2.32,1461,2.32,1527,4.572,1851,2.765,1923,4.923,1953,3.158,2176,5.892,2553,3.44,2595,3.44,3615,7.121,3633,3.44,3634,4.572,3635,5.602,3636,6.585,3637,5.602,3638,5.602,3639,7.218,3640,7.218,3641,5.602,3642,5.602,3643,3.869,3644,3.869,3645,5.602,3646,3.869,3647,5.602,3648,3.869,3649,5.602,3650,3.869,3651,5.602,3652,3.44,3653,3.869,3654,3.869,3655,3.869,3656,3.869,3657,3.869,3658,3.869,3659,5.602,3660,3.869,3661,3.869,3662,3.869,3663,3.869,3664,3.869,3665,3.869,3666,3.869,3667,3.869,3668,3.869,3669,3.869,3670,3.869,3671,3.869,3672,5.602]],["title/components/TinymceComponent.html",[0,0.237,285,1.237]],["body/components/TinymceComponent.html",[0,0.346,1,0.819,2,0.192,3,0.192,4,0.647,5,0.881,6,0.881,7,1.21,8,0.168,10,0.333,11,3.039,13,4.893,15,1.39,16,3.534,19,0.775,22,0.721,23,1.682,24,0.007,25,0.899,26,2.289,27,1.971,28,1.656,30,1.291,32,0.364,33,0.651,34,2.696,35,1.672,36,3.948,37,4.286,38,1.476,39,1.87,40,2.277,44,0.79,48,3.039,49,3.948,52,2.922,60,0.431,64,0.812,65,1.077,66,1.209,71,0.992,72,1.471,74,2.002,76,1.121,77,1.808,79,1.923,81,2.922,84,2.73,86,0.92,87,0.906,88,0.64,89,2.922,99,2.922,101,3.172,102,2.816,103,1.761,104,3.805,105,1.355,106,2.162,108,1.244,110,0.804,113,1.115,114,2.475,116,2.731,118,2.162,119,3.675,121,2.149,130,1.732,131,2.922,132,0.29,133,2.922,134,1.264,143,1.923,144,1.923,145,0.14,146,0.091,147,2.442,152,4.81,154,3.711,160,3.323,165,1.678,181,1.923,182,0.591,183,1.267,184,0.966,185,1.236,186,1.323,187,1.539,188,1.776,189,0.881,190,0.881,191,0.789,192,0.819,193,1.096,194,0.973,195,1.946,196,0.834,197,1.81,198,0.834,199,0.881,200,0.819,201,1.339,202,0.834,203,0.881,204,0.819,205,0.881,206,0.789,207,0.804,208,1.43,209,1.62,210,0.789,211,0.819,212,0.819,213,0.804,214,0.881,215,0.834,216,1.62,217,0.881,218,0.881,219,0.834,220,1.81,221,0.819,222,1.62,223,0.834,224,0.834,225,0.819,226,0.881,227,0.804,228,0.834,229,0.881,230,0.819,231,0.881,232,0.881,233,0.819,234,0.881,235,0.789,236,0.819,237,0.881,238,0.804,239,0.881,240,0.721,241,0.881,242,0.804,243,1.478,244,0.881,245,0.804,246,0.881,247,0.804,248,0.881,249,0.761,250,0.881,251,0.819,252,0.748,253,0.819,254,0.834,255,0.881,256,0.819,257,0.881,258,0.881,259,0.819,260,0.881,261,0.819,262,0.881,263,0.761,264,0.881,265,0.819,266,0.819,267,0.881,268,0.819,269,0.834,270,0.881,271,0.789,272,0.789,273,1.677,274,0.804,275,0.636,276,0.819,277,0.804,278,0.804,279,0.819,280,0.804,281,0.819,282,0.881,283,0.804,284,0.881,285,1.808,286,0.881,287,0.819,288,0.881,289,0.819,290,0.881,291,0.819,292,0.775,293,0.789,294,0.881,295,0.804,296,0.881,297,0.804,298,0.881,299,0.804,300,0.881,301,0.804,302,1.291,303,0.881,304,0.804,305,0.834,306,0.789,307,0.881,308,0.004,309,0.004,340,0.721,365,2.387,379,1.006,380,2.283,384,1.799,465,1.879,484,2.475,513,2.922,527,4.458,528,2.475,534,1.923,535,1.026,693,2.442,717,2.655,805,4.019,816,2.632,888,2.72,1094,3.172,1132,2.85,1491,2.85,1931,4.332,1963,6.296,2003,2.85,2059,3.711,2060,3.711,2109,2.442,2371,4.81,2374,5.373,2496,5.24,2499,5.854,2507,4.332,2525,2.442,2527,2.85,2771,3.323,3673,2.85,3674,5.874,3675,4.872,3676,4.872,3677,4.872,3678,3.206,3679,6.583,3680,4.872,3681,3.977,3682,4.872,3683,3.977,3684,4.872,3685,3.206,3686,3.206,3687,3.206,3688,3.206,3689,3.206,3690,3.206,3691,3.206,3692,3.206,3693,3.206,3694,3.206,3695,3.206,3696,3.206,3697,3.206,3698,3.206,3699,3.206,3700,3.206,3701,3.206,3702,3.206,3703,3.206,3704,3.206,3705,3.206,3706,3.206,3707,3.206,3708,3.206,3709,3.206,3710,3.206,3711,3.206,3712,3.977,3713,3.206,3714,3.206,3715,3.206,3716,3.206,3717,3.206,3718,3.206,3719,3.206,3720,3.206,3721,3.206,3722,3.206,3723,3.206,3724,3.206,3725,3.206,3726,3.206,3727,3.206,3728,3.206,3729,3.206,3730,3.206,3731,4.872,3732,3.206]],["title/modules/TinymceModule.html",[310,1.014,3733,3.48]],["body/modules/TinymceModule.html",[2,0.423,3,0.423,8,0.371,23,2.014,24,0.007,58,2.398,60,0.392,132,0.638,141,3.201,145,0.399,146,0.2,182,1.302,285,2.5,308,0.006,309,0.006,310,1.743,312,2.783,317,3.358,318,2.663,319,2.35,322,3.141,3733,6.859,3734,6.275,3735,6.275,3736,6.275,3737,7.057,3738,7.057]],["title/components/ToggleComponent.html",[0,0.237,287,1.237]],["body/components/ToggleComponent.html",[0,0.409,1,1.035,2,0.243,3,0.243,4,1.365,5,1.114,6,1.114,8,0.213,10,0.421,15,1.653,16,4.053,19,0.98,22,0.912,23,1.928,24,0.007,25,1.068,26,2.312,27,1.994,28,1.968,30,1.534,32,0.46,33,0.774,35,1.748,36,4.422,38,1.474,44,0.939,48,3.613,49,4.422,52,3.473,55,0.891,60,0.273,64,0.671,65,1.28,66,1.139,76,1.066,77,1.883,81,3.473,83,5.029,84,2.122,85,3.95,86,0.904,87,0.944,88,0.629,89,3.473,99,3.473,101,3.77,108,1.479,110,1.016,113,1.139,114,2.942,121,2.407,131,3.473,132,0.367,133,3.473,134,1.598,143,2.43,144,2.43,145,0.177,146,0.115,160,4.609,181,2.43,182,0.747,183,1.506,184,1.149,188,1.99,189,1.114,190,1.114,191,0.998,192,1.035,193,1.303,194,1.116,195,2.144,196,1.054,197,2.027,198,1.054,199,1.114,200,1.035,201,1.592,202,1.054,203,1.114,204,1.035,205,1.114,206,0.998,207,1.016,208,1.575,209,1.858,210,0.998,211,1.035,212,1.035,213,1.016,214,1.114,215,1.054,216,1.858,217,1.114,218,1.114,219,1.054,220,2.027,221,1.035,222,1.858,223,1.054,224,1.054,225,1.035,226,1.114,227,1.016,228,1.054,229,1.114,230,1.035,231,1.114,232,1.114,233,1.035,234,1.114,235,0.998,236,1.035,237,1.114,238,1.016,239,1.114,240,0.912,241,1.114,242,1.016,243,1.695,244,1.114,245,1.016,246,1.114,247,1.016,248,1.114,249,0.962,250,1.114,251,1.035,252,0.945,253,1.035,254,1.054,255,1.114,256,1.035,257,1.114,258,1.114,259,1.035,260,1.114,261,1.035,262,1.114,263,0.962,264,1.114,265,1.035,266,1.035,267,1.114,268,1.035,269,1.054,270,1.114,271,0.998,272,0.998,273,1.825,274,1.016,275,0.804,276,1.035,277,1.016,278,1.016,279,1.035,280,1.016,281,1.035,282,1.114,283,1.016,284,1.114,285,1.035,286,1.114,287,1.992,288,1.114,289,1.035,290,1.114,291,1.035,292,0.98,293,0.998,294,1.114,295,1.016,296,1.114,297,1.016,298,1.114,299,1.016,300,1.114,301,1.016,302,1.074,303,1.114,304,1.016,305,1.054,306,0.998,307,1.114,308,0.004,309,0.004,373,2.065,441,5.716,1080,4.355,1094,2.638,1138,2.57,2149,4.16,2259,4.727,2525,3.087,2623,3.77,3353,4.727,3739,3.603,3740,5.791,3741,5.791,3742,5.791,3743,4.052,3744,4.052,3745,4.052,3746,5.791,3747,4.052,3748,4.052,3749,4.052,3750,4.052]],["title/components/ToolbarComponent.html",[0,0.237,289,1.237]],["body/components/ToolbarComponent.html",[0,0.391,1,1.101,2,0.259,3,0.259,4,0.871,5,1.185,6,1.185,8,0.227,10,0.448,13,4.314,19,1.043,22,0.97,24,0.007,26,2.318,27,2,28,2.056,30,1.603,32,0.489,34,2.188,35,1.672,40,2.828,44,0.981,60,0.285,64,0.601,66,1.034,76,1.096,86,0.673,87,0.943,88,0.468,108,1.545,110,1.081,113,0.825,132,0.39,145,0.188,146,0.122,165,2.257,182,0.795,183,1.574,184,1.2,188,2.046,189,1.185,190,1.185,191,1.062,192,1.101,193,1.361,194,1.155,195,2.195,196,1.121,197,2.084,198,1.121,199,1.185,200,1.101,201,1.663,202,1.121,203,1.185,204,1.101,205,1.185,206,1.062,207,1.081,208,1.612,209,1.922,210,1.062,211,1.101,212,1.101,213,1.081,214,1.185,215,1.972,216,2.195,217,1.185,218,1.185,219,1.121,220,2.084,221,1.101,222,1.922,223,1.121,224,1.121,225,1.101,226,1.185,227,1.081,228,1.121,229,1.185,230,1.101,231,1.185,232,1.185,233,1.101,234,1.185,235,1.062,236,1.101,237,1.185,238,1.081,239,1.185,240,0.97,241,1.185,242,1.081,243,1.753,244,1.185,245,1.081,246,1.185,247,1.081,248,1.185,249,1.024,250,1.185,251,1.101,252,1.006,253,1.101,254,1.121,255,1.185,256,1.101,257,1.185,258,1.185,259,1.101,260,1.185,261,1.101,262,1.185,263,1.024,264,1.185,265,1.101,266,1.101,267,1.185,268,1.101,269,1.121,270,1.185,271,1.062,272,1.062,273,1.863,274,1.081,275,0.855,276,1.101,277,1.081,278,1.081,279,1.101,280,1.081,281,1.101,282,1.185,283,1.081,284,1.185,285,1.101,286,1.185,287,1.101,288,1.185,289,1.936,290,1.185,291,1.101,292,1.043,293,1.062,294,1.185,295,1.081,296,1.185,297,1.081,298,1.185,299,1.081,300,1.185,301,1.081,302,1.142,303,1.185,304,1.081,305,1.121,306,1.722,307,1.185,308,0.004,309,0.004,319,2.015,373,1.043,379,2.769,409,1.278,429,3.775,844,5.414,1094,2.807,1185,3.097,1278,5.707,1288,4.346,1300,3.097,2210,3.834,3353,3.519,3751,3.834,3752,6.051,3753,6.741,3754,5.381,3755,6.051,3756,6.051,3757,6.051,3758,4.311,3759,6.992,3760,4.311,3761,6.051,3762,4.311,3763,7.1,3764,5.381,3765,4.311,3766,3.834,3767,4.311,3768,4.311,3769,6.051,3770,4.311,3771,6.051,3772,7.581,3773,6.051,3774,6.051]],["title/injectables/TypeConfigService.html",[367,1.151,1044,2.801]],["body/injectables/TypeConfigService.html",[2,0.174,3,0.174,4,0.912,8,0.153,10,0.302,19,1.093,24,0.007,25,1.728,27,1.8,32,0.33,33,1.123,35,1.853,38,1.557,41,1.073,42,1.865,44,1.013,55,0.546,56,2.005,60,0.396,64,0.917,65,1.795,66,1.108,71,0.76,74,1.133,75,1.458,76,1.324,77,0.742,84,1.418,86,0.976,87,0.679,88,0.679,113,1.021,132,0.263,142,1.093,145,0.127,146,0.082,173,3.204,191,1.668,193,1.741,194,0.746,206,2.097,207,1.993,208,1.84,210,1.765,243,1.133,308,0.003,309,0.003,325,2.087,327,2.295,333,4.264,334,3.688,340,0.654,346,3.688,347,1.813,360,2.111,365,2.726,367,1.316,373,1.093,376,2.359,396,4.264,409,1.339,438,1.475,443,3.144,457,3.75,484,3.642,488,2.087,489,2.295,495,2.341,535,0.93,570,3.182,623,2.941,643,3.9,793,2.902,822,2.169,835,2.959,836,2.642,878,1.57,931,4.017,937,1.956,950,2.612,959,3.001,970,3.997,977,1.813,989,1.892,994,1.813,1019,2.819,1044,2.612,1050,2.71,1052,3.245,1055,5.173,1072,3.442,1078,4.473,1080,2.522,1081,3.323,1098,2.941,1099,1.982,1107,5.461,1113,2.584,1124,2.372,1138,4.063,1263,1.982,1270,2.71,1485,2.087,1502,4.3,1503,7.223,1504,6.688,1508,5.067,1509,2.819,1533,2.612,1547,2.941,1582,2.214,1589,4.3,1616,3.081,1659,2.522,1660,4.264,1851,2.23,1923,3.081,2042,4.017,2635,4.017,2638,5.708,2640,2.819,2641,2.214,2681,4.017,2699,2.584,3094,2.584,3100,6.315,3237,4.017,3238,6.688,3300,2.372,3544,4.264,3592,2.584,3775,4.518,3776,4.518,3777,7.737,3778,6.252,3779,4.518,3780,6.252,3781,2.906,3782,2.906,3783,4.518,3784,2.906,3785,4.518,3786,4.518,3787,4.518,3788,4.518,3789,2.906,3790,2.906,3791,4.518,3792,4.518,3793,2.906,3794,4.017,3795,2.906,3796,4.518,3797,4.518,3798,4.518,3799,6.252,3800,6.252,3801,6.252,3802,4.017,3803,4.518,3804,4.518,3805,4.017,3806,4.518,3807,4.518,3808,4.518,3809,4.518,3810,6.772,3811,6.252,3812,4.518,3813,4.518,3814,4.518,3815,4.518,3816,4.518,3817,2.906,3818,2.906,3819,2.906,3820,2.906,3821,2.906,3822,2.906,3823,2.906,3824,2.906,3825,2.906]],["title/modules/UiModule.html",[310,1.014,554,2.906]],["body/modules/UiModule.html",[2,0.332,3,0.332,8,0.29,23,1.577,24,0.007,58,1.878,60,0.451,132,0.5,134,2.179,141,1.998,145,0.366,146,0.157,182,1.019,308,0.005,309,0.005,310,1.498,312,2.179,317,2.886,318,2.085,319,1.84,322,2.7,554,5.925,557,3.257,558,2.452,560,5.412,1046,5.699,1699,6.469,1708,6.175,1709,5.918,1710,6.469,1711,6.175,1714,4.51,1723,4.913,1724,4.209,1727,4.51,2211,6.469,2221,4.913,2821,6.813,3509,6.813,3516,4.913,3826,4.913,3827,4.913,3828,4.913,3829,6.813,3830,5.525,3831,5.525,3832,5.525,3833,5.525]],["title/interfaces/Update.html",[717,1.954,918,1.463]],["body/interfaces/Update.html",[0,0.207,2,0.253,3,0.253,8,0.222,10,0.439,24,0.007,25,1.275,32,0.479,33,1.06,38,1.504,41,1.003,55,0.721,60,0.398,61,2.358,62,2.442,64,0.91,65,1.989,70,3.037,71,1.264,72,1.801,75,2.076,76,1.367,79,2.533,84,2.793,88,0.893,103,3.217,112,1.228,114,2.146,116,2.3,126,1.666,132,0.382,142,1.442,145,0.26,146,0.12,162,1.435,167,1.829,194,1.358,208,1.944,275,1.712,308,0.004,309,0.005,332,4.147,339,2.462,342,2.203,360,1.974,364,3.577,367,1.642,373,1.021,378,3.736,379,1.326,380,2.069,403,2.028,430,2.973,452,1.785,454,2.282,465,3.056,469,3.861,475,2.358,495,1.379,518,2.635,527,3.861,534,2.533,535,1.352,664,4.147,678,4.195,679,4.687,717,3.797,772,2.635,779,3.123,800,3.62,822,2.028,864,5.124,888,2.358,918,1.801,942,3.33,946,3.218,947,2.881,954,3.736,955,3.448,956,2.533,957,2.881,958,2.533,959,2.028,960,2.533,961,1.829,962,2.75,967,3.448,969,3.448,970,3.744,971,3.448,973,3.034,974,3.756,976,3.756,977,5.386,979,3.448,981,3.034,982,3.883,983,3.448,985,3.218,986,3.448,987,3.756,989,2.75,990,3.756,991,3.756,993,2.881,994,2.635,995,3.448,996,3.448,997,3.883,998,4.544,999,3.448,1000,3.448,1001,3.448,1002,3.448,1003,3.448,1004,3.448,1005,3.448,1006,3.448,1007,3.756,1008,3.756,1009,3.756,1010,6.149,1011,5.644,1012,3.448,1013,3.448,1014,3.448,1015,3.448,1016,3.756,1017,5.304,1018,4.869,1019,2.635,1020,3.756,1021,5.644,1022,3.448,1023,3.448,1024,3.448,1025,3.448,1026,5.644,1027,2.635,1028,3.448,1029,3.756,1030,3.448,1031,3.756,1032,3.756]],["title/interfaces/Upload.html",[292,1.172,918,1.463]],["body/interfaces/Upload.html",[0,0.187,2,0.229,3,0.229,8,0.418,10,0.396,24,0.007,25,1.205,32,0.432,33,0.741,39,1.993,41,0.906,43,2.482,55,0.866,60,0.415,64,0.851,65,1.756,70,2.047,71,1.464,72,1.674,75,0.889,76,1.372,79,2.287,84,2.391,87,0.414,88,0.992,103,1.379,112,1.612,116,2.765,118,2.46,126,1.504,132,0.345,142,1.983,145,0.285,146,0.108,162,2.219,167,1.651,171,2.138,193,2.179,194,1.388,208,1.319,273,1.469,275,0.756,292,2.193,308,0.004,309,0.004,332,4.568,339,2.288,342,2.047,360,1.782,362,5.195,367,1.551,373,1.579,378,2.06,379,1.197,380,2.642,394,2.343,401,5.73,402,2.601,403,1.831,409,1.13,417,2.905,442,3.609,452,1.612,454,2.06,465,2.519,481,2.59,495,2.132,518,2.379,531,1.01,535,1.221,556,3.052,604,3.646,615,2.341,640,2.483,641,3.204,678,3.646,686,2.739,717,2.892,807,2.06,822,1.831,888,2.129,898,3.781,918,2.165,935,2.739,937,2.4,954,2.995,956,2.287,957,2.601,958,2.287,959,1.831,960,2.287,961,1.651,962,2.483,970,1.736,993,2.601,997,3.609,1013,2.204,1044,3.204,1055,2.483,1056,2.287,1138,1.692,1262,2.204,1270,2.287,1304,4.223,1330,2.661,1352,2.379,1423,3.646,1436,1.736,1442,4.473,1459,2.483,1461,2.287,1508,2.379,1550,3.095,1592,3.781,1593,2.905,1594,2.905,1595,4.525,1596,2.905,1597,2.905,1598,2.905,1599,2.739,1600,2.379,1601,2.739,1602,2.379,1603,3.113,1604,3.113,1605,4.525,1606,3.113,1607,4.223,1608,2.905,1609,3.113,1610,3.113,1611,2.379,1612,3.113,1613,3.113,1614,2.06,1615,2.483,1616,2.601,1617,3.113,1618,3.113,1619,3.113,1620,3.113,1621,2.601,1622,2.739,1623,2.379,1624,3.113,1625,6.217,1626,3.113,1627,3.113,1628,4.223,1629,5.331,1630,3.113,1631,4.525,1632,4.525,1633,4.525,1634,4.525,1635,4.525,1636,4.525,1637,4.525,1638,4.525,1639,4.525,1640,4.525,1641,4.975,1642,2.905,1643,3.113,1644,3.113,1645,3.113,1646,3.113,1647,4.525,1648,3.113,1649,4.525,1650,2.905,1651,3.113,1652,5.331,1653,3.113,1654,3.609,1655,3.113,1656,4.525,1657,3.113,1658,3.113,1659,2.129,1660,2.601,1661,3.113,1662,3.113,1663,3.113,1664,3.113,1665,3.113,1666,3.113,1667,3.113]],["title/components/UploadComponent.html",[0,0.237,291,1.237]],["body/components/UploadComponent.html",[0,0.367,1,0.747,2,0.175,3,0.175,4,0.59,5,0.804,6,0.804,8,0.448,10,0.304,15,1.295,19,0.707,22,0.658,24,0.007,25,1.383,26,2.279,27,1.961,30,1.203,32,0.332,33,0.607,35,1.918,38,1.017,39,1.395,41,1.078,42,2.589,44,0.736,55,0.937,60,0.383,64,0.873,65,1.588,66,1.25,71,0.936,76,1.198,77,1.159,84,1.747,86,0.869,87,0.884,88,0.884,104,3.626,105,1.919,106,2.47,108,1.734,110,0.733,113,1.057,116,2.146,121,1.482,132,0.264,135,1.366,142,0.707,145,0.127,146,0.083,165,3.284,171,2.619,182,0.539,183,1.181,184,0.9,188,1.693,189,0.804,190,0.804,191,0.72,192,0.747,193,1.893,194,0.919,195,1.867,196,0.76,197,1.724,198,0.76,199,0.804,200,0.747,201,1.248,202,0.76,203,0.804,204,0.747,205,0.804,206,0.72,207,0.733,208,1.371,209,1.53,210,0.72,211,0.747,212,0.747,213,0.733,214,0.804,215,0.76,216,1.53,217,0.804,218,0.804,219,0.76,220,1.724,221,0.747,222,1.53,223,0.76,224,0.76,225,0.747,226,0.804,227,0.733,228,0.76,229,0.804,230,0.747,231,0.804,232,0.804,233,0.747,234,0.804,235,0.72,236,0.747,237,0.804,238,0.733,239,0.804,240,1.411,241,0.804,242,0.733,243,1.395,244,0.804,245,0.733,246,0.804,247,0.733,248,0.804,249,0.694,250,0.804,251,0.747,252,0.682,253,0.747,254,0.76,255,0.804,256,0.747,257,0.804,258,0.804,259,0.747,260,0.804,261,0.747,262,0.804,263,0.694,264,0.804,265,0.747,266,0.747,267,0.804,268,0.747,269,0.76,270,0.804,271,1.672,272,0.72,273,1.617,274,0.733,275,0.9,276,0.747,277,0.733,278,0.733,279,0.747,280,0.733,281,0.747,282,0.804,283,0.733,284,0.804,285,0.747,286,0.804,287,0.747,288,0.804,289,0.747,290,0.804,291,1.602,292,2.273,293,0.72,294,0.804,295,0.733,296,0.804,297,0.733,298,0.804,299,0.733,300,0.804,301,0.733,302,0.775,303,0.804,304,0.733,305,0.76,306,0.72,307,0.804,308,0.003,309,0.003,331,4.093,339,1.874,340,0.658,341,1.531,342,2.316,365,2.008,368,3.705,369,3.622,373,1.098,379,2.354,380,2.175,394,1.919,403,1.403,404,1.903,409,1.345,410,1.753,412,4.778,423,3.939,427,2.306,438,1.482,440,2.306,442,4.679,465,1.751,486,2.6,491,3.705,495,2.048,514,1.753,515,2.297,522,3.932,523,3.011,535,0.936,664,1.753,710,2.624,731,1.824,738,2.955,816,2.452,820,3.107,821,3.471,826,3.414,833,3.926,834,3.216,835,3.286,836,2.651,878,1.58,879,2.386,880,2.386,881,2.386,907,2.955,908,3.997,910,1.994,912,1.824,934,2.955,982,2.955,1013,3.626,1027,4.679,1080,3.792,1185,2.1,1300,2.1,1352,1.824,1380,2.386,1523,3.458,1555,2.624,1592,3.795,1594,3.458,1596,3.458,1597,3.458,1598,3.458,1611,4.679,1628,3.458,1982,2.955,2054,3.26,2079,5.549,2388,3.762,2585,4.036,2851,3.458,3198,4.948,3299,2.386,3300,2.386,3303,2.386,3307,2.6,3834,2.6,3835,4.539,3836,6.272,3837,6.272,3838,6.272,3839,4.539,3840,2.924,3841,4.036,3842,2.924,3843,2.924,3844,2.924,3845,2.924,3846,2.924,3847,2.924,3848,4.036,3849,2.924,3850,4.539,3851,2.924,3852,2.924,3853,2.924,3854,4.539,3855,2.924,3856,2.924,3857,2.924,3858,4.539,3859,2.924,3860,2.924,3861,2.924,3862,2.924,3863,4.539,3864,2.924,3865,2.924,3866,2.924,3867,2.924,3868,2.924,3869,2.924,3870,2.924,3871,2.924,3872,2.924,3873,2.6,3874,2.924,3875,2.924,3876,5.564,3877,2.924,3878,2.924,3879,2.924,3880,2.924,3881,2.924,3882,2.924,3883,2.924,3884,2.924,3885,2.924,3886,2.924,3887,4.539,3888,4.539,3889,4.539,3890,4.539]],["title/modules/UtilityModule.html",[310,1.014,3829,3.48]],["body/modules/UtilityModule.html",[2,0.35,3,0.35,8,0.306,23,2.113,24,0.007,58,1.981,60,0.45,132,0.527,134,2.298,141,2.942,145,0.373,146,0.165,174,3.636,182,1.075,251,2.441,252,1.359,256,2.441,259,2.441,281,2.441,283,2.396,308,0.005,309,0.005,310,1.55,312,2.298,317,2.986,318,2.199,319,1.941,321,3.254,322,2.794,532,3.254,557,3.37,558,2.587,560,5.55,1046,5.844,1047,7.235,1707,6.518,1717,5.183,2411,4.757,3630,5.183,3652,5.183,3829,7.05,3891,5.183,3892,5.183,3893,5.828,3894,5.183,3895,5.828,3896,5.828,3897,5.828]],["title/modules/VcModule.html",[310,1.014,3898,3.691]],["body/modules/VcModule.html",[2,0.382,3,0.382,8,0.335,23,2.233,24,0.007,58,2.165,60,0.441,132,0.576,141,3.063,145,0.385,146,0.181,182,1.175,185,2.457,215,2.532,289,2.486,308,0.006,309,0.006,310,1.639,312,2.512,317,3.157,318,2.404,319,2.122,321,4.37,322,2.953,557,3.563,558,2.828,1688,4.576,1689,4.148,3349,6.945,3354,5.665,3766,5.665,3898,7.392,3899,5.665,3900,5.665,3901,5.665,3902,6.371,3903,6.371,3904,6.371]],["title/pipes/VisibleFieldsPipe.html",[1103,2.537,1706,3.48]],["body/pipes/VisibleFieldsPipe.html",[2,0.4,3,0.4,8,0.351,10,0.694,15,1.904,22,1.501,24,0.007,41,2.217,44,1.082,60,0.379,64,0.663,66,0.91,74,2.019,76,1.25,86,1.042,87,0.939,88,0.725,112,2.611,132,0.604,145,0.291,146,0.189,308,0.006,309,0.006,319,2.682,409,2.562,615,3,947,5.491,970,4.087,985,6.133,1081,2.911,1103,4.527,1108,3.605,1114,5.491,1255,4.344,1436,3.665,1706,6.449,1751,5.934,3905,7.159,3906,5.934,3907,8.051,3908,8.051,3909,6.673,3910,8.051,3911,6.673]],["title/interfaces/WithLoader.html",[820,2.705,918,1.463]],["body/interfaces/WithLoader.html",[0,0.409,2,0.427,3,0.427,8,0.374,10,0.739,24,0.007,32,0.806,33,1.118,55,1.107,60,0.335,64,0.706,145,0.31,240,2.062,308,0.006,309,0.006,359,3.62,820,4.668,826,4.385,918,2.769,1445,5.702,2243,5.443,2281,5.803,3912,6.322,3913,6.322,3914,7.434]],["title/interfaces/WithNotifications.html",[821,3.023,918,1.463]],["body/interfaces/WithNotifications.html",[0,0.398,2,0.408,3,0.408,8,0.357,10,0.706,24,0.007,25,1.501,32,0.771,33,1.088,55,1.091,56,3.613,60,0.32,64,0.809,88,0.981,145,0.296,308,0.006,309,0.006,373,2.107,465,3.139,515,3.36,522,4.59,821,5.078,918,2.728,1318,7.373,1505,4.882,1855,7.373,1860,7.238,1986,5.552,3915,6.044,3916,6.044,3917,8.032]],["title/changelog.html",[1082,2.541,2746,2.925,3918,3.622]],["body/changelog.html",[0,0.369,4,0.75,15,1.059,18,1.648,24,0.005,25,0.685,27,1.94,33,0.86,35,1.781,37,2.417,38,0.881,39,0.931,41,2.054,42,1.533,43,0.984,44,1.148,55,1.106,59,2.532,60,0.355,61,2.073,64,0.369,70,2.008,71,1.325,72,1.121,74,1.775,76,0.537,84,2.81,88,0.818,101,2.417,102,2.146,103,1.965,112,2.058,113,1.028,116,2.097,118,1.648,119,3.035,146,0.154,171,2.097,174,2.316,184,1.404,186,3.357,193,1.972,194,1.244,208,1.718,213,0.931,227,0.931,235,0.914,238,0.931,249,0.882,252,1.757,269,0.966,272,0.914,273,1.914,275,1.404,277,0.931,278,0.931,292,0.898,306,0.914,308,0.004,309,0.004,310,1.138,318,1.401,331,1.782,339,1.533,342,2.008,360,3.521,361,3.301,364,2.227,365,2.059,379,1.707,392,2.227,396,4.386,409,1.1,423,3.268,427,1.886,429,2.316,431,2.298,433,4.834,438,2.948,441,4.417,442,2.417,443,3.306,444,3.494,445,3.005,446,4.187,449,2.227,450,2.073,452,1.569,454,2.006,465,1.432,475,4.541,512,2.846,517,2.006,519,2.683,556,2.54,577,5.412,581,2.667,587,1.648,589,3.953,609,2.667,616,2.828,626,3.26,627,3.301,635,3.718,678,2.073,679,2.316,718,1.833,731,2.316,738,4.187,739,5.641,793,1.944,822,2.61,826,1.69,836,1.569,849,5.779,850,2.828,870,3.392,932,3.301,935,2.667,936,3.301,937,3.409,944,1.833,950,3.142,951,3.708,956,3.26,960,2.227,970,1.69,982,2.417,998,2.828,1013,3.718,1033,2.532,1072,4.141,1076,2.828,1078,2.316,1080,2.073,1138,3.494,1152,3.301,1258,2.667,1275,3.708,1344,4.437,1436,1.69,1442,2.316,1474,2.316,1504,2.828,1506,4.609,1507,3.031,1508,2.316,1518,2.667,1519,3.301,1532,3.301,1533,3.142,1550,2.073,1551,2.532,1560,1.944,1566,3.591,1579,2.828,1580,3.708,1600,2.316,1731,2.316,1851,1.833,1852,2.667,1922,3.031,1924,2.828,1982,2.417,2050,2.667,2054,5.99,2066,3.708,2095,3.031,2141,3.031,2143,3.301,2145,6.295,2149,2.667,2150,2.828,2195,3.142,2244,2.532,2245,2.417,2414,4.834,2432,1.262,2623,4.905,2640,2.316,2750,5.393,2752,3.031,2787,4.619,2799,2.532,2860,3.301,3001,3.301,3136,3.031,3238,2.828,3391,6.542,3538,2.667,3572,3.031,3794,3.301,3841,3.301,3848,4.834,3918,3.301,3919,3.713,3920,3.713,3921,8.765,3922,3.708,3923,3.713,3924,3.713,3925,3.713,3926,3.713,3927,3.713,3928,3.713,3929,3.301,3930,8.34,3931,3.713,3932,3.713,3933,3.301,3934,3.301,3935,3.713,3936,3.713,3937,3.713,3938,3.713,3939,3.713,3940,4.834,3941,3.713,3942,3.713,3943,3.301,3944,3.713,3945,3.301,3946,3.713,3947,3.713,3948,3.713,3949,3.713,3950,3.713,3951,3.713,3952,3.301,3953,3.713,3954,3.713,3955,3.713,3956,3.713,3957,3.301,3958,3.713,3959,3.713,3960,3.713,3961,3.713,3962,3.713,3963,5.436,3964,3.713,3965,3.713,3966,3.713,3967,3.713,3968,3.301,3969,3.713,3970,3.713,3971,3.713,3972,4.834,3973,4.834,3974,5.436,3975,2.828,3976,2.073,3977,3.713,3978,3.713,3979,5.719,3980,3.713,3981,3.713,3982,3.713,3983,3.713,3984,3.713,3985,3.301,3986,3.301,3987,3.713,3988,3.713,3989,3.713,3990,3.713,3991,3.713,3992,3.713,3993,3.713,3994,3.713,3995,6.431,3996,3.713,3997,2.532,3998,2.417,3999,3.713,4000,3.713,4001,3.713,4002,3.301,4003,3.713,4004,3.713,4005,3.713,4006,3.713,4007,3.713,4008,3.713,4009,3.301,4010,3.713,4011,3.713,4012,3.301,4013,3.713,4014,3.713,4015,3.713,4016,2.828,4017,3.713,4018,6.431,4019,3.713,4020,3.713,4021,3.301,4022,2.667,4023,3.713,4024,3.301,4025,5.436,4026,3.713,4027,5.436,4028,3.713,4029,3.713]],["title/coverage.html",[4030,5.832]],["body/coverage.html",[0,0.477,1,0.799,8,0.164,9,3.903,12,2.133,19,0.756,24,0.007,41,0.743,43,0.829,64,0.311,71,0.526,110,0.784,112,0.91,146,0.248,184,1.465,191,0.77,192,0.799,194,0.959,196,0.814,198,0.814,200,0.799,202,0.814,204,0.799,206,0.77,207,0.784,208,1.172,210,0.77,211,0.799,212,0.799,215,0.814,219,0.814,221,0.799,223,0.814,224,0.814,225,0.799,227,0.784,228,0.814,230,0.799,233,0.799,235,0.77,236,0.799,238,0.784,240,0.704,242,0.784,245,0.784,247,0.784,249,0.743,251,0.799,253,0.799,256,0.799,259,0.799,261,0.799,263,0.743,265,0.799,266,0.799,268,0.799,271,0.77,272,0.77,274,0.784,275,0.948,276,0.799,277,0.784,278,0.784,279,0.799,280,0.784,281,0.799,283,0.784,285,0.799,287,0.799,289,0.799,291,0.799,292,0.756,293,0.77,295,0.784,297,0.784,299,0.784,301,0.784,304,0.784,308,0.003,309,0.003,324,5.691,325,2.247,326,4.169,342,1.155,347,1.952,358,2.782,367,2.155,420,4.252,421,2.553,422,5.306,438,1.021,443,1.766,448,2.036,450,1.746,457,1.876,508,2.247,509,2.782,510,2.782,515,1.291,522,1.462,523,1.502,555,2.553,565,2.553,570,2.885,571,2.553,575,2.782,604,1.746,618,5.964,640,2.036,712,1.638,713,2.782,717,1.929,792,2.782,814,2.782,820,1.746,821,1.952,833,1.638,835,1.291,836,1.322,864,2.133,868,2.553,869,3.643,876,2.553,918,2.688,919,2.782,920,4.794,922,1.808,954,1.69,955,3.903,1042,2.247,1043,2.036,1044,1.808,1048,3.959,1050,2.868,1053,2.782,1055,2.036,1056,2.868,1062,3.643,1063,3.435,1064,2.383,1066,2.553,1071,2.782,1096,2.383,1103,3.667,1104,2.247,1105,2.782,1106,2.133,1121,4.252,1134,2.383,1251,3.903,1257,3.903,1263,2.133,1271,2.782,1309,3.903,1310,2.553,1311,2.782,1323,2.247,1324,2.782,1342,2.782,1394,2.782,1411,4.252,1422,2.133,1423,1.746,1442,1.952,1483,2.782,1501,2.782,1502,1.876,1589,1.876,1590,4.252,1592,2.133,1593,4.422,1611,1.952,1614,1.69,1623,1.952,1660,6.708,1690,2.782,1695,2.553,1696,2.782,1697,2.133,1705,2.247,1706,2.247,1712,2.247,1730,2.782,1766,2.036,1767,3.903,1768,2.247,1831,2.782,1836,2.782,1882,2.782,1887,2.036,1895,2.383,1915,2.782,1916,2.553,1919,2.782,1961,2.782,2013,2.782,2014,2.553,2015,2.782,2040,2.782,2055,2.782,2066,2.133,2138,2.782,2153,3.903,2154,2.553,2155,2.782,2191,2.553,2192,2.782,2195,1.808,2222,2.782,2283,2.782,2289,4.422,2290,2.782,2322,2.553,2324,2.553,2335,2.782,2370,2.782,2386,2.782,2410,2.782,2411,2.553,2412,5.162,2462,2.553,2471,2.553,2484,2.782,2485,2.782,2491,2.383,2492,2.782,2493,2.782,2535,2.782,2622,2.782,2638,4.669,2641,4.422,2736,2.553,2737,2.782,2738,2.782,2761,2.782,2830,3.903,2851,2.383,2869,2.782,2874,2.782,2940,2.782,2998,2.782,3010,2.782,3011,2.782,3040,2.782,3069,2.782,3083,6.053,3111,2.782,3252,2.782,3317,4.252,3349,2.247,3350,2.782,3351,2.782,3365,2.782,3440,2.782,3517,2.782,3518,2.782,3524,2.247,3525,5.335,3529,2.553,3530,2.553,3531,2.553,3540,2.553,3565,2.782,3573,3.643,3575,4.252,3581,2.782,3614,2.782,3633,2.782,3673,2.782,3712,2.553,3739,2.782,3751,2.782,3834,2.782,3905,2.782,3906,2.782,3912,2.782,3913,2.782,3915,2.782,3916,2.782,3933,6.228,3934,2.782,3943,2.782,3945,2.782,4030,2.782,4031,3.643,4032,3.128,4033,5.805,4034,3.128,4035,9.34,4036,3.128,4037,7.385,4038,3.128,4039,3.128,4040,3.128,4041,3.128,4042,3.128,4043,4.782,4044,3.128,4045,5.805,4046,3.128,4047,3.128,4048,3.128,4049,3.128,4050,4.782,4051,3.128,4052,3.128,4053,6.5,4054,4.782,4055,3.128,4056,4.782,4057,3.128,4058,2.782,4059,2.782,4060,4.252,4061,2.782,4062,3.128,4063,3.128,4064,5.805,4065,4.782,4066,3.128,4067,3.128,4068,3.128,4069,4.782,4070,7.003,4071,7.003,4072,3.128,4073,4.782,4074,4.782,4075,4.782,4076,3.128,4077,3.128,4078,3.128,4079,3.128,4080,4.782,4081,7.003,4082,3.128,4083,3.128,4084,5.805,4085,4.782,4086,3.128,4087,4.782,4088,3.128,4089,3.128,4090,3.128,4091,3.128,4092,4.782,4093,4.782,4094,5.805,4095,6.5,4096,4.782,4097,3.128,4098,7.003,4099,3.128,4100,7.003,4101,3.128,4102,4.782,4103,3.128,4104,3.128,4105,3.128,4106,3.128,4107,3.128,4108,3.128,4109,3.128,4110,3.128,4111,3.128,4112,3.128,4113,3.128,4114,3.128,4115,3.128,4116,4.782,4117,4.782,4118,3.128,4119,3.128,4120,3.128,4121,3.128,4122,3.128,4123,2.782,4124,2.782,4125,3.128,4126,3.128,4127,3.128,4128,3.128,4129,3.128,4130,3.128,4131,3.128,4132,3.128,4133,3.128,4134,3.128,4135,3.128,4136,3.128,4137,3.128,4138,3.128,4139,2.782,4140,4.252,4141,2.782,4142,4.782,4143,3.128,4144,5.805,4145,4.782,4146,4.782,4147,5.805,4148,3.128,4149,3.128,4150,3.128,4151,3.128,4152,3.128,4153,2.782,4154,2.782,4155,2.782,4156,2.782,4157,4.252,4158,3.128,4159,3.128]],["title/dependencies.html",[58,1.975,3976,2.274]],["body/dependencies.html",[12,4.669,13,3.698,24,0.007,58,2.326,132,0.619,134,2.699,185,3.153,213,1.717,308,0.006,309,0.006,493,5.214,532,3.822,562,6.087,563,6.087,577,4.916,619,3.698,1098,4.456,1099,4.669,1689,5.322,1793,5.587,1846,6.087,3674,4.916,3957,6.087,3975,5.214,4009,6.087,4012,7.269,4024,6.087,4160,6.087,4161,9.492,4162,6.087,4163,6.845,4164,6.087,4165,6.087,4166,6.845,4167,4.916,4168,6.845,4169,6.845,4170,6.845,4171,7.269,4172,6.845,4173,6.087,4174,6.845,4175,6.845,4176,6.087,4177,6.845,4178,6.845,4179,6.845,4180,6.845,4181,6.845,4182,6.845]],["title/miscellaneous/functions.html",[570,2.58,4183,3.103]],["body/miscellaneous/functions.html",[24,0.007,32,0.806,65,1.571,86,1.387,87,0.965,88,0.965,308,0.006,309,0.006,359,3.078,373,1.719,376,2.682,555,5.803,561,6.322,570,3.155,571,7.25,690,7.215,1566,4.959,3525,5.416,3529,6.824,3530,6.824,3531,6.824,3539,5.803,3545,6.322,3547,6.322,3548,6.322,4183,5.416,4184,7.109,4185,7.898]],["title/index.html",[32,0.462,1082,2.541,2746,2.925]],["body/index.html",[0,0.421,3,0.395,8,0.438,14,4.502,18,2.165,24,0.007,32,0.747,34,2.888,55,1.039,56,2.165,58,1.658,60,0.427,61,4.801,62,4.618,64,0.485,66,0.665,71,1.109,84,1.531,87,0.53,135,2.279,145,0.213,146,0.138,168,3.504,243,1.652,275,1.307,308,0.005,309,0.005,310,1.747,312,2.942,319,2.194,357,2.165,384,2.433,428,3.23,438,1.593,487,2.478,493,3.716,515,3.08,519,3.943,526,3.043,529,3.982,530,4.289,578,3.504,587,2.165,589,3.679,610,3.951,619,4.316,626,4.792,676,2.926,708,3.504,710,4.313,714,3.982,717,1.968,731,4.11,773,4.654,840,4.792,855,4.338,925,6.09,933,6.09,961,2.112,989,3.176,1082,4.11,1146,7.104,1244,5.683,1330,3.163,1461,3.951,1474,3.043,1518,3.504,1551,4.494,1554,5.649,1555,3.808,1580,4.494,1602,4.654,1731,5.364,1803,3.043,1855,3.982,1983,6.634,2049,4.338,2093,5.088,2229,3.504,2623,3.176,2660,4.338,2746,3.504,2750,3.716,2771,4.494,3004,3.982,3178,3.716,3417,4.338,3538,6.314,3634,6.09,3873,4.338,3922,5.088,3975,3.716,3976,5.113,3979,4.338,4016,3.716,4022,5.359,4031,5.019,4167,6.314,4171,4.338,4176,4.338,4186,4.878,4187,4.878,4188,7.46,4189,4.878,4190,4.878,4191,4.338,4192,4.878,4193,6.634,4194,4.878,4195,7.104,4196,4.878,4197,4.878,4198,4.878,4199,5.859,4200,4.11,4201,5.378,4202,4.878,4203,6.811,4204,6.588,4205,4.878,4206,4.878,4207,4.878,4208,4.878,4209,4.878,4210,4.338,4211,4.338,4212,4.878,4213,4.878,4214,4.878,4215,4.878,4216,4.878,4217,4.878,4218,6.81,4219,5.683,4220,4.338,4221,4.338,4222,4.878,4223,3.716,4224,4.878,4225,4.878,4226,4.878,4227,4.878,4228,4.878,4229,4.878,4230,4.878,4231,4.878,4232,6.588,4233,6.588,4234,4.878,4235,4.878,4236,4.878,4237,4.878,4238,4.878,4239,4.878,4240,4.878,4241,4.878,4242,4.878,4243,4.878,4244,4.878,4245,4.878,4246,4.338,4247,6.588,4248,4.878,4249,4.878,4250,4.878,4251,4.878,4252,4.878,4253,4.878,4254,4.878,4255,4.878,4256,5.859,4257,6.588,4258,4.878,4259,4.878,4260,4.878,4261,4.338,4262,4.878,4263,4.878]],["title/modules.html",[310,1.373]],["body/modules.html",[24,0.006,185,3.815,186,4.084,308,0.006,309,0.006,310,1.382,311,4.74,548,4.74,554,3.958,1033,4.501,1039,4.74,1040,4.501,1041,4.296,1699,4.501,1707,4.501,1708,4.296,1709,4.117,1710,4.501,1711,4.296,2211,4.501,2316,5.027,2528,4.74,2821,4.74,3509,4.74,3733,4.74,3829,4.74,3898,5.027,4264,9.893,4265,9.893]],["title/overview.html",[4266,4.996]],["body/overview.html",[0,0.119,1,1.915,19,1.192,23,0.693,24,0.007,25,1.383,58,0.826,110,1.75,141,0.878,145,0.106,146,0.069,182,0.448,184,0.482,191,1.214,192,1.782,196,1.815,198,1.815,200,1.782,202,1.815,204,1.782,206,1.214,207,1.236,210,1.214,211,1.782,212,1.782,215,1.815,219,1.815,221,1.782,223,1.815,224,1.815,225,1.782,227,1.75,228,1.815,230,1.782,233,1.782,235,1.719,236,1.782,238,1.75,240,1.57,242,1.75,245,1.75,247,1.75,249,1.658,251,1.782,253,1.915,256,1.782,259,1.782,261,1.782,263,1.658,265,1.782,266,1.782,268,1.782,271,1.719,272,1.719,274,1.75,276,1.782,277,1.75,278,1.75,279,1.782,280,1.881,281,1.782,283,1.75,285,1.782,287,1.782,289,1.782,291,1.782,293,1.719,295,1.75,297,1.75,299,1.75,301,1.75,304,1.75,308,0.003,309,0.003,310,0.821,311,4.457,312,0.958,313,2.16,314,2.16,315,2.16,316,2.16,317,1.581,318,0.917,319,0.809,342,1.82,367,0.577,448,3.208,450,2.752,508,3.54,523,2.366,548,6.33,549,2.16,550,2.16,551,2.16,552,2.16,553,2.16,554,5.638,604,2.752,744,1.745,833,2.58,836,2.083,918,0.734,954,2.663,1033,6.522,1034,2.16,1035,2.16,1036,2.16,1037,2.16,1038,2.16,1039,6.665,1040,6.359,1041,5.451,1042,3.54,1043,3.208,1044,2.849,1103,1.272,1104,5.013,1106,4.76,1423,2.752,1571,1.657,1611,3.075,1682,2.16,1683,2.16,1685,2.16,1686,2.16,1699,6.561,1700,2.16,1701,2.16,1702,2.16,1703,2.16,1704,2.16,1705,5.013,1706,5.013,1707,6.215,1708,5.511,1709,5.224,1710,5.561,1711,5.125,1712,3.54,1766,3.208,1887,3.208,1909,2.16,1910,2.16,1911,2.16,1912,2.16,2032,2.16,2033,2.16,2034,2.16,2211,6.295,2212,2.16,2213,2.16,2215,2.16,2276,2.16,2277,2.16,2278,2.16,2279,2.16,2316,6.378,2317,2.16,2318,2.16,2320,2.16,2321,2.16,2528,4.457,2529,2.16,2530,2.16,2532,2.16,2821,6.244,2822,2.16,2823,2.16,2825,2.16,2826,2.16,3064,2.16,3065,2.16,3066,2.16,3067,2.16,3311,2.16,3312,2.16,3314,2.16,3315,2.16,3349,5.013,3361,2.16,3362,2.16,3509,5.857,3510,2.16,3511,2.16,3514,2.16,3569,2.16,3570,2.16,3733,4.457,3734,2.16,3735,2.16,3736,2.16,3826,2.16,3827,2.16,3828,2.16,3829,6.466,3891,2.16,3892,2.16,3894,2.16,3898,5.997,3899,2.16,3900,2.16,3901,2.16,4266,1.851,4267,2.43,4268,2.43,4269,2.43,4270,2.43,4271,2.43]],["title/miscellaneous/variables.html",[618,3.964,4183,3.103]],["body/miscellaneous/variables.html",[0,0.073,4,0.696,8,0.291,9,1.212,12,2.815,13,1.399,24,0.007,25,0.761,26,1.291,27,0.3,32,0.168,34,1.246,35,0.542,38,1.184,40,0.694,41,0.353,42,0.613,54,1.32,55,0.566,60,0.07,64,0.711,65,0.328,71,0.788,74,0.65,76,0.597,87,1.086,102,0.858,108,0.662,113,0.904,122,0.829,126,0.585,130,0.802,138,2.114,139,1.066,140,1.131,141,0.936,142,1.244,146,0.174,162,1.591,165,0.777,167,1.122,168,1.861,170,1.131,183,0.386,184,0.294,194,0.682,242,0.372,243,1.471,245,0.372,247,0.372,252,0.346,275,0.294,292,0.626,302,1.093,308,0.002,309,0.002,310,0.542,317,1.045,319,0.494,328,0.858,335,1.066,350,2.15,360,1.21,364,0.89,376,0.977,384,0.548,394,3.193,396,1.013,409,1.223,425,1.212,427,0.754,428,1.492,429,1.616,430,1.86,431,1.095,437,1.131,438,0.846,440,0.754,441,0.926,443,0.548,444,1.279,481,0.694,506,1.212,513,1.554,515,2.124,516,1.446,522,0.694,526,2.921,528,1.316,538,2.303,570,1.529,589,1.446,590,1.212,615,0.485,618,1.013,623,3.603,676,1.554,696,3.064,718,2.037,728,3.223,744,1.066,773,0.926,779,0.777,794,1.497,800,2.452,807,1.399,818,2.625,835,1.704,850,5.913,918,1.041,934,2.243,937,0.643,938,2.625,939,2.964,942,1.446,944,0.733,947,1.767,948,1.32,949,1.212,961,2.396,970,1.179,1027,0.926,1076,3.919,1078,0.926,1110,1.066,1124,2.114,1129,1.32,1134,3.144,1137,3.144,1138,2.078,1140,2.303,1141,1.32,1270,3.843,1275,1.013,1291,3.919,1330,1.981,1347,1.212,1506,3.048,1509,1.616,1553,1.554,1559,1.212,1566,0.829,1615,0.967,1621,2.815,1622,1.066,1623,1.616,1659,0.829,1743,2.303,1767,1.212,1768,3.363,1798,1.32,1845,4.002,1852,1.066,1884,4.9,1895,2.625,1916,2.813,1920,2.114,1923,1.013,1927,2.813,1933,4.921,2089,1.066,2105,3.144,2175,1.013,2199,1.212,2239,1.32,2271,1.32,2295,3.67,2322,1.212,2324,2.813,2419,1.32,2462,2.813,2471,2.813,2569,1.32,2582,2.303,2661,3.822,2728,1.212,2729,2.813,2775,2.813,2776,1.212,2777,1.212,2830,1.212,2851,3.919,2852,1.32,2955,2.303,2963,1.32,3004,4.199,3006,4.921,3012,2.303,3024,2.303,3030,1.32,3041,2.303,3116,1.32,3136,6.255,3153,1.32,3525,1.131,3539,1.212,3540,2.813,3541,1.32,3542,1.32,3543,1.32,3544,1.013,3567,3.67,3634,1.212,3674,1.066,3712,2.813,3753,1.32,3754,3.064,3763,4.574,3764,2.303,3802,2.303,3805,2.303,3914,1.32,3917,1.32,3968,5.217,3972,2.303,3973,2.303,3997,1.013,4002,1.32,4016,1.973,4031,3.567,4058,1.32,4059,2.303,4060,1.32,4061,3.064,4123,1.32,4124,2.303,4139,1.32,4140,3.67,4141,1.32,4153,1.32,4154,3.67,4155,1.32,4156,2.303,4157,1.32,4167,1.066,4183,1.131,4185,1.32,4223,3.144,4256,1.32,4272,1.485,4273,2.59,4274,1.485,4275,1.485,4276,1.485,4277,1.485,4278,1.485,4279,1.485,4280,1.485,4281,1.485,4282,1.485,4283,1.485,4284,1.485,4285,1.485,4286,1.485,4287,1.485,4288,2.59,4289,1.485,4290,1.485,4291,1.485,4292,1.485,4293,2.59,4294,1.485,4295,1.485,4296,5.534,4297,3.446,4298,2.59,4299,6.408,4300,1.485,4301,2.59,4302,1.485,4303,1.485,4304,4.127,4305,6.827,4306,5.534,4307,1.485,4308,1.485,4309,4.127,4310,3.446,4311,1.485,4312,1.485,4313,1.485,4314,1.485,4315,1.485,4316,2.59,4317,4.127,4318,3.446,4319,6.156,4320,5.144,4321,4.127,4322,1.485,4323,2.59,4324,3.446,4325,1.485,4326,2.59,4327,1.485,4328,1.485,4329,2.59,4330,2.59,4331,3.446,4332,4.682,4333,1.485,4334,4.127,4335,1.485,4336,1.485,4337,2.59,4338,1.485,4339,5.534,4340,5.144,4341,5.534,4342,2.59,4343,2.59,4344,2.59,4345,2.59,4346,2.59,4347,2.59,4348,2.59,4349,1.485,4350,5.144,4351,1.485,4352,1.485,4353,2.59,4354,1.485,4355,1.485,4356,1.485,4357,1.485,4358,1.485,4359,1.485,4360,2.59,4361,4.127,4362,1.485,4363,1.485,4364,2.59,4365,1.485,4366,1.485,4367,1.485,4368,1.485,4369,1.485,4370,2.59,4371,2.59,4372,1.485,4373,1.485,4374,1.485,4375,2.59,4376,2.59,4377,2.59,4378,1.485,4379,1.485,4380,1.485,4381,2.59,4382,1.485,4383,2.59,4384,1.485,4385,1.485,4386,1.485,4387,1.485,4388,2.59,4389,2.59,4390,1.485,4391,1.485,4392,1.485,4393,1.485,4394,1.485,4395,3.446,4396,1.485,4397,1.485,4398,1.485,4399,1.485,4400,1.485,4401,4.682,4402,1.485,4403,1.485,4404,1.485,4405,1.485,4406,1.485,4407,4.127,4408,1.485,4409,1.485,4410,1.485,4411,1.485,4412,3.446,4413,1.485,4414,1.485,4415,1.32,4416,1.485,4417,1.485,4418,1.485,4419,1.485,4420,2.59,4421,1.485,4422,1.485,4423,1.485,4424,1.485,4425,3.446,4426,2.59,4427,1.485,4428,1.485,4429,2.59,4430,1.485,4431,2.59,4432,4.127,4433,2.59,4434,3.446,4435,1.485,4436,1.485,4437,4.127,4438,1.485,4439,1.485,4440,1.485,4441,2.59,4442,1.485,4443,2.59,4444,4.682,4445,4.682,4446,1.485,4447,1.485,4448,1.485,4449,1.485,4450,1.485,4451,1.485,4452,1.485,4453,1.485,4454,1.485,4455,1.485,4456,1.485,4457,1.485,4458,1.485,4459,1.485,4460,2.59,4461,4.127,4462,1.485,4463,1.485,4464,2.59,4465,1.485,4466,1.485,4467,1.485,4468,1.485,4469,2.59,4470,2.59,4471,2.59,4472,1.485,4473,2.59,4474,1.485,4475,1.485,4476,1.485,4477,1.485,4478,1.485,4479,1.485,4480,1.485,4481,1.485,4482,4.127,4483,1.485,4484,1.485,4485,1.485,4486,1.485,4487,1.485,4488,1.32,4489,1.485,4490,1.485,4491,1.485,4492,6.63,4493,1.485,4494,3.446,4495,2.59,4496,1.485,4497,1.485,4498,1.485,4499,1.485,4500,2.59,4501,1.485,4502,1.485,4503,1.485,4504,1.485,4505,1.485,4506,1.485,4507,1.485,4508,1.485,4509,1.485,4510,1.485,4511,1.485,4512,1.485,4513,1.485,4514,1.485,4515,2.59,4516,1.485,4517,2.59,4518,1.485,4519,1.485,4520,1.485,4521,1.485,4522,1.485,4523,1.485,4524,1.485,4525,1.485,4526,1.485,4527,1.485,4528,2.59,4529,1.485,4530,1.485,4531,1.485,4532,1.485,4533,1.485,4534,1.485,4535,1.485,4536,1.485,4537,1.485,4538,1.485,4539,1.485,4540,1.485,4541,1.485,4542,1.485,4543,1.485,4544,3.446,4545,1.485,4546,1.485,4547,1.485,4548,1.485,4549,1.485,4550,1.485,4551,1.485,4552,1.485,4553,1.485,4554,1.485,4555,2.59,4556,3.446,4557,1.485,4558,1.485,4559,1.485,4560,2.59,4561,2.59,4562,1.485,4563,2.59,4564,2.59,4565,2.59,4566,1.485,4567,4.127,4568,1.485,4569,1.485,4570,1.32,4571,2.59,4572,1.485,4573,1.485,4574,1.485,4575,2.59,4576,4.127,4577,2.59,4578,2.59,4579,2.59,4580,1.485,4581,1.485,4582,1.485,4583,1.485,4584,1.485,4585,1.485,4586,1.485,4587,2.59,4588,2.59,4589,2.59,4590,1.485,4591,4.127,4592,1.485,4593,1.485,4594,2.59,4595,1.485,4596,1.485,4597,1.485,4598,1.485,4599,1.485,4600,1.485,4601,1.485,4602,1.485,4603,1.485,4604,1.485,4605,1.485,4606,1.485,4607,1.485,4608,1.485,4609,1.485,4610,1.485,4611,1.485,4612,3.446,4613,1.485,4614,1.485,4615,1.485,4616,1.485,4617,1.485,4618,1.485,4619,1.485,4620,1.485,4621,1.485,4622,1.485,4623,1.485,4624,1.485,4625,1.485]],["title/additional-documentation/project-setup-tutorial.html",[531,0.818,2432,1.05,3922,2.106,3997,2.106,3998,2.011]],["body/additional-documentation/project-setup-tutorial.html",[0,0.37,2,0.3,8,0.263,14,2.621,23,1.913,24,0.007,25,1.236,27,1.7,34,1.81,44,1.087,55,1.017,56,2.222,58,1.701,60,0.441,62,2.893,71,1.416,74,1.681,85,3.414,87,0.544,88,0.544,102,2.893,103,1.81,113,0.683,132,0.453,134,1.974,141,1.81,142,1.621,145,0.329,146,0.142,162,1.701,168,3.595,185,2.585,213,1.255,308,0.005,309,0.005,310,1.048,312,1.974,322,1.889,337,5.472,409,1.483,428,2.167,429,3.123,431,2.116,452,2.116,493,5.758,512,3.51,516,2.795,522,3.133,532,2.795,556,2.339,558,2.222,578,6.79,581,4.815,583,5.472,584,6.15,586,5.429,588,5.472,589,4.22,610,3.002,619,2.704,626,3.002,635,2.893,709,6.721,710,4.369,718,4.542,728,2.621,729,2.893,738,4.364,744,3.595,745,3.813,773,3.123,835,2.066,840,4.021,858,2.893,942,2.795,961,2.903,989,3.259,1033,5.506,1081,1.81,1082,4.182,1330,3.218,1533,2.893,1553,3.002,1554,4.842,1579,3.813,1623,3.123,1688,3.595,1689,4.364,1731,4.182,1787,4.086,1852,3.595,1906,4.572,1923,3.414,2101,3.414,2175,3.414,2244,4.572,2247,4.021,2623,5.48,2666,3.414,2731,5.107,2742,4.021,2771,3.414,3025,4.451,3178,5.758,3391,3.414,3922,6.133,3975,3.813,3976,4.22,3986,4.451,3997,3.414,3998,4.921,4160,5.961,4162,4.451,4167,3.595,4193,5.961,4200,4.182,4201,4.086,4218,6.15,4219,3.813,4220,7.179,4221,4.451,4261,4.451,4626,5.005,4627,5.506,4628,4.451,4629,5.005,4630,6.704,4631,6.704,4632,5.005,4633,9.28,4634,5.005,4635,5.005,4636,6.704,4637,5.005,4638,5.005,4639,4.451,4640,6.704,4641,5.005,4642,4.086,4643,5.005,4644,5.005,4645,5.005,4646,5.005,4647,5.005,4648,5.005,4649,5.005,4650,7.559,4651,5.005,4652,5.005,4653,7.559,4654,6.704,4655,5.005,4656,5.005,4657,5.005,4658,5.005,4659,5.005,4660,6.704,4661,5.005,4662,5.005,4663,4.815,4664,5.005,4665,5.005,4666,6.704,4667,4.451,4668,5.005,4669,3.813,4670,5.005,4671,5.005,4672,5.005,4673,5.005,4674,5.005,4675,5.005,4676,5.005,4677,5.005,4678,5.005,4679,5.005]],["title/additional-documentation/project-setup-tutorial/routes.html",[512,2.132,531,1.079,2432,1.384]],["body/additional-documentation/project-setup-tutorial/routes.html",[0,0.456,4,1.417,24,0.007,60,0.331,70,3.063,71,1.396,142,1.697,162,2.384,308,0.006,309,0.006,384,2.591,512,4.994,626,5.297,718,3.463,728,3.673,729,4.055,739,4.208,822,3.368,1461,4.975,1554,4.208,1906,4.785,1982,4.567,1986,4.785,2666,5.658,3387,6.238,3391,4.785,3940,6.238,3998,5.4,4218,5.344,4680,7.015,4681,7.015,4682,7.015,4683,7.015,4684,7.015,4685,7.015,4686,7.376,4687,7.015,4688,7.015]],["title/additional-documentation/project-setup-tutorial/authorization.html",[531,1.079,2432,1.384,4669,3.103]],["body/additional-documentation/project-setup-tutorial/authorization.html",[0,0.35,4,1.694,24,0.007,55,0.864,61,3.993,62,4.134,70,3.098,71,1.203,74,1.793,162,2.43,249,1.699,252,2.077,308,0.006,309,0.006,349,3.53,384,2.641,431,3.023,512,4.809,520,6.391,718,4.141,728,3.744,729,4.134,827,5.462,961,3.097,1554,4.289,1731,4.462,1906,4.878,1982,4.656,2390,5.838,3922,4.878,3997,4.878,3998,5.796,4669,6.391,4689,6.36,4690,6.36,4691,6.36,4692,6.36]],["title/additional-documentation/project-setup-tutorial/custom-fields.html",[41,0.834,171,1.355,531,0.931,2432,1.194]],["body/additional-documentation/project-setup-tutorial/custom-fields.html",[0,0.456,4,1.194,11,2.603,14,2.184,15,1.687,16,4.119,18,3.738,19,1.43,23,1.96,24,0.007,25,1.091,26,1.379,27,1.387,28,2.009,30,1.566,33,0.999,34,1.508,35,1.975,36,3.546,38,1.523,40,3.209,41,2.171,42,3.084,44,0.676,49,2.502,52,2.502,55,1.057,56,2.624,58,1.418,60,0.386,61,3.301,62,2.412,64,0.414,66,0.569,70,1.541,71,0.702,74,1.483,76,1.185,81,2.502,84,2.345,87,0.812,88,0.453,89,2.502,99,2.502,103,2.483,110,2.112,112,2.657,114,2.12,121,1.362,122,3.301,131,3.546,132,0.535,133,3.546,134,1.645,135,3.209,141,1.508,143,2.502,144,2.502,145,0.344,146,0.224,162,1.418,171,3.609,173,2.412,175,3.406,181,2.502,194,1.134,208,0.843,213,1.046,308,0.004,309,0.004,310,0.873,321,3.835,322,1.574,326,2.997,328,3.418,338,4.504,359,1.807,360,1.95,365,1.893,376,2.231,384,1.541,392,2.502,409,1.236,428,2.974,431,1.763,432,4.247,440,2.12,443,2.536,460,2.502,517,2.254,518,2.603,519,2.059,530,2.716,535,1.336,570,1.852,587,1.852,589,3.301,618,2.846,676,2.502,717,1.683,718,4.043,728,2.184,729,2.412,739,2.502,771,2.716,793,3.596,822,2.003,844,2.603,934,4.471,937,3.79,939,2.997,942,2.329,944,3.39,950,2.412,982,2.716,1043,3.849,1081,1.508,1094,2.716,1098,2.716,1108,2.254,1110,2.997,1131,2.997,1134,3.178,1138,3.316,1148,3.546,1270,2.502,1312,3.178,1422,2.846,1509,4.285,1533,3.97,1554,2.502,1566,2.329,1571,4.033,1574,4.827,1575,3.406,1654,2.716,1923,4.033,1984,3.406,1986,4.033,2016,3.71,2024,2.997,2053,3.71,2091,5.258,2148,3.71,2175,4.033,2225,3.406,2245,2.716,2525,3.178,2562,4.504,2640,2.603,2666,2.846,2689,3.71,2788,3.406,2789,3.406,2799,5.38,3054,3.406,3391,5.87,3544,4.033,3681,3.406,3985,3.71,4218,3.178,4219,3.178,4246,3.71,4415,3.71,4488,3.71,4628,3.71,4642,3.406,4663,2.997,4686,3.71,4693,4.172,4694,5.913,4695,4.172,4696,4.172,4697,4.172,4698,4.172,4699,4.172,4700,4.172,4701,4.172,4702,4.172,4703,5.258,4704,4.172,4705,4.172,4706,4.172,4707,4.172,4708,4.172,4709,4.172,4710,4.172,4711,8.191,4712,4.172,4713,4.172,4714,4.172,4715,5.913,4716,4.172,4717,4.172,4718,4.172,4719,4.172,4720,4.172,4721,4.172,4722,4.172,4723,5.913,4724,4.172,4725,3.71,4726,4.172,4727,4.172,4728,3.71,4729,4.172,4730,4.172,4731,4.172,4732,4.172]],["title/additional-documentation/project-setup-tutorial/adding-new-packages.html",[71,0.52,531,0.818,739,1.852,2432,1.05,3976,1.724]],["body/additional-documentation/project-setup-tutorial/adding-new-packages.html",[8,0.335,13,4.232,14,3.34,24,0.006,45,4.698,55,0.771,56,3.477,58,2.881,61,4.733,62,4.901,70,3.265,71,1.426,87,0.921,162,2.168,275,1.554,308,0.006,309,0.006,310,1.336,350,3.98,474,4.374,484,3.98,718,4.729,728,3.34,729,3.688,739,3.826,744,4.582,745,4.86,773,3.98,961,3.392,1078,4.887,1223,3.688,1518,4.582,1546,5.673,1554,3.826,1555,3.688,1571,4.351,1623,3.98,1731,4.887,1906,4.351,1924,5.968,2093,5.343,2101,4.351,2491,5.968,2799,4.351,2888,5.673,2910,5.673,3178,4.86,3683,6.394,3976,5.399,4016,6.735,4022,4.582,4191,5.673,4195,6.966,4199,5.673,4200,5.516,4201,6.92,4203,7.217,4210,5.673,4211,5.673,4223,4.86,4639,5.673,4642,5.208,4667,6.966,4733,6.38,4734,6.38,4735,6.38,4736,6.38,4737,6.38,4738,6.38,4739,6.38,4740,6.38,4741,6.38,4742,6.38]],["title/additional-documentation/project-setup-tutorial/publishing.html",[531,1.079,2432,1.384,4203,3.325]],["body/additional-documentation/project-setup-tutorial/publishing.html",[0,0.35,4,1.694,24,0.007,55,0.864,61,3.993,62,4.134,70,3.098,71,1.203,74,1.793,162,2.43,249,1.699,252,2.077,308,0.006,309,0.006,349,3.53,384,2.641,431,3.023,512,4.809,520,6.391,718,4.141,728,3.744,729,4.134,827,5.462,961,3.097,1554,4.289,1731,4.462,1906,4.878,1982,4.656,2390,5.838,3922,4.878,3997,4.878,3998,5.796,4669,6.391,4689,6.36,4690,6.36,4691,6.36,4692,6.36]],["title/additional-documentation/ui.html",[531,1.079,840,2.443,2432,1.384]],["body/additional-documentation/ui.html",[0,0.47,14,3.684,24,0.006,34,2.544,41,1.974,112,2.416,123,4.22,126,2.775,146,0.199,171,3.205,194,1.162,252,1.641,308,0.006,309,0.006,331,3.989,423,3.575,428,3.047,438,2.297,522,3.288,556,3.288,619,3.801,710,4.067,826,3.203,840,5.591,1108,3.801,1131,5.054,1258,5.054,1474,4.39,2536,6.257,2742,4.22,3391,4.799,3544,4.799,3615,5.36,3681,5.743,3952,6.257,3976,3.928,4200,4.39,4266,5.36,4570,6.257,4627,4.799,4725,6.257,4743,7.036,4744,7.036,4745,6.257,4746,7.036,4747,7.036,4748,7.036,4749,7.036,4750,6.257]],["title/additional-documentation/ui/icons.html",[531,1.079,1506,2.651,2432,1.384]],["body/additional-documentation/ui/icons.html",[24,0.007,27,1.417,55,1.067,60,0.391,74,2.08,75,1.636,113,0.957,121,2.29,145,0.362,146,0.235,308,0.006,309,0.006,349,4.095,530,4.567,585,5.344,1081,2.536,1223,4.055,1453,6.024,1474,4.377,1506,6.368,1883,6.319,1887,5.942,1893,6.238,1894,5.727,1895,6.319,1896,7.376,1897,7.376,1898,6.238,1899,6.238]],["title/additional-documentation/ui/notificationscomponent.html",[263,0.967,531,1.079,2432,1.384]],["body/additional-documentation/ui/notificationscomponent.html",[0,0.357,4,1.15,7,2.149,15,2.082,24,0.007,25,1.051,27,1.15,33,0.762,39,1.83,55,1.025,56,2.528,64,0.8,71,0.958,72,1.721,75,1.702,76,0.824,88,0.619,113,0.777,140,4.339,145,0.351,146,0.249,263,1.353,306,1.982,308,0.005,309,0.005,310,1.193,340,1.282,394,3.709,427,2.894,430,2.06,440,4.696,452,2.408,465,2.197,474,3.18,515,3.816,516,4.074,519,3.602,522,4.533,523,4.075,535,2.336,537,6.132,587,2.528,615,1.86,635,4.653,664,3.416,676,3.416,708,4.092,739,3.416,821,4.552,834,3.293,858,3.293,907,4.75,908,5.782,910,3.885,912,4.552,918,1.721,941,4.339,951,3.885,961,2.466,1081,2.06,1223,3.293,1352,3.554,1436,2.593,1505,3.416,1550,3.18,1560,4.215,1615,4.75,1803,4.552,1851,3.602,1872,4.339,1892,4.65,2089,5.241,2150,4.339,2247,4.376,2388,4.376,2460,4.65,2666,3.885,2742,3.416,2769,5.065,2770,5.065,2771,3.885,2772,6.488,2773,5.065,2774,7.158,2775,6.571,2776,5.956,2777,4.65,2778,5.065,2779,5.065,2780,5.065,2781,4.65,2782,5.065,2783,5.065,2784,5.065,2785,5.065,2786,5.065,2787,4.092,2788,4.65,2789,4.65,2790,5.065,2791,5.065,2792,6.488,2793,5.065,2794,5.065,2795,6.488,2796,5.065,2797,5.065,2798,5.065,2799,3.885,2800,5.065]],["title/additional-documentation/ui/loadercomponent.html",[240,0.916,531,1.079,2432,1.384]],["body/additional-documentation/ui/loadercomponent.html",[4,1.575,24,0.007,55,1.094,59,5.321,60,0.299,74,1.957,75,1.478,113,0.864,116,3.009,118,2.813,130,3.424,135,2.961,145,0.276,146,0.221,170,4.828,184,1.257,240,1.902,308,0.006,309,0.006,319,2.111,359,3.66,373,1.533,384,2.34,413,4.126,427,3.22,444,3.128,452,2.679,460,3.801,484,3.22,514,3.801,531,1.679,535,2.029,587,2.813,610,3.801,826,4.399,833,4.618,939,4.552,944,3.128,959,3.745,960,3.801,1275,4.322,1505,3.801,1547,4.126,1550,4.356,1560,3.318,1578,4.552,1599,4.552,1803,4.867,1817,6.9,1851,3.128,2079,4.322,2229,5.604,2231,6.368,2243,4.126,2244,6.016,2245,5.503,2246,5.635,2247,3.801,2248,5.635,2249,5.635,2250,6.938,2251,5.635,2252,7.516,2253,5.635,2254,6.938,2255,7.516,2256,7.516,2257,5.635,2258,5.635,2259,5.173,2260,5.635,2261,5.635,2262,5.635,2263,5.635,2264,5.635,2265,5.635]],["title/additional-documentation/ui/listcomponent.html",[235,1.003,531,1.079,2432,1.384]],["body/additional-documentation/ui/listcomponent.html",[0,0.328,4,1.353,24,0.007,25,1.489,38,1.308,41,1.592,42,2.766,59,4.571,70,2.475,71,1.358,72,2.024,87,0.999,88,0.728,194,1.519,308,0.006,309,0.006,386,2.974,409,1.986,430,2.423,474,3.741,610,4.019,615,2.188,712,3.508,922,3.874,937,3.75,1081,3.132,1258,4.813,1288,5.797,1330,3.217,1436,3.051,1533,4.666,1551,4.571,2093,4.571,2094,5.959,2095,5.47,2096,5.47,2097,5.47,2098,7.51,2099,7.51,2100,5.47,2101,4.571,2102,5.47,2103,5.47,2104,5.959,2105,6.149,2106,5.959,2107,6.588,2108,5.959]],["title/additional-documentation/ui/formcomponent.html",[227,1.021,531,1.079,2432,1.384]],["body/additional-documentation/ui/formcomponent.html",[24,0.006,112,2.24,308,0.006,309,0.006,4750,6.851]],["title/additional-documentation/ui/logincomponent.html",[249,0.967,531,1.079,2432,1.384]],["body/additional-documentation/ui/logincomponent.html",[0,0.425,18,3.371,24,0.006,112,2.526,126,2.995,252,2.026,308,0.006,309,0.006,331,3.646,840,4.555,2397,6.199]],["title/additional-documentation/ui/popcomponent.html",[271,1.003,531,1.079,2432,1.384]],["body/additional-documentation/ui/popcomponent.html",[24,0.006,113,1.016,146,0.211,308,0.006,309,0.006,423,4.728,431,3.15,531,1.974,961,3.227,1523,5.677,1525,6.083,1553,4.47,1560,3.902,1845,5.083,1884,4.649,2247,4.47,2623,4.852,2742,4.47,3052,6.627,3053,6.627,3054,6.083,3055,6.627,3056,6.627]],["title/additional-documentation/ui/tabscomponent.html",[283,1.021,531,1.079,2432,1.384]],["body/additional-documentation/ui/tabscomponent.html",[4,1.538,24,0.006,55,0.92,167,3.299,305,1.982,308,0.006,309,0.006,461,5.803,1148,4.569,3615,6.959]],["title/additional-documentation/ui/selectcomponent.html",[280,1.021,531,1.079,2432,1.384]],["body/additional-documentation/ui/selectcomponent.html",[24,0.007,38,1.231,43,2.012,55,0.917,72,2.294,308,0.006,309,0.006,438,2.836,615,2.479,717,3.063,1851,3.749,3485,6.753]],["title/additional-documentation/data.html",[531,1.079,1330,1.955,2432,1.384]],["body/additional-documentation/data.html",[0,0.367,24,0.006,41,1.784,74,1.884,112,2.184,171,2.897,194,1.24,208,1.834,308,0.006,309,0.006,342,2.774,438,2.452,822,3.606,961,3.252,1330,3.606,1422,5.123,4021,6.679,4022,5.395,4266,5.722]],["title/additional-documentation/medium.html",[254,1.059,531,1.079,2432,1.384]],["body/additional-documentation/medium.html",[11,4.557,13,4.996,14,3.824,24,0.007,55,0.882,60,0.4,145,0.318,146,0.207,184,1.449,254,1.9,308,0.006,309,0.006,310,1.529,322,2.756,718,3.606,942,4.078,2528,6.101,3976,4.742,4164,7.987,4200,4.557,4627,6.126,4663,5.247]],["title/additional-documentation/tinymce.html",[531,1.079,2432,1.384,3674,2.925]],["body/additional-documentation/tinymce.html",[0,0.359,11,4.578,13,3.964,14,3.842,24,0.007,55,0.886,60,0.401,145,0.32,146,0.208,308,0.006,309,0.006,310,1.536,322,2.769,718,3.622,942,4.097,3674,5.271,3733,6.117,3976,4.755,4165,8.002,4200,4.578,4627,6.137,4663,5.271]],["title/additional-documentation/ace.html",[12,2.778,531,1.079,2432,1.384]],["body/additional-documentation/ace.html",[0,0.348,11,4.435,12,6.058,13,3.841,14,3.722,24,0.007,55,1.01,60,0.446,136,6.322,145,0.31,146,0.201,308,0.006,309,0.006,310,1.488,311,6.005,322,2.682,718,4.384,942,3.969,1894,5.803,1924,5.416,1984,5.803,2799,4.849,3683,5.803,3976,4.668,4167,5.106,4200,4.435,4627,6.058,4663,5.106,4751,8.881,4752,8.36,4753,7.109,4754,7.109,4755,7.109]],["title/additional-documentation/core-classes.html",[146,0.1,531,0.931,619,1.898,2432,1.194]],["body/additional-documentation/core-classes.html",[0,0.353,14,3.778,24,0.006,55,0.872,146,0.239,308,0.006,309,0.006,380,2.503,428,3.125,469,4.029,487,3.666,519,3.562,527,4.029,589,4.029,619,4.828,710,4.171,773,4.502,806,5.497,815,5.183,944,3.562,951,4.922,1577,5.497,1731,4.502,2175,4.922,2742,5.36,3538,5.183,3544,4.922,3976,4.029,3998,5.491,4022,5.183,4173,6.417,4200,4.502,4219,5.497,4223,5.497,4627,4.922,4745,6.417,4756,7.216,4757,7.216,4758,7.216,4759,7.216,4760,7.216]],["title/additional-documentation/core-classes/field.html",[41,0.967,531,1.079,2432,1.384]],["body/additional-documentation/core-classes/field.html",[0,0.316,7,2.978,24,0.007,33,0.863,34,2.335,38,1.535,41,2.2,42,3.518,43,1.711,44,1.439,55,1.073,56,2.866,71,1.086,76,0.934,87,0.701,112,1.878,118,3.94,142,1.909,194,1.408,308,0.006,309,0.006,365,2.067,384,2.385,430,3.081,431,2.729,443,2.385,587,2.866,858,4.562,895,5.271,944,3.187,1081,2.853,1108,4.605,1127,4.638,1131,4.638,1436,2.94,1502,3.873,1547,4.204,1548,5.271,1549,4.919,1550,4.406,1551,4.404,1552,5.742,1553,4.733,1554,3.873,1555,3.733,1556,5.271,1557,5.742,1558,5.742,1559,5.271,1560,3.381,1561,5.742,1562,5.271,1563,5.271,1564,6.012,1565,6.442,1566,3.605,1567,5.742,1568,6.012,1569,5.742,1570,5.742,1571,4.404,1572,5.742,1573,5.742,1574,5.271,1575,5.271,1576,5.742,1577,4.919,1578,4.638,1579,4.919,1580,4.404]],["title/additional-documentation/core-classes/item.html",[43,1.079,531,1.079,2432,1.384]],["body/additional-documentation/core-classes/item.html",[24,0.007,38,1.483,41,2.071,42,2.532,43,2.506,55,1.053,71,1.51,74,1.917,85,4.184,87,0.905,118,2.723,142,2.17,146,0.174,165,3.212,308,0.005,309,0.005,384,3.076,392,3.679,394,3.232,430,2.764,443,3.076,570,2.723,587,3.697,728,3.212,937,3.607,959,2.945,961,3.311,1081,2.218,1108,3.314,1225,5.455,1553,5.23,1562,5.007,1563,5.007,1564,5.825,1565,6.241,1566,3.425,1568,6.643,1571,4.184,1577,4.673,1589,3.679,1614,4.131,1697,5.215,1851,3.028,2041,5.455,2044,5.007,2046,5.007,2052,5.492,2913,4.673,4728,5.455,4761,6.134,4762,6.134,4763,6.134,4764,6.134,4765,6.134,4766,6.134,4767,7.979,4768,6.134,4769,6.134,4770,6.134,4771,6.134,4772,6.134,4773,6.134,4774,6.134,4775,6.134,4776,6.134,4777,6.134,4778,6.134,4779,6.134,4780,7.646,4781,7.646,4782,6.134,4783,6.134,4784,6.134,4785,6.134,4786,6.134,4787,6.134,4788,6.134,4789,6.134,4790,6.134,4791,6.134]],["title/additional-documentation/core-classes/form.html",[112,1.184,531,1.079,2432,1.384]],["body/additional-documentation/core-classes/form.html",[24,0.007,33,0.965,38,1.17,41,2.122,43,1.912,45,5.058,71,1.419,87,0.916,112,2.599,142,2.04,308,0.006,309,0.006,426,5.891,443,3.115,570,3.203,798,5.891,944,3.562,1568,6.425,1602,4.502,2023,5.891,2024,5.183,3100,5.891,4767,7.947,4792,6.417,4793,8.434,4794,7.216,4795,7.216]],["title/additional-documentation/core-classes/collection.html",[531,1.079,712,2.132,2432,1.384]],["body/additional-documentation/core-classes/collection.html",[24,0.006,25,1.664,71,1.242,142,1.786,146,0.209,194,1.219,308,0.006,309,0.006,409,2.188,438,2.411,481,3.45,589,4.122,615,2.411,712,4.723,714,6.027,727,6.565,728,3.866,729,4.268,763,6.565,764,6.565,765,6.565,766,6.565,767,6.565,768,6.565,769,6.565,770,6.565,771,4.807]],["title/additional-documentation/core-classes/pagination.html",[531,1.079,2195,2.354,2432,1.384]],["body/additional-documentation/core-classes/pagination.html",[7,2.79,24,0.007,43,2.266,55,0.893,71,1.244,142,1.788,308,0.006,309,0.006,531,1.959,1223,4.275,1533,4.275,1539,5.044,1560,3.872,1659,4.129,1837,5.633,2024,5.311,2195,5.523,2562,5.633,2913,5.633,2914,6.576,2915,6.576,2916,6.576,2917,6.576]],["title/additional-documentation/core-classes/list.html",[194,0.673,531,1.079,2432,1.384]],["body/additional-documentation/core-classes/list.html",[4,1.276,7,2.385,14,3.309,24,0.007,25,1.669,33,0.845,35,1.323,38,1.429,41,2.005,42,3.215,43,2.064,44,1.025,55,0.764,65,1.397,71,1.063,72,1.909,74,1.585,87,1.014,186,3.215,194,1.522,308,0.006,309,0.006,328,4.503,360,2.954,365,2.023,373,1.529,376,2.385,409,1.873,443,2.334,519,3.12,615,2.064,712,3.309,729,3.654,937,3.373,959,3.739,970,2.877,1138,3.747,1509,3.943,1533,4.88,1547,4.115,1566,3.529,1614,4.208,1659,3.529,2096,5.159,2097,5.159,2098,7.388,2099,7.194,2100,5.159,2101,4.311,2102,5.159,2103,5.159,2105,5.934,2107,6.358,2195,3.654,2247,3.791,2742,3.791,2746,4.54,2787,5.595,3929,5.621,4031,4.815,4703,6.926,4792,6.926,4796,6.321,4797,7.789,4798,6.321,4799,6.321,4800,6.321,4801,6.321,4802,6.321,4803,6.321,4804,6.321,4805,6.321,4806,6.321,4807,6.321]],["title/additional-documentation/core-classes/selection.html",[438,1.33,531,1.079,2432,1.384]],["body/additional-documentation/core-classes/selection.html",[24,0.006,32,0.849,43,1.984,44,1.397,88,0.813,186,3.091,194,1.237,308,0.006,309,0.006,438,3.093,616,5.704,731,4.671,1420,5.107,1453,5.107,1547,4.874,1614,4.045,2787,5.378,4808,7.487]],["title/additional-documentation/core-classes/sorter.html",[531,1.079,2432,1.384,3524,2.925]],["body/additional-documentation/core-classes/sorter.html",[7,2.852,24,0.006,64,0.751,146,0.214,308,0.006,309,0.006,587,3.355,858,4.369,1069,6.17,1284,6.17,1360,5.758,1560,3.957,1566,4.22,2052,5.429,3524,6.222,3538,5.429]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["0",{"_index":481,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/collection.html":{}}}],["0.0.1",{"_index":4028,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":4024,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.1.0",{"_index":4017,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":4015,"title":{},"body":{"changelog.html":{}}}],["0.10.0",{"_index":3957,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.12.0",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["0.13.0",{"_index":3936,"title":{},"body":{"changelog.html":{}}}],["0.14.0",{"_index":3928,"title":{},"body":{"changelog.html":{}}}],["0.15.0",{"_index":3927,"title":{},"body":{"changelog.html":{}}}],["0.16.3",{"_index":4181,"title":{},"body":{"dependencies.html":{}}}],["0.17.0",{"_index":3925,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":4012,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.21.0",{"_index":4163,"title":{},"body":{"dependencies.html":{}}}],["0.23.0",{"_index":3920,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":4009,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.3.1",{"_index":4005,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":3999,"title":{},"body":{"changelog.html":{}}}],["0.4.1",{"_index":3994,"title":{},"body":{"changelog.html":{}}}],["0.5.0",{"_index":3993,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":3990,"title":{},"body":{"changelog.html":{}}}],["0.5.2",{"_index":3987,"title":{},"body":{"changelog.html":{}}}],["0.5.3",{"_index":3983,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":3977,"title":{},"body":{"changelog.html":{}}}],["0.7.0",{"_index":3971,"title":{},"body":{"changelog.html":{}}}],["0.7.1",{"_index":4013,"title":{},"body":{"changelog.html":{}}}],["0.8.0",{"_index":3964,"title":{},"body":{"changelog.html":{}}}],["0.8.1",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["0.8.2",{"_index":3962,"title":{},"body":{"changelog.html":{}}}],["0.8.20",{"_index":4180,"title":{},"body":{"dependencies.html":{}}}],["0.8.5",{"_index":4000,"title":{},"body":{"changelog.html":{}}}],["0.8.6",{"_index":3992,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":3959,"title":{},"body":{"changelog.html":{}}}],["00b0ff",{"_index":4550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00dbf0",{"_index":2557,"title":{},"body":{"components/MenuComponent.html":{}}}],["05",{"_index":4025,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":4019,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":162,"title":{},"body":{"components/AceComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["1.0.0",{"_index":4171,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["1.2.9",{"_index":4168,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":4631,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["1/1",{"_index":4035,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1533,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["10/10",{"_index":4043,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":4152,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1660,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Pagination.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["10004",{"_index":1268,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["101",{"_index":3935,"title":{},"body":{"changelog.html":{}}}],["10m",{"_index":2107,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["11",{"_index":4026,"title":{},"body":{"changelog.html":{}}}],["11/11",{"_index":4069,"title":{},"body":{"coverage.html":{}}}],["11/12",{"_index":4102,"title":{},"body":{"coverage.html":{}}}],["11/13",{"_index":4057,"title":{},"body":{"coverage.html":{}}}],["12/12",{"_index":4087,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":4091,"title":{},"body":{"coverage.html":{}}}],["12/15",{"_index":4122,"title":{},"body":{"coverage.html":{}}}],["12/18",{"_index":4072,"title":{},"body":{"coverage.html":{}}}],["13/16",{"_index":4126,"title":{},"body":{"coverage.html":{}}}],["13/18",{"_index":4119,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":4270,"title":{},"body":{"overview.html":{}}}],["14/14",{"_index":4036,"title":{},"body":{"coverage.html":{}}}],["14/17",{"_index":4143,"title":{},"body":{"coverage.html":{}}}],["15/15",{"_index":4047,"title":{},"body":{"coverage.html":{}}}],["15/16",{"_index":4088,"title":{},"body":{"coverage.html":{}}}],["15/17",{"_index":4115,"title":{},"body":{"coverage.html":{}}}],["15/19",{"_index":4068,"title":{},"body":{"coverage.html":{}}}],["15/20",{"_index":4103,"title":{},"body":{"coverage.html":{}}}],["15/21",{"_index":4079,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":4271,"title":{},"body":{"overview.html":{}}}],["16/16",{"_index":4066,"title":{},"body":{"coverage.html":{}}}],["16/20",{"_index":4099,"title":{},"body":{"coverage.html":{}}}],["17/17",{"_index":4148,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":4269,"title":{},"body":{"overview.html":{}}}],["19/21",{"_index":4034,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":728,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/collection.html":{}}}],["2.0.1",{"_index":4172,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":4635,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["2.5.3",{"_index":4170,"title":{},"body":{"dependencies.html":{}}}],["2.html",{"_index":4727,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["2/2",{"_index":4100,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":4144,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2103,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["20/20",{"_index":4151,"title":{},"body":{"coverage.html":{}}}],["20/27",{"_index":4150,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1931,"title":{},"body":{"directives/ImageDirective.html":{},"components/TinymceComponent.html":{}}}],["2000",{"_index":2256,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["2017",{"_index":4018,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":4267,"title":{},"body":{"overview.html":{}}}],["21/23",{"_index":4046,"title":{},"body":{"coverage.html":{}}}],["22/22",{"_index":4050,"title":{},"body":{"coverage.html":{}}}],["22/23",{"_index":4040,"title":{},"body":{"coverage.html":{}}}],["22/33",{"_index":4135,"title":{},"body":{"coverage.html":{}}}],["23",{"_index":4020,"title":{},"body":{"changelog.html":{}}}],["23/26",{"_index":4082,"title":{},"body":{"coverage.html":{}}}],["23/35",{"_index":4132,"title":{},"body":{"coverage.html":{}}}],["24/26",{"_index":4110,"title":{},"body":{"coverage.html":{}}}],["2460",{"_index":4284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":2882,"title":{},"body":{"classes/Pagination.html":{}}}],["25/27",{"_index":4083,"title":{},"body":{"coverage.html":{}}}],["26/28",{"_index":4042,"title":{},"body":{"coverage.html":{}}}],["26/41",{"_index":4134,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":3076,"title":{},"body":{"injectables/PopService.html":{}}}],["27.05.17",{"_index":2634,"title":{},"body":{"components/MockupComponent.html":{}}}],["27/28",{"_index":4138,"title":{},"body":{"coverage.html":{}}}],["27/32",{"_index":4106,"title":{},"body":{"coverage.html":{}}}],["29/32",{"_index":4107,"title":{},"body":{"coverage.html":{}}}],["29a9e1",{"_index":2556,"title":{},"body":{"components/MenuComponent.html":{}}}],["3",{"_index":729,"title":{},"body":{"classes/Collection.html":{},"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["3.0.0.min.css",{"_index":4540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3/3",{"_index":4037,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":4055,"title":{},"body":{"coverage.html":{}}}],["30/44",{"_index":4090,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":4535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35/35",{"_index":4049,"title":{},"body":{"coverage.html":{}}}],["35/36",{"_index":4078,"title":{},"body":{"coverage.html":{}}}],["35/38",{"_index":4104,"title":{},"body":{"coverage.html":{}}}],["36/36",{"_index":4039,"title":{},"body":{"coverage.html":{}}}],["37474f",{"_index":4547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38/46",{"_index":4086,"title":{},"body":{"coverage.html":{}}}],["39/49",{"_index":4112,"title":{},"body":{"coverage.html":{}}}],["39;muffin",{"_index":2676,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["4",{"_index":4642,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["4.3.6",{"_index":4633,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["4.7.6",{"_index":4175,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":4053,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":4142,"title":{},"body":{"coverage.html":{}}}],["40/40",{"_index":4052,"title":{},"body":{"coverage.html":{}}}],["40/52",{"_index":4129,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1222,"title":{},"body":{"interfaces/Day.html":{}}}],["45",{"_index":3947,"title":{},"body":{"changelog.html":{}}}],["48.8093253",{"_index":2297,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["4[0",{"_index":3119,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["4a5ea9",{"_index":2558,"title":{},"body":{"components/MenuComponent.html":{}}}],["5",{"_index":1571,"title":{},"body":{"classes/Field.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["5.0.0",{"_index":1758,"title":{},"body":{"injectables/FormService.html":{}}}],["5.2.2",{"_index":4161,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":4174,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":4070,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":4117,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":4076,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":4074,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2562,"title":{},"body":{"components/MenuComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["500",{"_index":2569,"title":{},"body":{"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":2847,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["52/55",{"_index":4109,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":4113,"title":{},"body":{"coverage.html":{}}}],["56",{"_index":4268,"title":{},"body":{"overview.html":{}}}],["5identifi",{"_index":4778,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["5see",{"_index":2916,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["5the",{"_index":1573,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["6",{"_index":744,"title":{},"body":{"classes/Collection.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["6/10",{"_index":4063,"title":{},"body":{"coverage.html":{}}}],["6/11",{"_index":4114,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":4095,"title":{},"body":{"coverage.html":{}}}],["6/62",{"_index":4158,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":4121,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":4062,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":4073,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":4096,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":4131,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":4071,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":4089,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":745,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["7/11",{"_index":4097,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":4118,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":4093,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":4146,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":4075,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":4064,"title":{},"body":{"coverage.html":{}}}],["74",{"_index":4149,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":4054,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":4128,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":4145,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":4067,"title":{},"body":{"coverage.html":{}}}],["79",{"_index":4111,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2101,"title":{},"body":{"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["8.0.0",{"_index":4177,"title":{},"body":{"dependencies.html":{}}}],["8/10",{"_index":4101,"title":{},"body":{"coverage.html":{}}}],["8/11",{"_index":4065,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":4147,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":4094,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":4098,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":4537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81",{"_index":4125,"title":{},"body":{"coverage.html":{}}}],["82",{"_index":4085,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":4116,"title":{},"body":{"coverage.html":{}}}],["83cc6374",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["84",{"_index":4056,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":4120,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":4092,"title":{},"body":{"coverage.html":{}}}],["879195",{"_index":4548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88",{"_index":4081,"title":{},"body":{"coverage.html":{}}}],["89",{"_index":3931,"title":{},"body":{"changelog.html":{}}}],["89ab][0",{"_index":3121,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["9",{"_index":1623,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["9.159388100000001",{"_index":2298,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["9/9",{"_index":4136,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":4033,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":4045,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":3933,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["93",{"_index":3934,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["94",{"_index":4108,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":3943,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["96",{"_index":3945,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["97",{"_index":4077,"title":{},"body":{"coverage.html":{}}}],["98",{"_index":3941,"title":{},"body":{"changelog.html":{}}}],["9]+))?.+v=)?([a",{"_index":4597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]+\\.)+[a",{"_index":4614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{1,3}\\.[0",{"_index":4612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{1,3}])|(([a",{"_index":4613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9_",{"_index":4598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9a",{"_index":2728,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["_",{"_index":114,"title":{},"body":{"components/AceComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["_]{22",{"_index":3123,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["_]{22}$/.test(asset.assetid",{"_index":1624,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["_]{7,14",{"_index":2730,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["_api",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["_api.login(email",{"_index":654,"title":{},"body":{"injectables/AuthService.html":{}}}],["_api.resetpassword(email",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{}}}],["_creat",{"_index":2689,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["_creator",{"_index":2696,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_entri",{"_index":1010,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["_entrytitl",{"_index":2717,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_item",{"_index":3553,"title":{},"body":{"classes/Sorter.html":{}}}],["_item.id",{"_index":1389,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["_items.indexof(item",{"_index":3554,"title":{},"body":{"classes/Sorter.html":{}}}],["_method",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{}}}],["_methods.filter(x",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["_modifi",{"_index":2694,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_moment",{"_index":1234,"title":{},"body":{"interfaces/Day.html":{}}}],["_resourc",{"_index":3342,"title":{},"body":{"injectables/ResourceService.html":{}}}],["_toggl",{"_index":3059,"title":{},"body":{"components/PopComponent.html":{}}}],["_upload",{"_index":3882,"title":{},"body":{"components/UploadComponent.html":{}}}],["a'default",{"_index":4766,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["a.then(r",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{}}}],["abov",{"_index":1574,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{}}}],["absatz",{"_index":4566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstract",{"_index":806,"title":{},"body":{"classes/Config.html":{},"interfaces/ItemConfig.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes.html":{}}}],["abstractcontrol",{"_index":1749,"title":{},"body":{"injectables/FormService.html":{}}}],["ac",{"_index":12,"title":{"additional-documentation/ace.html":{}},"body":{"components/AceComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/ace.html":{}}}],["acc:edit",{"_index":3156,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["acc:list",{"_index":3155,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["accept",{"_index":2860,"title":{},"body":{"injectables/NotificationsService.html":{},"changelog.html":{}}}],["access",{"_index":1986,"title":{},"body":{"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/Symbol.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["access=publ",{"_index":4209,"title":{},"body":{"index.html":{}}}],["access=publicse",{"_index":4741,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["accessor",{"_index":3106,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{}}}],["accord",{"_index":2910,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["account",{"_index":333,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{}}}],["account_not_found",{"_index":4285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accountid",{"_index":3154,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["accountresourc",{"_index":638,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/SdkService.html":{}}}],["accounts(environment.environ",{"_index":3423,"title":{},"body":{"injectables/SdkService.html":{}}}],["ace'},{'nam",{"_index":190,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ace.compon",{"_index":323,"title":{},"body":{"modules/AceModule.html":{}}}],["ace.component.html",{"_index":31,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.component.scss",{"_index":29,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.edit(this.container.nativeel",{"_index":153,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/mod",{"_index":95,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/them",{"_index":98,"title":{},"body":{"components/AceComponent.html":{}}}],["acecompon",{"_index":1,"title":{"components/AceComponent.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acemodul",{"_index":311,"title":{"modules/AceModule.html":{}},"body":{"modules/AceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/ace.html":{}}}],["act",{"_index":1284,"title":{},"body":{"directives/DropzoneDirective.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["action",{"_index":960,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["activ",{"_index":444,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"injectables/HistoryService.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/TabComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["activatedrout",{"_index":837,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{}}}],["active/vis",{"_index":3942,"title":{},"body":{"changelog.html":{}}}],["activi",{"_index":2264,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["actual",{"_index":2193,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["actual_compon",{"_index":307,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ad",{"_index":739,"title":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}},"body":{"classes/Collection.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["add",{"_index":718,"title":{},"body":{"classes/Collection.html":{},"injectables/FormService.html":{},"components/LoaderComponent.html":{},"components/TabComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["add(item",{"_index":735,"title":{},"body":{"classes/Collection.html":{}}}],["addal",{"_index":719,"title":{},"body":{"classes/Collection.html":{}}}],["addall(item",{"_index":741,"title":{},"body":{"classes/Collection.html":{}}}],["addfield",{"_index":1732,"title":{},"body":{"injectables/FormService.html":{}}}],["addfield(field",{"_index":1736,"title":{},"body":{"injectables/FormService.html":{}}}],["addit",{"_index":2432,"title":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}},"body":{"components/LoginFormComponent.html":{},"changelog.html":{}}}],["addregist",{"_index":3239,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["address",{"_index":1786,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{}}}],["addsystempropertiestofieldconfig",{"_index":2646,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["addsystempropertiestofieldconfig(config",{"_index":2653,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["addunregist",{"_index":3241,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["adhes",{"_index":4503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":337,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["adminentryinputcompon",{"_index":191,"title":{"components/AdminEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminservic",{"_index":3966,"title":{},"body":{"changelog.html":{}}}],["adress",{"_index":2437,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{}}}],["advanc",{"_index":2782,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["advantag",{"_index":2260,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["aftercontentinit",{"_index":3636,"title":{},"body":{"components/TabsComponent.html":{}}}],["afterviewinit",{"_index":2371,"title":{},"body":{"components/LocationSearchComponent.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{}}}],["agm/cor",{"_index":1793,"title":{},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"dependencies.html":{}}}],["agmcoremodul",{"_index":2325,"title":{},"body":{"modules/LocationModule.html":{}}}],["agmcoremodule.forroot",{"_index":2330,"title":{},"body":{"modules/LocationModule.html":{}}}],["agnost",{"_index":4746,"title":{},"body":{"additional-documentation/ui.html":{}}}],["aizasyadgeue1yxo1f",{"_index":2332,"title":{},"body":{"modules/LocationModule.html":{}}}],["al",{"_index":4703,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["alarm",{"_index":4297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert",{"_index":4380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["algorithm",{"_index":3535,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.resolv",{"_index":3560,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.sort(properti",{"_index":3562,"title":{},"body":{"classes/Sorter.html":{}}}],["align",{"_index":4299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aligncent",{"_index":4577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alignjustifi",{"_index":4579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alignleft",{"_index":4575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alignright",{"_index":4578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"changelog.html":{},"additional-documentation/core-classes/selection.html":{}}}],["along",{"_index":4664,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["alreadi",{"_index":2841,"title":{},"body":{"injectables/NotificationsService.html":{},"classes/Pagination.html":{}}}],["alt",{"_index":4434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alter(valu",{"_index":1245,"title":{},"body":{"interfaces/Day.html":{}}}],["altern",{"_index":2259,"title":{},"body":{"components/LoaderComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["alway",{"_index":933,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"index.html":{}}}],["alwaysloadentri",{"_index":923,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["alwaysshowhead",{"_index":2139,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["amaz",{"_index":4700,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["amazement_factor",{"_index":4699,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["amount",{"_index":483,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Notification.html":{},"components/PopComponent.html":{}}}],["android",{"_index":4476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angezeigt",{"_index":542,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["angl",{"_index":4303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":14,"title":{},"body":{"components/AceComponent.html":{},"injectables/FormService.html":{},"components/MenuComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/list.html":{}}}],["angular+datamanag",{"_index":4187,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":4632,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/cli",{"_index":4630,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/clith",{"_index":4629,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/common",{"_index":558,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/compil",{"_index":4160,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/cor",{"_index":132,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["angular/core/src/metadata/lifecycle_hook",{"_index":2208,"title":{},"body":{"components/ListItemsComponent.html":{},"components/PaginationComponent.html":{}}}],["angular/form",{"_index":134,"title":{},"body":{"components/AceComponent.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultInputComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/ResourceModule.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["angular/http",{"_index":4162,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/languag",{"_index":4634,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/platform",{"_index":1689,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"modules/VcModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/rout",{"_index":532,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["anoth",{"_index":530,"title":{},"body":{"injectables/AuthGuard.html":{},"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoginComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{}}}],["antwort",{"_index":4573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anweisungen",{"_index":3033,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["anywher",{"_index":1525,"title":{},"body":{"classes/Field.html":{},"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["aot",{"_index":4006,"title":{},"body":{"changelog.html":{}}}],["api",{"_index":331,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["api(api",{"_index":3414,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.asset(this.assetid",{"_index":416,"title":{},"body":{"directives/AssetDirective.html":{}}}],["api.checkpermission(permiss",{"_index":668,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.create(rel",{"_index":3346,"title":{},"body":{"injectables/ResourceService.html":{}}}],["api.createdmassets(assetgroupid",{"_index":1630,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["api.getschema(model",{"_index":3437,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.logout",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.me().then((account",{"_index":662,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["api.resourcelist",{"_index":1434,"title":{},"body":{"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["api.signup",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{}}}],["apikey",{"_index":2331,"title":{},"body":{"modules/LocationModule.html":{}}}],["apiresolv",{"_index":3366,"title":{},"body":{"injectables/SdkService.html":{}}}],["app",{"_index":2771,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/ResourceConfig.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["app.compon",{"_index":4679,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["app.modul",{"_index":4753,"title":{},"body":{"additional-documentation/ace.html":{}}}],["app::delet",{"_index":3181,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["app::edit",{"_index":3182,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["appcompon",{"_index":4660,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["appear",{"_index":1523,"title":{},"body":{"classes/Field.html":{},"components/PopComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["append",{"_index":1352,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["appid",{"_index":3180,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["appl",{"_index":4477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appletre",{"_index":2097,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["appli",{"_index":2166,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["applic",{"_index":3681,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{}}}],["applicationref",{"_index":3679,"title":{},"body":{"components/TinymceComponent.html":{}}}],["applyfilt",{"_index":2158,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["applyfilter(properti",{"_index":2164,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["appmodul",{"_index":4663,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["appoint",{"_index":4510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodul",{"_index":4661,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["arbitrari",{"_index":2913,"title":{},"body":{"classes/Pagination.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["area",{"_index":3041,"title":{},"body":{"components/PopComponent.html":{},"miscellaneous/variables.html":{}}}],["argument",{"_index":1288,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/ListComponent.html":{},"components/SelectComponent.html":{},"components/ToolbarComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["around",{"_index":2964,"title":{},"body":{"components/PaginationComponent.html":{}}}],["arrang",{"_index":4304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["array(42",{"_index":1205,"title":{},"body":{"interfaces/Day.html":{}}}],["array(math.ceil(this.tot",{"_index":2931,"title":{},"body":{"classes/Pagination.html":{}}}],["array.from(new",{"_index":2919,"title":{},"body":{"classes/Pagination.html":{}}}],["array.isarray(asset",{"_index":1618,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["array.isarray(pattern",{"_index":1118,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["array.isarray(valu",{"_index":3498,"title":{},"body":{"components/SelectComponent.html":{}}}],["array.slice(start",{"_index":2490,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["arrow",{"_index":4305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artboard",{"_index":4307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["articl",{"_index":4514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifact",{"_index":4226,"title":{},"body":{"index.html":{}}}],["asc",{"_index":3944,"title":{},"body":{"changelog.html":{}}}],["ask",{"_index":2840,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["asobserv",{"_index":3713,"title":{},"body":{"components/TinymceComponent.html":{}}}],["asset",{"_index":193,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["asset.getfilevariant(this.s",{"_index":1954,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimagethumburl(this.s",{"_index":1956,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimageurl(200",{"_index":3193,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.getimageurl(this.s",{"_index":1957,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.id",{"_index":1952,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.length",{"_index":1619,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["asset.thumbnail",{"_index":3214,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.thumbnails.length",{"_index":3215,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.thumbnails[0].url",{"_index":3216,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.typ",{"_index":1950,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{}}}],["asset/asset",{"_index":4011,"title":{},"body":{"changelog.html":{}}}],["asset/asset.direct",{"_index":1692,"title":{},"body":{"modules/FilesModule.html":{},"directives/ImageDirective.html":{}}}],["assetdirect",{"_index":293,"title":{"directives/AssetDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetgroup",{"_index":3198,"title":{},"body":{"injectables/ResourceConfig.html":{},"components/UploadComponent.html":{}}}],["assetgroup#definitions/condit",{"_index":3210,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["assetgroupid",{"_index":442,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["assetid",{"_index":362,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{}}}],["assetid'",{"_index":3989,"title":{},"body":{"changelog.html":{}}}],["assetinput",{"_index":4010,"title":{},"body":{"changelog.html":{}}}],["assetlist.getallitem",{"_index":1633,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetlistpopcompon",{"_index":192,"title":{"components/AssetListPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assets.map((asset",{"_index":1665,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assets.map(asset",{"_index":1637,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assets.reduce((id",{"_index":1653,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assets[0",{"_index":1634,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetselectcompon",{"_index":196,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assign",{"_index":1019,"title":{},"body":{"injectables/CrudService.html":{},"classes/Field.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{}}}],["associ",{"_index":1527,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceService.html":{},"components/TabsComponent.html":{}}}],["assum",{"_index":4674,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["asterisk",{"_index":4308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attempt",{"_index":2798,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["auth",{"_index":449,"title":{},"body":{"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"changelog.html":{}}}],["auth.servic",{"_index":569,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["auth/auth.modul",{"_index":1059,"title":{},"body":{"modules/DataModule.html":{}}}],["auth/auth.servic",{"_index":490,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["authent",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["authguard",{"_index":508,"title":{"injectables/AuthGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["authmodul",{"_index":548,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":4669,"title":{"additional-documentation/project-setup-tutorial/authorization.html":{}},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["authservic",{"_index":450,"title":{"injectables/AuthService.html":{}},"body":{"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":1922,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"changelog.html":{}}}],["autocomplet",{"_index":1781,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["autocomplete.addlistener('place_chang",{"_index":1801,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocomplete.getplac",{"_index":1804,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress",{"_index":1770,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress(el",{"_index":1779,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autolink",{"_index":4530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoload",{"_index":363,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["autoload=fals",{"_index":385,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{}}}],["automat",{"_index":1580,"title":{},"body":{"classes/Field.html":{},"classes/Notification.html":{},"injectables/SdkService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/core-classes/field.html":{}}}],["automatisch",{"_index":4607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autores",{"_index":4527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoresize_max_height",{"_index":4536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoresize_min_height",{"_index":4534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avail",{"_index":676,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"components/SelectComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["availab",{"_index":63,"title":{},"body":{"components/AceComponent.html":{}}}],["available.validator.t",{"_index":4059,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["availables",{"_index":2140,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Pagination.html":{}}}],["avoid",{"_index":1460,"title":{},"body":{"components/EntryListComponent.html":{}}}],["ayq",{"_index":4781,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["b",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{},"classes/Pagination.html":{},"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["b(r",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{}}}],["b.resolv",{"_index":3561,"title":{},"body":{"classes/Sorter.html":{}}}],["b.sort(properti",{"_index":3563,"title":{},"body":{"classes/Sorter.html":{}}}],["back",{"_index":947,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":4287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backenderrorcod",{"_index":4061,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bag",{"_index":4433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bake",{"_index":2792,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["baken",{"_index":2794,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["bakery:bakeryservic",{"_index":2791,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["ball",{"_index":2783,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["bank",{"_index":4310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":4493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["barcod",{"_index":4313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base",{"_index":3544,"title":{},"body":{"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["base64",{"_index":3092,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["base64uuid",{"_index":3084,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["baseurl",{"_index":4251,"title":{},"body":{"index.html":{}}}],["basi",{"_index":1237,"title":{},"body":{"interfaces/Day.html":{}}}],["basic",{"_index":1258,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/ListComponent.html":{},"changelog.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["basket",{"_index":4435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["be",{"_index":2888,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["befor",{"_index":1555,"title":{},"body":{"classes/Field.html":{},"components/InputComponent.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes/field.html":{}}}],["began",{"_index":4008,"title":{},"body":{"changelog.html":{}}}],["begin",{"_index":1202,"title":{},"body":{"interfaces/Day.html":{},"injectables/ModelConfigService.html":{}}}],["begin.clone().add(index",{"_index":1208,"title":{},"body":{"interfaces/Day.html":{}}}],["behaviour",{"_index":2640,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["beim",{"_index":3037,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["belong",{"_index":1965,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["below",{"_index":2749,"title":{},"body":{"classes/Notification.html":{}}}],["beneath",{"_index":2017,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["berschrift",{"_index":4564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beschreibung",{"_index":2778,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["beta.2",{"_index":4182,"title":{},"body":{"dependencies.html":{}}}],["beta.4",{"_index":4178,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":2263,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["between",{"_index":485,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/FormService.html":{},"components/PopComponent.html":{}}}],["big",{"_index":4421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bigger",{"_index":4516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bild/datei",{"_index":4606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bilder",{"_index":4695,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["bind",{"_index":433,"title":{},"body":{"components/AssetListPopComponent.html":{},"changelog.html":{}}}],["binocular",{"_index":4315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["birch",{"_index":2102,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["bitcoin",{"_index":4316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["block",{"_index":3763,"title":{},"body":{"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["blockevent(",{"_index":3768,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["blood",{"_index":4369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bluetooth",{"_index":4455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blur",{"_index":1757,"title":{},"body":{"injectables/FormService.html":{}}}],["bobbi",{"_index":1568,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{}}}],["bobby.display('nam",{"_index":4775,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bobby.group('nam",{"_index":4776,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bobby.resolve('nam",{"_index":4774,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bobby.sort('nam",{"_index":4777,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bodi",{"_index":1553,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["body+1",{"_index":4789,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["body.value.nam",{"_index":1562,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["bold",{"_index":4515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["book",{"_index":4348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bookmark",{"_index":4318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":373,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["bootstrap",{"_index":312,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["bootstrap/publish",{"_index":4739,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["border",{"_index":4319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["both",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{},"changelog.html":{}}}],["bottl",{"_index":4509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bottom",{"_index":3973,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["bound",{"_index":434,"title":{},"body":{"components/AssetListPopComponent.html":{},"directives/DropzoneDirective.html":{}}}],["box",{"_index":818,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{},"miscellaneous/variables.html":{}}}],["bracket",{"_index":4302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brand",{"_index":4522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":3921,"title":{},"body":{"changelog.html":{}}}],["breit",{"_index":4608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["briefcas",{"_index":4322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bright",{"_index":4333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bring",{"_index":4779,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["broken",{"_index":4386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brows",{"_index":4265,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":185,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"modules/FilesModule.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"modules/ResourceModule.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/VcModule.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["browsermodul",{"_index":1688,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/VcModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["brush",{"_index":4402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["btn",{"_index":4556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bu",{"_index":4323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bubbl",{"_index":4340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buchstaben",{"_index":1565,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["bucket",{"_index":4403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bug",{"_index":4411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":4167,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ace.html":{}}}],["builds/blob/master/src/ext",{"_index":149,"title":{},"body":{"components/AceComponent.html":{}}}],["builds/src",{"_index":136,"title":{},"body":{"components/AceComponent.html":{},"additional-documentation/ace.html":{}}}],["bullet",{"_index":4387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bullist",{"_index":4582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["busi",{"_index":4483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button",{"_index":938,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoginFormComponent.html":{},"components/ResourceCrudComponent.html":{},"miscellaneous/variables.html":{}}}],["buttonclass",{"_index":2421,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["buttonlabel",{"_index":2422,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["bypasssecuritytrusthtml",{"_index":3355,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["c",{"_index":4707,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["c9c8d4",{"_index":2559,"title":{},"body":{"components/MenuComponent.html":{}}}],["cach",{"_index":3378,"title":{},"body":{"injectables/SdkService.html":{}}}],["calcul",{"_index":4329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calculc",{"_index":2906,"title":{},"body":{"classes/Pagination.html":{}}}],["calendar",{"_index":1076,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["calendar'},{'nam",{"_index":199,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["calendar.compon",{"_index":1100,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["calendarcompon",{"_index":198,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calendarish",{"_index":1133,"title":{},"body":{"interfaces/Day.html":{}}}],["call",{"_index":384,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"injectables/SymbolPipe.html":{},"components/TinymceComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["callback",{"_index":85,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/core-classes/item.html":{}}}],["callbackurl",{"_index":3227,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["camera",{"_index":4332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactiv",{"_index":521,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["canalter(valu",{"_index":1240,"title":{},"body":{"interfaces/Day.html":{}}}],["cancel",{"_index":2572,"title":{},"body":{"components/MenuComponent.html":{}}}],["canceltimeout",{"_index":2541,"title":{},"body":{"components/MenuComponent.html":{}}}],["cand",{"_index":2309,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["cap",{"_index":4301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabl",{"_index":3984,"title":{},"body":{"changelog.html":{}}}],["caption",{"_index":3218,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["car",{"_index":4335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":4373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["caret",{"_index":4513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cart",{"_index":4436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":2789,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["catch",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{},"components/LoaderComponent.html":{}}}],["catch((err",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["catch((error",{"_index":2406,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["catch(err",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch(error",{"_index":1872,"title":{},"body":{"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{},"components/ResourceDeletePopComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["caution",{"_index":4231,"title":{},"body":{"index.html":{}}}],["ccc",{"_index":1144,"title":{},"body":{"interfaces/Day.html":{}}}],["cd",{"_index":4639,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["cdn",{"_index":4752,"title":{},"body":{"additional-documentation/ace.html":{}}}],["cell",{"_index":1131,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes/field.html":{}}}],["center",{"_index":2295,"title":{},"body":{"components/LocationMapComponent.html":{},"miscellaneous/variables.html":{}}}],["certain",{"_index":2042,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/TypeConfigService.html":{}}}],["chang",{"_index":84,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["change(",{"_index":3850,"title":{},"body":{"components/UploadComponent.html":{}}}],["change(filt",{"_index":967,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["change)=\"updatesize($event.target.valu",{"_index":2995,"title":{},"body":{"components/PaginationComponent.html":{}}}],["change.color",{"_index":1198,"title":{},"body":{"interfaces/Day.html":{}}}],["change.d",{"_index":1195,"title":{},"body":{"interfaces/Day.html":{}}}],["change.select",{"_index":1193,"title":{},"body":{"interfaces/Day.html":{}}}],["change.timespan",{"_index":1197,"title":{},"body":{"interfaces/Day.html":{}}}],["change[key",{"_index":1001,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["changelog",{"_index":3918,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changespan",{"_index":1154,"title":{},"body":{"interfaces/Day.html":{}}}],["chat",{"_index":4339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":526,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/ListItemsComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["checkbox",{"_index":2149,"title":{},"body":{"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["checklist",{"_index":4571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkmark",{"_index":4517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkpermiss",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkpermission(permiss",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["chevron",{"_index":4473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["child",{"_index":2585,"title":{},"body":{"components/MenuComponent.html":{},"components/UploadComponent.html":{}}}],["children",{"_index":3940,"title":{},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["cinnamon",{"_index":4796,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["circl",{"_index":4296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":146,"title":{"classes/Collection.html":{},"classes/Config.html":{},"classes/Field.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["class.i",{"_index":1277,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["class=\"input",{"_index":2996,"title":{},"body":{"components/PaginationComponent.html":{}}}],["clean",{"_index":963,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{}}}],["clean(valu",{"_index":971,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["clear",{"_index":1027,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["clearselect",{"_index":1236,"title":{},"body":{"interfaces/Day.html":{}}}],["cleartimeout(this.timeout",{"_index":2617,"title":{},"body":{"components/MenuComponent.html":{}}}],["cli",{"_index":4193,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["click",{"_index":844,"title":{},"body":{"components/CrudComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SelectComponent.html":{},"components/ToolbarComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["click(",{"_index":3759,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["clickabl",{"_index":3939,"title":{},"body":{"changelog.html":{}}}],["clickedoutside($ev",{"_index":3487,"title":{},"body":{"components/SelectComponent.html":{}}}],["clickinsid",{"_index":3444,"title":{},"body":{"components/SelectComponent.html":{}}}],["clickinside(",{"_index":3463,"title":{},"body":{"components/SelectComponent.html":{}}}],["clickitem",{"_index":3445,"title":{},"body":{"components/SelectComponent.html":{}}}],["clickitem(item",{"_index":3466,"title":{},"body":{"components/SelectComponent.html":{}}}],["client",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["clientid",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["clip",{"_index":4465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clock",{"_index":4298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clone",{"_index":2727,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["close",{"_index":1845,"title":{},"body":{"injectables/HistoryService.html":{},"components/ListHeaderComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["cloud",{"_index":4341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clubapp",{"_index":4709,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["cluster_acemodul",{"_index":313,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_acecomponent_provid",{"_index":315,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_declar",{"_index":314,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_export",{"_index":316,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":549,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":550,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_export",{"_index":552,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":551,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_provid",{"_index":553,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_datamodul",{"_index":1034,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_declar",{"_index":1035,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_export",{"_index":1037,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_import",{"_index":1036,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_provid",{"_index":1038,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_filesmodul",{"_index":1682,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_declar",{"_index":1683,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_export",{"_index":1685,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_import",{"_index":1684,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_filesmodule_provid",{"_index":1686,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_formmodul",{"_index":1700,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_declar",{"_index":1701,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_export",{"_index":1703,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_import",{"_index":1702,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_provid",{"_index":1704,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_iconmodul",{"_index":1909,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_declar",{"_index":1910,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_export",{"_index":1911,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_provid",{"_index":1912,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iomodul",{"_index":2032,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_declar",{"_index":2033,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_export",{"_index":2034,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_listmodul",{"_index":2212,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_declar",{"_index":2213,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_export",{"_index":2215,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_import",{"_index":2214,"title":{},"body":{"modules/ListModule.html":{}}}],["cluster_loadermodul",{"_index":2276,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_declar",{"_index":2277,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_export",{"_index":2278,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_provid",{"_index":2279,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_locationmodul",{"_index":2317,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_declar",{"_index":2318,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_export",{"_index":2320,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_import",{"_index":2319,"title":{},"body":{"modules/LocationModule.html":{}}}],["cluster_locationmodule_provid",{"_index":2321,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_mediummodul",{"_index":2529,"title":{},"body":{"modules/MediumModule.html":{},"overview.html":{}}}],["cluster_mediummodule_declar",{"_index":2530,"title":{},"body":{"modules/MediumModule.html":{},"overview.html":{}}}],["cluster_mediummodule_export",{"_index":2532,"title":{},"body":{"modules/MediumModule.html":{},"overview.html":{}}}],["cluster_mediummodule_mediumeditorcomponent_provid",{"_index":2531,"title":{},"body":{"modules/MediumModule.html":{}}}],["cluster_notificationsmodul",{"_index":2822,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_declar",{"_index":2823,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_export",{"_index":2825,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_import",{"_index":2824,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["cluster_notificationsmodule_provid",{"_index":2826,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_popmodul",{"_index":3064,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_declar",{"_index":3065,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_export",{"_index":3066,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_provid",{"_index":3067,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_resourcemodul",{"_index":3311,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_declar",{"_index":3312,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_export",{"_index":3314,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_import",{"_index":3313,"title":{},"body":{"modules/ResourceModule.html":{}}}],["cluster_resourcemodule_provid",{"_index":3315,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_sdkmodul",{"_index":3361,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_sdkmodule_provid",{"_index":3362,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_selectmodul",{"_index":3510,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_declar",{"_index":3511,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_export",{"_index":3514,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_import",{"_index":3513,"title":{},"body":{"modules/SelectModule.html":{}}}],["cluster_selectmodule_selectcomponent_provid",{"_index":3512,"title":{},"body":{"modules/SelectModule.html":{}}}],["cluster_symbolmodul",{"_index":3569,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_provid",{"_index":3570,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_tinymcemodul",{"_index":3734,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_declar",{"_index":3735,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_export",{"_index":3736,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_uimodul",{"_index":3826,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_export",{"_index":3828,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_import",{"_index":3827,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_utilitymodul",{"_index":3891,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_declar",{"_index":3892,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_export",{"_index":3894,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_import",{"_index":3893,"title":{},"body":{"modules/UtilityModule.html":{}}}],["cluster_vcmodul",{"_index":3899,"title":{},"body":{"modules/VcModule.html":{},"overview.html":{}}}],["cluster_vcmodule_declar",{"_index":3900,"title":{},"body":{"modules/VcModule.html":{},"overview.html":{}}}],["cluster_vcmodule_export",{"_index":3901,"title":{},"body":{"modules/VcModule.html":{},"overview.html":{}}}],["cmd+click",{"_index":4712,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["code",{"_index":4223,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes.html":{}}}],["codesourc",{"_index":3243,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["codesourceid",{"_index":3244,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["codesourcetyp",{"_index":3245,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["coin",{"_index":4317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collat",{"_index":3540,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["collator.compare(a",{"_index":3546,"title":{},"body":{"classes/Sorter.html":{}}}],["collect",{"_index":712,"title":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}},"body":{"classes/Collection.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"coverage.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["collection([1",{"_index":727,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.add(4",{"_index":765,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.addall([10,11,12",{"_index":768,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.has(1",{"_index":763,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.has(4",{"_index":764,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.hasall([1,10,11",{"_index":769,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.index(1",{"_index":767,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.remove(4",{"_index":766,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.removeall();it",{"_index":770,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["color",{"_index":1137,"title":{},"body":{"interfaces/Day.html":{},"components/MenuComponent.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["colorpick",{"_index":4533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":1549,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"additional-documentation/core-classes/field.html":{}}}],["columnclick",{"_index":446,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{}}}],["columnclick(item",{"_index":2076,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["com",{"_index":3930,"title":{},"body":{"changelog.html":{}}}],["combin",{"_index":2769,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["come",{"_index":335,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["command",{"_index":4439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comment",{"_index":2262,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["commonmodul",{"_index":557,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{}}}],["commun",{"_index":2397,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["compani",{"_index":4475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compat",{"_index":4007,"title":{},"body":{"changelog.html":{}}}],["compil",{"_index":4242,"title":{},"body":{"index.html":{}}}],["compileropt",{"_index":4248,"title":{},"body":{"index.html":{}}}],["complain",{"_index":2852,"title":{},"body":{"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["complet",{"_index":3848,"title":{},"body":{"components/UploadComponent.html":{},"changelog.html":{}}}],["compon",{"_index":0,"title":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{}}}],["component_templ",{"_index":189,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["componentfactori",{"_index":1336,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["componentfactoryresolv",{"_index":1315,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["componentinst",{"_index":1962,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref",{"_index":1332,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["componentref.inst",{"_index":2000,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref.instance.control",{"_index":2001,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref.instance.control.valuechang",{"_index":2002,"title":{},"body":{"components/InputComponent.html":{}}}],["components/class",{"_index":4213,"title":{},"body":{"index.html":{}}}],["comput",{"_index":4346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["concat(this.config.availables",{"_index":2921,"title":{},"body":{"classes/Pagination.html":{}}}],["concat(this.timespan",{"_index":1170,"title":{},"body":{"interfaces/Day.html":{}}}],["concept",{"_index":1577,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["condit",{"_index":3208,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config",{"_index":443,"title":{"classes/Config.html":{}},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["config.input",{"_index":3819,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.interfac",{"_index":489,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListComponent.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{}}}],["config.interface.t",{"_index":920,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FieldConfig.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"classes/PaginationConfig.html":{},"coverage.html":{}}}],["config.interface.ts:11",{"_index":3002,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:4",{"_index":1591,"title":{},"body":{"interfaces/FieldConfig.html":{}}}],["config.interface.ts:7",{"_index":3005,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:9",{"_index":3003,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.output",{"_index":3820,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.popclass",{"_index":848,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["config.servic",{"_index":641,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{}}}],["config.service.t",{"_index":2641,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["config.service.ts:11",{"_index":3089,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:113",{"_index":2670,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:130",{"_index":2658,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:137",{"_index":3781,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:141",{"_index":3789,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:15",{"_index":3097,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:157",{"_index":3793,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:166",{"_index":3784,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:172",{"_index":3782,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:177",{"_index":3790,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:179",{"_index":2656,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:18",{"_index":3795,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:21",{"_index":2679,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:25",{"_index":3094,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{}}}],["config.service.ts:27",{"_index":2652,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:37",{"_index":3099,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:43",{"_index":2663,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:45",{"_index":3104,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:54",{"_index":3102,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:58",{"_index":2674,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:63",{"_index":2668,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["config.service.ts:67",{"_index":3105,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:68",{"_index":2654,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:71",{"_index":3090,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:76",{"_index":3108,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.view",{"_index":3818,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config/field",{"_index":1581,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{}}}],["config/model",{"_index":1048,"title":{},"body":{"modules/DataModule.html":{},"components/EntryListComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["config/resourc",{"_index":640,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["config/resource.servic",{"_index":1459,"title":{},"body":{"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{}}}],["config/resource.service.t",{"_index":3317,"title":{},"body":{"injectables/ResourceService.html":{},"coverage.html":{}}}],["config/resource.service.ts:113",{"_index":3324,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:124",{"_index":3326,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:34",{"_index":3318,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:37",{"_index":3334,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:41",{"_index":3328,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:47",{"_index":3319,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:56",{"_index":3330,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:74",{"_index":3333,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:89",{"_index":3327,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:95",{"_index":3322,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/typ",{"_index":1055,"title":{},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["config?.createlabel",{"_index":917,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["config[properti",{"_index":2701,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["configinput",{"_index":2114,"title":{},"body":{"components/ListComponent.html":{}}}],["configur",{"_index":793,"title":{},"body":{"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/FieldConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"components/SelectComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["configuration.interface.t",{"_index":2737,"title":{},"body":{"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["configure(key",{"_index":796,"title":{},"body":{"classes/Config.html":{}}}],["configure?(key",{"_index":810,"title":{},"body":{"classes/Config.html":{}}}],["confirm",{"_index":3287,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["confirm(resourc",{"_index":3292,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["connector",{"_index":1427,"title":{},"body":{"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["consist",{"_index":1225,"title":{},"body":{"interfaces/Day.html":{},"additional-documentation/core-classes/item.html":{}}}],["console.error('cannot",{"_index":3300,"title":{},"body":{"components/ResourceDeletePopComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["console.error('miss",{"_index":3817,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["console.error('model",{"_index":2719,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["console.error(`${relationnam",{"_index":3113,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["console.error(err",{"_index":3883,"title":{},"body":{"components/UploadComponent.html":{}}}],["console.log('could",{"_index":2408,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["console.log('cr",{"_index":1031,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["console.log('error",{"_index":909,"title":{},"body":{"components/CrudComponent.html":{}}}],["console.log('raw",{"_index":1115,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["console.log('receiv",{"_index":4724,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["console.log('select",{"_index":504,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["console.warn('cannot",{"_index":1376,"title":{},"body":{"directives/EntriesDirective.html":{},"injectables/LoaderService.html":{},"classes/Sorter.html":{}}}],["console.warn('ec",{"_index":3489,"title":{},"body":{"components/SelectComponent.html":{}}}],["console.warn('ha",{"_index":780,"title":{},"body":{"classes/Collection.html":{}}}],["console.warn('no",{"_index":498,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/LocationMapComponent.html":{}}}],["console.warn('notification.tim",{"_index":2819,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["console.warn('pag",{"_index":2972,"title":{},"body":{"components/PaginationComponent.html":{}}}],["console.warn('thi",{"_index":2864,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["console.warn('tri",{"_index":2809,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["console.warn(`icon",{"_index":1904,"title":{},"body":{"components/IconComponent.html":{}}}],["console.warn(`rel",{"_index":675,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":142,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/PopService.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["construct",{"_index":726,"title":{},"body":{"classes/Collection.html":{},"classes/Field.html":{}}}],["constructor",{"_index":340,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputErrorsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["constructor(@inject('environ",{"_index":3418,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(@inject('usedesktopnotif",{"_index":2853,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(app",{"_index":3678,"title":{},"body":{"components/TinymceComponent.html":{}}}],["constructor(auth",{"_index":2391,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["constructor(componentfactoryresolv",{"_index":1314,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["constructor(config",{"_index":2880,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationConfig.html":{}}}],["constructor(crud",{"_index":2651,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["constructor(el",{"_index":1281,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/TabComponent.html":{}}}],["constructor(environ",{"_index":3372,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(fb",{"_index":2428,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["constructor(geocodeservic",{"_index":2341,"title":{},"body":{"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["constructor(host",{"_index":2232,"title":{},"body":{"components/LoaderComponent.html":{}}}],["constructor(iconservic",{"_index":1886,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(item",{"_index":724,"title":{},"body":{"classes/Collection.html":{}}}],["constructor(loaderservic",{"_index":1421,"title":{},"body":{"components/EntryListComponent.html":{}}}],["constructor(mapload",{"_index":1774,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["constructor(notif",{"_index":2740,"title":{},"body":{"classes/Notification.html":{}}}],["constructor(notificationservic",{"_index":1841,"title":{},"body":{"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{}}}],["constructor(popservic",{"_index":447,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/PopComponent.html":{}}}],["constructor(priv",{"_index":535,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["constructor(properti",{"_index":1511,"title":{},"body":{"classes/Field.html":{}}}],["constructor(protect",{"_index":494,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListComponent.html":{},"components/PopComponent.html":{}}}],["constructor(publ",{"_index":349,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceDeletePopComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/icons.html":{}}}],["constructor(resourceconfig",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(rout",{"_index":2553,"title":{},"body":{"components/MenuComponent.html":{},"components/TabsComponent.html":{}}}],["constructor(sdk",{"_index":341,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"components/UploadComponent.html":{}}}],["constructor(symbol",{"_index":1485,"title":{},"body":{"components/ErrorComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/TypeConfigService.html":{}}}],["constructor(usedesktopnotif",{"_index":2836,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(viewcontainerref",{"_index":3520,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["contact",{"_index":3914,"title":{},"body":{"interfaces/WithLoader.html":{},"miscellaneous/variables.html":{}}}],["contain",{"_index":34,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes/field.html":{}}}],["content",{"_index":1884,"title":{},"body":{"components/IconComponent.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["content_css",{"_index":4538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contentchildren",{"_index":3649,"title":{},"body":{"components/TabsComponent.html":{}}}],["contentchildren(tabcompon",{"_index":3653,"title":{},"body":{"components/TabsComponent.html":{}}}],["context",{"_index":2053,"title":{},"body":{"interfaces/ItemConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["contextmenu",{"_index":4531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contrast",{"_index":4344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control",{"_index":40,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["control'",{"_index":2016,"title":{},"body":{"components/InputErrorsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["control.reset",{"_index":2188,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["control[field.properti",{"_index":1754,"title":{},"body":{"injectables/FormService.html":{}}}],["controlvalueaccessor",{"_index":16,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["convert",{"_index":1458,"title":{},"body":{"components/EntryListComponent.html":{}}}],["cooki",{"_index":563,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["cookiefactori",{"_index":571,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["cookiemodul",{"_index":561,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/functions.html":{}}}],["cookiemodule.forroot",{"_index":574,"title":{},"body":{"modules/AuthModule.html":{}}}],["cool",{"_index":4735,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["coolstringcompon",{"_index":4797,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["coord",{"_index":1807,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{}}}],["coords.lat",{"_index":2313,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["coords.lng",{"_index":2312,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["copi",{"_index":4363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["core",{"_index":619,"title":{"additional-documentation/core-classes.html":{}},"body":{"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"injectables/FormService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["core/ui/data",{"_index":4205,"title":{},"body":{"index.html":{}}}],["correct",{"_index":4736,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["count",{"_index":2907,"title":{},"body":{"classes/Pagination.html":{}}}],["cours",{"_index":1575,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{}}}],["coverag",{"_index":4030,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":70,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["create(model",{"_index":974,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["create(rel",{"_index":3323,"title":{},"body":{"injectables/ResourceService.html":{}}}],["create/edit/delet",{"_index":817,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["create/read/update/delet",{"_index":998,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"changelog.html":{}}}],["createclick",{"_index":3254,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["created(label",{"_index":3093,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["created.otherwis",{"_index":3331,"title":{},"body":{"injectables/ResourceService.html":{}}}],["createlabel",{"_index":924,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["createlist",{"_index":1416,"title":{},"body":{"components/EntryListComponent.html":{}}}],["creates/upd",{"_index":1452,"title":{},"body":{"components/EntryListComponent.html":{}}}],["creator",{"_index":2678,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["credenti",{"_index":2413,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["crop",{"_index":4349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cross",{"_index":4518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crud",{"_index":822,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/data.html":{}}}],["crud'",{"_index":839,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud'},{'nam",{"_index":201,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["crud.compon",{"_index":1065,"title":{},"body":{"modules/DataModule.html":{},"modules/ResourceModule.html":{}}}],["crud.component.html",{"_index":824,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud.component.scss",{"_index":823,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud.component.t",{"_index":3252,"title":{},"body":{"components/ResourceCrudComponent.html":{},"coverage.html":{}}}],["crud.component.ts:33",{"_index":3256,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:35",{"_index":3258,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:37",{"_index":3257,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:39",{"_index":3259,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:41",{"_index":3270,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:43",{"_index":3272,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:45",{"_index":3271,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:47",{"_index":3260,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:49",{"_index":3262,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:51",{"_index":3255,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:57",{"_index":3274,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:58",{"_index":3273,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:61",{"_index":3267,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:65",{"_index":3266,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:76",{"_index":3265,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:81",{"_index":3269,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:94",{"_index":3264,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:98",{"_index":3263,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud/crud",{"_index":488,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{}}}],["crud/crud.compon",{"_index":1051,"title":{},"body":{"modules/DataModule.html":{}}}],["crud/crud.servic",{"_index":1049,"title":{},"body":{"modules/DataModule.html":{},"components/EntryListComponent.html":{},"injectables/ModelConfigService.html":{}}}],["crud/resourc",{"_index":1064,"title":{},"body":{"modules/DataModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["crudcompon",{"_index":200,"title":{"components/CrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["crudcomponent#loadentri",{"_index":3281,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crudconfig",{"_index":457,"title":{"interfaces/CrudConfig.html":{}},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["crudservic",{"_index":954,"title":{"injectables/CrudService.html":{}},"body":{"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["current",{"_index":121,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{}}}],["cursor",{"_index":4350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["custom",{"_index":171,"title":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/MockupComponent.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/data.html":{}}}],["customfieldcompon",{"_index":1320,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["custominputcompon",{"_index":4711,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["customnam",{"_index":1594,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["cycl",{"_index":4740,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["da",{"_index":2774,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["darf",{"_index":4705,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["dashboard",{"_index":4336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":1330,"title":{"additional-documentation/data.html":{}},"body":{"components/DynamicSlotComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{}}}],["data.entryid",{"_index":1879,"title":{},"body":{"injectables/HistoryService.html":{}}}],["databas",{"_index":4424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datamanag",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["datamanager(environment.environ",{"_index":3429,"title":{},"body":{"injectables/SdkService.html":{}}}],["datamanager.api().emailavailable(control.value).then((avail",{"_index":4609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datamanagerid",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["datamanagerlistcompon",{"_index":3954,"title":{},"body":{"changelog.html":{}}}],["datamanagerresourc",{"_index":330,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["datamodul",{"_index":1033,"title":{"modules/DataModule.html":{}},"body":{"modules/DataModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["datamodule.forenvironment(environ",{"_index":4662,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["dataroutingmodul",{"_index":3988,"title":{},"body":{"changelog.html":{}}}],["datasourc",{"_index":3247,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["datasourceid",{"_index":3248,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["date",{"_index":1078,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["date()).format(this.symbol.resolve('moment.format.d",{"_index":3808,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date(0",{"_index":3809,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date.clon",{"_index":1228,"title":{},"body":{"interfaces/Day.html":{}}}],["date.clone().startof('day').issame(this.timespan[0].clone().startof('day",{"_index":1211,"title":{},"body":{"interfaces/Day.html":{}}}],["date.clone().startof('day').issame(this.timespan[1].clone().startof('day",{"_index":1213,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('dd",{"_index":1219,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('mm",{"_index":1214,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format(this.monthformat",{"_index":1230,"title":{},"body":{"interfaces/Day.html":{}}}],["date.isbetween(this.timespan[0",{"_index":1216,"title":{},"body":{"interfaces/Day.html":{}}}],["date.now",{"_index":2271,"title":{},"body":{"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["datenschutz",{"_index":4263,"title":{},"body":{"index.html":{}}}],["daterange'},{'nam",{"_index":203,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["daterangecompon",{"_index":202,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datetim",{"_index":1072,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["datetime'},{'nam",{"_index":205,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["datetime.component.html",{"_index":1075,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["datetime.component.scss",{"_index":1074,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["datetime/calendar.compon",{"_index":1722,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/daterange.compon",{"_index":1729,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/datetime.compon",{"_index":1718,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/datetime.pip",{"_index":1720,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/heatmap.compon",{"_index":1728,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/month.compon",{"_index":1719,"title":{},"body":{"modules/FormModule.html":{}}}],["datetimecompon",{"_index":204,"title":{"components/DatetimeComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datetimepip",{"_index":1104,"title":{"pipes/DatetimePipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"modules/FormModule.html":{},"coverage.html":{},"overview.html":{}}}],["datum",{"_index":3806,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["day",{"_index":1096,"title":{"interfaces/Day.html":{}},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"coverage.html":{}}}],["day.clone().startof('month').startof('week",{"_index":1203,"title":{},"body":{"interfaces/Day.html":{}}}],["day.date.clon",{"_index":1172,"title":{},"body":{"interfaces/Day.html":{}}}],["day.first",{"_index":1165,"title":{},"body":{"interfaces/Day.html":{}}}],["day.format('mm",{"_index":1215,"title":{},"body":{"interfaces/Day.html":{}}}],["day.last",{"_index":1167,"title":{},"body":{"interfaces/Day.html":{}}}],["dayclick",{"_index":1152,"title":{},"body":{"interfaces/Day.html":{},"changelog.html":{}}}],["de",{"_index":3582,"title":{},"body":{"injectables/SymbolService.html":{}}}],["deactiv",{"_index":3618,"title":{},"body":{"components/TabComponent.html":{}}}],["debit",{"_index":4311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debounc",{"_index":1963,"title":{},"body":{"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["debouncetime(this.debounc",{"_index":2003,"title":{},"body":{"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["decid",{"_index":2091,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["decim",{"_index":3798,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["declar",{"_index":141,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/GeocodeService.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["decor",{"_index":105,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["decreas",{"_index":4376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deeper",{"_index":3946,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":113,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"modules/FormModule.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["defaultconfig",{"_index":2687,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["defaultconfig[properti",{"_index":2700,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["defaultentryinputcompon",{"_index":206,"title":{"components/DefaultEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultentryoutputcompon",{"_index":207,"title":{"components/DefaultEntryOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultinputcompon",{"_index":19,"title":{"components/DefaultInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["defaultinputcomponent:12",{"_index":125,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:14",{"_index":129,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:16",{"_index":128,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:18",{"_index":124,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultlocal",{"_index":3132,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["defaultoutputcompon",{"_index":210,"title":{"components/DefaultOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaulttim",{"_index":2833,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["defin",{"_index":66,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["definit",{"_index":4773,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["del",{"_index":964,"title":{},"body":{"injectables/CrudService.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{}}}],["del(model",{"_index":976,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["del(rel",{"_index":3325,"title":{},"body":{"injectables/ResourceService.html":{}}}],["delay",{"_index":437,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/MenuComponent.html":{},"components/PopComponent.html":{},"miscellaneous/variables.html":{}}}],["delet",{"_index":275,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["delete(resourc",{"_index":3295,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["deletenullproperti",{"_index":3321,"title":{},"body":{"injectables/ResourceService.html":{}}}],["demo",{"_index":4022,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes.html":{}}}],["demonstr",{"_index":4680,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["deni",{"_index":2863,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["depend",{"_index":58,"title":{"dependencies.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["deprec",{"_index":3841,"title":{},"body":{"components/UploadComponent.html":{},"changelog.html":{}}}],["der",{"_index":2776,"title":{},"body":{"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["desc",{"_index":2141,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"changelog.html":{}}}],["descend",{"_index":2147,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["describ",{"_index":1548,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"additional-documentation/core-classes/field.html":{}}}],["descript",{"_index":10,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}}}],["deselect",{"_index":3628,"title":{},"body":{"components/TabComponent.html":{}}}],["desir",{"_index":2296,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["desktop",{"_index":2832,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotif",{"_index":2834,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotification(notif",{"_index":2838,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["destroy",{"_index":2507,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["determin",{"_index":1128,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ItemConfig.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{}}}],["dev",{"_index":4220,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["develop",{"_index":925,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["diagon",{"_index":4438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dial",{"_index":4354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dialog",{"_index":3042,"title":{},"body":{"components/PopComponent.html":{}}}],["diamond",{"_index":4356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["didact",{"_index":4758,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["die",{"_index":2777,"title":{},"body":{"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["dies",{"_index":538,"title":{},"body":{"injectables/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["differ",{"_index":858,"title":{},"body":{"components/CrudComponent.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/NotificationsComponent.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["direct",{"_index":184,"title":{"directives/AssetDirective.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/medium.html":{}}}],["directive/pipe/service/class/modul",{"_index":4225,"title":{},"body":{"index.html":{}}}],["directli",{"_index":392,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ResourceDeletePopComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/item.html":{}}}],["directori",{"_index":4228,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":1275,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/LoaderComponent.html":{},"components/MockupComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["disablecreatepop",{"_index":926,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disabledragend",{"_index":1147,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledragstart",{"_index":1145,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledtyp",{"_index":3202,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["disablehead",{"_index":2142,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["disablelistpop",{"_index":927,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disableselect",{"_index":3950,"title":{},"body":{"changelog.html":{}}}],["disableselectswitch",{"_index":928,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disablestrategi",{"_index":3231,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["disabletim",{"_index":1079,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["disableupd",{"_index":1839,"title":{},"body":{"injectables/HistoryService.html":{}}}],["disableupdates(key",{"_index":1843,"title":{},"body":{"injectables/HistoryService.html":{}}}],["discuss",{"_index":4743,"title":{},"body":{"additional-documentation/ui.html":{}}}],["display",{"_index":1081,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["displayaccount",{"_index":3778,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displayd",{"_index":3779,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displaydate(tim",{"_index":3783,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["dist",{"_index":4227,"title":{},"body":{"index.html":{}}}],["div",{"_index":2959,"title":{},"body":{"components/PaginationComponent.html":{}}}],["divid",{"_index":4357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dm",{"_index":3125,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dm::delet",{"_index":3127,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dm::edit",{"_index":3126,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dmaccount",{"_index":3170,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dmasset",{"_index":1642,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{}}}],["dmassetlist",{"_index":1605,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["dmassetlist.getallitem",{"_index":1662,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["dmassetresourc",{"_index":1607,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["dmclient",{"_index":3225,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dmuser",{"_index":3207,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["doc",{"_index":1519,"title":{},"body":{"classes/Field.html":{},"changelog.html":{}}}],["document",{"_index":4031,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/list.html":{}}}],["document:click",{"_index":3450,"title":{},"body":{"components/SelectComponent.html":{}}}],["document:click($ev",{"_index":3460,"title":{},"body":{"components/SelectComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["domsanit",{"_index":3358,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["dont",{"_index":1613,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["dosomethingriski",{"_index":2779,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["down",{"_index":4306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["download",{"_index":4342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["drag",{"_index":1129,"title":{},"body":{"interfaces/Day.html":{},"miscellaneous/variables.html":{}}}],["dragend",{"_index":2306,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["draggabl",{"_index":1123,"title":{},"body":{"interfaces/Day.html":{}}}],["dragleav",{"_index":1279,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragleave(",{"_index":1289,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragov",{"_index":1280,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragover(",{"_index":1292,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragstart(day",{"_index":1182,"title":{},"body":{"interfaces/Day.html":{}}}],["drawer",{"_index":3043,"title":{},"body":{"components/PopComponent.html":{}}}],["drop",{"_index":506,"title":{},"body":{"components/AssetListPopComponent.html":{},"directives/DropzoneDirective.html":{},"miscellaneous/variables.html":{}}}],["drop(",{"_index":1294,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dropday(day",{"_index":1163,"title":{},"body":{"interfaces/Day.html":{}}}],["dropdown",{"_index":2179,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/SelectComponent.html":{}}}],["dropzone/dropzone.direct",{"_index":1694,"title":{},"body":{"modules/FilesModule.html":{}}}],["dropzonedirect",{"_index":295,"title":{"directives/DropzoneDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dublic",{"_index":2630,"title":{},"body":{"components/MockupComponent.html":{}}}],["due",{"_index":3948,"title":{},"body":{"changelog.html":{}}}],["dumbbel",{"_index":4506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplic",{"_index":1601,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"injectables/SymbolService.html":{},"interfaces/Upload.html":{}}}],["dure",{"_index":2439,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["dynam",{"_index":213,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["dynamicrackcompon",{"_index":211,"title":{"components/DynamicRackComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicslotcompon",{"_index":212,"title":{"components/DynamicSlotComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicslotcomponent:11",{"_index":1990,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["dynamicslotcomponent:18",{"_index":1980,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["e",{"_index":165,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Day.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/ListItemsComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/item.html":{}}}],["e.data.yt",{"_index":4593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.datatransfer.fil",{"_index":1304,"title":{},"body":{"directives/DropzoneDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["e.datatransfer.files.length",{"_index":1305,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["e.display",{"_index":4784,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["e.g",{"_index":56,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthGuard.html":{},"classes/Config.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Symbol.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["e.id",{"_index":4783,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["e.preventdefault",{"_index":1185,"title":{},"body":{"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/SelectComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["e.stopimmediatepropag",{"_index":2210,"title":{},"body":{"components/ListItemsComponent.html":{},"components/ToolbarComponent.html":{}}}],["e.stoppropag",{"_index":1300,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/ListItemsComponent.html":{},"components/SelectComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["e.target",{"_index":3866,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.fil",{"_index":1628,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["e.target.files.length",{"_index":3867,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.localnam",{"_index":3725,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e.toel",{"_index":3727,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e2",{"_index":4259,"title":{},"body":{"index.html":{}}}],["each",{"_index":959,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{}}}],["easi",{"_index":3929,"title":{},"body":{"changelog.html":{},"additional-documentation/core-classes/list.html":{}}}],["ec",{"_index":27,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["ec.api",{"_index":336,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["ec.asset",{"_index":3190,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["ec.compon",{"_index":1731,"title":{},"body":{"injectables/FormService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes.html":{}}}],["ec.components//src/_",{"_index":4003,"title":{},"body":{"changelog.html":{}}}],["ec.components/_",{"_index":4001,"title":{},"body":{"changelog.html":{}}}],["ec.components/ac",{"_index":4751,"title":{},"body":{"additional-documentation/ace.html":{}}}],["ec.components/cor",{"_index":487,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"pipes/GroupPipe.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/PaginationComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"index.html":{},"additional-documentation/core-classes.html":{}}}],["ec.components/core/src/collection/collect",{"_index":2266,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{}}}],["ec.components/core/src/config/config",{"_index":2680,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["ec.components/core/src/config/field",{"_index":2681,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["ec.components/core/src/field/field",{"_index":1255,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["ec.components/core/src/form/form",{"_index":1748,"title":{},"body":{"injectables/FormService.html":{},"components/InputComponent.html":{}}}],["ec.components/core/src/item/item",{"_index":1262,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"components/SelectComponent.html":{},"interfaces/Upload.html":{}}}],["ec.components/core/src/list/list",{"_index":952,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/EntryListComponent.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{}}}],["ec.components/core/src/selection/select",{"_index":871,"title":{},"body":{"components/CrudComponent.html":{},"components/ListHeaderComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/data",{"_index":493,"title":{},"body":{"components/AssetListPopComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/data/src/entri",{"_index":3109,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["ec.components/data/src/resourc",{"_index":1865,"title":{},"body":{"injectables/HistoryService.html":{}}}],["ec.components/data/src/sdk/sdk.servic",{"_index":345,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthGuard.html":{},"components/DefaultEntryInputComponent.html":{}}}],["ec.components/loc",{"_index":4166,"title":{},"body":{"dependencies.html":{}}}],["ec.components/medium",{"_index":4164,"title":{},"body":{"dependencies.html":{},"additional-documentation/medium.html":{}}}],["ec.components/styl",{"_index":3975,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/style/components.scss\";5",{"_index":4648,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/tinymc",{"_index":4165,"title":{},"body":{"dependencies.html":{},"additional-documentation/tinymce.html":{}}}],["ec.components/ui",{"_index":135,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["ec.components/ui/src/form/default",{"_index":346,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["ec.components/ui/src/icon/emoji",{"_index":1896,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["ec.components/ui/src/loader/loader.compon",{"_index":872,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/ui/src/loader/loader.servic",{"_index":873,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/ui/src/notifications/notif",{"_index":881,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/UploadComponent.html":{}}}],["ec.components/ui/src/notifications/notifications.compon",{"_index":953,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["ec.components/ui/src/notifications/notifications.servic",{"_index":533,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/ui/src/notifications/with",{"_index":879,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/UploadComponent.html":{}}}],["ec.components/ui/src/pop/pop.compon",{"_index":486,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/UploadComponent.html":{}}}],["ec.components/ui/src/pop/pop.servic",{"_index":492,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["ec.components/ui/src/symbol/symbol.servic",{"_index":878,"title":{},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["ec.components/ui/src/ui.modul",{"_index":564,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{}}}],["ec.components/uidemo",{"_index":4749,"title":{},"body":{"additional-documentation/ui.html":{}}}],["ec.componentss/data",{"_index":3919,"title":{},"body":{"changelog.html":{}}}],["ec.list",{"_index":2628,"title":{},"body":{"components/MockupComponent.html":{}}}],["ec.list.card",{"_index":2636,"title":{},"body":{"components/MockupComponent.html":{}}}],["ec.list.simpl",{"_index":2637,"title":{},"body":{"components/MockupComponent.html":{}}}],["ec.sdk",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{},"classes/Field.html":{},"injectables/SdkService.html":{},"changelog.html":{},"dependencies.html":{}}}],["ec.sdk/lib/account",{"_index":3404,"title":{},"body":{"injectables/SdkService.html":{}}}],["ec.sdk/lib/cor",{"_index":642,"title":{},"body":{"injectables/AuthService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/datamanag",{"_index":3406,"title":{},"body":{"injectables/SdkService.html":{}}}],["ec.sdk/lib/publicapi",{"_index":404,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{}}}],["ec.sdk/lib/resources/accounts/accountresourc",{"_index":639,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/resources/datamanager/datamanagerresourc",{"_index":348,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/resources/datamanager/modelresourc",{"_index":1864,"title":{},"body":{"injectables/HistoryService.html":{}}}],["ec.sdk/lib/resources/listresourc",{"_index":1372,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetlist",{"_index":1606,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetresourc",{"_index":1608,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/entrylist",{"_index":995,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/resources/publicapi/entryresourc",{"_index":994,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetlist",{"_index":1610,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetresourc",{"_index":402,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/resourc",{"_index":3110,"title":{},"body":{"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{}}}],["ec.sdk/lib/sess",{"_index":3407,"title":{},"body":{"injectables/SdkService.html":{}}}],["ecasset",{"_index":361,"title":{},"body":{"directives/AssetDirective.html":{},"changelog.html":{}}}],["ecasset]'},{'nam",{"_index":294,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecdropzon",{"_index":1274,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ecdropzone]'},{'nam",{"_index":296,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecentri",{"_index":1344,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"changelog.html":{}}}],["ecentries]'},{'nam",{"_index":298,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecentry]'},{'nam",{"_index":300,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecicon",{"_index":1916,"title":{},"body":{"injectables/IconService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ecimag",{"_index":1925,"title":{},"body":{"directives/ImageDirective.html":{}}}],["ecimage]'},{'nam",{"_index":303,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecpublicasset",{"_index":3961,"title":{},"body":{"changelog.html":{}}}],["ecvc",{"_index":3752,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["edg",{"_index":1179,"title":{},"body":{"interfaces/Day.html":{}}}],["edit",{"_index":429,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/ToolbarComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["editfilt",{"_index":2159,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["editfilter(pop",{"_index":2167,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["editor",{"_index":13,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["editor#mediumeditor",{"_index":2519,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor'},{'nam",{"_index":255,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["editor,[ec",{"_index":217,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["editor.addbutton('imag",{"_index":4605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor.addbutton('youtub",{"_index":4585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor.caret?.flow?.typ",{"_index":3773,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["editor.caret?.phrasing?.typ",{"_index":3774,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["editor.compon",{"_index":2534,"title":{},"body":{"modules/MediumModule.html":{}}}],["editor.component.html",{"_index":2498,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.scss",{"_index":2497,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.t",{"_index":2493,"title":{},"body":{"components/MediumEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:35",{"_index":2501,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:37",{"_index":2503,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":2504,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:41",{"_index":2505,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":2512,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:45",{"_index":2516,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":2513,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":2515,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:52",{"_index":2508,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:63",{"_index":2506,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:68",{"_index":2511,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:75",{"_index":2514,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:78",{"_index":2509,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:82",{"_index":2510,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.destroy",{"_index":3732,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editor.getcont",{"_index":3715,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editor.insertcont",{"_index":4604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor.on('chang",{"_index":164,"title":{},"body":{"components/AceComponent.html":{}}}],["editor.setcontent(this.valu",{"_index":2527,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["editor.setvalue(this.valu",{"_index":180,"title":{},"body":{"components/AceComponent.html":{}}}],["editor.windowmanager.open",{"_index":4588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor/dist/js/medium",{"_index":2517,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor/editor.compon",{"_index":3766,"title":{},"body":{"components/ToolbarComponent.html":{},"modules/VcModule.html":{}}}],["editor/src/medium",{"_index":2492,"title":{},"body":{"components/MediumEditorComponent.html":{},"coverage.html":{}}}],["editor/src/medium.module.t",{"_index":2533,"title":{},"body":{"modules/MediumModule.html":{}}}],["editor?.caret?.phrasing?.typ",{"_index":3771,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["editor[0",{"_index":3722,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editor]'},{'nam",{"_index":218,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["editorcompon",{"_index":215,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/VcModule.html":{},"coverage.html":{},"overview.html":{}}}],["editorset",{"_index":3712,"title":{},"body":{"components/TinymceComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ein",{"_index":3030,"title":{},"body":{"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{}}}],["einfach",{"_index":4555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["einfügen",{"_index":4589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eingab",{"_index":4293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eingeloggt",{"_index":546,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["einleitung",{"_index":4568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eject",{"_index":4466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["el",{"_index":1283,"title":{},"body":{"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{},"components/TabComponent.html":{}}}],["el.tag",{"_index":3772,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["element",{"_index":108,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["elementref",{"_index":104,"title":{},"body":{"components/AceComponent.html":{},"directives/DropzoneDirective.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["elimin",{"_index":4747,"title":{},"body":{"additional-documentation/ui.html":{}}}],["email",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["emailavail",{"_index":2471,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emaillabel",{"_index":2423,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["emailplacehold",{"_index":2424,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["emailunavail",{"_index":4288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailvalid",{"_index":4154,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["embed",{"_index":1319,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["embedd",{"_index":1893,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["emit",{"_index":465,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["emit(host",{"_index":2784,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["emit(notif",{"_index":2843,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["emitt",{"_index":464,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/NotificationsService.html":{},"components/SelectComponent.html":{}}}],["emoji",{"_index":4625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emojiicon",{"_index":1895,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/icons.html":{}}}],["empti",{"_index":454,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ListConfig.html":{},"components/MediumEditorComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["en",{"_index":3598,"title":{},"body":{"injectables/SymbolService.html":{}}}],["enabl",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{},"index.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["enableupd",{"_index":1840,"title":{},"body":{"injectables/HistoryService.html":{}}}],["enableupdates(resourc",{"_index":1848,"title":{},"body":{"injectables/HistoryService.html":{}}}],["encapsul",{"_index":2059,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{}}}],["end",{"_index":1146,"title":{},"body":{"interfaces/Day.html":{},"index.html":{}}}],["endless",{"_index":1349,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["enforc",{"_index":4671,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["enhanc",{"_index":3591,"title":{},"body":{"injectables/SymbolService.html":{}}}],["enough",{"_index":4651,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["enrich",{"_index":3115,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["ensur",{"_index":3023,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["enter",{"_index":4488,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["entiti",{"_index":2041,"title":{},"body":{"interfaces/ItemConfig.html":{},"additional-documentation/core-classes/item.html":{}}}],["entri",{"_index":208,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/data.html":{}}}],["entries/entries.direct",{"_index":1060,"title":{},"body":{"modules/DataModule.html":{}}}],["entriesdirect",{"_index":297,"title":{"directives/EntriesDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entry.del().then((r",{"_index":1032,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["entry.getimagethumburl(properti",{"_index":3799,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.gettitle(properti",{"_index":3810,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.sav",{"_index":1006,"title":{},"body":{"injectables/CrudService.html":{},"injectables/SymbolPipe.html":{},"interfaces/Update.html":{}}}],["entry.save().then((_entri",{"_index":1020,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["entry/entry.direct",{"_index":1061,"title":{},"body":{"modules/DataModule.html":{}}}],["entry[key",{"_index":1016,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["entrycompon",{"_index":321,"title":{},"body":{"modules/AceModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["entrydirect",{"_index":299,"title":{"directives/EntryDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryformcompon",{"_index":219,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryformcomponent.deleteentri",{"_index":3978,"title":{},"body":{"changelog.html":{}}}],["entryid",{"_index":1395,"title":{},"body":{"directives/EntryDirective.html":{},"injectables/ResourceService.html":{}}}],["entrylist",{"_index":864,"title":{},"body":{"components/CrudComponent.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"interfaces/Update.html":{},"coverage.html":{}}}],["entrylist(this.model",{"_index":1480,"title":{},"body":{"components/EntryListComponent.html":{}}}],["entrylistcompon",{"_index":221,"title":{"components/EntryListComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrypop",{"_index":825,"title":{},"body":{"components/CrudComponent.html":{}}}],["entrypopcompon",{"_index":223,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryresourc",{"_index":977,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{}}}],["entryselectcompon",{"_index":224,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["env",{"_index":3405,"title":{},"body":{"injectables/SdkService.html":{}}}],["env=prod",{"_index":4229,"title":{},"body":{"index.html":{}}}],["env=stag",{"_index":4230,"title":{},"body":{"index.html":{}}}],["envelop",{"_index":4358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environ",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/SdkService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["environment.clientid",{"_index":3421,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.datamanagerid",{"_index":3424,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.environ",{"_index":3431,"title":{},"body":{"injectables/SdkService.html":{}}}],["environments/environ",{"_index":4659,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["equal",{"_index":895,"title":{},"body":{"components/CrudComponent.html":{},"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["equalis",{"_index":4359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eras",{"_index":4360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erhalten",{"_index":3034,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["err",{"_index":910,"title":{},"body":{"components/CrudComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["err.messag",{"_index":2473,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["error",{"_index":515,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["error'},{'nam",{"_index":226,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["error('cannot",{"_index":414,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{}}}],["error('get",{"_index":3413,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('no",{"_index":3408,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('th",{"_index":3604,"title":{},"body":{"injectables/SymbolService.html":{}}}],["error(`cannot",{"_index":2933,"title":{},"body":{"classes/Pagination.html":{}}}],["error.cod",{"_index":1496,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.code}}{{error.datapath}}{{error?.message}}{{error.detail",{"_index":1500,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":1484,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.datapath",{"_index":1497,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.detail",{"_index":1499,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.messag",{"_index":2031,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["error/error.compon",{"_index":2828,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["error?.messag",{"_index":1498,"title":{},"body":{"components/ErrorComponent.html":{}}}],["errorcompon",{"_index":225,"title":{"components/ErrorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormessag",{"_index":2418,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["errors'},{'nam",{"_index":234,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["errors.compon",{"_index":2038,"title":{},"body":{"modules/IoModule.html":{}}}],["errors.component.html",{"_index":2019,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.scss",{"_index":2018,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.t",{"_index":2015,"title":{},"body":{"components/InputErrorsComponent.html":{},"coverage.html":{}}}],["errors.component.ts:13",{"_index":2021,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:15",{"_index":2025,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:19",{"_index":2022,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors/input",{"_index":2014,"title":{},"body":{"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"coverage.html":{}}}],["errs.push",{"_index":2030,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["erstellt",{"_index":4697,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["es2015",{"_index":4232,"title":{},"body":{"index.html":{}}}],["es6",{"_index":1099,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"dependencies.html":{}}}],["escap",{"_index":3070,"title":{},"body":{"injectables/PopService.html":{}}}],["etc",{"_index":1518,"title":{},"body":{"classes/Field.html":{},"components/ListItemsComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["euro",{"_index":4440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["even",{"_index":935,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["event",{"_index":379,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["event.key",{"_index":3077,"title":{},"body":{"injectables/PopService.html":{}}}],["event.keycod",{"_index":3075,"title":{},"body":{"injectables/PopService.html":{}}}],["eventemitt",{"_index":380,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/core-classes.html":{}}}],["eventemitter.t",{"_index":809,"title":{},"body":{"classes/Config.html":{}}}],["eventsourc",{"_index":1838,"title":{},"body":{"injectables/HistoryService.html":{}}}],["eventu",{"_index":3873,"title":{},"body":{"components/UploadComponent.html":{},"index.html":{}}}],["everyth",{"_index":2642,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["everytim",{"_index":993,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["exact",{"_index":1107,"title":{},"body":{"pipes/DatetimePipe.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"injectables/TypeConfigService.html":{}}}],["exampl",{"_index":7,"title":{},"body":{"components/AceComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["exclud",{"_index":4247,"title":{},"body":{"index.html":{}}}],["execut",{"_index":4257,"title":{},"body":{"index.html":{}}}],["exist",{"_index":989,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["expand",{"_index":4361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect",{"_index":139,"title":{},"body":{"components/AceComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"interfaces/Symbol.html":{},"miscellaneous/variables.html":{}}}],["experiment",{"_index":2152,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["explicitli",{"_index":4246,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["export",{"_index":145,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["exporta",{"_index":405,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["expos",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{}}}],["exposur",{"_index":4362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extend",{"_index":18,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListComponent.html":{},"interfaces/FormConfig.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["extens",{"_index":424,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListComponent.html":{},"interfaces/FormConfig.html":{}}}],["extensions/modes/them",{"_index":4755,"title":{},"body":{"additional-documentation/ace.html":{}}}],["extern",{"_index":945,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Pagination.html":{}}}],["extra",{"_index":426,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/CrudConfig.html":{},"additional-documentation/core-classes/form.html":{}}}],["extract",{"_index":1742,"title":{},"body":{"injectables/FormService.html":{}}}],["ey",{"_index":4370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f.name",{"_index":3890,"title":{},"body":{"components/UploadComponent.html":{}}}],["f]{12}$/i",{"_index":3122,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["f]{3",{"_index":3120,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["f]{4",{"_index":3118,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["f]{8",{"_index":3117,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["facebook",{"_index":4478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factori",{"_index":4485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fail",{"_index":529,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Collection.html":{},"index.html":{}}}],["failiur",{"_index":2797,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["faktor",{"_index":4701,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["fall",{"_index":946,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["fallback",{"_index":2081,"title":{},"body":{"components/ListComponent.html":{}}}],["fals",{"_index":409,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"modules/NotificationsModule.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["fancier",{"_index":3740,"title":{},"body":{"components/ToggleComponent.html":{}}}],["fax",{"_index":4486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fb",{"_index":2431,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["featur",{"_index":2787,"title":{},"body":{"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["feature=oembed&rel=0",{"_index":4603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fehler",{"_index":2781,"title":{},"body":{"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["feld",{"_index":4291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff5353",{"_index":4551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffff8d",{"_index":4552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":3116,"title":{},"body":{"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["ffnungszeiten",{"_index":4716,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["field",{"_index":41,"title":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"directives/SlotHostDirective.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["field'",{"_index":1537,"title":{},"body":{"classes/Field.html":{}}}],["field('nam",{"_index":1561,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.compon",{"_index":1321,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["field.display(nam",{"_index":1569,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.form",{"_index":1751,"title":{},"body":{"injectables/FormService.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["field.group(nam",{"_index":1570,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.label",{"_index":2189,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.maxitems||10",{"_index":1267,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["field.properti",{"_index":2190,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.queryfilt",{"_index":1469,"title":{},"body":{"components/EntryListComponent.html":{}}}],["field.queryfilter(valu",{"_index":1470,"title":{},"body":{"components/EntryListComponent.html":{}}}],["field.requir",{"_index":1762,"title":{},"body":{"injectables/FormService.html":{}}}],["field.resolve({value:{name:'bobbi",{"_index":1567,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.sort(nam",{"_index":1572,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.title).filter(field",{"_index":3143,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["field.typ",{"_index":355,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["field.valid",{"_index":1746,"title":{},"body":{"injectables/FormService.html":{}}}],["field.validate(control.valu",{"_index":1765,"title":{},"body":{"injectables/FormService.html":{}}}],["field[0",{"_index":3144,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["fieldconfig",{"_index":1589,"title":{"interfaces/FieldConfig.html":{}},"body":{"interfaces/FieldConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{},"additional-documentation/core-classes/item.html":{}}}],["fieldconfig).then((field",{"_index":2735,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[properti",{"_index":2713,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfigproperti",{"_index":1502,"title":{},"body":{"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{},"additional-documentation/core-classes/field.html":{}}}],["fieldfilt",{"_index":1449,"title":{},"body":{"components/EntryListComponent.html":{}}}],["fieldhost",{"_index":1326,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldhostdirect",{"_index":1333,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldlabel",{"_index":2160,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["fieldlabel(field",{"_index":2170,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["fieldnam",{"_index":1595,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["fields.filter((field",{"_index":3911,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fields.pip",{"_index":1716,"title":{},"body":{"modules/FormModule.html":{}}}],["fields.pipe.t",{"_index":3906,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{},"coverage.html":{}}}],["fields.pipe.ts:10",{"_index":3909,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fieldvalid",{"_index":2462,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fieldvalidators.email",{"_index":2470,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["file.servic",{"_index":491,"title":{},"body":{"components/AssetListPopComponent.html":{},"modules/FilesModule.html":{},"components/UploadComponent.html":{}}}],["fileinput",{"_index":3836,"title":{},"body":{"components/UploadComponent.html":{}}}],["filelist",{"_index":1627,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["filenam",{"_index":1604,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["fileopt",{"_index":1592,"title":{"interfaces/FileOptions.html":{}},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"coverage.html":{}}}],["files.length",{"_index":1629,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["files/files.modul",{"_index":1058,"title":{},"body":{"modules/DataModule.html":{}}}],["fileservic",{"_index":1611,"title":{"injectables/FileService.html":{}},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filesmodul",{"_index":1039,"title":{"modules/FilesModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filestoupload",{"_index":3837,"title":{},"body":{"components/UploadComponent.html":{}}}],["fill",{"_index":4500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill(0",{"_index":1206,"title":{},"body":{"interfaces/Day.html":{}}}],["filter",{"_index":970,"title":{},"body":{"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/list.html":{}}}],["filter((item",{"_index":3552,"title":{},"body":{"classes/Sorter.html":{}}}],["filter(properti",{"_index":1443,"title":{},"body":{"components/EntryListComponent.html":{},"injectables/ModelConfigService.html":{}}}],["filter(rout",{"_index":2597,"title":{},"body":{"components/MenuComponent.html":{}}}],["filter[key",{"_index":1002,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["filteroper",{"_index":1503,"title":{},"body":{"classes/Field.html":{},"injectables/TypeConfigService.html":{}}}],["filteropt",{"_index":1357,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["filterpopclass",{"_index":1504,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["find",{"_index":168,"title":{},"body":{"components/AceComponent.html":{},"injectables/SymbolService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["finish",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["fire",{"_index":378,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["first",{"_index":474,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["fit",{"_index":986,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["fix",{"_index":3979,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["flag",{"_index":738,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"injectables/NotificationsService.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["flash",{"_index":4364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flat",{"_index":4214,"title":{},"body":{"index.html":{}}}],["flexibl",{"_index":2095,"title":{},"body":{"components/ListComponent.html":{},"changelog.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["flip",{"_index":1291,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/LoginFormComponent.html":{},"injectables/SdkService.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":4689,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["fn",{"_index":89,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["focu",{"_index":3764,"title":{},"body":{"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["focusout",{"_index":3757,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["focusout(",{"_index":3761,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["folder",{"_index":4016,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["follow",{"_index":1906,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["font",{"_index":3567,"title":{},"body":{"interfaces/Symbol.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":3055,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["foreach((field",{"_index":1752,"title":{},"body":{"injectables/FormService.html":{}}}],["forecolor",{"_index":4581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forenviron",{"_index":4665,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["forenvironment(environ",{"_index":1070,"title":{},"body":{"modules/DataModule.html":{}}}],["forev",{"_index":2753,"title":{},"body":{"classes/Notification.html":{}}}],["form",{"_index":112,"title":{"additional-documentation/core-classes/form.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/form.html":{}}}],["form'",{"_index":1987,"title":{},"body":{"components/InputComponent.html":{}}}],["form'},{'nam",{"_index":220,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["form(nul",{"_index":4794,"title":{},"body":{"additional-documentation/core-classes/form.html":{}}}],["form.compon",{"_index":174,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FormModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"modules/UtilityModule.html":{},"changelog.html":{}}}],["form.component.html",{"_index":2417,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.scss",{"_index":2416,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.t",{"_index":2412,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:18",{"_index":2458,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:20",{"_index":2461,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:22",{"_index":2457,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:24",{"_index":2448,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:26",{"_index":2446,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:28",{"_index":2440,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:30",{"_index":2445,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:32",{"_index":2436,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:34",{"_index":2438,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:36",{"_index":2442,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:38",{"_index":2443,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:40",{"_index":2434,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:42",{"_index":2433,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:44",{"_index":2430,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:51",{"_index":2453,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:59",{"_index":2456,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:67",{"_index":2450,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:72",{"_index":2454,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.fields.filter((field",{"_index":1750,"title":{},"body":{"injectables/FormService.html":{}}}],["form.servic",{"_index":1715,"title":{},"body":{"modules/FormModule.html":{}}}],["form.t",{"_index":4105,"title":{},"body":{"coverage.html":{}}}],["form/admin",{"_index":325,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"modules/DataModule.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["form/default",{"_index":1050,"title":{},"body":{"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["form/entri",{"_index":868,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"coverage.html":{}}}],["form/form.compon",{"_index":2181,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["form/form.modul",{"_index":2221,"title":{},"body":{"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["form/login",{"_index":2411,"title":{},"body":{"components/LoginFormComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{}}}],["form/resourc",{"_index":1062,"title":{},"body":{"modules/DataModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["format",{"_index":1124,"title":{},"body":{"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["formattedtext",{"_index":3796,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["formbuild",{"_index":2429,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["formcompon",{"_index":227,"title":{"additional-documentation/ui/formcomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["formcomponent#input",{"_index":1988,"title":{},"body":{"components/InputComponent.html":{}}}],["formcomponent.submit",{"_index":3982,"title":{},"body":{"changelog.html":{}}}],["formconfig",{"_index":1695,"title":{"interfaces/FormConfig.html":{}},"body":{"interfaces/FormConfig.html":{},"coverage.html":{}}}],["formcontrol",{"_index":122,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/LocationPickerComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["formcontrol(form.getvalue(field.properti",{"_index":1755,"title":{},"body":{"injectables/FormService.html":{}}}],["formdata",{"_index":1625,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["former",{"_index":3969,"title":{},"body":{"changelog.html":{}}}],["formgroup",{"_index":127,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{}}}],["formgroup(control",{"_index":1760,"title":{},"body":{"injectables/FormService.html":{}}}],["formmodul",{"_index":1699,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["formservic",{"_index":1712,"title":{"injectables/FormService.html":{}},"body":{"modules/FormModule.html":{},"injectables/FormService.html":{},"coverage.html":{},"overview.html":{}}}],["formsmodul",{"_index":1046,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{}}}],["forwardref",{"_index":131,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["found",{"_index":514,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["foundat",{"_index":4761,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["fourth",{"_index":4189,"title":{},"body":{"index.html":{}}}],["fox",{"_index":2632,"title":{},"body":{"components/MockupComponent.html":{}}}],["frage",{"_index":4572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frame",{"_index":4365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frompromis",{"_index":1794,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["frompromise(this.maploader.load",{"_index":1814,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["fromsearch",{"_index":2347,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["front",{"_index":4395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fruit",{"_index":2099,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["früchte",{"_index":4804,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["full",{"_index":2582,"title":{},"body":{"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["fullscreen",{"_index":4528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fun",{"_index":4675,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["function",{"_index":570,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{}}}],["fundament",{"_index":715,"title":{},"body":{"classes/Collection.html":{}}}],["further",{"_index":2750,"title":{},"body":{"classes/Notification.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{},"index.html":{}}}],["g",{"_index":4628,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["gener",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["generateconfig",{"_index":2647,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generateconfig(model",{"_index":2655,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generatefieldconfig",{"_index":2648,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generatefieldconfig(model",{"_index":2657,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["geo",{"_index":2350,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["geocod",{"_index":1769,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocode.servic",{"_index":2326,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["geocodelatlng",{"_index":1771,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodelatlng(geocod",{"_index":1783,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocoder.geocod",{"_index":1819,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodeservic",{"_index":1766,"title":{"injectables/GeocodeService.html":{}},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["get",{"_index":2746,"title":{"changelog.html":{},"index.html":{}},"body":{"classes/Notification.html":{},"index.html":{},"additional-documentation/core-classes/list.html":{}}}],["get(nam",{"_index":3585,"title":{},"body":{"injectables/SymbolService.html":{}}}],["get(properti",{"_index":2662,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["get(relationnam",{"_index":3096,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["get(typ",{"_index":3788,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["getaccount",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getaccount(api",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getalgorithm",{"_index":3528,"title":{},"body":{"classes/Sorter.html":{}}}],["getalgorithm(item",{"_index":3533,"title":{},"body":{"classes/Sorter.html":{}}}],["getallowedmodelmethod",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedmodelmethods(model",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethod",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethods(rel",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["getapi",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getapi(email",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcolor",{"_index":2542,"title":{},"body":{"components/MenuComponent.html":{}}}],["getcolor(level",{"_index":2573,"title":{},"body":{"components/MenuComponent.html":{}}}],["getconfig",{"_index":3107,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["getdaycolor(_mo",{"_index":1189,"title":{},"body":{"interfaces/Day.html":{}}}],["geterror",{"_index":2020,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["getformdata",{"_index":1668,"title":{},"body":{"injectables/FileService.html":{}}}],["getformdata(fil",{"_index":1626,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["getgroup",{"_index":1733,"title":{},"body":{"injectables/FormService.html":{}}}],["getgroup(form",{"_index":1738,"title":{},"body":{"injectables/FormService.html":{}}}],["getitemcolor",{"_index":2543,"title":{},"body":{"components/MenuComponent.html":{}}}],["getitemcolor(item",{"_index":2575,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlevel",{"_index":2544,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlevel(level",{"_index":2577,"title":{},"body":{"components/MenuComponent.html":{}}}],["getmonth(day",{"_index":1201,"title":{},"body":{"interfaces/Day.html":{}}}],["getnearestaddress",{"_index":1772,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getnearestaddress(loc",{"_index":1788,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getpag",{"_index":2876,"title":{},"body":{"classes/Pagination.html":{}}}],["getpath",{"_index":2545,"title":{},"body":{"components/MenuComponent.html":{}}}],["getpath(item",{"_index":2580,"title":{},"body":{"components/MenuComponent.html":{}}}],["getpermiss",{"_index":2835,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getplacehold",{"_index":1510,"title":{},"body":{"classes/Field.html":{}}}],["getpopclass",{"_index":828,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["getroot",{"_index":3399,"title":{},"body":{"injectables/SdkService.html":{}}}],["getschema",{"_index":3369,"title":{},"body":{"injectables/SdkService.html":{}}}],["getschema(model",{"_index":3376,"title":{},"body":{"injectables/SdkService.html":{}}}],["getter",{"_index":798,"title":{},"body":{"classes/Config.html":{},"injectables/SdkService.html":{},"additional-documentation/core-classes/form.html":{}}}],["getvalid",{"_index":1734,"title":{},"body":{"injectables/FormService.html":{}}}],["getvalidators(field",{"_index":1740,"title":{},"body":{"injectables/FormService.html":{}}}],["github",{"_index":4501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["give",{"_index":985,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["given",{"_index":75,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["glass",{"_index":4472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["global",{"_index":2244,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["globalload",{"_index":2250,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["globe",{"_index":4388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glue",{"_index":4502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glyph",{"_index":3568,"title":{},"body":{"interfaces/Symbol.html":{}}}],["go",{"_index":4261,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["googl",{"_index":1768,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["google.maps.geocod",{"_index":1826,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.places.autocomplete(el",{"_index":1800,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["googlemap",{"_index":2380,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["gp",{"_index":4389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradient",{"_index":4366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":2842,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["graph",{"_index":4324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grid",{"_index":4544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group",{"_index":42,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{}}}],["group.addcontrol(field.properti",{"_index":1761,"title":{},"body":{"injectables/FormService.html":{}}}],["group.nam",{"_index":3168,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["group.pip",{"_index":2219,"title":{},"body":{"modules/ListModule.html":{}}}],["group.valu",{"_index":1482,"title":{},"body":{"components/EntryListComponent.html":{},"components/ListComponent.html":{}}}],["groupdat",{"_index":3780,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["groupid",{"_index":3251,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["groupnam",{"_index":2629,"title":{},"body":{"components/MockupComponent.html":{}}}],["grouppip",{"_index":1106,"title":{"pipes/GroupPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"modules/ListModule.html":{},"coverage.html":{},"overview.html":{}}}],["grow",{"_index":1353,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["größer",{"_index":4702,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["guard",{"_index":511,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.servic",{"_index":568,"title":{},"body":{"modules/AuthModule.html":{}}}],["guard.service.t",{"_index":510,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["guard.service.ts:12",{"_index":524,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.service.ts:17",{"_index":525,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guid",{"_index":4191,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["h",{"_index":2105,"title":{},"body":{"components/ListComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["h2",{"_index":4560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h3",{"_index":4561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h4",{"_index":4563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h5",{"_index":4565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haben",{"_index":3028,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["hacki",{"_index":2012,"title":{},"body":{"components/InputComponent.html":{}}}],["halfr",{"_index":1863,"title":{},"body":{"injectables/HistoryService.html":{}}}],["hamburg",{"_index":4399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hand",{"_index":4351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handl",{"_index":427,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListComponent.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["handler",{"_index":2078,"title":{},"body":{"components/ListComponent.html":{},"components/SelectComponent.html":{}}}],["happen",{"_index":997,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["harri",{"_index":4391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["has(item",{"_index":746,"title":{},"body":{"classes/Collection.html":{}}}],["hasactivepath",{"_index":2546,"title":{},"body":{"components/MenuComponent.html":{}}}],["hasactivepath(item",{"_index":2583,"title":{},"body":{"components/MenuComponent.html":{}}}],["hasal",{"_index":720,"title":{},"body":{"classes/Collection.html":{}}}],["hasall(item",{"_index":749,"title":{},"body":{"classes/Collection.html":{}}}],["hasentri",{"_index":3146,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["hash",{"_index":4367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hasmethod",{"_index":829,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["hasmethod(method",{"_index":851,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["haspassword",{"_index":3159,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["haspendingemail",{"_index":3161,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["have",{"_index":329,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/LoaderService.html":{}}}],["header",{"_index":1148,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["header'},{'nam",{"_index":237,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["header.compon",{"_index":2218,"title":{},"body":{"modules/ListModule.html":{}}}],["header.component.html",{"_index":2157,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.scss",{"_index":2156,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.t",{"_index":2155,"title":{},"body":{"components/ListHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:16",{"_index":2162,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:18",{"_index":2163,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:20",{"_index":2178,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:22",{"_index":2174,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:25",{"_index":2168,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:31",{"_index":2165,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:35",{"_index":2173,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:39",{"_index":2171,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header/list",{"_index":2154,"title":{},"body":{"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["headlin",{"_index":2756,"title":{},"body":{"classes/Notification.html":{}}}],["health",{"_index":4368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heart",{"_index":4469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heatmap",{"_index":1139,"title":{},"body":{"interfaces/Day.html":{}}}],["heatmap'},{'nam",{"_index":229,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["heatmapcompon",{"_index":228,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":2098,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["help",{"_index":1983,"title":{},"body":{"components/InputComponent.html":{},"index.html":{}}}],["helper",{"_index":1360,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["here",{"_index":2247,"title":{},"body":{"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["hexcolor",{"_index":3085,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["hidden",{"_index":1505,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["hide",{"_index":440,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/SelectComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["hidefirstlast",{"_index":2999,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["hidepag",{"_index":3000,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["high",{"_index":4446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["higher",{"_index":2106,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["highlight",{"_index":4371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hint",{"_index":4760,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["histori",{"_index":1860,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/WithNotifications.html":{}}}],["historyservic",{"_index":1042,"title":{"injectables/HistoryService.html":{}},"body":{"modules/DataModule.html":{},"injectables/HistoryService.html":{},"coverage.html":{},"overview.html":{}}}],["hochladen",{"_index":507,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["hold",{"_index":327,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/MockupComponent.html":{},"injectables/PopService.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{}}}],["holder",{"_index":1413,"title":{},"body":{"components/EntryListComponent.html":{}}}],["home",{"_index":4416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hook",{"_index":172,"title":{},"body":{"components/AceComponent.html":{},"injectables/ResourceConfig.html":{}}}],["hook.method",{"_index":3148,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["horizont",{"_index":4321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":306,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["host.direct",{"_index":1334,"title":{},"body":{"components/DynamicSlotComponent.html":{},"modules/IoModule.html":{}}}],["host.directive.t",{"_index":3518,"title":{},"body":{"directives/SlotHostDirective.html":{},"coverage.html":{}}}],["host.directive.ts:11",{"_index":3523,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["host.directive.ts:9",{"_index":3521,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["hostbind",{"_index":1276,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostbinding('class.i",{"_index":1296,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlisten",{"_index":1278,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/SelectComponent.html":{},"components/ToolbarComponent.html":{}}}],["hostlistener('click",{"_index":3767,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["hostlistener('document:click",{"_index":3486,"title":{},"body":{"components/SelectComponent.html":{}}}],["hostlistener('dragleav",{"_index":1307,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('dragov",{"_index":1297,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('drop",{"_index":1302,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('focusout",{"_index":3770,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["hour",{"_index":4720,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["hourglass",{"_index":4372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hours.component.html",{"_index":4721,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["hours.component.scss",{"_index":4722,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["hover",{"_index":2539,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoverdelay",{"_index":2551,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoveritem",{"_index":2547,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoveritem(item",{"_index":2586,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoverout",{"_index":2548,"title":{},"body":{"components/MenuComponent.html":{}}}],["html",{"_index":183,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"pipes/SafeHtmlPipe.html":{},"components/SelectComponent.html":{},"injectables/SymbolPipe.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["html.pipe",{"_index":3903,"title":{},"body":{"modules/VcModule.html":{}}}],["html.pipe.t",{"_index":3351,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"coverage.html":{}}}],["html.pipe.ts:10",{"_index":3357,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["http",{"_index":4672,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["http://localhost:4200",{"_index":4222,"title":{},"body":{"index.html":{}}}],["https://angular.io/guide/dynam",{"_index":3519,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["https://blog.thoughtram.io/angular/2016/07/27/custom",{"_index":4726,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["https://components.entrecode.d",{"_index":4192,"title":{},"body":{"index.html":{}}}],["https://components.entrecode.de/auth/auth",{"_index":2389,"title":{},"body":{"components/LoginComponent.html":{}}}],["https://components.entrecode.de/data/crud",{"_index":819,"title":{},"body":{"components/CrudComponent.html":{}}}],["https://components.entrecode.de/data/entri",{"_index":1343,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{}}}],["https://components.entrecode.de/misc/ac",{"_index":17,"title":{},"body":{"components/AceComponent.html":{}}}],["https://components.entrecode.de/misc/medium",{"_index":2495,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["https://components.entrecode.de/misc/tinymc",{"_index":3675,"title":{},"body":{"components/TinymceComponent.html":{}}}],["https://components.entrecode.de/ui/datetim",{"_index":1073,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["https://components.entrecode.de/ui/list/bas",{"_index":2056,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/list/transform",{"_index":2058,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/load",{"_index":2226,"title":{},"body":{"components/LoaderComponent.html":{}}}],["https://components.entrecode.de/ui/login",{"_index":2415,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["https://components.entrecode.de/ui/notif",{"_index":2764,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["https://components.entrecode.de/ui/pop",{"_index":3044,"title":{},"body":{"components/PopComponent.html":{}}}],["https://components.entrecode.de/ui/select",{"_index":3441,"title":{},"body":{"components/SelectComponent.html":{}}}],["https://components.entrecode.de/ui/tab",{"_index":3635,"title":{},"body":{"components/TabsComponent.html":{}}}],["https://doc.entrecode.de/en/develop/resources/dm",{"_index":3197,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["https://docs.npmjs.com/cli/access#detail",{"_index":4742,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["https://entrecode.de/schema/dm",{"_index":3209,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["https://entrecode.github.io/ec.compon",{"_index":4190,"title":{},"body":{"index.html":{}}}],["https://entrecode.github.io/ec.sdk/#api",{"_index":1429,"title":{},"body":{"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["https://entrecode.github.io/ec.sdk/#environ",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["https://github.com/ajaxorg/ac",{"_index":148,"title":{},"body":{"components/AceComponent.html":{}}}],["https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4",{"_index":1759,"title":{},"body":{"injectables/FormService.html":{}}}],["https://github.com/auth0/angular2",{"_index":572,"title":{},"body":{"modules/AuthModule.html":{}}}],["https://github.com/mishoo/uglifyjs2/issues/659",{"_index":4236,"title":{},"body":{"index.html":{}}}],["https://icons.entrecode.de/ec",{"_index":4539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://localhost:4200",{"_index":4678,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["https://localhost:4200/muffin",{"_index":4688,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["https://www.youtube.com/emb",{"_index":4601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https?:\\/\\/(?:[a",{"_index":4595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["human",{"_index":1556,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"additional-documentation/core-classes/field.html":{}}}],["höhe",{"_index":4798,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["höher",{"_index":4799,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["i+1",{"_index":2988,"title":{},"body":{"components/PaginationComponent.html":{}}}],["icon",{"_index":1506,"title":{"additional-documentation/ui/icons.html":{}},"body":{"classes/Field.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/icons.html":{}}}],["icon'},{'nam",{"_index":231,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["icon.compon",{"_index":1914,"title":{},"body":{"modules/IconModule.html":{}}}],["icon.component.html",{"_index":1885,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.cont",{"_index":1908,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.servic",{"_index":1900,"title":{},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{}}}],["icon/icon.modul",{"_index":1724,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/UiModule.html":{}}}],["iconcompon",{"_index":230,"title":{"components/IconComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iconmodul",{"_index":1709,"title":{"modules/IconModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["icons.t",{"_index":4140,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["iconservic",{"_index":1887,"title":{"injectables/IconService.html":{}},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/icons.html":{}}}],["id",{"_index":360,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["idea",{"_index":2094,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["identifi",{"_index":1614,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["identifierpattern",{"_index":2043,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["ids.push(asset",{"_index":1655,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["ifram",{"_index":187,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{}}}],["ignor",{"_index":1600,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["ignoredupl",{"_index":1596,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["imag",{"_index":1920,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["image/image.direct",{"_index":1693,"title":{},"body":{"modules/FilesModule.html":{}}}],["imagedirect",{"_index":301,"title":{"directives/ImageDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["images",{"_index":3203,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["img",{"_index":302,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["img'",{"_index":1921,"title":{},"body":{"directives/ImageDirective.html":{}}}],["immedi",{"_index":372,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["immut",{"_index":981,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["immuta",{"_index":3095,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["implement",{"_index":15,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"pipes/SafeHtmlPipe.html":{},"components/SelectComponent.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["impli",{"_index":4212,"title":{},"body":{"index.html":{}}}],["import",{"_index":60,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["impressum",{"_index":4262,"title":{},"body":{"index.html":{}}}],["improv",{"_index":4027,"title":{},"body":{"changelog.html":{}}}],["inbox",{"_index":4374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includ",{"_index":1602,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/core-classes/form.html":{}}}],["includeassetidinpath",{"_index":1597,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["incom",{"_index":3353,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{}}}],["incompat",{"_index":3949,"title":{},"body":{"changelog.html":{}}}],["increas",{"_index":4377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indent",{"_index":4375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":32,"title":{"index.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/selection.html":{}}}],["index(item",{"_index":752,"title":{},"body":{"classes/Collection.html":{}}}],["index.html",{"_index":1894,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ace.html":{}}}],["index.t",{"_index":4216,"title":{},"body":{"index.html":{}}}],["indic",{"_index":1599,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["infin",{"_index":4378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["inform",{"_index":2175,"title":{},"body":{"components/ListHeaderComponent.html":{},"classes/Notification.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes.html":{}}}],["inhabit",{"_index":2047,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["inherit",{"_index":123,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/OutputComponent.html":{},"additional-documentation/ui.html":{}}}],["init",{"_index":45,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"directives/EntriesDirective.html":{},"components/MediumEditorComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes/form.html":{}}}],["init(environ",{"_index":3380,"title":{},"body":{"injectables/SdkService.html":{}}}],["initfilt",{"_index":1417,"title":{},"body":{"components/EntryListComponent.html":{}}}],["initfilterqueri",{"_index":1418,"title":{},"body":{"components/EntryListComponent.html":{}}}],["initfilterquery(fieldfilt",{"_index":1446,"title":{},"body":{"components/EntryListComponent.html":{}}}],["initi",{"_index":119,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"changelog.html":{}}}],["initmethod",{"_index":3253,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["initselect",{"_index":3446,"title":{},"body":{"components/SelectComponent.html":{}}}],["inittab",{"_index":3639,"title":{},"body":{"components/TabsComponent.html":{}}}],["inject",{"_index":367,"title":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["inject('environ",{"_index":644,"title":{},"body":{"injectables/AuthService.html":{}}}],["inlin",{"_index":4570,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/ui.html":{}}}],["input",{"_index":35,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["input#id",{"_index":3938,"title":{},"body":{"changelog.html":{}}}],["input'",{"_index":1087,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["input'},{'nam",{"_index":232,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["input('config",{"_index":2113,"title":{},"body":{"components/ListComponent.html":{}}}],["input.compon",{"_index":173,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["input.component.html",{"_index":338,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["input.component.scss",{"_index":4710,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["input.component.t",{"_index":326,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["input.component.ts:10",{"_index":1250,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input.component.ts:12",{"_index":1260,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:13",{"_index":343,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["input.component.ts:14",{"_index":344,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultInputComponent.html":{}}}],["input.component.ts:16",{"_index":1261,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:18",{"_index":1259,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:9",{"_index":1249,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input/default",{"_index":347,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["input/input.compon",{"_index":2037,"title":{},"body":{"modules/IoModule.html":{}}}],["input/output",{"_index":4021,"title":{},"body":{"changelog.html":{},"additional-documentation/data.html":{}}}],["input[type=fil",{"_index":3858,"title":{},"body":{"components/UploadComponent.html":{}}}],["inputcompon",{"_index":110,"title":{"components/InputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["inputcomponent;and",{"_index":4731,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["inputerrorscompon",{"_index":233,"title":{"components/InputErrorsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputs/output",{"_index":3991,"title":{},"body":{"changelog.html":{}}}],["inputthi",{"_index":4708,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["insid",{"_index":428,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["inspir",{"_index":3282,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["instagram",{"_index":4507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instal",{"_index":4627,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{}}}],["instanc",{"_index":72,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["instanceof",{"_index":1953,"title":{},"body":{"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/TabsComponent.html":{}}}],["instanti",{"_index":4792,"title":{},"body":{"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["instead",{"_index":951,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes.html":{}}}],["integr",{"_index":4738,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["intend",{"_index":3465,"title":{},"body":{"components/SelectComponent.html":{}}}],["interact",{"_index":2831,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["interfac",{"_index":918,"title":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["interfer",{"_index":2265,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["intern",{"_index":948,"title":{},"body":{"interfaces/CrudConfig.html":{},"miscellaneous/variables.html":{}}}],["intersect",{"_index":4382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intial",{"_index":1985,"title":{},"body":{"components/InputComponent.html":{}}}],["intl.collator(undefin",{"_index":3541,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/variables.html":{}}}],["introduct",{"_index":4756,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["invalid",{"_index":2635,"title":{},"body":{"components/MockupComponent.html":{},"injectables/TypeConfigService.html":{}}}],["invert",{"_index":3951,"title":{},"body":{"changelog.html":{}}}],["invit",{"_index":656,"title":{},"body":{"injectables/AuthService.html":{}}}],["invok",{"_index":2046,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/core-classes/item.html":{}}}],["io/io.modul",{"_index":1717,"title":{},"body":{"modules/FormModule.html":{},"modules/UtilityModule.html":{}}}],["iomodul",{"_index":1707,"title":{"modules/IoModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["isact",{"_index":2549,"title":{},"body":{"components/MenuComponent.html":{},"classes/Pagination.html":{}}}],["isactive(item",{"_index":2589,"title":{},"body":{"components/MenuComponent.html":{}}}],["isactive(pag",{"_index":2892,"title":{},"body":{"classes/Pagination.html":{}}}],["isempti",{"_index":721,"title":{},"body":{"classes/Collection.html":{}}}],["isend",{"_index":1212,"title":{},"body":{"interfaces/Day.html":{}}}],["isfirst",{"_index":1345,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["isimmutableproperti",{"_index":965,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{}}}],["isimmutableproperty(key",{"_index":979,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["islast",{"_index":1346,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["isnewasset",{"_index":1669,"title":{},"body":{"injectables/FileService.html":{}}}],["isnewasset(asset",{"_index":1617,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["iso",{"_index":4014,"title":{},"body":{"changelog.html":{}}}],["isselect",{"_index":2550,"title":{},"body":{"components/MenuComponent.html":{}}}],["isselected(_mo",{"_index":1238,"title":{},"body":{"interfaces/Day.html":{}}}],["isselected(item",{"_index":2591,"title":{},"body":{"components/MenuComponent.html":{}}}],["isstart",{"_index":1210,"title":{},"body":{"interfaces/Day.html":{}}}],["issystemproperti",{"_index":2649,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["issystemproperty(properti",{"_index":2667,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["ist",{"_index":2775,"title":{},"body":{"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["isvis",{"_index":2944,"title":{},"body":{"components/PaginationComponent.html":{}}}],["isvisible(pag",{"_index":2948,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ital",{"_index":4383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item",{"_index":43,"title":{"additional-documentation/core-classes/item.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["item'",{"_index":2198,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["item(",{"_index":472,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["item('a",{"_index":4764,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["item(1",{"_index":4788,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["item(asset",{"_index":1638,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["item(assets[0",{"_index":1635,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["item.config.fields[property].form",{"_index":897,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.fields[property].list",{"_index":896,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.onsav",{"_index":3335,"title":{},"body":{"injectables/ResourceService.html":{}}}],["item.data?.titl",{"_index":2621,"title":{},"body":{"components/MenuComponent.html":{}}}],["item.deleteimmutableproperties(valu",{"_index":3337,"title":{},"body":{"injectables/ResourceService.html":{}}}],["item.getbodi",{"_index":902,"title":{},"body":{"components/CrudComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{}}}],["item.group(properti",{"_index":1835,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["item.id",{"_index":904,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{}}}],["item.path",{"_index":2619,"title":{},"body":{"components/MenuComponent.html":{}}}],["item.sav",{"_index":4786,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["item.sort(properti",{"_index":3550,"title":{},"body":{"classes/Sorter.html":{}}}],["item/item",{"_index":1698,"title":{},"body":{"interfaces/FormConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["item?.display(field.properti",{"_index":1256,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["item?.display(field.property)?.length",{"_index":1269,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["itemclick",{"_index":3449,"title":{},"body":{"components/SelectComponent.html":{}}}],["itemconfig",{"_index":1697,"title":{"interfaces/ItemConfig.html":{}},"body":{"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"coverage.html":{},"additional-documentation/core-classes/item.html":{}}}],["items'},{'nam",{"_index":239,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["items.compon",{"_index":2217,"title":{},"body":{"modules/ListModule.html":{}}}],["items.component.html",{"_index":2197,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.scss",{"_index":2196,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.t",{"_index":2192,"title":{},"body":{"components/ListItemsComponent.html":{},"coverage.html":{}}}],["items.component.ts:15",{"_index":2202,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:17",{"_index":2203,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:19",{"_index":2201,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:21",{"_index":2204,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:23",{"_index":2205,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:26",{"_index":2207,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:33",{"_index":2206,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.filter((item",{"_index":1834,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["items.foreach((item",{"_index":775,"title":{},"body":{"classes/Collection.html":{}}}],["items.length",{"_index":790,"title":{},"body":{"classes/Collection.html":{},"classes/Sorter.html":{}}}],["items.pip",{"_index":1726,"title":{},"body":{"modules/FormModule.html":{}}}],["items.pipe.t",{"_index":2485,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"coverage.html":{}}}],["items.pipe.ts:8",{"_index":2489,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["items.reduce((ha",{"_index":781,"title":{},"body":{"classes/Collection.html":{}}}],["items.revers",{"_index":3564,"title":{},"body":{"classes/Sorter.html":{}}}],["items.slice((this.config.pag",{"_index":2936,"title":{},"body":{"classes/Pagination.html":{}}}],["items.sort((a",{"_index":3559,"title":{},"body":{"classes/Sorter.html":{}}}],["items/list",{"_index":2191,"title":{},"body":{"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["itemwidth",{"_index":2973,"title":{},"body":{"components/PaginationComponent.html":{}}}],["itemwidth}px",{"_index":2984,"title":{},"body":{"components/PaginationComponent.html":{}}}],["iter",{"_index":2023,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/core-classes/form.html":{}}}],["itself",{"_index":1513,"title":{},"body":{"classes/Field.html":{},"components/NotificationsComponent.html":{},"components/TabComponent.html":{}}}],["ja",{"_index":4801,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["javascript",{"_index":57,"title":{},"body":{"components/AceComponent.html":{}}}],["join",{"_index":3149,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["js",{"_index":4169,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":643,"title":{},"body":{"injectables/AuthService.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{}}}],["json.parse(e.data",{"_index":1878,"title":{},"body":{"injectables/HistoryService.html":{}}}],["json.stringify(json",{"_index":3200,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["json.stringify(valu",{"_index":3812,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["jsoneditorcompon",{"_index":4729,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["json}}todo",{"_index":3485,"title":{},"body":{"components/SelectComponent.html":{},"additional-documentation/ui/selectcomponent.html":{}}}],["justifi",{"_index":4300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt/issues/305",{"_index":573,"title":{},"body":{"modules/AuthModule.html":{}}}],["kann",{"_index":540,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["karma",{"_index":4258,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1223,"title":{},"body":{"interfaces/Day.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputErrorsComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["keeppopopen",{"_index":929,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["key",{"_index":800,"title":{},"body":{"classes/Config.html":{},"injectables/CrudService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"interfaces/ListConfig.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{}}}],["key[0",{"_index":1023,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["keydown",{"_index":3071,"title":{},"body":{"injectables/PopService.html":{}}}],["keyup",{"_index":3729,"title":{},"body":{"components/TinymceComponent.html":{}}}],["kind",{"_index":2243,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"classes/Sorter.html":{},"interfaces/WithLoader.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["kleiner",{"_index":4704,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["know",{"_index":2934,"title":{},"body":{"classes/Pagination.html":{}}}],["known",{"_index":388,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{}}}],["kununu",{"_index":4497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kurz",{"_index":4295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":937,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/DefaultOutputComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/LoginFormComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/TabComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{}}}],["label#for",{"_index":3937,"title":{},"body":{"changelog.html":{}}}],["landscap",{"_index":4413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["languag",{"_index":94,"title":{},"body":{"components/AceComponent.html":{},"injectables/ResourceConfig.html":{}}}],["laptop",{"_index":4384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":1125,"title":{},"body":{"interfaces/Day.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{}}}],["lat",{"_index":1827,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["later",{"_index":1318,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"interfaces/WithNotifications.html":{}}}],["latest",{"_index":3072,"title":{},"body":{"injectables/PopService.html":{}}}],["latestpop",{"_index":3079,"title":{},"body":{"injectables/PopService.html":{}}}],["latestpop.hid",{"_index":3081,"title":{},"body":{"injectables/PopService.html":{}}}],["latitud",{"_index":1808,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["lay",{"_index":4745,"title":{},"body":{"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["layer",{"_index":2661,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["layout",{"_index":1224,"title":{},"body":{"interfaces/Day.html":{}}}],["lead",{"_index":4002,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["leav",{"_index":4390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":850,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["legaci",{"_index":455,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/CrudConfig.html":{}}}],["legacyasset",{"_index":1650,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{}}}],["legend",{"_index":182,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"modules/UiModule.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"overview.html":{}}}],["lemontre",{"_index":2100,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["length",{"_index":784,"title":{},"body":{"classes/Collection.html":{}}}],["lerna",{"_index":4195,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["lerna.json",{"_index":4737,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["let",{"_index":4744,"title":{},"body":{"additional-documentation/ui.html":{}}}],["let'",{"_index":2861,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["letter",{"_index":957,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["level",{"_index":364,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"components/MenuComponent.html":{},"interfaces/Update.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["li",{"_index":2961,"title":{},"body":{"components/PaginationComponent.html":{}}}],["lib",{"_index":4234,"title":{},"body":{"index.html":{}}}],["librari",{"_index":2334,"title":{},"body":{"modules/LocationModule.html":{}}}],["light",{"_index":4549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lightbulb",{"_index":4385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["line",{"_index":170,"title":{},"body":{"components/AceComponent.html":{},"components/LoaderComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["line:no",{"_index":2112,"title":{},"body":{"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["link",{"_index":3004,"title":{},"body":{"classes/PaginationConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["link_class_list",{"_index":4554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linkedin",{"_index":4479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["list",{"_index":194,"title":{"additional-documentation/core-classes/list.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["list#toggleselectmod",{"_index":3953,"title":{},"body":{"changelog.html":{}}}],["list'},{'nam",{"_index":222,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["list(this.collection.item",{"_index":2119,"title":{},"body":{"components/ListComponent.html":{}}}],["list(this.item",{"_index":2117,"title":{},"body":{"components/ListComponent.html":{}}}],["list(this.valu",{"_index":3490,"title":{},"body":{"components/SelectComponent.html":{}}}],["list.compon",{"_index":870,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"changelog.html":{}}}],["list.component.html",{"_index":2061,"title":{},"body":{"components/ListComponent.html":{}}}],["list.component.scss",{"_index":1414,"title":{},"body":{"components/EntryListComponent.html":{},"components/ListComponent.html":{}}}],["list.component.t",{"_index":1411,"title":{},"body":{"components/EntryListComponent.html":{},"coverage.html":{}}}],["list.component.ts:25",{"_index":1426,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:27",{"_index":1424,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:37",{"_index":1454,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:48",{"_index":1440,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:61",{"_index":1439,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.t",{"_index":4080,"title":{},"body":{"coverage.html":{}}}],["list.ts/list.compon",{"_index":2917,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["list/entri",{"_index":869,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"coverage.html":{}}}],["list/list",{"_index":2918,"title":{},"body":{"classes/Pagination.html":{}}}],["list/list.modul",{"_index":3516,"title":{},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{}}}],["list/resourc",{"_index":1056,"title":{},"body":{"modules/DataModule.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["list/upload",{"_index":3926,"title":{},"body":{"changelog.html":{}}}],["listcompon",{"_index":235,"title":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["listconfig",{"_index":922,"title":{"interfaces/ListConfig.html":{}},"body":{"interfaces/CrudConfig.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/SelectComponent.html":{},"coverage.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["listen",{"_index":2762,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/PopService.html":{}}}],["listheadercompon",{"_index":236,"title":{"components/ListHeaderComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listitemscompon",{"_index":238,"title":{"components/ListItemsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["listmodul",{"_index":2211,"title":{"modules/ListModule.html":{}},"body":{"modules/ListModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["listresourc",{"_index":1419,"title":{},"body":{"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["liter",{"_index":794,"title":{},"body":{"classes/Config.html":{},"interfaces/CrudConfig.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"miscellaneous/variables.html":{}}}],["live",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["lng",{"_index":1829,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["load",{"_index":359,"title":{},"body":{"directives/AssetDirective.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"directives/SlotHostDirective.html":{},"interfaces/WithLoader.html":{},"miscellaneous/functions.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["load(config",{"_index":2897,"title":{},"body":{"classes/Pagination.html":{}}}],["load(id",{"_index":382,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["loadcompon",{"_index":1327,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loadcomponent(compon",{"_index":1329,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loadentri",{"_index":830,"title":{},"body":{"components/CrudComponent.html":{}}}],["loadentry(item",{"_index":853,"title":{},"body":{"components/CrudComponent.html":{}}}],["loader",{"_index":826,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"directives/SlotHostDirective.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"changelog.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["loader'",{"_index":2242,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'nam",{"_index":241,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["loader.compon",{"_index":2281,"title":{},"body":{"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"interfaces/WithLoader.html":{}}}],["loader.component.html",{"_index":2228,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":2227,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.interfac",{"_index":2466,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loader.interface.t",{"_index":3913,"title":{},"body":{"interfaces/WithLoader.html":{},"coverage.html":{}}}],["loader.servic",{"_index":2282,"title":{},"body":{"modules/LoaderModule.html":{}}}],["loader.wait(promis",{"_index":2288,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loader/loader.compon",{"_index":2464,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loader/loader.modul",{"_index":1723,"title":{},"body":{"modules/FormModule.html":{},"modules/UiModule.html":{}}}],["loader/with",{"_index":2465,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loadercompon",{"_index":240,"title":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["loadermodul",{"_index":1710,"title":{"modules/LoaderModule.html":{}},"body":{"modules/FormModule.html":{},"modules/LoaderModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["loaderservic",{"_index":833,"title":{"injectables/LoaderService.html":{}},"body":{"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["loaderth",{"_index":2246,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["local",{"_index":2245,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/SymbolService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["localload",{"_index":2252,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["locat",{"_index":243,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["location.latitud",{"_index":1828,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location.longitud",{"_index":1830,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location/map",{"_index":2323,"title":{},"body":{"modules/LocationModule.html":{}}}],["location_compon",{"_index":2324,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["locationmapcompon",{"_index":242,"title":{"components/LocationMapComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["locationmodul",{"_index":2316,"title":{"modules/LocationModule.html":{}},"body":{"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locationpickercompon",{"_index":245,"title":{"components/LocationPickerComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["locationsearchcompon",{"_index":247,"title":{"components/LocationSearchComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["lock",{"_index":3024,"title":{},"body":{"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{}}}],["lockform",{"_index":3014,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["log",{"_index":1892,"title":{},"body":{"components/IconComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["logic",{"_index":4725,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{}}}],["login",{"_index":252,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["login'",{"_index":2459,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["login'},{'nam",{"_index":250,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["login(undefin",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login(valu",{"_index":2449,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["login.component.html",{"_index":2390,"title":{},"body":{"components/LoginComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["login.component.t",{"_index":4691,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["login/login.compon",{"_index":567,"title":{},"body":{"modules/AuthModule.html":{}}}],["login/signup",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["logincompon",{"_index":249,"title":{"components/LoginComponent.html":{},"additional-documentation/ui/logincomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["loginformcompon",{"_index":251,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(api",{"_index":628,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":2150,"title":{},"body":{"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["longitud",{"_index":1810,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["look",{"_index":2742,"title":{},"body":{"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/list.html":{}}}],["lookup",{"_index":1787,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["loop",{"_index":4379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["low",{"_index":4447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lower",{"_index":2108,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["lvl1",{"_index":936,"title":{},"body":{"interfaces/CrudConfig.html":{},"changelog.html":{}}}],["löschen",{"_index":3288,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["machin",{"_index":4312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mail",{"_index":2435,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{}}}],["main",{"_index":2093,"title":{},"body":{"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["mainli",{"_index":4762,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["major",{"_index":4757,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["make",{"_index":61,"title":{},"body":{"components/AceComponent.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"components/LoaderComponent.html":{},"interfaces/Update.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["man",{"_index":4484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manag",{"_index":4198,"title":{},"body":{"index.html":{}}}],["mani",{"_index":943,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["manual",{"_index":3683,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ace.html":{}}}],["map",{"_index":807,"title":{},"body":{"classes/Config.html":{},"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/MenuComponent.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["map'},{'nam",{"_index":244,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["map((d",{"_index":1207,"title":{},"body":{"interfaces/Day.html":{}}}],["map((dat",{"_index":1209,"title":{},"body":{"interfaces/Day.html":{}}}],["map((method",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{}}}],["map(field",{"_index":3142,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map(hook",{"_index":3147,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map(item",{"_index":3551,"title":{},"body":{"classes/Sorter.html":{}}}],["map(p",{"_index":3205,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map(polici",{"_index":3151,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map.compon",{"_index":2327,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["map.component.html",{"_index":2292,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.scss",{"_index":2291,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.t",{"_index":2290,"title":{},"body":{"components/LocationMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:12",{"_index":2299,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:14",{"_index":2301,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:16",{"_index":2303,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:18",{"_index":2302,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:24",{"_index":2308,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:31",{"_index":2305,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.valu",{"_index":2369,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["mapload",{"_index":1778,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["mapsapiload",{"_index":1775,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["mark",{"_index":1141,"title":{},"body":{"interfaces/Day.html":{},"miscellaneous/variables.html":{}}}],["marker",{"_index":2300,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend",{"_index":2293,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend(coord",{"_index":2304,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markup",{"_index":3054,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["match",{"_index":309,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["match.length",{"_index":2703,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["match[1",{"_index":2704,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["match[3",{"_index":2705,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["matches(chang",{"_index":983,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["math.abs(curr",{"_index":2985,"title":{},"body":{"components/PaginationComponent.html":{}}}],["math.max(0",{"_index":2976,"title":{},"body":{"components/PaginationComponent.html":{}}}],["math.min(this.getpag",{"_index":2938,"title":{},"body":{"classes/Pagination.html":{}}}],["math.min(transl",{"_index":2978,"title":{},"body":{"components/PaginationComponent.html":{}}}],["matter",{"_index":4657,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["max",{"_index":1725,"title":{},"body":{"modules/FormModule.html":{},"components/PaginationComponent.html":{}}}],["maxcolumn",{"_index":2143,"title":{},"body":{"interfaces/ListConfig.html":{},"changelog.html":{}}}],["maxim",{"_index":2148,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["maximum",{"_index":1532,"title":{},"body":{"classes/Field.html":{},"changelog.html":{}}}],["maxitem",{"_index":1507,"title":{},"body":{"classes/Field.html":{},"pipes/MaxItemsPipe.html":{},"changelog.html":{}}}],["maxitemspip",{"_index":1705,"title":{"pipes/MaxItemsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/MaxItemsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["mean",{"_index":3952,"title":{},"body":{"changelog.html":{},"additional-documentation/ui.html":{}}}],["meant",{"_index":126,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"injectables/ResourceService.html":{},"components/TabComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["measur",{"_index":4393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":4586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["medium",{"_index":254,"title":{"additional-documentation/medium.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/medium.html":{}}}],["mediumeditor",{"_index":2502,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditor(this.container.nativeel",{"_index":2522,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditorcompon",{"_index":253,"title":{"components/MediumEditorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mediummodul",{"_index":2528,"title":{"modules/MediumModule.html":{}},"body":{"modules/MediumModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/medium.html":{}}}],["megaphon",{"_index":4427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":4730,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["menu",{"_index":2536,"title":{},"body":{"components/MenuComponent.html":{},"additional-documentation/ui.html":{}}}],["menu,[ec",{"_index":257,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["menu.component.html",{"_index":2538,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":2537,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu/menu.compon",{"_index":3897,"title":{},"body":{"modules/UtilityModule.html":{}}}],["menu]'},{'nam",{"_index":258,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["menubar",{"_index":4521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menucompon",{"_index":256,"title":{"components/MenuComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["merg",{"_index":804,"title":{},"body":{"classes/Config.html":{},"components/CrudComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{}}}],["merge(route.data",{"_index":885,"title":{},"body":{"components/CrudComponent.html":{}}}],["messag",{"_index":516,"title":{},"body":{"injectables/AuthGuard.html":{},"components/ErrorComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["message.clos",{"_index":2867,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["met",{"_index":4717,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["metadata",{"_index":22,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"pipes/SafeHtmlPipe.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["method",{"_index":44,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["middl",{"_index":2955,"title":{},"body":{"components/PaginationComponent.html":{},"miscellaneous/variables.html":{}}}],["migrat",{"_index":3924,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":3009,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["minlength",{"_index":4294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minor",{"_index":4558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minu",{"_index":4394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellan",{"_index":4183,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":4241,"title":{},"body":{"index.html":{}}}],["mit",{"_index":3031,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["mkdir",{"_index":4733,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["mmmm",{"_index":1150,"title":{},"body":{"interfaces/Day.html":{}}}],["mobil",{"_index":4396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockup",{"_index":2625,"title":{},"body":{"components/MockupComponent.html":{}}}],["mockup'},{'nam",{"_index":260,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["mockup.component.html",{"_index":2627,"title":{},"body":{"components/MockupComponent.html":{}}}],["mockup.component.scss",{"_index":2626,"title":{},"body":{"components/MockupComponent.html":{}}}],["mockup/mockup.compon",{"_index":3896,"title":{},"body":{"modules/UtilityModule.html":{}}}],["mockupcompon",{"_index":259,"title":{"components/MockupComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["modal",{"_index":3052,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["mode",{"_index":53,"title":{},"body":{"components/AceComponent.html":{},"interfaces/CrudConfig.html":{}}}],["model",{"_index":103,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["model'",{"_index":2639,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{}}}],["model.field",{"_index":803,"title":{},"body":{"classes/Config.html":{}}}],["modelchang",{"_index":2500,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["modelconfig",{"_index":1422,"title":{"interfaces/ModelConfig.html":{}},"body":{"components/EntryListComponent.html":{},"interfaces/ModelConfig.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/data.html":{}}}],["modelconfig.get(&#39;muffin&#39",{"_index":2665,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.get('muffin",{"_index":2682,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set(&#39;muffin&#39",{"_index":2675,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set('muffin",{"_index":2684,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigservic",{"_index":1043,"title":{"injectables/ModelConfigService.html":{}},"body":{"modules/DataModule.html":{},"components/EntryListComponent.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["modelconfigur",{"_index":2736,"title":{"interfaces/ModelConfiguration.html":{}},"body":{"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["modelid",{"_index":3140,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["modelist.j",{"_index":150,"title":{},"body":{"components/AceComponent.html":{}}}],["modellistcompon",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["modelresourc",{"_index":1849,"title":{},"body":{"injectables/HistoryService.html":{}}}],["modern",{"_index":4520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modifi",{"_index":956,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["modified'].indexof(key",{"_index":1024,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["modul",{"_index":310,"title":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"modules.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"changelog.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["module'",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["modules.sh",{"_index":4211,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["modulewithprovid",{"_index":559,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{}}}],["moment",{"_index":1098,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["moment'",{"_index":1221,"title":{},"body":{"interfaces/Day.html":{}}}],["moment().startof('day').diff(d",{"_index":1220,"title":{},"body":{"interfaces/Day.html":{}}}],["moment(new",{"_index":3807,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(valu",{"_index":1116,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format('yyyi",{"_index":4698,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["moment(value).format(format",{"_index":3823,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).format(pattern",{"_index":1120,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format(this.symbol.resolve('moment.format.month",{"_index":3825,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).isvalid",{"_index":3804,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.d",{"_index":3786,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.month",{"_index":3791,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.tim",{"_index":3787,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.locale('d",{"_index":4693,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["moment.mo",{"_index":1083,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["money",{"_index":4397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["monorepo",{"_index":4197,"title":{},"body":{"index.html":{}}}],["month",{"_index":1122,"title":{},"body":{"interfaces/Day.html":{}}}],["month'},{'nam",{"_index":262,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["month.compon",{"_index":3958,"title":{},"body":{"changelog.html":{}}}],["month.component.html",{"_index":1136,"title":{},"body":{"interfaces/Day.html":{}}}],["month.component.scss",{"_index":1135,"title":{},"body":{"interfaces/Day.html":{}}}],["monthcompon",{"_index":261,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["monthformat",{"_index":1149,"title":{},"body":{"interfaces/Day.html":{}}}],["more",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/collection.html":{}}}],["mouseout",{"_index":2568,"title":{},"body":{"components/MenuComponent.html":{}}}],["mouseov",{"_index":2561,"title":{},"body":{"components/MenuComponent.html":{}}}],["mouseover(day",{"_index":1187,"title":{},"body":{"interfaces/Day.html":{}}}],["mouseup(day",{"_index":1186,"title":{},"body":{"interfaces/Day.html":{}}}],["move",{"_index":3968,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ms",{"_index":1967,"title":{},"body":{"components/InputComponent.html":{},"classes/Notification.html":{}}}],["much",{"_index":4023,"title":{},"body":{"changelog.html":{}}}],["muffin",{"_index":2666,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["muffin.entry?.nam",{"_index":1406,"title":{},"body":{"directives/EntryDirective.html":{}}}],["muffin.nam",{"_index":1371,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["muffincompon",{"_index":2790,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["muffins/muffins.compon",{"_index":4687,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["muffinsadd",{"_index":4682,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["muffinscompon",{"_index":4686,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["multi",{"_index":144,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["multipl",{"_index":1550,"title":{},"body":{"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["music",{"_index":4398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mustreload",{"_index":831,"title":{},"body":{"components/CrudComponent.html":{}}}],["mustreload(item",{"_index":856,"title":{},"body":{"components/CrudComponent.html":{}}}],["myapp",{"_index":2248,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["myasset.asset?.assetid",{"_index":393,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.cr",{"_index":398,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.files?.length",{"_index":400,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.tag",{"_index":397,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.titl",{"_index":395,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.typ",{"_index":399,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myclient",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{}}}],["mycompon",{"_index":2772,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["myimage.asset?.assetid",{"_index":1944,"title":{},"body":{"directives/ImageDirective.html":{}}}],["n",{"_index":4787,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["n.resolv",{"_index":4791,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["n.save",{"_index":4790,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["nach",{"_index":4806,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["name",{"_index":87,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["name[0].touppercas",{"_index":4696,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["namespac",{"_index":1798,"title":{},"body":{"injectables/GeocodeService.html":{},"miscellaneous/variables.html":{}}}],["nativ",{"_index":1937,"title":{},"body":{"directives/ImageDirective.html":{}}}],["natur",{"_index":3539,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["navig",{"_index":4221,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["navigationend",{"_index":3651,"title":{},"body":{"components/TabsComponent.html":{}}}],["nearest",{"_index":1790,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["need",{"_index":2799,"title":{},"body":{"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ace.html":{}}}],["nein",{"_index":4802,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["nest",{"_index":950,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["nestedcrudconfig",{"_index":3777,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["nestedpopclass",{"_index":930,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["new",{"_index":71,"title":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["newassetlistconfig",{"_index":1612,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["newdat",{"_index":1241,"title":{},"body":{"interfaces/Day.html":{}}}],["newdate.isbetween(this.timespan[0",{"_index":1243,"title":{},"body":{"interfaces/Day.html":{}}}],["newhistori",{"_index":1876,"title":{},"body":{"injectables/HistoryService.html":{}}}],["newtimespan",{"_index":1169,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan.revers",{"_index":1174,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[0].isafter(newtimespan[1",{"_index":1173,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[this.dragged.first",{"_index":1171,"title":{},"body":{"interfaces/Day.html":{}}}],["next",{"_index":528,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Collection.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":4218,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["ng_value_accessor",{"_index":133,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["ngaftercontentinit",{"_index":3640,"title":{},"body":{"components/TabsComponent.html":{}}}],["ngafterviewinit",{"_index":2374,"title":{},"body":{"components/LocationSearchComponent.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{}}}],["ngif",{"_index":461,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/PopComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["ngmodel",{"_index":3985,"title":{},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["ngmodul",{"_index":322,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["ngonchang",{"_index":46,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/SelectComponent.html":{}}}],["ngonchanges(chang",{"_index":1192,"title":{},"body":{"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{}}}],["ngondestroy",{"_index":2499,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ngoninit",{"_index":47,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SelectComponent.html":{}}}],["ngx",{"_index":562,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["ngzone",{"_index":1776,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationSearchComponent.html":{}}}],["nicht",{"_index":541,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["niedrig",{"_index":4800,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["noapi",{"_index":3370,"title":{},"body":{"injectables/SdkService.html":{}}}],["noapi(api",{"_index":3383,"title":{},"body":{"injectables/SdkService.html":{}}}],["noclientid",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["noconflict/ace.j",{"_index":137,"title":{},"body":{"components/AceComponent.html":{}}}],["noconflict/ace.js';when",{"_index":4754,"title":{},"body":{"additional-documentation/ace.html":{}}}],["node_modul",{"_index":4202,"title":{},"body":{"index.html":{}}}],["node_modules/@ec.components/**/*.spec.t",{"_index":4254,"title":{},"body":{"index.html":{}}}],["node_modules/@ec.components/**/*.t",{"_index":4255,"title":{},"body":{"index.html":{}}}],["node_modules/@ec.components/data/src/auth/auth.service.t",{"_index":4239,"title":{},"body":{"index.html":{}}}],["non",{"_index":3592,"title":{},"body":{"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}}}],["none",{"_index":2199,"title":{},"body":{"components/ListItemsComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["normal",{"_index":425,"title":{},"body":{"components/AssetListPopComponent.html":{},"directives/DropzoneDirective.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":3006,"title":{},"body":{"classes/PaginationConfig.html":{},"miscellaneous/variables.html":{}}}],["noth",{"_index":3566,"title":{},"body":{"interfaces/Symbol.html":{}}}],["notif",{"_index":522,"title":{"classes/Notification.html":{}},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notification(notif",{"_index":2854,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notification.append",{"_index":2810,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.append.push(notif",{"_index":2811,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.component.t",{"_index":2800,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notification.error",{"_index":2759,"title":{},"body":{"classes/Notification.html":{}}}],["notification.hid",{"_index":2805,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.host",{"_index":2815,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.messag",{"_index":2808,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.replac",{"_index":2812,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.length",{"_index":2813,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.push(notif",{"_index":2814,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.sticki",{"_index":2817,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.tim",{"_index":2818,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.titl",{"_index":2807,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationcompon",{"_index":2739,"title":{},"body":{"classes/Notification.html":{}}}],["notifications'},{'nam",{"_index":264,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["notifications.compon",{"_index":2758,"title":{},"body":{"classes/Notification.html":{},"modules/NotificationsModule.html":{}}}],["notifications.component.html",{"_index":2766,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":2765,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.interfac",{"_index":880,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/UploadComponent.html":{}}}],["notifications.interface.t",{"_index":3916,"title":{},"body":{"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["notifications.servic",{"_index":2801,"title":{},"body":{"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{}}}],["notifications/notifications.modul",{"_index":3831,"title":{},"body":{"modules/UiModule.html":{}}}],["notificationscompon",{"_index":263,"title":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notificationservic",{"_index":834,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notificationservice.$emitt",{"_index":2763,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationsmodul",{"_index":2821,"title":{"modules/NotificationsModule.html":{}},"body":{"modules/NotificationsModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationsservic",{"_index":523,"title":{"injectables/NotificationsService.html":{}},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["now",{"_index":3391,"title":{},"body":{"injectables/SdkService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{}}}],["npm",{"_index":4200,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{}}}],["nr",{"_index":4780,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["nth",{"_index":2487,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["null",{"_index":779,"title":{},"body":{"classes/Collection.html":{},"injectables/CrudService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":376,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["numbers.add(4",{"_index":740,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.addall([5",{"_index":743,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has(2",{"_index":748,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has([1,2",{"_index":751,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.remove(4",{"_index":757,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.removeal",{"_index":760,"title":{},"body":{"classes/Collection.html":{}}}],["numer",{"_index":3542,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/variables.html":{}}}],["numlist",{"_index":4583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oauth",{"_index":3174,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object",{"_index":430,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["object.assign",{"_index":805,"title":{},"body":{"classes/Config.html":{},"modules/DataModule.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{}}}],["object.assign(componentref.inst",{"_index":1341,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["object.assign(config",{"_index":2699,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["object.assign(entri",{"_index":1017,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["object.assign(resourc",{"_index":3344,"title":{},"body":{"injectables/ResourceService.html":{}}}],["object.assign(thi",{"_index":1583,"title":{},"body":{"classes/Field.html":{},"classes/Notification.html":{},"classes/PaginationConfig.html":{}}}],["object.assign(this.config",{"_index":1478,"title":{},"body":{"components/EntryListComponent.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"components/SelectComponent.html":{}}}],["object.assign(this.config[key][properti",{"_index":813,"title":{},"body":{"classes/Config.html":{}}}],["object.assign(this.stringfield('model",{"_index":3141,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.assign(this.stringfield('nam",{"_index":3129,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.assign(this.tagsfield('right",{"_index":3137,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.assign(this.types[typ",{"_index":3821,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["object.keys(defaultconfig).foreach(properti",{"_index":2698,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(filt",{"_index":999,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(item.config.fields).reduce((equ",{"_index":894,"title":{},"body":{"components/CrudComponent.html":{}}}],["object.keys(permiss",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{}}}],["object.keys(schema.properti",{"_index":2711,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(this.config[relationnam",{"_index":3114,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.keys(this.control.errors).reduce((err",{"_index":2026,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["object.keys(this.sets).length",{"_index":3601,"title":{},"body":{"injectables/SymbolService.html":{}}}],["object.keys(value).foreach((key",{"_index":1014,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(variables).foreach((key",{"_index":669,"title":{},"body":{"injectables/AuthService.html":{}}}],["observ",{"_index":469,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"injectables/GeocodeService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/core-classes.html":{}}}],["observable(observ",{"_index":1799,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observable.throw(err",{"_index":2476,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["observeel",{"_index":1773,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observeelement(el",{"_index":1791,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.complet",{"_index":1813,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.next(coord",{"_index":1812,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["obsolet",{"_index":2796,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["ok",{"_index":1821,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["old",{"_index":1013,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["oldvalu",{"_index":1012,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["oldvalues[key",{"_index":1015,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["omit",{"_index":169,"title":{},"body":{"components/AceComponent.html":{},"injectables/ModelConfigService.html":{}}}],["omittedfield",{"_index":2645,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["on",{"_index":1436,"title":{},"body":{"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["onchang",{"_index":21,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/SelectComponent.html":{}}}],["onclick",{"_index":4587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ondestroy",{"_index":2496,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ondragleave(",{"_index":1308,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondragover(",{"_index":1298,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondrop(",{"_index":1303,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{}}}],["onsav",{"_index":2044,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/core-classes/item.html":{}}}],["onsubmit",{"_index":2419,"title":{},"body":{"components/LoginFormComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":934,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ListHeaderComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["openid",{"_index":3164,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["openinghour",{"_index":4715,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["openinghourscompon",{"_index":4723,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["oper",{"_index":1445,"title":{},"body":{"components/EntryListComponent.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"injectables/ModelConfigService.html":{},"classes/Sorter.html":{},"interfaces/WithLoader.html":{}}}],["optim",{"_index":3932,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":88,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/selection.html":{}}}],["options](https://github.com/yabwe/medium",{"_index":2518,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["order",{"_index":4759,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["other",{"_index":2169,"title":{},"body":{"components/ListHeaderComponent.html":{},"classes/Notification.html":{}}}],["otherwis",{"_index":990,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["ouput",{"_index":1973,"title":{},"body":{"components/InputComponent.html":{}}}],["out",{"_index":319,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"components/ToolbarComponent.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["outbox",{"_index":4400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["outdir",{"_index":4249,"title":{},"body":{"index.html":{}}}],["outlin",{"_index":4470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["output",{"_index":365,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/list.html":{}}}],["output'},{'nam",{"_index":209,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["output('toggl",{"_index":3058,"title":{},"body":{"components/PopComponent.html":{}}}],["output.compon",{"_index":1052,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["output.component.html",{"_index":1252,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output.component.scss",{"_index":1264,"title":{},"body":{"components/DefaultOutputComponent.html":{},"components/OutputComponent.html":{}}}],["output.component.t",{"_index":1251,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"coverage.html":{}}}],["output.component.ts:12",{"_index":1253,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{}}}],["output.component.ts:13",{"_index":1265,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["output.component.ts:14",{"_index":1254,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{}}}],["output.component.ts:15",{"_index":1266,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["output/default",{"_index":1263,"title":{},"body":{"components/DefaultOutputComponent.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["output/output.compon",{"_index":2036,"title":{},"body":{"modules/IoModule.html":{}}}],["outputcompon",{"_index":265,"title":{"components/OutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["outsid",{"_index":102,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"directives/SlotHostDirective.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["over",{"_index":2024,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["overrid",{"_index":1453,"title":{},"body":{"components/EntryListComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/core-classes/selection.html":{}}}],["overridden",{"_index":2477,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["overriden",{"_index":2644,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SymbolService.html":{}}}],["overview",{"_index":4266,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/ui.html":{},"additional-documentation/data.html":{}}}],["overwritten",{"_index":2451,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SelectComponent.html":{}}}],["p",{"_index":4567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img",{"_index":4576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p.method",{"_index":3206,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["packag",{"_index":3976,"title":{"dependencies.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{}}}],["package.json",{"_index":4667,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["packages/.../ace.component.t",{"_index":4272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../auth.module.t",{"_index":4184,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/.../ec",{"_index":4275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../editor.component.t",{"_index":4274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../email",{"_index":4277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../email.validator.t",{"_index":4278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../emoji",{"_index":4279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../errors.t",{"_index":4273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../field",{"_index":4280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../geocode.service.t",{"_index":4281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../location.module.t",{"_index":4282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../notifications.service.t",{"_index":4283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../sorter.t",{"_index":4185,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packages/.../tinymc",{"_index":4276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/ace/src/ace.component.t",{"_index":9,"title":{},"body":{"components/AceComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ace/src/ace.component.ts:103",{"_index":100,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:113",{"_index":115,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:117",{"_index":82,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:121",{"_index":90,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:26",{"_index":109,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:30",{"_index":120,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:34",{"_index":117,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:36",{"_index":111,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:40",{"_index":107,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:44",{"_index":67,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:48",{"_index":68,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:51",{"_index":69,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:76",{"_index":92,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:85",{"_index":97,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:94",{"_index":80,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:98",{"_index":78,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.module.t",{"_index":320,"title":{},"body":{"modules/AceModule.html":{}}}],["packages/cor",{"_index":4217,"title":{},"body":{"index.html":{}}}],["packages/core/src/collection/collection.t",{"_index":713,"title":{},"body":{"classes/Collection.html":{},"coverage.html":{}}}],["packages/core/src/collection/collection.ts:107",{"_index":756,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:11",{"_index":730,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:124",{"_index":759,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:13",{"_index":733,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:139",{"_index":762,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:15",{"_index":725,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:152",{"_index":754,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:32",{"_index":753,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:43",{"_index":747,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:54",{"_index":750,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:72",{"_index":737,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:90",{"_index":742,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/config/config.t",{"_index":792,"title":{},"body":{"classes/Config.html":{},"coverage.html":{}}}],["packages/core/src/config/config.ts:13",{"_index":797,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/config/config.ts:5",{"_index":795,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/config/field",{"_index":1590,"title":{},"body":{"interfaces/FieldConfig.html":{},"coverage.html":{}}}],["packages/core/src/field/field.t",{"_index":1501,"title":{},"body":{"classes/Field.html":{},"coverage.html":{}}}],["packages/core/src/field/field.ts:11",{"_index":1524,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:13",{"_index":1541,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:15",{"_index":1544,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:17",{"_index":1542,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:19",{"_index":1529,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:21",{"_index":1534,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:23",{"_index":1535,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:25",{"_index":1530,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:27",{"_index":1516,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:29",{"_index":1520,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:31",{"_index":1521,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:33",{"_index":1543,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:35",{"_index":1514,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:37",{"_index":1528,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:39",{"_index":1540,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:41",{"_index":1515,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:43",{"_index":1531,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:45",{"_index":1526,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:47",{"_index":1512,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:59",{"_index":1545,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:7",{"_index":1538,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:9",{"_index":1536,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/form/form",{"_index":1696,"title":{},"body":{"interfaces/FormConfig.html":{},"coverage.html":{}}}],["packages/core/src/form/form.t",{"_index":4041,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/item/item",{"_index":2040,"title":{},"body":{"interfaces/ItemConfig.html":{},"coverage.html":{}}}],["packages/core/src/item/item.t",{"_index":4044,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/list/list",{"_index":2138,"title":{},"body":{"interfaces/ListConfig.html":{},"coverage.html":{}}}],["packages/core/src/list/list.t",{"_index":4048,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/pagination/pagination.t",{"_index":2874,"title":{},"body":{"classes/Pagination.html":{},"coverage.html":{}}}],["packages/core/src/pagination/pagination.ts:10",{"_index":2885,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:104",{"_index":2893,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:109",{"_index":2894,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:114",{"_index":2895,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:12",{"_index":2886,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:122",{"_index":2909,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:127",{"_index":2900,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:139",{"_index":2912,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:14",{"_index":2883,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:16",{"_index":2881,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:34",{"_index":2890,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:39",{"_index":2891,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:44",{"_index":2899,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:53",{"_index":2901,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:64",{"_index":2905,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:74",{"_index":2898,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:8",{"_index":2887,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:82",{"_index":2903,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:90",{"_index":2889,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:95",{"_index":2896,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/selection/selection.t",{"_index":4051,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/sorter/sorter.t",{"_index":3525,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packages/core/src/sorter/sorter.ts:25",{"_index":3532,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/sorter/sorter.ts:32",{"_index":3534,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/sorter/sorter.ts:62",{"_index":3537,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/data/src/auth/auth",{"_index":509,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["packages/data/src/auth/auth.module.t",{"_index":555,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/data/src/auth/auth.service.t",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["packages/data/src/auth/auth.service.ts:114",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:136",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:148",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:158",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:172",{"_index":630,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:26",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:33",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:47",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:59",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:68",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:75",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:83",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/email",{"_index":4058,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/data/src/auth/errors.t",{"_index":4060,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/data/src/auth/login/login.component.t",{"_index":2386,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["packages/data/src/auth/login/login.component.ts:20",{"_index":2394,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:22",{"_index":2395,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:24",{"_index":2399,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:26",{"_index":2392,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:28",{"_index":2398,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:29",{"_index":2400,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:30",{"_index":2401,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:33",{"_index":2396,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/password",{"_index":3010,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["packages/data/src/crud/crud",{"_index":919,"title":{},"body":{"interfaces/CrudConfig.html":{},"coverage.html":{}}}],["packages/data/src/crud/crud.component.t",{"_index":814,"title":{},"body":{"components/CrudComponent.html":{},"coverage.html":{}}}],["packages/data/src/crud/crud.component.ts:113",{"_index":861,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:125",{"_index":847,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:36",{"_index":842,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:38",{"_index":841,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:40",{"_index":843,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:42",{"_index":863,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:44",{"_index":862,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:46",{"_index":865,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:48",{"_index":845,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:50",{"_index":846,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:52",{"_index":838,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:59",{"_index":867,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:60",{"_index":866,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:71",{"_index":859,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:79",{"_index":852,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:84",{"_index":857,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:91",{"_index":854,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.service.t",{"_index":955,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{},"coverage.html":{}}}],["packages/data/src/crud/crud.service.ts:112",{"_index":978,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:29",{"_index":966,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:36",{"_index":984,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:42",{"_index":968,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:50",{"_index":988,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:63",{"_index":992,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:78",{"_index":980,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:84",{"_index":972,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:99",{"_index":975,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/data.module.t",{"_index":1045,"title":{},"body":{"modules/DataModule.html":{}}}],["packages/data/src/entri",{"_index":324,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/EntryListComponent.html":{},"coverage.html":{}}}],["packages/data/src/entries/entries.directive.t",{"_index":1342,"title":{},"body":{"directives/EntriesDirective.html":{},"coverage.html":{}}}],["packages/data/src/entries/entries.directive.ts:100",{"_index":1359,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:21",{"_index":1370,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:23",{"_index":1356,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:25",{"_index":1358,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:27",{"_index":1354,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:29",{"_index":1351,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:31",{"_index":1355,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:33",{"_index":1369,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:34",{"_index":1350,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:41",{"_index":1365,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:54",{"_index":1363,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:63",{"_index":1368,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:74",{"_index":1364,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:81",{"_index":1366,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:88",{"_index":1362,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:92",{"_index":1361,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entry/entry.directive.t",{"_index":1394,"title":{},"body":{"directives/EntryDirective.html":{},"coverage.html":{}}}],["packages/data/src/entry/entry.directive.ts:18",{"_index":1405,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:20",{"_index":1398,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:22",{"_index":1401,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:24",{"_index":1397,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:26",{"_index":1399,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:28",{"_index":1402,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:30",{"_index":1400,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:32",{"_index":1396,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:39",{"_index":1404,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:47",{"_index":1403,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/files/asset",{"_index":420,"title":{},"body":{"components/AssetListPopComponent.html":{},"coverage.html":{}}}],["packages/data/src/files/asset/asset.directive.t",{"_index":358,"title":{},"body":{"directives/AssetDirective.html":{},"coverage.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:13",{"_index":389,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:15",{"_index":371,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:17",{"_index":375,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:19",{"_index":374,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:21",{"_index":377,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:23",{"_index":370,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:25",{"_index":381,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:27",{"_index":366,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:30",{"_index":390,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:34",{"_index":387,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:45",{"_index":383,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.t",{"_index":1271,"title":{},"body":{"directives/DropzoneDirective.html":{},"coverage.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:11",{"_index":1285,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:13",{"_index":1293,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:24",{"_index":1295,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:37",{"_index":1290,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:46",{"_index":1282,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:7",{"_index":1287,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:9",{"_index":1286,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/file.service.t",{"_index":1593,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["packages/data/src/files/file.service.ts:101",{"_index":1678,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:123",{"_index":1679,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:157",{"_index":1676,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:49",{"_index":1681,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:51",{"_index":1680,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:63",{"_index":1673,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:73",{"_index":1675,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:81",{"_index":1674,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/files.module.t",{"_index":1687,"title":{},"body":{"modules/FilesModule.html":{}}}],["packages/data/src/files/image/image.directive.t",{"_index":1919,"title":{},"body":{"directives/ImageDirective.html":{},"coverage.html":{}}}],["packages/data/src/files/image/image.directive.ts:15",{"_index":1934,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:17",{"_index":1932,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:19",{"_index":1929,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:21",{"_index":1928,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:23",{"_index":1943,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:28",{"_index":1938,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:40",{"_index":1935,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:44",{"_index":1942,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:61",{"_index":1940,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/upload/upload.component.t",{"_index":3834,"title":{},"body":{"components/UploadComponent.html":{},"coverage.html":{}}}],["packages/data/src/files/upload/upload.component.ts:18",{"_index":3856,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:19",{"_index":3861,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:20",{"_index":3859,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:22",{"_index":3847,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:24",{"_index":3845,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:26",{"_index":3843,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:28",{"_index":3842,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:30",{"_index":3844,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:32",{"_index":3846,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:39",{"_index":3840,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:41",{"_index":3849,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:43",{"_index":3857,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:45",{"_index":3860,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:47",{"_index":3839,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:56",{"_index":3853,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:66",{"_index":3851,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:80",{"_index":3852,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:88",{"_index":3855,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/model",{"_index":2638,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["packages/data/src/resourc",{"_index":3083,"title":{},"body":{"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"coverage.html":{}}}],["packages/data/src/resource/resource.module.t",{"_index":3316,"title":{},"body":{"modules/ResourceModule.html":{}}}],["packages/data/src/sdk/history.service.t",{"_index":1836,"title":{},"body":{"injectables/HistoryService.html":{},"coverage.html":{}}}],["packages/data/src/sdk/history.service.ts:14",{"_index":1859,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:16",{"_index":1842,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:19",{"_index":1858,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:20",{"_index":1857,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:21",{"_index":1862,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:22",{"_index":1861,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:24",{"_index":1854,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:40",{"_index":1844,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:50",{"_index":1850,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/sdk.module.t",{"_index":3363,"title":{},"body":{"modules/SdkModule.html":{}}}],["packages/data/src/sdk/sdk.service.t",{"_index":3365,"title":{},"body":{"injectables/SdkService.html":{},"coverage.html":{}}}],["packages/data/src/sdk/sdk.service.ts:100",{"_index":3386,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:110",{"_index":3377,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:121",{"_index":3374,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:133",{"_index":3384,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:30",{"_index":3390,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:32",{"_index":3395,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:33",{"_index":3400,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:43",{"_index":3397,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:45",{"_index":3389,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:47",{"_index":3388,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:49",{"_index":3401,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:56",{"_index":3403,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:61",{"_index":3392,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:63",{"_index":3398,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:65",{"_index":3396,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:72",{"_index":3373,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:75",{"_index":3393,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:80",{"_index":3381,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/location/src/geocode.service.t",{"_index":1767,"title":{},"body":{"injectables/GeocodeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/location/src/geocode.service.ts:12",{"_index":1777,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:18",{"_index":1792,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:43",{"_index":1780,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:49",{"_index":1784,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:62",{"_index":1789,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/loc",{"_index":2289,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{}}}],["packages/location/src/location.module.t",{"_index":2322,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/medium",{"_index":2491,"title":{},"body":{"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["packages/tinymce/src/tinymce.module.t",{"_index":3737,"title":{},"body":{"modules/TinymceModule.html":{}}}],["packages/tinymce/src/tinymce/tinymc",{"_index":4123,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.t",{"_index":3673,"title":{},"body":{"components/TinymceComponent.html":{},"coverage.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:108",{"_index":3689,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:117",{"_index":3692,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:127",{"_index":3695,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:129",{"_index":3690,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:133",{"_index":3691,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:53",{"_index":3696,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:55",{"_index":3694,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:57",{"_index":3693,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:59",{"_index":3697,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:61",{"_index":3685,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:63",{"_index":3686,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:65",{"_index":3687,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:67",{"_index":3680,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:83",{"_index":3688,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/ui/src/form/datetime/calendar.component.t",{"_index":4127,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/datetime/daterange.component.t",{"_index":4130,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/datetime/datetime.component.t",{"_index":1071,"title":{},"body":{"components/DatetimeComponent.html":{},"coverage.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:25",{"_index":1084,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:27",{"_index":1086,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:29",{"_index":1092,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:31",{"_index":1095,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:33",{"_index":1085,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:35",{"_index":1088,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:38",{"_index":1091,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:43",{"_index":1093,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:47",{"_index":1089,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:52",{"_index":1090,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.pipe.t",{"_index":1105,"title":{},"body":{"pipes/DatetimePipe.html":{},"coverage.html":{}}}],["packages/ui/src/form/datetime/datetime.pipe.ts:12",{"_index":1112,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["packages/ui/src/form/datetime/heatmap.component.t",{"_index":4133,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/datetime/month.component.t",{"_index":1121,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{}}}],["packages/ui/src/form/default",{"_index":1257,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/form/form.component.t",{"_index":4137,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/form.module.t",{"_index":1713,"title":{},"body":{"modules/FormModule.html":{}}}],["packages/ui/src/form/form.service.t",{"_index":1730,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{}}}],["packages/ui/src/form/form.service.ts:18",{"_index":1739,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/form.service.ts:31",{"_index":1737,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/form.service.ts:38",{"_index":1741,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/form.service.ts:50",{"_index":1745,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/max",{"_index":2484,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"coverage.html":{}}}],["packages/ui/src/form/toggle/toggle.component.t",{"_index":3739,"title":{},"body":{"components/ToggleComponent.html":{},"coverage.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:20",{"_index":3750,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:22",{"_index":3743,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:25",{"_index":3747,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:30",{"_index":3748,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:34",{"_index":3749,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:37",{"_index":3744,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:41",{"_index":3745,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/vis",{"_index":3905,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{},"coverage.html":{}}}],["packages/ui/src/icon/ec",{"_index":4139,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/icon/emoji",{"_index":4141,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/icon/icon.component.t",{"_index":1882,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["packages/ui/src/icon/icon.component.ts:13",{"_index":1889,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/icon/icon.component.ts:15",{"_index":1888,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/icon/icon.component.ts:19",{"_index":1890,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/icon/icon.module.t",{"_index":1913,"title":{},"body":{"modules/IconModule.html":{}}}],["packages/ui/src/icon/icon.service.t",{"_index":1915,"title":{},"body":{"injectables/IconService.html":{},"coverage.html":{}}}],["packages/ui/src/icon/icon.service.ts:9",{"_index":1917,"title":{},"body":{"injectables/IconService.html":{}}}],["packages/ui/src/io/dynam",{"_index":1309,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/input",{"_index":2013,"title":{},"body":{"components/InputErrorsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/input/input.component.t",{"_index":1961,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/input/input.component.ts:23",{"_index":1970,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:25",{"_index":1966,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:27",{"_index":1975,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:29",{"_index":1968,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:31",{"_index":1969,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:33",{"_index":1972,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:35",{"_index":1971,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:37",{"_index":1964,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:40",{"_index":1981,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:42",{"_index":1976,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:73",{"_index":1979,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:79",{"_index":1989,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:83",{"_index":1977,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:87",{"_index":1978,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/io.module.t",{"_index":2035,"title":{},"body":{"modules/IoModule.html":{}}}],["packages/ui/src/io/output/output.component.t",{"_index":2869,"title":{},"body":{"components/OutputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/output/output.component.ts:15",{"_index":2870,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/io/output/output.component.ts:17",{"_index":2871,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/io/output/output.component.ts:21",{"_index":2872,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/io/slot",{"_index":3517,"title":{},"body":{"directives/SlotHostDirective.html":{},"coverage.html":{}}}],["packages/ui/src/list/group.pipe.t",{"_index":1831,"title":{},"body":{"pipes/GroupPipe.html":{},"coverage.html":{}}}],["packages/ui/src/list/group.pipe.ts:10",{"_index":1833,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["packages/ui/src/list/list",{"_index":2153,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/list/list.component.t",{"_index":2055,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["packages/ui/src/list/list.component.ts:100",{"_index":2088,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:24",{"_index":2092,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:27",{"_index":2068,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:29",{"_index":2069,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:31",{"_index":2067,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:33",{"_index":2072,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:35",{"_index":2073,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:37",{"_index":2074,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:39",{"_index":2075,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:41",{"_index":2070,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:43",{"_index":2071,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:47",{"_index":2083,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:68",{"_index":2077,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:76",{"_index":2090,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:82",{"_index":2086,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:90",{"_index":2087,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.module.t",{"_index":2216,"title":{},"body":{"modules/ListModule.html":{}}}],["packages/ui/src/list/pagination/pagin",{"_index":2998,"title":{},"body":{"classes/PaginationConfig.html":{},"coverage.html":{}}}],["packages/ui/src/list/pagination/pagination.component.t",{"_index":2940,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:16",{"_index":2947,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:18",{"_index":2958,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:20",{"_index":2962,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:22",{"_index":2960,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:24",{"_index":2946,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:28",{"_index":2953,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:33",{"_index":2952,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:43",{"_index":2950,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:48",{"_index":2954,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:62",{"_index":2949,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:67",{"_index":2957,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/loader/loader.component.t",{"_index":2222,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["packages/ui/src/loader/loader.component.ts:14",{"_index":2240,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:16",{"_index":2241,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:18",{"_index":2233,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:25",{"_index":2235,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:31",{"_index":2234,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:38",{"_index":2237,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.module.t",{"_index":2280,"title":{},"body":{"modules/LoaderModule.html":{}}}],["packages/ui/src/loader/loader.service.t",{"_index":2283,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["packages/ui/src/loader/loader.service.ts:11",{"_index":2285,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/loader/loader.service.ts:16",{"_index":2286,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/loader/loader.service.ts:8",{"_index":2287,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/loader/with",{"_index":3912,"title":{},"body":{"interfaces/WithLoader.html":{},"coverage.html":{}}}],["packages/ui/src/notifications/error/error.component.t",{"_index":1483,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:12",{"_index":1486,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:18",{"_index":1488,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:22",{"_index":1487,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:26",{"_index":1489,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/notification.t",{"_index":2738,"title":{},"body":{"classes/Notification.html":{},"coverage.html":{}}}],["packages/ui/src/notifications/notification.ts:10",{"_index":2747,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:12",{"_index":2754,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:14",{"_index":2751,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:16",{"_index":2757,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:18",{"_index":2744,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:20",{"_index":2745,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:22",{"_index":2743,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:24",{"_index":2741,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:6",{"_index":2755,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:8",{"_index":2748,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notifications.component.t",{"_index":2761,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/notifications/notifications.component.ts:20",{"_index":2768,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/notifications/notifications.component.ts:22",{"_index":2767,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/notifications/notifications.module.t",{"_index":2827,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["packages/ui/src/notifications/notifications.service.t",{"_index":2830,"title":{},"body":{"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:22",{"_index":2848,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:24",{"_index":2850,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:26",{"_index":2837,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:34",{"_index":2844,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:45",{"_index":2846,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:58",{"_index":2839,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/with",{"_index":3915,"title":{},"body":{"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["packages/ui/src/pop/pop.component.t",{"_index":3040,"title":{},"body":{"components/PopComponent.html":{},"coverage.html":{}}}],["packages/ui/src/pop/pop.component.ts:18",{"_index":3046,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:20",{"_index":3047,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:23",{"_index":3048,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:25",{"_index":3045,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:31",{"_index":3051,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:43",{"_index":3050,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:52",{"_index":3049,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.module.t",{"_index":3068,"title":{},"body":{"modules/PopModule.html":{}}}],["packages/ui/src/pop/pop.service.t",{"_index":3069,"title":{},"body":{"injectables/PopService.html":{},"coverage.html":{}}}],["packages/ui/src/pop/pop.service.ts:9",{"_index":3073,"title":{},"body":{"injectables/PopService.html":{}}}],["packages/ui/src/select/select.component.t",{"_index":3440,"title":{},"body":{"components/SelectComponent.html":{},"coverage.html":{}}}],["packages/ui/src/select/select.component.ts:102",{"_index":3479,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:113",{"_index":3481,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:120",{"_index":3467,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:125",{"_index":3475,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:129",{"_index":3477,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:137",{"_index":3462,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:145",{"_index":3484,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:148",{"_index":3471,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:152",{"_index":3472,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:27",{"_index":3451,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:29",{"_index":3456,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:31",{"_index":3454,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:33",{"_index":3453,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:35",{"_index":3458,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:37",{"_index":3459,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:39",{"_index":3452,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:41",{"_index":3457,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:43",{"_index":3455,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:45",{"_index":3483,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:47",{"_index":3461,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:53",{"_index":3464,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:61",{"_index":3470,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:65",{"_index":3469,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:70",{"_index":3468,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:91",{"_index":3482,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:96",{"_index":3474,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.module.t",{"_index":3515,"title":{},"body":{"modules/SelectModule.html":{}}}],["packages/ui/src/symbol/symbol.interface.t",{"_index":3565,"title":{},"body":{"interfaces/Symbol.html":{},"coverage.html":{}}}],["packages/ui/src/symbol/symbol.module.t",{"_index":3571,"title":{},"body":{"modules/SymbolModule.html":{}}}],["packages/ui/src/symbol/symbol.pipe.t",{"_index":3575,"title":{},"body":{"injectables/SymbolPipe.html":{},"coverage.html":{}}}],["packages/ui/src/symbol/symbol.pipe.ts:21",{"_index":3577,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["packages/ui/src/symbol/symbol.service.t",{"_index":3581,"title":{},"body":{"injectables/SymbolService.html":{},"coverage.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:10",{"_index":3599,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:12",{"_index":3584,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:18",{"_index":3594,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:23",{"_index":3596,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:31",{"_index":3586,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:36",{"_index":3588,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:46",{"_index":3590,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:9",{"_index":3597,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/ui.module.t",{"_index":3830,"title":{},"body":{"modules/UiModule.html":{}}}],["packages/ui/src/utility/login",{"_index":2410,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/menu/menu.component.t",{"_index":2535,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:102",{"_index":2581,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:15",{"_index":2566,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:17",{"_index":2565,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:19",{"_index":2567,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:21",{"_index":2564,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:23",{"_index":2560,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:25",{"_index":2570,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:27",{"_index":2563,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:29",{"_index":2594,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:31",{"_index":2554,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:38",{"_index":2593,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:47",{"_index":2584,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:52",{"_index":2592,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:58",{"_index":2590,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:63",{"_index":2578,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:68",{"_index":2574,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:73",{"_index":2576,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:78",{"_index":2587,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:88",{"_index":2571,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:95",{"_index":2588,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/mockup/mockup.component.t",{"_index":2622,"title":{},"body":{"components/MockupComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/tab/tab.component.t",{"_index":3614,"title":{},"body":{"components/TabComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:12",{"_index":3621,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:14",{"_index":3623,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:16",{"_index":3622,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:18",{"_index":3624,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:20",{"_index":3625,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:22",{"_index":3619,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:25",{"_index":3629,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:28",{"_index":3626,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:33",{"_index":3627,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.t",{"_index":3633,"title":{},"body":{"components/TabsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:15",{"_index":3650,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:17",{"_index":3642,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:28",{"_index":3648,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:39",{"_index":3643,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:49",{"_index":3644,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:54",{"_index":3646,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/utility.module.t",{"_index":3895,"title":{},"body":{"modules/UtilityModule.html":{}}}],["packages/ui/src/utility/validators/email.validator.t",{"_index":4153,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/utility/validators/field",{"_index":4155,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/vc/src/editor/editor.component.t",{"_index":4157,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/vc/src/saf",{"_index":3350,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"coverage.html":{}}}],["packages/vc/src/toolbar/toolbar.component.t",{"_index":3751,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["packages/vc/src/toolbar/toolbar.component.ts:13",{"_index":3758,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["packages/vc/src/toolbar/toolbar.component.ts:17",{"_index":3760,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["packages/vc/src/toolbar/toolbar.component.ts:24",{"_index":3765,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["packages/vc/src/toolbar/toolbar.component.ts:29",{"_index":3762,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["packages/vc/src/vc.module.t",{"_index":3902,"title":{},"body":{"modules/VcModule.html":{}}}],["pad",{"_index":4355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["page",{"_index":531,"title":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}},"body":{"injectables/AuthGuard.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["page!==1",{"_index":1377,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["pagecontain",{"_index":2943,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagin",{"_index":2195,"title":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}},"body":{"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["pagination'},{'nam",{"_index":267,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["pagination.component.html",{"_index":2942,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.component.scss",{"_index":2941,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.first",{"_index":2986,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.getpag",{"_index":2915,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["pagination.last",{"_index":2990,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.next",{"_index":2989,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.of",{"_index":2993,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.params().from",{"_index":2991,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.params().to",{"_index":2992,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.params().tot",{"_index":2994,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.prev",{"_index":2987,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.s",{"_index":2997,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.settotal(50",{"_index":2914,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["pagination/pagin",{"_index":2110,"title":{},"body":{"components/ListComponent.html":{}}}],["pagination/pagination.compon",{"_index":2220,"title":{},"body":{"modules/ListModule.html":{}}}],["paginationcompon",{"_index":266,"title":{"components/PaginationComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paginationconfig",{"_index":2066,"title":{"classes/PaginationConfig.html":{}},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"changelog.html":{},"coverage.html":{}}}],["paginationconfig(this.config",{"_index":2967,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paint",{"_index":4401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["palett",{"_index":4345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paperclip",{"_index":4405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paperplan",{"_index":4406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paragraph",{"_index":4407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":2877,"title":{},"body":{"classes/Pagination.html":{},"classes/Sorter.html":{}}}],["paramet",{"_index":86,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":771,"title":{},"body":{"classes/Collection.html":{},"interfaces/ItemConfig.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/collection.html":{}}}],["parent.getpath(item",{"_index":2603,"title":{},"body":{"components/MenuComponent.html":{}}}],["parent=0",{"_index":2579,"title":{},"body":{"components/MenuComponent.html":{}}}],["pars",{"_index":2671,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["parsetyp",{"_index":2650,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["parsetype(typ",{"_index":2669,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["part",{"_index":460,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["pass",{"_index":1851,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/item.html":{}}}],["password",{"_index":269,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["passwordlabel",{"_index":2425,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["passwordplacehold",{"_index":2426,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["passwordresetcompon",{"_index":268,"title":{"components/PasswordResetComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["passwort",{"_index":2441,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{}}}],["past",{"_index":4526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paste_as_text",{"_index":4541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":1461,"title":{},"body":{"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ItemConfig.html":{},"components/MenuComponent.html":{},"components/TabsComponent.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["paths[paths.length",{"_index":3660,"title":{},"body":{"components/TabsComponent.html":{}}}],["pattern",{"_index":1110,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["pattern[0",{"_index":1119,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["paus",{"_index":4467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pen",{"_index":4409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pencil",{"_index":4330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pend",{"_index":3172,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{}}}],["per",{"_index":2151,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["percent",{"_index":4410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["peripher",{"_index":2194,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["permiss",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceConfig.html":{},"changelog.html":{}}}],["permissions[method",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{}}}],["pflichtfeld",{"_index":4292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phone",{"_index":3802,"title":{},"body":{"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["photo",{"_index":4412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pick",{"_index":453,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/LocationPickerComponent.html":{}}}],["picker",{"_index":2336,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker'},{'nam",{"_index":246,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["picker.compon",{"_index":2328,"title":{},"body":{"modules/LocationModule.html":{}}}],["picker.component.html",{"_index":2338,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.scss",{"_index":2337,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.t",{"_index":2335,"title":{},"body":{"components/LocationPickerComponent.html":{},"coverage.html":{}}}],["picker.component.ts:24",{"_index":2343,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:26",{"_index":2344,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:28",{"_index":2353,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:30",{"_index":2355,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:32",{"_index":2342,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:35",{"_index":2352,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:41",{"_index":2348,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:56",{"_index":2351,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:62",{"_index":2349,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:78",{"_index":2354,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:80",{"_index":2345,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:84",{"_index":2346,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["pictur",{"_index":4415,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["pie",{"_index":4325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pin",{"_index":4334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe",{"_index":1103,"title":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/SafeHtmlPipe.html":{},"pipes/VisibleFieldsPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(switchmap",{"_index":1815,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["pipetransform",{"_index":1114,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["place",{"_index":1803,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/NotificationsComponent.html":{},"components/TabComponent.html":{},"index.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["place.geometri",{"_index":1806,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lat",{"_index":1809,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lng",{"_index":1811,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["placehold",{"_index":1080,"title":{},"body":{"components/DatetimeComponent.html":{},"classes/Field.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PasswordResetComponent.html":{},"components/SelectComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["placeholder||'auswählen",{"_index":3506,"title":{},"body":{"components/SelectComponent.html":{}}}],["placeholder||\\'auswählen",{"_index":3508,"title":{},"body":{"components/SelectComponent.html":{}}}],["plan",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"miscellaneous/variables.html":{}}}],["platform",{"_index":3185,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["platformid",{"_index":3186,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["platformtyp",{"_index":3188,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["play",{"_index":4468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pleas",{"_index":4243,"title":{},"body":{"index.html":{}}}],["plot",{"_index":4328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plug",{"_index":2223,"title":{},"body":{"components/LoaderComponent.html":{}}}],["plugin",{"_index":4525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["point",{"_index":4338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["polici",{"_index":3150,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["policy.method",{"_index":3152,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["pop",{"_index":423,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"classes/Field.html":{},"components/ListHeaderComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["pop'},{'nam",{"_index":195,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["pop.compon",{"_index":877,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{}}}],["pop.component.html",{"_index":436,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/PopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["pop.component.scss",{"_index":435,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/PopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["pop.component.t",{"_index":422,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/ResourceDeletePopComponent.html":{},"coverage.html":{}}}],["pop.component.ts:21",{"_index":3297,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:23",{"_index":3291,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:24",{"_index":458,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:25",{"_index":3290,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:26",{"_index":459,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:27",{"_index":3289,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:28",{"_index":456,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:29",{"_index":3298,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:30",{"_index":451,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:32",{"_index":3296,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:34",{"_index":480,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:39",{"_index":471,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:51",{"_index":468,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:56",{"_index":3293,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.hid",{"_index":2186,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["pop.servic",{"_index":3057,"title":{},"body":{"components/PopComponent.html":{},"modules/PopModule.html":{}}}],["pop.toggl",{"_index":2184,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["pop/asset",{"_index":421,"title":{},"body":{"components/AssetListPopComponent.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["pop/entri",{"_index":876,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"coverage.html":{}}}],["pop/pop.compon",{"_index":2180,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/SelectComponent.html":{}}}],["pop/pop.modul",{"_index":1714,"title":{},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/UiModule.html":{}}}],["pop/resourc",{"_index":1063,"title":{},"body":{"modules/DataModule.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["pop_dialog",{"_index":3238,"title":{},"body":{"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["pop_draw",{"_index":849,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{}}}],["pop_fullscreen",{"_index":3794,"title":{},"body":{"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["pop_toast",{"_index":3974,"title":{},"body":{"changelog.html":{}}}],["popclass",{"_index":931,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/TypeConfigService.html":{}}}],["popcompon",{"_index":271,"title":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["popcomponent:18",{"_index":462,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popcomponent:20",{"_index":463,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popcomponent:23",{"_index":466,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popcomponent:25",{"_index":482,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popcomponent:31",{"_index":478,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popcomponent:43",{"_index":476,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popcomponent:52",{"_index":473,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popmodul",{"_index":1708,"title":{"modules/PopModule.html":{}},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["popservic",{"_index":448,"title":{"injectables/PopService.html":{}},"body":{"components/AssetListPopComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"coverage.html":{},"overview.html":{}}}],["popth",{"_index":3056,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["portrait",{"_index":4414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["posit",{"_index":2311,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["possess",{"_index":1428,"title":{},"body":{"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["possibl",{"_index":432,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/CrudConfig.html":{},"classes/Field.html":{},"components/LoginFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["post",{"_index":678,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["potter",{"_index":4392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["power",{"_index":4417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preced",{"_index":2795,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["prefer",{"_index":4004,"title":{},"body":{"changelog.html":{}}}],["prefil",{"_index":3100,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/core-classes/form.html":{}}}],["prefill:'bobbi",{"_index":4795,"title":{},"body":{"additional-documentation/core-classes/form.html":{}}}],["prefix",{"_index":4636,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["prepend",{"_index":2715,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["prepublish",{"_index":4206,"title":{},"body":{"index.html":{}}}],["prequisit",{"_index":4626,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["present",{"_index":73,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthGuard.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{}}}],["preserv",{"_index":1603,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["preservefilenam",{"_index":1598,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["press",{"_index":3261,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["pretti",{"_index":2011,"title":{},"body":{"components/InputComponent.html":{}}}],["prev",{"_index":1347,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{},"miscellaneous/variables.html":{}}}],["preview",{"_index":3192,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["previou",{"_index":2089,"title":{},"body":{"components/ListComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["price",{"_index":4458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primit",{"_index":2052,"title":{},"body":{"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["primitive.resolv",{"_index":4765,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["primitv",{"_index":4719,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["printer",{"_index":4418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["privat",{"_index":495,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"directives/ImageDirective.html":{},"components/InputErrorsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["process",{"_index":3684,"title":{},"body":{"components/TinymceComponent.html":{}}}],["prod",{"_index":4650,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["product",{"_index":4653,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["profil",{"_index":4499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["programmat",{"_index":2048,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["project",{"_index":3922,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["promis",{"_index":116,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["promise((resolv",{"_index":1817,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["promise.all(this.stack.item",{"_index":2273,"title":{},"body":{"components/LoaderComponent.html":{}}}],["promise.reject('api_not_found",{"_index":653,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject('cannot",{"_index":411,"title":{},"body":{"directives/AssetDirective.html":{}}}],["promise.reject('desktop",{"_index":2862,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["promise.reject('fehl",{"_index":2780,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["promise.reject('getaccount",{"_index":3438,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('getschema",{"_index":3435,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('no_api_found",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject(`ecimag",{"_index":1951,"title":{},"body":{"directives/ImageDirective.html":{}}}],["promise.reject(err",{"_index":1011,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["promise.reject(this.noclientid",{"_index":646,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolv",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["promise.resolve().then",{"_index":898,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(>asset",{"_index":1657,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(['get",{"_index":677,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(api",{"_index":647,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(config",{"_index":2733,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["promise.resolve(item.config.onsave(item",{"_index":3336,"title":{},"body":{"injectables/ResourceService.html":{}}}],["promise.resolve(method",{"_index":672,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(result",{"_index":683,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(results.concat(method",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(this.editor",{"_index":155,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{}}}],["promise.resolve(valu",{"_index":2478,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["propag",{"_index":1094,"title":{},"body":{"components/DatetimeComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["propagatechang",{"_index":36,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["proper",{"_index":2659,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["properli",{"_index":4690,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["properti",{"_index":33,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["properties.foreach(properti",{"_index":2716,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["property.can",{"_index":4245,"title":{},"body":{"index.html":{}}}],["property.interfac",{"_index":1582,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["property.interface.t",{"_index":4038,"title":{},"body":{"coverage.html":{}}}],["property.split",{"_index":1465,"title":{},"body":{"components/EntryListComponent.html":{}}}],["property[0",{"_index":2685,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["protect",{"_index":716,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"classes/Pagination.html":{}}}],["prototyp",{"_index":2624,"title":{},"body":{"components/MockupComponent.html":{}}}],["protractor",{"_index":4260,"title":{},"body":{"index.html":{}}}],["provd",{"_index":2200,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["provid",{"_index":23,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["public",{"_index":39,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["publicapi",{"_index":369,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{}}}],["publicapi(shortid",{"_index":3430,"title":{},"body":{"injectables/SdkService.html":{}}}],["publicassetlist",{"_index":1609,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["publicassetresourc",{"_index":401,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["publicassetright",{"_index":3134,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["publicservic",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":4203,"title":{"additional-documentation/project-setup-tutorial/publishing.html":{}},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["push",{"_index":2845,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["put",{"_index":679,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"injectables/HistoryService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"changelog.html":{}}}],["qb1mro56u5katpx9j8o4",{"_index":2333,"title":{},"body":{"modules/LocationModule.html":{}}}],["qr",{"_index":4419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quellenangab",{"_index":4569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queri",{"_index":2144,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["queryfilt",{"_index":3800,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["querylist",{"_index":2176,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/PaginationComponent.html":{},"components/TabsComponent.html":{}}}],["question",{"_index":4381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quick",{"_index":921,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["quickli",{"_index":4681,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["quot",{"_index":4420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rack",{"_index":1322,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.compon",{"_index":2039,"title":{},"body":{"modules/IoModule.html":{}}}],["rack.component.html",{"_index":1313,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.component.t",{"_index":1311,"title":{},"body":{"components/DynamicRackComponent.html":{},"coverage.html":{}}}],["rack.component.ts:10",{"_index":1316,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack/dynam",{"_index":1310,"title":{},"body":{"components/DynamicRackComponent.html":{},"modules/IoModule.html":{},"coverage.html":{}}}],["ramp",{"_index":4441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rang",{"_index":3001,"title":{},"body":{"classes/PaginationConfig.html":{},"changelog.html":{}}}],["raw",{"_index":1111,"title":{},"body":{"pipes/DatetimePipe.html":{},"components/LocationPickerComponent.html":{},"injectables/ModelConfigService.html":{}}}],["rawfilt",{"_index":2693,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["rc.0",{"_index":4194,"title":{},"body":{"index.html":{}}}],["re",{"_index":79,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["react",{"_index":518,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["reactiv",{"_index":2494,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["reactiveformsmodul",{"_index":560,"title":{},"body":{"modules/AuthModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{}}}],["read",{"_index":949,"title":{},"body":{"interfaces/CrudConfig.html":{},"directives/ImageDirective.html":{},"miscellaneous/variables.html":{}}}],["readabl",{"_index":1557,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["readi",{"_index":37,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"changelog.html":{}}}],["readm",{"_index":357,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Collection.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"components/TabsComponent.html":{},"index.html":{}}}],["readonli",{"_index":2050,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/LocationMapComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"changelog.html":{}}}],["recent",{"_index":2460,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["recogn",{"_index":4808,"title":{},"body":{"additional-documentation/core-classes/selection.html":{}}}],["recommend",{"_index":2788,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["reconstruct",{"_index":2084,"title":{},"body":{"components/ListComponent.html":{}}}],["recycl",{"_index":4505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirect",{"_index":520,"title":{},"body":{"injectables/AuthGuard.html":{},"components/LoginComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["redo",{"_index":4495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reduce((a",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{}}}],["reduce((ha",{"_index":3549,"title":{},"body":{"classes/Sorter.html":{}}}],["reduce((match",{"_index":1000,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["redund",{"_index":4748,"title":{},"body":{"additional-documentation/ui.html":{}}}],["refactor",{"_index":3995,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":1982,"title":{},"body":{"components/InputComponent.html":{},"injectables/LoaderService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["referenc",{"_index":4713,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["reflect",{"_index":1140,"title":{},"body":{"interfaces/Day.html":{},"miscellaneous/variables.html":{}}}],["refresh",{"_index":4331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regex",{"_index":3091,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["regexp",{"_index":2045,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/ResourceConfig.html":{}}}],["regist",{"_index":83,"title":{},"body":{"components/AceComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"injectables/LoaderService.html":{},"injectables/SymbolService.html":{},"components/ToggleComponent.html":{}}}],["registeronchang",{"_index":48,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["registeronchange(fn",{"_index":81,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["registerontouch",{"_index":49,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["registri",{"_index":1883,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{},"injectables/SymbolService.html":{},"additional-documentation/ui/icons.html":{}}}],["regular",{"_index":3910,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["reject",{"_index":1818,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["reject(statu",{"_index":1823,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["rel",{"_index":1244,"title":{},"body":{"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/TabComponent.html":{},"index.html":{}}}],["relat",{"_index":556,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"modules/LocationModule.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{}}}],["relationnam",{"_index":3098,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["relativeto",{"_index":3671,"title":{},"body":{"components/TabsComponent.html":{}}}],["releas",{"_index":4029,"title":{},"body":{"changelog.html":{}}}],["relev",{"_index":332,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["reli",{"_index":4718,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["reload",{"_index":855,"title":{},"body":{"components/CrudComponent.html":{},"index.html":{}}}],["remain",{"_index":940,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["remov",{"_index":475,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"components/LoaderComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"interfaces/Update.html":{},"changelog.html":{}}}],["remove(item",{"_index":755,"title":{},"body":{"classes/Collection.html":{}}}],["removeal",{"_index":722,"title":{},"body":{"classes/Collection.html":{}}}],["removeall(item",{"_index":758,"title":{},"body":{"classes/Collection.html":{}}}],["removefilt",{"_index":2161,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["removefilter(properti",{"_index":2172,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["removeformat",{"_index":4584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removeitem",{"_index":3447,"title":{},"body":{"components/SelectComponent.html":{}}}],["removeitem(item",{"_index":3473,"title":{},"body":{"components/SelectComponent.html":{}}}],["renam",{"_index":2054,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/PopComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["renamend",{"_index":3970,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":816,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["renew",{"_index":3981,"title":{},"body":{"changelog.html":{}}}],["repeat",{"_index":4456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replac",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/SymbolService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["replacewith",{"_index":723,"title":{},"body":{"classes/Collection.html":{}}}],["replacewith(item",{"_index":761,"title":{},"body":{"classes/Collection.html":{}}}],["repli",{"_index":4574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repositori",{"_index":4196,"title":{},"body":{"index.html":{}}}],["repres",{"_index":1127,"title":{},"body":{"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["request",{"_index":1930,"title":{},"body":{"directives/ImageDirective.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{}}}],["requir",{"_index":328,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"classes/Field.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["reset",{"_index":318,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"components/LoginFormComponent.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"components/PasswordResetComponent.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"changelog.html":{},"overview.html":{}}}],["reset'},{'nam",{"_index":270,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["reset.compon",{"_index":566,"title":{},"body":{"modules/AuthModule.html":{}}}],["reset.component.html",{"_index":3013,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.t",{"_index":3011,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reset.component.ts:14",{"_index":3022,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:16",{"_index":3021,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:18",{"_index":3016,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:20",{"_index":3017,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:22",{"_index":3018,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:24",{"_index":3015,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:26",{"_index":3020,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:29",{"_index":3019,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset/password",{"_index":565,"title":{},"body":{"modules/AuthModule.html":{},"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["resetpassword",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(email",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{}}}],["resiz",{"_index":4523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolv",{"_index":118,"title":{},"body":{"components/AceComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["resolve(nam",{"_index":3587,"title":{},"body":{"injectables/SymbolService.html":{}}}],["resolve(result",{"_index":1822,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["resolveasset",{"_index":1670,"title":{},"body":{"injectables/FileService.html":{}}}],["resolveassets(asset",{"_index":1651,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["resolved.find((resourc",{"_index":1666,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["resolvedapi",{"_index":651,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvevari",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvevariables(str",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{}}}],["resourc",{"_index":273,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["resource.assetid",{"_index":1667,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["resource.del().then((r",{"_index":3348,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resource.delete.no",{"_index":3310,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["resource.delete.quest",{"_index":3308,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["resource.delete.y",{"_index":3309,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["resource.newhistori",{"_index":1875,"title":{},"body":{"injectables/HistoryService.html":{}}}],["resource.sav",{"_index":3338,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resource.save().then((_resourc",{"_index":3345,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resource/resource.modul",{"_index":1067,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{}}}],["resource[key",{"_index":3343,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resourceconfig",{"_index":604,"title":{"injectables/ResourceConfig.html":{}},"body":{"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["resourcecrudcompon",{"_index":272,"title":{"components/ResourceCrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["resourcedeletepopcompon",{"_index":274,"title":{"components/ResourceDeletePopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceform",{"_index":3111,"title":{},"body":{"injectables/ResourceConfig.html":{},"coverage.html":{}}}],["resourceformcompon",{"_index":276,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcelist",{"_index":1442,"title":{},"body":{"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{},"changelog.html":{},"coverage.html":{}}}],["resourcelistcompon",{"_index":277,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["resourcelistcomponent:105",{"_index":1450,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:114",{"_index":1444,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:118",{"_index":1448,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:22",{"_index":1456,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:24",{"_index":1432,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:26",{"_index":1437,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:28",{"_index":1455,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:30",{"_index":1430,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:32",{"_index":1435,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:34",{"_index":1433,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:36",{"_index":1438,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:45",{"_index":1457,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:57",{"_index":1441,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:78",{"_index":1451,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcemodul",{"_index":1040,"title":{"modules/ResourceModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules.html":{},"overview.html":{}}}],["resourcepopcompon",{"_index":278,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["resourceselectcompon",{"_index":279,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceservic",{"_index":1423,"title":{"injectables/ResourceService.html":{}},"body":{"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["respons",{"_index":1648,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["response['getallitem",{"_index":1647,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["rest",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/ui/icons.html":{}}}],["result",{"_index":308,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["results.length",{"_index":2367,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["results.push(method",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{}}}],["results[0].formatted_address",{"_index":2368,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["retriev",{"_index":2664,"title":{},"body":{"injectables/ModelConfigService.html":{},"classes/Pagination.html":{}}}],["return",{"_index":76,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["revers",{"_index":1785,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"classes/Sorter.html":{}}}],["right",{"_index":3136,"title":{},"body":{"injectables/ResourceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["role",{"_index":334,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{}}}],["roleid",{"_index":3233,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["roll",{"_index":4404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":353,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"classes/Config.html":{},"injectables/SdkService.html":{}}}],["rotat",{"_index":4460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rout",{"_index":512,"title":{"additional-documentation/project-setup-tutorial/routes.html":{}},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["route.data",{"_index":2600,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.data.hidden",{"_index":2601,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.param",{"_index":886,"title":{},"body":{"components/CrudComponent.html":{}}}],["route.params.subscrib",{"_index":1463,"title":{},"body":{"components/EntryListComponent.html":{}}}],["route.path",{"_index":2598,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.path.indexof",{"_index":2599,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.queryparam",{"_index":887,"title":{},"body":{"components/CrudComponent.html":{}}}],["router",{"_index":827,"title":{},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["routermodul",{"_index":1047,"title":{},"body":{"modules/DataModule.html":{},"modules/UtilityModule.html":{}}}],["routing.module.t",{"_index":4685,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["rss",{"_index":4428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ruler",{"_index":4422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1554,"title":{},"body":{"classes/Field.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes/field.html":{}}}],["rxj",{"_index":4173,"title":{},"body":{"dependencies.html":{},"additional-documentation/core-classes.html":{}}}],["rxjs/add/operator/debouncetim",{"_index":1132,"title":{},"body":{"interfaces/Day.html":{},"components/TinymceComponent.html":{}}}],["rxjs/add/operator/filt",{"_index":996,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rxjs/add/operator/switchmap",{"_index":874,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["rxjs/observ",{"_index":772,"title":{},"body":{"classes/Collection.html":{},"injectables/CrudService.html":{},"injectables/GeocodeService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rxjs/observable/frompromis",{"_index":1795,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["rxjs/observable/merg",{"_index":875,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["rxjs/oper",{"_index":1797,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["rxjs/subject",{"_index":534,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{}}}],["safe",{"_index":3354,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"modules/VcModule.html":{}}}],["safehtml",{"_index":3356,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["safehtmlpip",{"_index":3349,"title":{"pipes/SafeHtmlPipe.html":{}},"body":{"pipes/SafeHtmlPipe.html":{},"modules/VcModule.html":{},"coverage.html":{},"overview.html":{}}}],["samantha",{"_index":2631,"title":{},"body":{"components/MockupComponent.html":{}}}],["same",{"_index":731,"title":{},"body":{"classes/Collection.html":{},"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"components/MenuComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/core-classes/selection.html":{}}}],["sandbox.scss",{"_index":4647,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["sanit",{"_index":3359,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["save",{"_index":942,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/ItemConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["save(item",{"_index":3329,"title":{},"body":{"injectables/ResourceService.html":{}}}],["save(model",{"_index":987,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["savethi",{"_index":4641,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["scaffold",{"_index":4224,"title":{},"body":{"index.html":{}}}],["scale",{"_index":4326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema",{"_index":2643,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{}}}],["schema'",{"_index":2672,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.allof[1",{"_index":2710,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.properties[properti",{"_index":2722,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.properties[property].readonli",{"_index":2724,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.properties[property].titl",{"_index":2720,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.required.indexof(properti",{"_index":2725,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schemarequest",{"_index":3367,"title":{},"body":{"injectables/SdkService.html":{}}}],["schon",{"_index":4289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scissor",{"_index":4423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":4734,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["screen",{"_index":4347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["script",{"_index":4201,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["scripts:npm",{"_index":4207,"title":{},"body":{"index.html":{}}}],["scssmake",{"_index":4637,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["sdk",{"_index":339,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["sdk.api",{"_index":368,"title":{},"body":{"directives/AssetDirective.html":{},"components/PasswordResetComponent.html":{},"components/UploadComponent.html":{}}}],["sdk.servic",{"_index":3364,"title":{},"body":{"modules/SdkModule.html":{}}}],["sdk/history.servic",{"_index":1068,"title":{},"body":{"modules/DataModule.html":{}}}],["sdk/sdk.modul",{"_index":1057,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{}}}],["sdk/sdk.servic",{"_index":403,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["sdkmodul",{"_index":1041,"title":{"modules/SdkModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules.html":{},"overview.html":{}}}],["sdkservic",{"_index":342,"title":{"injectables/SdkService.html":{}},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/data.html":{}}}],["sdkservice#api",{"_index":2393,"title":{},"body":{"components/LoginComponent.html":{}}}],["sdkservice.readi",{"_index":3980,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":1517,"title":{},"body":{"classes/Field.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["search'},{'nam",{"_index":248,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["search.compon",{"_index":2329,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["search.component.html",{"_index":2372,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.t",{"_index":2370,"title":{},"body":{"components/LocationSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:13",{"_index":2376,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:15",{"_index":2379,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:17",{"_index":2375,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:25",{"_index":2377,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:31",{"_index":2378,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["searchbar",{"_index":1782,"title":{},"body":{"injectables/GeocodeService.html":{},"interfaces/ItemConfig.html":{},"components/LocationSearchComponent.html":{}}}],["searchinput",{"_index":2373,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["second",{"_index":2104,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["section",{"_index":3053,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["see",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["sein",{"_index":4706,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["seit",{"_index":539,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["sekundär",{"_index":4557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select",{"_index":438,"title":{"additional-documentation/core-classes/selection.html":{}},"body":{"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationSearchComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/selection.html":{}}}],["select'},{'nam",{"_index":197,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["select($ev",{"_index":467,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["select(item",{"_index":3268,"title":{},"body":{"components/ResourceCrudComponent.html":{},"components/SelectComponent.html":{}}}],["select(pag",{"_index":2902,"title":{},"body":{"classes/Pagination.html":{}}}],["select(tab",{"_index":3645,"title":{},"body":{"components/TabsComponent.html":{}}}],["select.compon",{"_index":1054,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{}}}],["select.component.html",{"_index":3443,"title":{},"body":{"components/SelectComponent.html":{}}}],["select.component.scss",{"_index":3442,"title":{},"body":{"components/SelectComponent.html":{}}}],["select.component.t",{"_index":4084,"title":{},"body":{"coverage.html":{}}}],["select.emit(item",{"_index":2080,"title":{},"body":{"components/ListComponent.html":{}}}],["select/asset",{"_index":1690,"title":{},"body":{"modules/FilesModule.html":{},"coverage.html":{}}}],["select/entri",{"_index":1053,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{}}}],["select/resourc",{"_index":1066,"title":{},"body":{"modules/DataModule.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["select/select.modul",{"_index":3833,"title":{},"body":{"modules/UiModule.html":{}}}],["selectbyurl",{"_index":3641,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectbyurl(url",{"_index":3647,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectcompon",{"_index":280,"title":{"components/SelectComponent.html":{},"additional-documentation/ui/selectcomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selectday(_mo",{"_index":1232,"title":{},"body":{"interfaces/Day.html":{}}}],["selected.display",{"_index":3507,"title":{},"body":{"components/SelectComponent.html":{}}}],["selectentri",{"_index":832,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectentry(item",{"_index":860,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectindex",{"_index":2062,"title":{},"body":{"components/ListComponent.html":{}}}],["selectindex(index",{"_index":2085,"title":{},"body":{"components/ListComponent.html":{}}}],["selection(this.valu",{"_index":3492,"title":{},"body":{"components/SelectComponent.html":{}}}],["selection.compon",{"_index":3960,"title":{},"body":{"changelog.html":{}}}],["selection.toggl",{"_index":2082,"title":{},"body":{"components/ListComponent.html":{}}}],["selectmod",{"_index":2145,"title":{},"body":{"interfaces/ListConfig.html":{},"changelog.html":{}}}],["selectmodul",{"_index":3509,"title":{"modules/SelectModule.html":{}},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["selectnext",{"_index":2063,"title":{},"body":{"components/ListComponent.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["selectprev",{"_index":2064,"title":{},"body":{"components/ListComponent.html":{}}}],["selectupload",{"_index":439,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["selectupload(upload",{"_index":470,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["send",{"_index":3012,"title":{},"body":{"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{}}}],["sensit",{"_index":3543,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/variables.html":{}}}],["sent",{"_index":3025,"title":{},"body":{"components/PasswordResetComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["serv",{"_index":4219,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes.html":{}}}],["server",{"_index":3634,"title":{},"body":{"components/TabsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["servic",{"_index":452,"title":{},"body":{"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"modules/LocationModule.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["session",{"_index":3368,"title":{},"body":{"injectables/SdkService.html":{}}}],["session(environment.environ",{"_index":3420,"title":{},"body":{"injectables/SdkService.html":{}}}],["set",{"_index":74,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{}}}],["set([this.config.s",{"_index":2920,"title":{},"body":{"classes/Pagination.html":{}}}],["set(properti",{"_index":2673,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["set(symbol",{"_index":3589,"title":{},"body":{"injectables/SymbolService.html":{}}}],["set(typ",{"_index":3792,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["setapi(api",{"_index":3402,"title":{},"body":{"injectables/SdkService.html":{}}}],["setclientid",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["setdate(d",{"_index":1226,"title":{},"body":{"interfaces/Day.html":{}}}],["setemptystringstonul",{"_index":3320,"title":{},"body":{"injectables/ResourceService.html":{}}}],["setmod",{"_index":50,"title":{},"body":{"components/AceComponent.html":{}}}],["setmode(mod",{"_index":91,"title":{},"body":{"components/AceComponent.html":{}}}],["setter",{"_index":799,"title":{},"body":{"classes/Config.html":{}}}],["setthem",{"_index":51,"title":{},"body":{"components/AceComponent.html":{}}}],["settheme(them",{"_index":96,"title":{},"body":{"components/AceComponent.html":{}}}],["settimeout",{"_index":2615,"title":{},"body":{"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{}}}],["settimeout(resolv",{"_index":2255,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["settings.t",{"_index":4124,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["settot",{"_index":2878,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(itemcount",{"_index":2935,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(tot",{"_index":2904,"title":{},"body":{"classes/Pagination.html":{}}}],["setup",{"_index":3997,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["seturl",{"_index":1926,"title":{},"body":{"directives/ImageDirective.html":{}}}],["seturl(url",{"_index":1939,"title":{},"body":{"directives/ImageDirective.html":{}}}],["setvalu",{"_index":2294,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["setvalue(valu",{"_index":2307,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["share",{"_index":4426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shear",{"_index":4431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shift",{"_index":4489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shoot",{"_index":4238,"title":{},"body":{"index.html":{}}}],["shop",{"_index":4432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["short",{"_index":3387,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["shorthand",{"_index":4638,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["shortid",{"_index":2731,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["show",{"_index":431,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceDeletePopComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["showerror",{"_index":2420,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["showerror(err",{"_index":2455,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["showhead",{"_index":2065,"title":{},"body":{"components/ListComponent.html":{}}}],["showlabel",{"_index":2427,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["shown",{"_index":517,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/CrudConfig.html":{},"components/EntryListComponent.html":{},"components/IconComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["shownotif",{"_index":2773,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["showrawvalu",{"_index":2340,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["shrink",{"_index":4437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sie",{"_index":544,"title":{},"body":{"injectables/AuthGuard.html":{},"components/PasswordResetComponent.html":{}}}],["sign",{"_index":4309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signal",{"_index":4429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signup",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(undefin",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{}}}],["silent",{"_index":3917,"title":{},"body":{"interfaces/WithNotifications.html":{},"miscellaneous/variables.html":{}}}],["simi",{"_index":808,"title":{},"body":{"classes/Config.html":{}}}],["simibug",{"_index":1373,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["similar",{"_index":1474,"title":{},"body":{"components/EntryListComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"components/LoginComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{}}}],["simpl",{"_index":2770,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["sind",{"_index":545,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["singl",{"_index":391,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{}}}],["singleton",{"_index":3526,"title":{},"body":{"classes/Sorter.html":{}}}],["site",{"_index":2261,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["situat",{"_index":3776,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["size",{"_index":1659,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/ListConfig.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["skin",{"_index":4524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skip",{"_index":1431,"title":{},"body":{"components/EntryListComponent.html":{}}}],["skull",{"_index":4442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice",{"_index":2486,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"classes/Pagination.html":{}}}],["slice(item",{"_index":2908,"title":{},"body":{"classes/Pagination.html":{}}}],["slider",{"_index":4425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slot",{"_index":305,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["slot'},{'nam",{"_index":214,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["slot.compon",{"_index":1991,"title":{},"body":{"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{}}}],["slot.component.html",{"_index":1325,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["slot.component.t",{"_index":1324,"title":{},"body":{"components/DynamicSlotComponent.html":{},"coverage.html":{}}}],["slot.component.ts:11",{"_index":1328,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot.component.ts:18",{"_index":1331,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot/dynam",{"_index":1323,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"coverage.html":{}}}],["slothostdirect",{"_index":304,"title":{"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["small",{"_index":4443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smaller",{"_index":4519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smiley",{"_index":4490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smoother",{"_index":3007,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["soeben",{"_index":3029,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["solo",{"_index":1420,"title":{},"body":{"components/EntryListComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/SelectComponent.html":{},"additional-documentation/core-classes/selection.html":{}}}],["somemodul",{"_index":1897,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["somewher",{"_index":140,"title":{},"body":{"components/AceComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["soon",{"_index":356,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{}}}],["sophist",{"_index":714,"title":{},"body":{"classes/Collection.html":{},"index.html":{},"additional-documentation/core-classes/collection.html":{}}}],["sort",{"_index":1566,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["sort(((a",{"_index":2923,"title":{},"body":{"classes/Pagination.html":{}}}],["sort(item",{"_index":3536,"title":{},"body":{"classes/Sorter.html":{}}}],["sortabl",{"_index":1508,"title":{},"body":{"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["sortbi",{"_index":2146,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["sortboolean",{"_index":3531,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortboolean(a",{"_index":3548,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorter",{"_index":3524,"title":{"classes/Sorter.html":{},"additional-documentation/core-classes/sorter.html":{}},"body":{"classes/Sorter.html":{},"coverage.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["sortierenfor",{"_index":4807,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["sortnumb",{"_index":3530,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortnumber(a",{"_index":3547,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sortstr",{"_index":3529,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortstring(a",{"_index":3545,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorttyp",{"_index":3527,"title":{},"body":{"classes/Sorter.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{}}}],["source.addeventlistener('entrycr",{"_index":1880,"title":{},"body":{"injectables/HistoryService.html":{}}}],["source.addeventlistener('entryupd",{"_index":1877,"title":{},"body":{"injectables/HistoryService.html":{}}}],["space",{"_index":4408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["span",{"_index":1142,"title":{},"body":{"interfaces/Day.html":{}}}],["spanchang",{"_index":1153,"title":{},"body":{"interfaces/Day.html":{}}}],["spancolor",{"_index":1143,"title":{},"body":{"interfaces/Day.html":{}}}],["speaker",{"_index":4444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speakingurl",{"_index":4714,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["spec.t",{"_index":4253,"title":{},"body":{"index.html":{}}}],["specif",{"_index":1547,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["specifi",{"_index":93,"title":{},"body":{"components/AceComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{}}}],["spell",{"_index":4448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spray",{"_index":4449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["squar",{"_index":1933,"title":{},"body":{"directives/ImageDirective.html":{},"miscellaneous/variables.html":{}}}],["src",{"_index":1924,"title":{},"body":{"directives/ImageDirective.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ace.html":{}}}],["src/app/app",{"_index":4684,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/app/app.component.html",{"_index":4673,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/app.modul",{"_index":4658,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/muffins/muffins.component.html",{"_index":4683,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/environ",{"_index":4649,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.prod.t",{"_index":4655,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.t",{"_index":4652,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/packag",{"_index":4188,"title":{},"body":{"index.html":{}}}],["ssl",{"_index":4666,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ssl\",without",{"_index":4668,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["stack",{"_index":2229,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"index.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["stackoverflow",{"_index":4496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stage",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["stand",{"_index":801,"title":{},"body":{"classes/Config.html":{}}}],["star",{"_index":4471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":1082,"title":{"changelog.html":{},"index.html":{}},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"pipes/MaxItemsPipe.html":{},"components/TabComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["startnow",{"_index":4677,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["state",{"_index":958,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListHeaderComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["statement",{"_index":4032,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1069,"title":{},"body":{"modules/DataModule.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["statu",{"_index":1820,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{}}}],["stay",{"_index":2752,"title":{},"body":{"classes/Notification.html":{},"injectables/SymbolService.html":{},"changelog.html":{}}}],["sticki",{"_index":912,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["still",{"_index":3923,"title":{},"body":{"changelog.html":{}}}],["stop",{"_index":2239,"title":{},"body":{"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":1855,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/WithNotifications.html":{},"index.html":{}}}],["strategy=endless",{"_index":1378,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["stream",{"_index":1846,"title":{},"body":{"injectables/HistoryService.html":{},"dependencies.html":{}}}],["strike",{"_index":4450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":65,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/list.html":{}}}],["string,valu",{"_index":1447,"title":{},"body":{"components/EntryListComponent.html":{}}}],["string.replac",{"_index":670,"title":{},"body":{"injectables/AuthService.html":{}}}],["stringfield",{"_index":3086,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["stringfield(label",{"_index":3101,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["structur",{"_index":1551,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["stuff",{"_index":2225,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["style",{"_index":2623,"title":{},"body":{"components/MockupComponent.html":{},"components/PopComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["style_format",{"_index":4559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles.scss",{"_index":4643,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["styleselect",{"_index":4580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleurl",{"_index":28,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultOutputComponent.html":{},"components/EntryListComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["sub",{"_index":802,"title":{},"body":{"classes/Config.html":{}}}],["subbranch",{"_index":2051,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["subclass",{"_index":2452,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["subfold",{"_index":4215,"title":{},"body":{"index.html":{}}}],["subject",{"_index":527,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"additional-documentation/core-classes.html":{}}}],["submenu",{"_index":2555,"title":{},"body":{"components/MenuComponent.html":{}}}],["submit",{"_index":2414,"title":{},"body":{"components/LoginFormComponent.html":{},"changelog.html":{}}}],["subscrib",{"_index":888,"title":{},"body":{"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LocationSearchComponent.html":{},"components/PaginationComponent.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["subscribe((chang",{"_index":2004,"title":{},"body":{"components/InputComponent.html":{}}}],["subscribe((day",{"_index":1158,"title":{},"body":{"interfaces/Day.html":{}}}],["subscribe((upd",{"_index":1472,"title":{},"body":{"components/EntryListComponent.html":{}}}],["subscribe(editor",{"_index":3714,"title":{},"body":{"components/TinymceComponent.html":{}}}],["subscribe(timespan",{"_index":1161,"title":{},"body":{"interfaces/Day.html":{}}}],["subscript",{"_index":4451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["substract",{"_index":4452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subtract(weeksbefor",{"_index":1204,"title":{},"body":{"interfaces/Day.html":{}}}],["succes",{"_index":2447,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["success",{"_index":2388,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["success/error",{"_index":2786,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["successfulli",{"_index":941,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["such",{"_index":1552,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["suitabl",{"_index":1558,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["sunni",{"_index":4453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super",{"_index":350,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/ModelConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["super(loaderservic",{"_index":1462,"title":{},"body":{"components/EntryListComponent.html":{}}}],["super(popservic",{"_index":496,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["super(sdk",{"_index":1945,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.load",{"_index":1936,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.load(id).then(this.use.bind(thi",{"_index":1949,"title":{},"body":{"directives/ImageDirective.html":{}}}],["superscript",{"_index":4454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":186,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"modules.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["sure",{"_index":62,"title":{},"body":{"components/AceComponent.html":{},"injectables/CrudService.html":{},"components/LoaderComponent.html":{},"interfaces/Update.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["svg",{"_index":4264,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":939,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoaderComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["switchmap",{"_index":1796,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["symbol",{"_index":835,"title":{"interfaces/Symbol.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["symbol.cont",{"_index":3609,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbol.interfac",{"_index":3579,"title":{},"body":{"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{}}}],["symbol.nam",{"_index":3607,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbol.pip",{"_index":3574,"title":{},"body":{"modules/SymbolModule.html":{}}}],["symbol.servic",{"_index":3572,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"changelog.html":{}}}],["symbol/symbol.interfac",{"_index":1901,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{}}}],["symbol/symbol.modul",{"_index":1727,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["symbol/symbol.servic",{"_index":1918,"title":{},"body":{"injectables/IconService.html":{},"components/InputErrorsComponent.html":{}}}],["symbolmodul",{"_index":1711,"title":{"modules/SymbolModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["symbolpip",{"_index":3573,"title":{"injectables/SymbolPipe.html":{}},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"coverage.html":{}}}],["symbols.map(symbol",{"_index":3610,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservic",{"_index":836,"title":{"injectables/SymbolService.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"injectables/IconService.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["symbolservice.resolv",{"_index":3578,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["symlink",{"_index":4199,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["symlinks.sh",{"_index":4210,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["sync",{"_index":3153,"title":{},"body":{"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["synchron",{"_index":4457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":982,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["t",{"_index":732,"title":{},"body":{"classes/Collection.html":{},"interfaces/ItemConfig.html":{}}}],["t\\=(?:[0",{"_index":4599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tab",{"_index":3615,"title":{},"body":{"components/TabComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["tab'",{"_index":3620,"title":{},"body":{"components/TabComponent.html":{}}}],["tab'},{'nam",{"_index":282,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["tab.activ",{"_index":3669,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.component.html",{"_index":3617,"title":{},"body":{"components/TabComponent.html":{}}}],["tab.component.scss",{"_index":3616,"title":{},"body":{"components/TabComponent.html":{}}}],["tab.el.nativeelement.getattribute('select",{"_index":3664,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.label",{"_index":3672,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.par",{"_index":3663,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.rout",{"_index":3659,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab/tab.compon",{"_index":3652,"title":{},"body":{"components/TabsComponent.html":{},"modules/UtilityModule.html":{}}}],["tabcompon",{"_index":281,"title":{"components/TabComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["tabl",{"_index":1134,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["table_class_list",{"_index":4545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table_default_attribut",{"_index":4543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table_toolbar",{"_index":4542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":4159,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":4474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabs'},{'nam",{"_index":284,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["tabs.component.html",{"_index":3638,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs.component.scss",{"_index":3637,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs/tabs.compon",{"_index":3630,"title":{},"body":{"components/TabComponent.html":{},"modules/UtilityModule.html":{}}}],["tabscompon",{"_index":283,"title":{"components/TabsComponent.html":{},"additional-documentation/ui/tabscomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["tag",{"_index":396,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Field.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["tagsfield",{"_index":3087,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["tagsfield(label",{"_index":3103,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["take",{"_index":815,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/core-classes.html":{}}}],["tank",{"_index":4459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tap",{"_index":4352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tape",{"_index":4337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target",{"_index":130,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/EntryListComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/ResourceConfig.html":{},"components/TinymceComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["target[0",{"_index":1467,"title":{},"body":{"components/EntryListComponent.html":{}}}],["target[1",{"_index":1468,"title":{},"body":{"components/EntryListComponent.html":{}}}],["targetid",{"_index":3249,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["targettyp",{"_index":3250,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["task",{"_index":4204,"title":{},"body":{"index.html":{}}}],["tbd",{"_index":4750,"title":{},"body":{"additional-documentation/ui.html":{},"additional-documentation/ui/formcomponent.html":{}}}],["tell",{"_index":1539,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["template::view",{"_index":3176,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["templateid",{"_index":3175,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["templateurl",{"_index":30,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["test",{"_index":3538,"title":{},"body":{"classes/Sorter.html":{},"changelog.html":{},"index.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["test.t",{"_index":4252,"title":{},"body":{"index.html":{}}}],["test@test.d",{"_index":2633,"title":{},"body":{"components/MockupComponent.html":{}}}],["text",{"_index":1270,"title":{},"body":{"components/DefaultOutputComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"interfaces/Symbol.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["textarea",{"_index":3797,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["textbox",{"_index":4590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["textcolor",{"_index":4532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["textcolor_map",{"_index":4546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["that",{"_index":4676,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["theme",{"_index":54,"title":{},"body":{"components/AceComponent.html":{},"miscellaneous/variables.html":{}}}],["themelist.j",{"_index":151,"title":{},"body":{"components/AceComponent.html":{}}}],["then((_entri",{"_index":1009,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["then((_resourc",{"_index":3341,"title":{},"body":{"injectables/ResourceService.html":{}}}],["then((_upload",{"_index":3879,"title":{},"body":{"components/UploadComponent.html":{}}}],["then((asset",{"_index":417,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((assetlist",{"_index":1632,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((avail",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((config",{"_index":1477,"title":{},"body":{"components/EntryListComponent.html":{},"injectables/ModelConfigService.html":{}}}],["then((entri",{"_index":1030,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"interfaces/Update.html":{}}}],["then((loadedentri",{"_index":905,"title":{},"body":{"components/CrudComponent.html":{}}}],["then((method",{"_index":892,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["then((r",{"_index":661,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginFormComponent.html":{}}}],["then((resolvedapi",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((resourc",{"_index":3347,"title":{},"body":{"injectables/ResourceService.html":{}}}],["then((respons",{"_index":1646,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((schema",{"_index":2709,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["then((upload",{"_index":1639,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((us",{"_index":2403,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{}}}],["then(_method",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{}}}],["then(dmassetlist",{"_index":1661,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then(editor",{"_index":3721,"title":{},"body":{"components/TinymceComponent.html":{}}}],["then(list",{"_index":1381,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["then(r",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ResourceDeletePopComponent.html":{},"interfaces/Upload.html":{}}}],["then(result",{"_index":2366,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["then(sourc",{"_index":1870,"title":{},"body":{"injectables/HistoryService.html":{}}}],["then(this.seturl.bind(thi",{"_index":1958,"title":{},"body":{"directives/ImageDirective.html":{}}}],["therefor",{"_index":2049,"title":{},"body":{"interfaces/ItemConfig.html":{},"index.html":{}}}],["thin",{"_index":1412,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this._api",{"_index":3379,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.m",{"_index":3439,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then",{"_index":3415,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then(api",{"_index":3432,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.setclientid(environment.clientid",{"_index":3433,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._toggle.emit(vis",{"_index":3060,"title":{},"body":{"components/PopComponent.html":{}}}],["this.account",{"_index":3375,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.act",{"_index":1301,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["this.activated.next",{"_index":3631,"title":{},"body":{"components/TabComponent.html":{}}}],["this.add(item",{"_index":786,"title":{},"body":{"classes/Collection.html":{}}}],["this.addall(item",{"_index":791,"title":{},"body":{"classes/Collection.html":{}}}],["this.addsystempropertiestofieldconfig(fieldconfig",{"_index":2714,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.api",{"_index":352,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["this.apiresolv",{"_index":3416,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.app.tick",{"_index":3717,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.asset",{"_index":418,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.assetgroup",{"_index":3875,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.assetgroupid",{"_index":3874,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.assetid",{"_index":407,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["this.auth.getallowedmodelmethods(this.model",{"_index":890,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.auth.getallowedresourcemethods(this.rel",{"_index":3279,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.auth.login",{"_index":2402,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.auth.resetpassword(this.email",{"_index":3026,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.autoload",{"_index":408,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["this.bakery.bake().then",{"_index":2793,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.base64uuid",{"_index":3211,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.blockevent(",{"_index":3769,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.calendar.writevalue(valu",{"_index":1102,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["this.canalter(valu",{"_index":1246,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cel",{"_index":1199,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[0",{"_index":1177,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[this.cells.length",{"_index":1178,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cent",{"_index":2310,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.chang",{"_index":3494,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.change.asobserv",{"_index":2884,"title":{},"body":{"classes/Pagination.html":{}}}],["this.change.emit(coord",{"_index":2385,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.change.emit(posit",{"_index":2315,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.change.emit(this.select",{"_index":3504,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.change.emit(this.valu",{"_index":3716,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.change.next(this.config",{"_index":2932,"title":{},"body":{"classes/Pagination.html":{}}}],["this.changed.emit(chang",{"_index":2005,"title":{},"body":{"components/InputComponent.html":{}}}],["this.changes.asobserv",{"_index":1003,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.asobservable().filter((chang",{"_index":1004,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.next",{"_index":1021,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changespan.asobservable().debouncetime(800",{"_index":1160,"title":{},"body":{"interfaces/Day.html":{}}}],["this.changespan.next(this.timespan",{"_index":1176,"title":{},"body":{"interfaces/Day.html":{}}}],["this.checkpermission(`${model}:${method",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.checkpermission(`${this.resolvevariables(permissions[method",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.clean(oldvalu",{"_index":1022,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clean(valu",{"_index":1018,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clear",{"_index":3864,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.clickinside(",{"_index":3497,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.collect",{"_index":2118,"title":{},"body":{"components/ListComponent.html":{}}}],["this.color",{"_index":1190,"title":{},"body":{"interfaces/Day.html":{}}}],["this.colors.length",{"_index":2611,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.colors[_moment.toisostr",{"_index":1191,"title":{},"body":{"interfaces/Day.html":{}}}],["this.colors[this.getlevel(level",{"_index":2610,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.columnclicked.emit($ev",{"_index":503,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.columnclicked.emit(item",{"_index":913,"title":{},"body":{"components/CrudComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.columnclicked.observers.length",{"_index":502,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(compon",{"_index":1337,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.componentinst",{"_index":1999,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance['writevalu",{"_index":2009,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance['writevalue'](valu",{"_index":2010,"title":{},"body":{"components/InputComponent.html":{}}}],["this.config",{"_index":915,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SelectComponent.html":{}}}],["this.config.alwaysloadentri",{"_index":899,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.availables",{"_index":2939,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.fields[target[1",{"_index":1466,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.config.level",{"_index":901,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.method",{"_index":891,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.methods.indexof(method",{"_index":893,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.pag",{"_index":2925,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.popclass",{"_index":916,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.rang",{"_index":2977,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.config.s",{"_index":2922,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.selectmod",{"_index":3491,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.config.solo",{"_index":499,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/SelectComponent.html":{}}}],["this.config[key",{"_index":811,"title":{},"body":{"classes/Config.html":{}}}],["this.config[key][properti",{"_index":812,"title":{},"body":{"classes/Config.html":{}}}],["this.config[relationnam",{"_index":3112,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.configinput",{"_index":2115,"title":{},"body":{"components/ListComponent.html":{}}}],["this.configure('model",{"_index":2683,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.container.nativeel",{"_index":3719,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.container.nativeelement.innerhtml",{"_index":2520,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.container.nativeelement.styl",{"_index":2982,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.control",{"_index":1995,"title":{},"body":{"components/InputComponent.html":{}}}],["this.control.errors[key",{"_index":2027,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.create(model",{"_index":1008,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["this.create(rel",{"_index":3340,"title":{},"body":{"injectables/ResourceService.html":{}}}],["this.createclicked.next",{"_index":3284,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.createclicked.observers.length",{"_index":3283,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.created(this.symbol.resolve('field.label.cr",{"_index":3138,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.crud.chang",{"_index":1471,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.crud.save(model",{"_index":2732,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.custom",{"_index":3869,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.dat",{"_index":1227,"title":{},"body":{"interfaces/Day.html":{}}}],["this.datamanag",{"_index":3428,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.datamanager.datamanager(this._api.datamanagerid",{"_index":3411,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.date.clone().add(valu",{"_index":1242,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dayclicked.emit(_mo",{"_index":1235,"title":{},"body":{"interfaces/Day.html":{}}}],["this.deactivated.next",{"_index":3632,"title":{},"body":{"components/TabComponent.html":{}}}],["this.defaulttim",{"_index":2868,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.delay",{"_index":3062,"title":{},"body":{"components/PopComponent.html":{}}}],["this.deleted.next(r",{"_index":3304,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.desktopnotification(inst",{"_index":2856,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.dis",{"_index":1299,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["this.disabledragend",{"_index":1184,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disabledragstart",{"_index":1183,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disableupdates(key",{"_index":1868,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.displaydate(tru",{"_index":3803,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.drag",{"_index":1164,"title":{},"body":{"interfaces/Day.html":{}}}],["this.drag.asobservable().debouncetime(100",{"_index":1157,"title":{},"body":{"interfaces/Day.html":{}}}],["this.drag.next(day",{"_index":1188,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.first",{"_index":1166,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.last",{"_index":1168,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dropday(day",{"_index":1159,"title":{},"body":{"interfaces/Day.html":{}}}],["this.ecasset",{"_index":406,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.ecdropzone.emit(",{"_index":1306,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["this.ecimag",{"_index":1946,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.ecimage.assetid",{"_index":1947,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.editor",{"_index":152,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.editor.buttons.image.onclick(tru",{"_index":3726,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.destroy",{"_index":2526,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.getcont",{"_index":2524,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.on('chang",{"_index":3728,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.on('dblclick",{"_index":3724,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.session.setmode('ace/mod",{"_index":177,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setcontent(this.valu",{"_index":3723,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.settheme('ace/them",{"_index":178,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setvalue(this.valu",{"_index":161,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.subscribe('editableinput",{"_index":2523,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.elementref.nativeelement.src",{"_index":1960,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.emitter.asobserv",{"_index":2849,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.emitter.next(inst",{"_index":2857,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.enableupdates(resourc",{"_index":1869,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.endless",{"_index":1374,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entri",{"_index":1409,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entryid",{"_index":1407,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entrylist",{"_index":1384,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.follownextlink().then(list",{"_index":1390,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.followprevlink().then(list",{"_index":1391,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.getallitem",{"_index":1385,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasfirstlink",{"_index":1393,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasnextlink",{"_index":1392,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrypop.edit(loadedentri",{"_index":906,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.environ",{"_index":3382,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.environment.clientid",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.error",{"_index":1492,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.cod",{"_index":1494,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.emit(err",{"_index":2475,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.error.messag",{"_index":1495,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.errormessag",{"_index":2472,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.ev",{"_index":3870,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.eventsources[key",{"_index":1871,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[key].clos",{"_index":1874,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[rel",{"_index":1867,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.fb.group",{"_index":2468,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.field",{"_index":1992,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["this.field.init",{"_index":2007,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.init(this.componentinst",{"_index":2008,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.input",{"_index":1998,"title":{},"body":{"components/InputComponent.html":{}}}],["this.fieldhost.viewcontainerref",{"_index":1338,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.fileinput",{"_index":3863,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.click",{"_index":3865,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.valu",{"_index":3872,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.uploadassets(",{"_index":3877,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.uploadfiles(",{"_index":3878,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.filestoupload",{"_index":3868,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.form",{"_index":2467,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form.get('password').setvalu",{"_index":2474,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form.reset",{"_index":2482,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form.valid",{"_index":2480,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.format",{"_index":1229,"title":{},"body":{"interfaces/Day.html":{}}}],["this.generatefieldconfig(model",{"_index":2734,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.geocodelatlng",{"_index":1825,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.geocodeservice.autocompleteaddress(this.searchinput.nativeel",{"_index":2384,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.geocodeservice.getnearestaddress(valu",{"_index":2365,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.get(model",{"_index":2706,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.get(model).field",{"_index":2707,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.get(nam",{"_index":3608,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.getaccount",{"_index":3426,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.getalgorithm(item",{"_index":3558,"title":{},"body":{"classes/Sorter.html":{}}}],["this.getapi(email",{"_index":648,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getcolor(1",{"_index":2613,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getdaycolor(d",{"_index":1218,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getformdata(fil",{"_index":1631,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.getmonth(date.clon",{"_index":1231,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getmonth(this.date.clon",{"_index":1200,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getpag",{"_index":2937,"title":{},"body":{"classes/Pagination.html":{}}}],["this.getpath(item",{"_index":2605,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getpermission().then",{"_index":2865,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.getvalidators(field",{"_index":1753,"title":{},"body":{"injectables/FormService.html":{}}}],["this.group",{"_index":1994,"title":{},"body":{"components/InputComponent.html":{}}}],["this.group.get(this.field.properti",{"_index":1996,"title":{},"body":{"components/InputComponent.html":{}}}],["this.has(item",{"_index":782,"title":{},"body":{"classes/Collection.html":{}}}],["this.hexcolor",{"_index":3128,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.hid",{"_index":2274,"title":{},"body":{"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["this.host.nativeelement.classlist.add('i",{"_index":2267,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.host.nativeelement.classlist.remove('i",{"_index":2268,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.hov",{"_index":2607,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.hoverdelay",{"_index":2616,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.icon",{"_index":1902,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.get(this.nam",{"_index":1903,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.registri",{"_index":1907,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.set(emojiicon",{"_index":1899,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["this.iconservice.use(emojiicon",{"_index":1898,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["this.id",{"_index":1584,"title":{},"body":{"classes/Field.html":{}}}],["this.index(item",{"_index":778,"title":{},"body":{"classes/Collection.html":{}}}],["this.init",{"_index":179,"title":{},"body":{"components/AceComponent.html":{},"injectables/SdkService.html":{}}}],["this.initfilt",{"_index":1479,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.initfilterquery((properti",{"_index":1464,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.initmethod",{"_index":3277,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.initselect",{"_index":3488,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.inittab",{"_index":3667,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.input",{"_index":175,"title":{},"body":{"components/AceComponent.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.input.propagatechange(this.editor.getvalu",{"_index":176,"title":{},"body":{"components/AceComponent.html":{}}}],["this.input.propagatechange(this.valu",{"_index":4732,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.input.propagatechange(valu",{"_index":2362,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.isactive(item",{"_index":2612,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.isfirst",{"_index":2929,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isimmutableproperty(key",{"_index":1028,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.islast",{"_index":2928,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isnewasset(asset[0",{"_index":1620,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.isselected(item",{"_index":2608,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.issystemproperty(properti",{"_index":2712,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.item",{"_index":774,"title":{},"body":{"classes/Collection.html":{},"directives/EntriesDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/OutputComponent.html":{}}}],["this.item.getfield(this.properti",{"_index":1993,"title":{},"body":{"components/InputComponent.html":{}}}],["this.itemclick.emit(item",{"_index":3502,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.items.concat(item",{"_index":1386,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.filter((item",{"_index":1387,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.find((_item",{"_index":1388,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.indexof(item",{"_index":777,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.length",{"_index":785,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.push(item",{"_index":776,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(this.index(item",{"_index":787,"title":{},"body":{"classes/Collection.html":{}}}],["this.label",{"_index":1587,"title":{},"body":{"classes/Field.html":{}}}],["this.level",{"_index":1408,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.list",{"_index":2116,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/SelectComponent.html":{}}}],["this.list.config",{"_index":2120,"title":{},"body":{"components/ListComponent.html":{},"components/SelectComponent.html":{}}}],["this.list.config.alwaysshowhead",{"_index":2129,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.disablehead",{"_index":2126,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.selectmod",{"_index":2123,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.list.config.titl",{"_index":2128,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.fields.length",{"_index":2127,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.filter(properti",{"_index":2187,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.isempti",{"_index":2130,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.items.indexof(this.selection.items[0",{"_index":2134,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.items.length",{"_index":2137,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.items[index",{"_index":2131,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.load",{"_index":1473,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.list.pag",{"_index":2209,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.load",{"_index":410,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"components/UploadComponent.html":{}}}],["this.loadcomponent(this.compon",{"_index":1997,"title":{},"body":{"components/InputComponent.html":{}}}],["this.loadcomponent(this.field.output",{"_index":2873,"title":{},"body":{"components/OutputComponent.html":{}}}],["this.loaded.emit(asset",{"_index":419,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.loaded.emit(entri",{"_index":1410,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.loader.wait(delet",{"_index":3306,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.loader.wait(login",{"_index":2409,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{}}}],["this.loader.wait(reset",{"_index":3039,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.loader.wait(this.promis",{"_index":1383,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.loaderservice.use(this.globalload",{"_index":2253,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.loaderservice.wait(load",{"_index":1881,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(new",{"_index":2254,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.loaderservice.wait(this.loadentry(item",{"_index":914,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.loaderservice.wait(this.promises[key",{"_index":1873,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(this.uploadpromis",{"_index":3885,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.localload",{"_index":2257,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.localloader.wait(new",{"_index":2258,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.lockform",{"_index":3035,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.login(this.form.valu",{"_index":2481,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.map.setvalue(valu",{"_index":2359,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.map.valu",{"_index":2363,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.maploader.load().then",{"_index":1824,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.matches(chang",{"_index":1005,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.mod",{"_index":156,"title":{},"body":{"components/AceComponent.html":{}}}],["this.model",{"_index":889,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/MediumEditorComponent.html":{}}}],["this.modelconfig.generateconfig(this.model",{"_index":1476,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.modelconfig.set('muffin",{"_index":4694,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.monthformat",{"_index":1155,"title":{},"body":{"interfaces/Day.html":{}}}],["this.mustreload(item",{"_index":900,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.nam",{"_index":1905,"title":{},"body":{"components/IconComponent.html":{}}}],["this.nestedcrudconfig",{"_index":3811,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.newassetlistconfig",{"_index":1636,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.ngzone.run",{"_index":1802,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.noapi",{"_index":3412,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noapi(api",{"_index":3434,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noclientid",{"_index":645,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.notif",{"_index":908,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.notifications.add(notif",{"_index":2816,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.emit",{"_index":537,"title":{},"body":{"injectables/AuthGuard.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.notifications.remove(notif",{"_index":2820,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.removeall(notification.hid",{"_index":2806,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.defaulttim",{"_index":2803,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.emit",{"_index":907,"title":{},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.notificationservice.emitter$.subscribe((notif",{"_index":2804,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.observeelement(el",{"_index":1816,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.omittedfields.indexof(properti",{"_index":2686,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.opt",{"_index":1380,"title":{},"body":{"directives/EntriesDirective.html":{},"components/MediumEditorComponent.html":{},"components/UploadComponent.html":{}}}],["this.options.pag",{"_index":1375,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.options.placehold",{"_index":2521,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.pag",{"_index":2926,"title":{},"body":{"classes/Pagination.html":{},"components/PaginationComponent.html":{}}}],["this.page.first.nativeelement.clientwidth",{"_index":2974,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagecontain",{"_index":2971,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagecontainer.nativeelement.styl",{"_index":2979,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pages.length",{"_index":2927,"title":{},"body":{"classes/Pagination.html":{}}}],["this.pagin",{"_index":2968,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagination.change$.subscribe((config",{"_index":2969,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagination.getpag",{"_index":2975,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.par",{"_index":2602,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parent.getlevel(++level",{"_index":2609,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parent.getpath(this.rout",{"_index":2620,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parsetype(schema.properties[property].titl",{"_index":2718,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.placehold",{"_index":1586,"title":{},"body":{"classes/Field.html":{},"components/MediumEditorComponent.html":{}}}],["this.pop",{"_index":3285,"title":{},"body":{"components/ResourceCrudComponent.html":{},"components/SelectComponent.html":{}}}],["this.pop.cr",{"_index":3286,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.edit(item.getbodi",{"_index":3280,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.hid",{"_index":3303,"title":{},"body":{"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/UploadComponent.html":{}}}],["this.pop.show",{"_index":3307,"title":{},"body":{"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{}}}],["this.pop.toggl",{"_index":3503,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.pops.foreach((pop",{"_index":2185,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.popservice.stack.add(thi",{"_index":3061,"title":{},"body":{"components/PopComponent.html":{}}}],["this.popservice.stack.remove(thi",{"_index":3063,"title":{},"body":{"components/PopComponent.html":{}}}],["this.promis",{"_index":415,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.promises[key",{"_index":1866,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.propagatechang",{"_index":181,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.propagatechange(chang",{"_index":2006,"title":{},"body":{"components/InputComponent.html":{}}}],["this.propagatechange(this.editor.getvalu",{"_index":166,"title":{},"body":{"components/AceComponent.html":{}}}],["this.propagatechange(this.selection.getvalu",{"_index":3505,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.propagatechange(this.valu",{"_index":2525,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.propagatechange(valu",{"_index":2361,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.properti",{"_index":1588,"title":{},"body":{"classes/Field.html":{},"components/InputComponent.html":{}}}],["this.property}_${date.now",{"_index":1585,"title":{},"body":{"classes/Field.html":{}}}],["this.readi",{"_index":154,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["this.ready.then",{"_index":3410,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.ready.then((editor",{"_index":163,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{}}}],["this.ready.then(editor",{"_index":3731,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.redirect.next",{"_index":547,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.registri",{"_index":3600,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry.find(symbol",{"_index":3606,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry.indexof(this.get(symbol.nam",{"_index":3611,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry.push(symbol",{"_index":3612,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry[index",{"_index":3613,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.rel",{"_index":3278,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.remove(item",{"_index":788,"title":{},"body":{"classes/Collection.html":{}}}],["this.removeall(undefin",{"_index":789,"title":{},"body":{"classes/Collection.html":{}}}],["this.resourc",{"_index":3294,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.resourceconfig.get('legacyasset",{"_index":1649,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.resourceconfig.get(rel",{"_index":673,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resourceconfig.get(relation).permiss",{"_index":674,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resourceservice.chang",{"_index":1475,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.resourceservice.changes.next",{"_index":1641,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"interfaces/Upload.html":{}}}],["this.resourceservice.del(this.rel",{"_index":3301,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.roots[this._api.datamanagerid",{"_index":3409,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.rout",{"_index":2595,"title":{},"body":{"components/MenuComponent.html":{},"components/TabsComponent.html":{}}}],["this.route.children",{"_index":2596,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.events.subscribe((ev",{"_index":3654,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.navigate(['profil",{"_index":4692,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["this.router.navigate([tab.rout",{"_index":3670,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.url",{"_index":2604,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.url.indexof(path",{"_index":2606,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.url.split('?')[0",{"_index":1847,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.sanitized.bypasssecuritytrusthtml(valu",{"_index":3360,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["this.schemarequests[model",{"_index":3436,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk",{"_index":1481,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.sdk.account",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.emailavail",{"_index":4610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.sdk.accounts.m",{"_index":663,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.signup(email",{"_index":660,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api",{"_index":412,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"components/UploadComponent.html":{}}}],["this.sdk.api.asset(unresolved[0]).then(asset",{"_index":1663,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.assetlist",{"_index":1664,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createasset(data",{"_index":1644,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createassets(data",{"_index":1645,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createentry(model",{"_index":1029,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["this.sdk.api.dmassetlist(assetgroupid",{"_index":1658,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.emailavailable(email",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.entry(this.model",{"_index":903,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntryDirective.html":{}}}],["this.sdk.api.entrylist(this.model",{"_index":1379,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.sdk.api.logout",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.m",{"_index":665,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.signup(email",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.getschema(model",{"_index":2708,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.sdk.init",{"_index":655,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.ready.then((us",{"_index":666,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.ready.then(account",{"_index":3394,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk.ready.then(us",{"_index":536,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.sdk.root.then((root",{"_index":351,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["this.sdk.sess",{"_index":652,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.session.logout().catch",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.us",{"_index":667,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.search.clear",{"_index":2358,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.search.searchinput.nativeelement.valu",{"_index":2364,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.searchinput",{"_index":2382,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.searchinput.nativeelement.valu",{"_index":2383,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.select",{"_index":497,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{}}}],["this.select(match",{"_index":3661,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.select(tab",{"_index":3665,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(event.url",{"_index":3655,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(this.router.url",{"_index":3666,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selected.deactiv",{"_index":3668,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selected.emit(select",{"_index":2122,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selected.startof('day').diff(_mo",{"_index":1239,"title":{},"body":{"interfaces/Day.html":{}}}],["this.selectindex(index",{"_index":2136,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.isempti",{"_index":2133,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.remove(item",{"_index":3496,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.selection.removeal",{"_index":2135,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.replacewith(list.item",{"_index":3500,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.selection.select(this.list.items[index",{"_index":2132,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.select(upload.item",{"_index":500,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.selection.toggle($ev",{"_index":505,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.selection.toggle(item",{"_index":2124,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/SelectComponent.html":{}}}],["this.selection.toggleall(upload.item",{"_index":501,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.selection.update$.subscrib",{"_index":3493,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.selection.update$.subscribe((select",{"_index":2121,"title":{},"body":{"components/ListComponent.html":{}}}],["this.sess",{"_index":3419,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.session.setclientid(environment.clientid",{"_index":3422,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.set",{"_index":3720,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.setd",{"_index":1181,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(_mo",{"_index":1233,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(day.date.clone().subtract(1",{"_index":1180,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(mo",{"_index":1248,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.d",{"_index":1196,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.date.clone().add(valu",{"_index":1247,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.select",{"_index":1194,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setmode(this.mod",{"_index":157,"title":{},"body":{"components/AceComponent.html":{}}}],["this.sets[key",{"_index":3603,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.sets[object.keys(this.sets)[0",{"_index":3602,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.settheme(this.them",{"_index":159,"title":{},"body":{"components/AceComponent.html":{}}}],["this.settotal(tot",{"_index":2924,"title":{},"body":{"classes/Pagination.html":{}}}],["this.setvalue(posit",{"_index":2314,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.show",{"_index":2270,"title":{},"body":{"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["this.solo",{"_index":2125,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/SelectComponent.html":{}}}],["this.sorttype[types[0",{"_index":3556,"title":{},"body":{"classes/Sorter.html":{}}}],["this.spanchanged.emit(this.timespan",{"_index":1162,"title":{},"body":{"interfaces/Day.html":{}}}],["this.stack.add(promis",{"_index":2269,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.stack.items.length",{"_index":3078,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.items[this.stack.items.length",{"_index":3080,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.remove(latestpop",{"_index":3082,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.removeal",{"_index":2275,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.stringfield(this.symbol.resolve('field.label.nam",{"_index":3157,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.submit",{"_index":2479,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.success.emit",{"_index":3036,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.success.emit(_upload",{"_index":3880,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.success.emit(r",{"_index":2483,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.success.emit(us",{"_index":2405,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol",{"_index":3139,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.group",{"_index":3166,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.haspendingemail",{"_index":3162,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.languag",{"_index":3163,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.st",{"_index":3169,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('app.field.label.app",{"_index":3184,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('asset.field.label.assetgroupid",{"_index":3199,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('asset.field.label.fil",{"_index":3195,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('asset.field.label.thumb",{"_index":3191,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('client.field.label.callbackurl",{"_index":3228,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('client.field.label.clientid",{"_index":3226,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmaccount.field.label.haspassword",{"_index":3171,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmaccount.field.label.pend",{"_index":3173,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.assetid",{"_index":3217,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.capt",{"_index":3219,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.dupl",{"_index":3220,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.fil",{"_index":3212,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.thumbnail",{"_index":3222,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.typ",{"_index":3224,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('error",{"_index":1493,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.symbol.resolve('error.delet",{"_index":3305,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.symbol.resolve('error.input",{"_index":2028,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.input.invalid",{"_index":2029,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.load",{"_index":911,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.symbol.resolve('error.upload",{"_index":3884,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve('field.creator.ecus",{"_index":3824,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('field.label.config",{"_index":3131,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.cr",{"_index":2690,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.descript",{"_index":3130,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.email",{"_index":3158,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.id",{"_index":2688,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.label",{"_index":3235,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.modifi",{"_index":2695,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.nam",{"_index":3234,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.password",{"_index":3160,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.shortid",{"_index":3183,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.titl",{"_index":3194,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.typ",{"_index":3246,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('login.error",{"_index":2407,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('login.success",{"_index":2404,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('moment.format.d",{"_index":1113,"title":{},"body":{"pipes/DatetimePipe.html":{},"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('moment.format.month",{"_index":1156,"title":{},"body":{"interfaces/Day.html":{}}}],["this.symbol.resolve('moment.format.tim",{"_index":3822,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('platform.field.label.platform",{"_index":3187,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('platform.field.label.platformtyp",{"_index":3189,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('role.field.label.account",{"_index":3236,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('role.field.label.addregist",{"_index":3240,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('role.field.label.addunregist",{"_index":3242,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('success.delet",{"_index":3302,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.symbol.resolve('success.upload",{"_index":3881,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve('template.field.label.templ",{"_index":3177,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('template.field.label.vers",{"_index":3179,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve(nam",{"_index":3580,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["this.tab",{"_index":3656,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.find((tab",{"_index":3658,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.foreach((tab",{"_index":3662,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tagsfield(this.symbol.resolve('account.field.label.permiss",{"_index":3165,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('asset.field.label.tag",{"_index":3196,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('client.field.label.disablestrategi",{"_index":3232,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('client.field.label.tokenmethod",{"_index":3230,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('datamanager.field.label.publicassetright",{"_index":3135,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('field.label.local",{"_index":3133,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.them",{"_index":158,"title":{},"body":{"components/AceComponent.html":{}}}],["this.thumb",{"_index":1955,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.tim",{"_index":2802,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.timeout",{"_index":2614,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.timespan",{"_index":1175,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timespan[1",{"_index":1217,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timestamp",{"_index":2272,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.tot",{"_index":2930,"title":{},"body":{"classes/Pagination.html":{}}}],["this.translatecontain",{"_index":2970,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.tre",{"_index":2096,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["this.typ",{"_index":2760,"title":{},"body":{"classes/Notification.html":{}}}],["this.typeconfig.displayaccount",{"_index":2697,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.displayd",{"_index":2691,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["this.typeconfig.get(type.nam",{"_index":2726,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.groupd",{"_index":2692,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["this.types[typ",{"_index":3816,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.upd",{"_index":1491,"title":{},"body":{"components/ErrorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.update(model",{"_index":1007,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["this.update(rel",{"_index":3339,"title":{},"body":{"injectables/ResourceService.html":{}}}],["this.update.asobserv",{"_index":734,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(thi",{"_index":783,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(this.editor",{"_index":3730,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.updateaddress",{"_index":2360,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.upload(",{"_index":3871,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromis",{"_index":3876,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromise.then",{"_index":3886,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploads.emit(upload",{"_index":1640,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.url",{"_index":1959,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.us",{"_index":3427,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.use(this.ecimag",{"_index":1948,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.use(this.sets[key",{"_index":3605,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.use(valu",{"_index":3495,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.usedatamanager(environment.datamanagerid",{"_index":3425,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.usedesktopnotif",{"_index":2855,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.uselist(list",{"_index":1382,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.uuid",{"_index":3124,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.valu",{"_index":160,"title":{},"body":{"components/AceComponent.html":{},"components/LocationMapComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["this.value.length",{"_index":3499,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.vanishdelay",{"_index":2618,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.vis",{"_index":479,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["this.writevalue(this.valu",{"_index":3501,"title":{},"body":{"components/SelectComponent.html":{}}}],["those",{"_index":1579,"title":{},"body":{"classes/Field.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/core-classes/field.html":{}}}],["thought",{"_index":4763,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["three",{"_index":2660,"title":{},"body":{"injectables/ModelConfigService.html":{},"index.html":{}}}],["through",{"_index":1852,"title":{},"body":{"injectables/HistoryService.html":{},"components/PasswordResetComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["throw",{"_index":413,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["thrown",{"_index":1490,"title":{},"body":{"components/ErrorComponent.html":{}}}],["thumb",{"_index":1927,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["thumbnail",{"_index":3221,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["thumbsiz",{"_index":3204,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["tick",{"_index":3682,"title":{},"body":{"components/TinymceComponent.html":{}}}],["ticket",{"_index":4487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":484,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["timeout",{"_index":2540,"title":{},"body":{"components/MenuComponent.html":{}}}],["timespan",{"_index":1130,"title":{},"body":{"interfaces/Day.html":{}}}],["timestamp",{"_index":2230,"title":{},"body":{"components/LoaderComponent.html":{}}}],["tinymc",{"_index":3674,"title":{"additional-documentation/tinymce.html":{}},"body":{"components/TinymceComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinymce.html":{}}}],["tinymce'},{'nam",{"_index":286,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["tinymce.component.html",{"_index":3677,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce.component.scss",{"_index":3676,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce.init",{"_index":3718,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autolink",{"_index":3707,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autores",{"_index":3702,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/cod",{"_index":3703,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/colorpick",{"_index":3711,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/contextmenu",{"_index":3709,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/fullscreen",{"_index":3699,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/link",{"_index":3704,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/list",{"_index":3708,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/past",{"_index":3700,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/t",{"_index":3705,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/templ",{"_index":3701,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/textcolor",{"_index":3710,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/visualblock",{"_index":3706,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/themes/modern",{"_index":3698,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/tinymce.compon",{"_index":3738,"title":{},"body":{"modules/TinymceModule.html":{}}}],["tinymcecompon",{"_index":285,"title":{"components/TinymceComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tinymcemodul",{"_index":3733,"title":{"modules/TinymceModule.html":{}},"body":{"modules/TinymceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinymce.html":{}}}],["titel",{"_index":1615,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["titel&#39",{"_index":2677,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["titl",{"_index":394,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/item.html":{}}}],["titlefield",{"_index":3145,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["today",{"_index":1126,"title":{},"body":{"interfaces/Day.html":{}}}],["todo",{"_index":167,"title":{},"body":{"components/AceComponent.html":{},"classes/Config.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["togeth",{"_index":1559,"title":{},"body":{"classes/Field.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/field.html":{}}}],["toggl",{"_index":441,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ListItemsComponent.html":{},"components/PopComponent.html":{},"components/SelectComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["toggle'},{'nam",{"_index":288,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["toggle(",{"_index":3476,"title":{},"body":{"components/SelectComponent.html":{}}}],["toggle(resourc",{"_index":1853,"title":{},"body":{"injectables/HistoryService.html":{}}}],["toggle(vis",{"_index":477,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/PopComponent.html":{}}}],["toggle.component.html",{"_index":3742,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle.component.scss",{"_index":3741,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle/toggle.compon",{"_index":1721,"title":{},"body":{"modules/FormModule.html":{}}}],["togglecompon",{"_index":287,"title":{"components/ToggleComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["token",{"_index":4656,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["tokenmethod",{"_index":3229,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["tommi",{"_index":4767,"title":{},"body":{"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{}}}],["tommy'item",{"_index":4772,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.display('nam",{"_index":4769,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.getvalue('nam",{"_index":4793,"title":{},"body":{"additional-documentation/core-classes/form.html":{}}}],["tommy.group('nam",{"_index":4770,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.resolve('nam",{"_index":4768,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.sort('nam",{"_index":4771,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tool",{"_index":3754,"title":{},"body":{"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["toolbar",{"_index":3753,"title":{},"body":{"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["toolbar'},{'nam",{"_index":290,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["toolbar.component.html",{"_index":3756,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":3755,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar/toolbar.compon",{"_index":3904,"title":{},"body":{"modules/VcModule.html":{}}}],["toolbarcompon",{"_index":289,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/VcModule.html":{},"coverage.html":{},"overview.html":{}}}],["toolbox",{"_index":4462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["top",{"_index":3972,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["total",{"_index":2875,"title":{},"body":{"classes/Pagination.html":{}}}],["totop",{"_index":4498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touch",{"_index":3746,"title":{},"body":{"components/ToggleComponent.html":{}}}],["tower",{"_index":4430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["track",{"_index":1837,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["tranform",{"_index":2057,"title":{},"body":{"components/ListComponent.html":{}}}],["transfer",{"_index":4353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transform",{"_index":1108,"title":{},"body":{"pipes/DatetimePipe.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["transform(array",{"_index":2488,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["transform(field",{"_index":3908,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["transform(item",{"_index":1832,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["transform(nam",{"_index":3576,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["transform(valu",{"_index":1109,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/SafeHtmlPipe.html":{}}}],["transform:translatex",{"_index":2980,"title":{},"body":{"components/PaginationComponent.html":{}}}],["translat",{"_index":2951,"title":{},"body":{"components/PaginationComponent.html":{},"injectables/SymbolPipe.html":{}}}],["translatecontain",{"_index":2945,"title":{},"body":{"components/PaginationComponent.html":{}}}],["translation}px",{"_index":2981,"title":{},"body":{"components/PaginationComponent.html":{}}}],["transpar",{"_index":4504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trash",{"_index":4314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["tree.display('fruit",{"_index":4805,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["tree.display('nam",{"_index":4803,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["tri",{"_index":2387,"title":{},"body":{"components/LoginComponent.html":{}}}],["trigger",{"_index":2079,"title":{},"body":{"components/ListComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/SelectComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["troubl",{"_index":4237,"title":{},"body":{"index.html":{}}}],["true",{"_index":25,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["trust",{"_index":3352,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["ts",{"_index":3417,"title":{},"body":{"injectables/SdkService.html":{},"index.html":{}}}],["tsc/app",{"_index":4250,"title":{},"body":{"index.html":{}}}],["tsconfig",{"_index":4244,"title":{},"body":{"index.html":{}}}],["tsconfig.json",{"_index":4233,"title":{},"body":{"index.html":{}}}],["tslint:dis",{"_index":2111,"title":{},"body":{"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["turn",{"_index":1272,"title":{},"body":{"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{},"interfaces/ListConfig.html":{}}}],["tutori",{"_index":3998,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes.html":{}}}],["twitter",{"_index":4480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":3986,"title":{},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["type",{"_index":64,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["type'",{"_index":3775,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["type.match(/^(\\w*)()?/i",{"_index":2702,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["type.rel",{"_index":2723,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typeconfig",{"_index":1616,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{}}}],["typeconfigservic",{"_index":1044,"title":{"injectables/TypeConfigService.html":{}},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["typed.isvalid",{"_index":1117,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["typeof",{"_index":1654,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["types.length",{"_index":3555,"title":{},"body":{"classes/Sorter.html":{}}}],["types[0",{"_index":3557,"title":{},"body":{"classes/Sorter.html":{}}}],["typescript",{"_index":773,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes.html":{}}}],["typic",{"_index":2785,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["uglifyj",{"_index":4235,"title":{},"body":{"index.html":{}}}],["ui",{"_index":840,"title":{"additional-documentation/ui.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{},"components/ResourceCrudComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["ui/src/list/list.component.html",{"_index":1415,"title":{},"body":{"components/EntryListComponent.html":{}}}],["uimodul",{"_index":554,"title":{"modules/UiModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["ul",{"_index":2963,"title":{},"body":{"components/PaginationComponent.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":973,"title":{},"body":{"injectables/CrudService.html":{},"injectables/GeocodeService.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{}}}],["under",{"_index":1856,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/Symbol.html":{}}}],["underlin",{"_index":4463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undo",{"_index":4494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unexpect",{"_index":2721,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["ungültig",{"_index":3805,"title":{},"body":{"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["uniqu",{"_index":736,"title":{},"body":{"classes/Collection.html":{},"interfaces/Symbol.html":{}}}],["unit",{"_index":4256,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["unresolv",{"_index":1652,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["unresolved.length",{"_index":1656,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["untertitel",{"_index":4562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["until",{"_index":2238,"title":{},"body":{"components/LoaderComponent.html":{}}}],["up",{"_index":961,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/item.html":{}}}],["updat",{"_index":717,"title":{"interfaces/Update.html":{}},"body":{"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/selectcomponent.html":{}}}],["update(model",{"_index":991,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["update(rel",{"_index":3332,"title":{},"body":{"injectables/ResourceService.html":{}}}],["updateaddress",{"_index":2339,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["updateon",{"_index":1756,"title":{},"body":{"injectables/FormService.html":{}}}],["updates",{"_index":2879,"title":{},"body":{"classes/Pagination.html":{},"components/PaginationComponent.html":{}}}],["updatesize(s",{"_index":2911,"title":{},"body":{"classes/Pagination.html":{}}}],["updatesize(valu",{"_index":2956,"title":{},"body":{"components/PaginationComponent.html":{}}}],["upload",{"_index":292,"title":{"interfaces/Upload.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["upload(",{"_index":3854,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.component.html",{"_index":3835,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.ignoredupl",{"_index":3889,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.includeassetidinpath",{"_index":3888,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.preservefilenam",{"_index":3887,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload/upload.compon",{"_index":1691,"title":{},"body":{"modules/FilesModule.html":{}}}],["uploadasset",{"_index":1671,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadassets(",{"_index":1677,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadcompon",{"_index":291,"title":{"components/UploadComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uploadfil",{"_index":1672,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadfiles(",{"_index":1643,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["uploadpromis",{"_index":3838,"title":{},"body":{"components/UploadComponent.html":{}}}],["upon",{"_index":962,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["url",{"_index":1923,"title":{},"body":{"directives/ImageDirective.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["url.split",{"_index":3657,"title":{},"body":{"components/TabsComponent.html":{}}}],["url/id",{"_index":4592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlexpir",{"_index":3201,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["us",{"_index":55,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["usag",{"_index":1560,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["use(asset",{"_index":1941,"title":{},"body":{"directives/ImageDirective.html":{}}}],["use(load",{"_index":2284,"title":{},"body":{"injectables/LoaderService.html":{}}}],["use(symbol",{"_index":3593,"title":{},"body":{"injectables/SymbolService.html":{}}}],["use(valu",{"_index":3478,"title":{},"body":{"components/SelectComponent.html":{}}}],["useconfig",{"_index":3448,"title":{},"body":{"components/SelectComponent.html":{}}}],["useconfig(config",{"_index":3480,"title":{},"body":{"components/SelectComponent.html":{}}}],["usedatamanag",{"_index":3371,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedatamanager(shortid",{"_index":3385,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedesktopnotif",{"_index":2829,"title":{},"body":{"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{}}}],["useexist",{"_index":143,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["uselegacyasset",{"_index":932,"title":{},"body":{"interfaces/CrudConfig.html":{},"changelog.html":{}}}],["uselist",{"_index":1348,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["uselist(entrylist",{"_index":1367,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["user",{"_index":513,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"miscellaneous/variables.html":{}}}],["users/kon/workspace/0.entrecode/nwb.admin/node_modules/@ec.components/data/src/auth/auth.service.t",{"_index":4240,"title":{},"body":{"index.html":{}}}],["uses",{"_index":3785,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["useset",{"_index":3583,"title":{},"body":{"injectables/SymbolService.html":{}}}],["useset(key",{"_index":3595,"title":{},"body":{"injectables/SymbolService.html":{}}}],["usevalu",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["utility/utility.modul",{"_index":3832,"title":{},"body":{"modules/UiModule.html":{}}}],["utilitymodul",{"_index":3829,"title":{"modules/UtilityModule.html":{}},"body":{"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["uuid",{"_index":3088,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["ux",{"_index":3008,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["v",{"_index":4492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":1509,"title":{},"body":{"classes/Field.html":{},"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"interfaces/Symbol.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["validatefactori",{"_index":1735,"title":{},"body":{"injectables/FormService.html":{}}}],["validatefactory(field",{"_index":1744,"title":{},"body":{"injectables/FormService.html":{}}}],["validationerror",{"_index":1747,"title":{},"body":{"injectables/FormService.html":{}}}],["validatorfn",{"_index":1743,"title":{},"body":{"injectables/FormService.html":{},"miscellaneous/variables.html":{}}}],["validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0",{"_index":4611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators.push(this.validatefactory(field",{"_index":1764,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.push(validators.requir",{"_index":1763,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.requir",{"_index":2469,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["validators.t",{"_index":4156,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validators/field",{"_index":2463,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["valu",{"_index":38,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["value.hasownproperty(key",{"_index":1025,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["value.latitud",{"_index":3814,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.length",{"_index":1564,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceConfig.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["value.longitud",{"_index":3813,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.map(group",{"_index":3167,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["value.nam",{"_index":3815,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.split",{"_index":3801,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.titl",{"_index":3237,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{}}}],["value.touppercas",{"_index":1563,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["value.url",{"_index":3213,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["value[key",{"_index":1026,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["values.map(valu",{"_index":3223,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["vanishdelay",{"_index":2552,"title":{},"body":{"components/MenuComponent.html":{}}}],["var",{"_index":188,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["variabl",{"_index":618,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/AuthService.html":{},"components/TabsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["variables[key",{"_index":671,"title":{},"body":{"injectables/AuthService.html":{}}}],["variou",{"_index":2224,"title":{},"body":{"components/LoaderComponent.html":{}}}],["vc",{"_index":216,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["vcmodul",{"_index":3898,"title":{"modules/VcModule.html":{}},"body":{"modules/VcModule.html":{},"modules.html":{},"overview.html":{}}}],["vector",{"_index":4461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vergeben",{"_index":4290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["verifi",{"_index":1805,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["versendet",{"_index":3027,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["version",{"_index":3178,"title":{},"body":{"injectables/ResourceConfig.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["versions:npm",{"_index":4208,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":4320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":519,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Config.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/TabsComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/list.html":{}}}],["viabl",{"_index":1576,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["video",{"_index":4464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["view",{"_index":1138,"title":{},"body":{"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"directives/SlotHostDirective.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["viewchild",{"_index":106,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["viewchild('contain",{"_index":147,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{}}}],["viewchild('fileinput",{"_index":3862,"title":{},"body":{"components/UploadComponent.html":{}}}],["viewchild('filterform",{"_index":2183,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["viewchild('globalload",{"_index":2249,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["viewchild('localload",{"_index":2251,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["viewchild('pagecontain",{"_index":2965,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewchild('search",{"_index":2381,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["viewchild(calendarcompon",{"_index":1101,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["viewchild(entrylistcompon",{"_index":882,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(entrypopcompon",{"_index":883,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(loadercompon",{"_index":884,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["viewchild(locationmapcompon",{"_index":2356,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(locationsearchcompon",{"_index":2357,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(popcompon",{"_index":3299,"title":{},"body":{"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/UploadComponent.html":{}}}],["viewchild(resourcelistcompon",{"_index":3275,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(resourcepopcompon",{"_index":3276,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(slothostdirect",{"_index":1335,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewchildren",{"_index":2177,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/PaginationComponent.html":{}}}],["viewchildren('filterpop",{"_index":2182,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["viewchildren('pag",{"_index":2966,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewcontain",{"_index":3522,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["viewcontainerref",{"_index":1317,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/SlotHostDirective.html":{}}}],["viewcontainerref.clear",{"_index":1339,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewcontainerref.createcomponent(componentfactori",{"_index":1340,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewencapsul",{"_index":2109,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{}}}],["viewencapsulation.non",{"_index":2060,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{}}}],["visibl",{"_index":445,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"classes/Field.html":{},"modules/FormModule.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"components/SelectComponent.html":{},"changelog.html":{}}}],["visiblefield",{"_index":3907,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["visiblefieldspip",{"_index":1706,"title":{"pipes/VisibleFieldsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["visualblock",{"_index":4529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":77,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["volum",{"_index":4445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wait",{"_index":2231,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["wait(promis",{"_index":2236,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["wand",{"_index":4491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["want",{"_index":1984,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ace.html":{}}}],["war",{"_index":4286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warn",{"_index":1891,"title":{},"body":{"components/IconComponent.html":{}}}],["water",{"_index":4508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["way",{"_index":59,"title":{},"body":{"components/AceComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"changelog.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["week",{"_index":1097,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["weekday",{"_index":1077,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["wei",{"_index":4553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":4512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weiteren",{"_index":3032,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["well",{"_index":1312,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["werden",{"_index":543,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["wether",{"_index":1522,"title":{},"body":{"classes/Field.html":{},"components/SelectComponent.html":{}}}],["whenev",{"_index":1974,"title":{},"body":{"components/InputComponent.html":{}}}],["whistl",{"_index":4511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whiteboard",{"_index":4327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whole",{"_index":1578,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"injectables/ResourceConfig.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["whose",{"_index":1425,"title":{},"body":{"components/EntryListComponent.html":{},"components/PopComponent.html":{}}}],["width:${(1",{"_index":2983,"title":{},"body":{"components/PaginationComponent.html":{}}}],["wifi",{"_index":4343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wildcard",{"_index":1546,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["window",{"_index":2851,"title":{},"body":{"injectables/NotificationsService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["window.addeventlistener('keydown",{"_index":3074,"title":{},"body":{"injectables/PopService.html":{}}}],["window.notification(notification.titl",{"_index":2866,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.permiss",{"_index":2858,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.requestpermission().then((permiss",{"_index":2859,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["withload",{"_index":820,"title":{"interfaces/WithLoader.html":{}},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"coverage.html":{}}}],["withnotif",{"_index":821,"title":{"interfaces/WithNotifications.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["without",{"_index":944,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/form.html":{}}}],["won't",{"_index":4670,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["wont",{"_index":2444,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["work",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["workaround",{"_index":138,"title":{},"body":{"components/AceComponent.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["wrap",{"_index":11,"title":{},"body":{"components/AceComponent.html":{},"injectables/GeocodeService.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["wrapper",{"_index":4728,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/item.html":{}}}],["write",{"_index":101,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["writevalu",{"_index":52,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["writevalue(valu",{"_index":99,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["written",{"_index":4186,"title":{},"body":{"index.html":{}}}],["wrote",{"_index":3996,"title":{},"body":{"changelog.html":{}}}],["wurst",{"_index":4782,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["wurst'sav",{"_index":4785,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["x",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["x.ui",{"_index":4176,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["x.ui/src/_config",{"_index":4645,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x.ui/src/x.ui",{"_index":4646,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x1f3b5",{"_index":4622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4b0",{"_index":4616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4c5",{"_index":4619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4e7",{"_index":4623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4f7",{"_index":4620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f50d",{"_index":4624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f516",{"_index":4617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f5a5",{"_index":4621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f682;&#x1f683;&#x1f683;&#x1f683",{"_index":354,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["x1f68c",{"_index":4618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xing",{"_index":4481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xlcss/sass/xlcss.scss",{"_index":4644,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["xxxxxxxx",{"_index":4654,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["yarn",{"_index":4640,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ye",{"_index":386,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/EntryListComponent.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["yield",{"_index":969,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["youtub",{"_index":4482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yt",{"_index":4591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yturl",{"_index":4594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yturl[1",{"_index":4602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yyyi",{"_index":1151,"title":{},"body":{"interfaces/Day.html":{}}}],["z",{"_index":2729,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["z0",{"_index":1622,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["z]+))?)/g.exec(yt",{"_index":4600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z]+.)?)(?:youtu\\.?be(?:\\.com)?\\/)(?:embed\\/)?(?:(?:(?:(?:watch\\?)?(?:time_continue=(?:[0",{"_index":4596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z]{2",{"_index":4615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["za",{"_index":1621,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["zone",{"_index":1273,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["zone.j",{"_index":4179,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":317,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["zurücksetzen",{"_index":3038,"title":{},"body":{"components/PasswordResetComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AceComponent.html":{"url":"components/AceComponent.html","title":"component - AceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ace/src/ace.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps ace editor as angular component. Implements ControlValueAccessor!\nhttps://components.entrecode.de/misc/ace\n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-ace\n            \n\n            \n                styleUrls\n                ace.component.scss\n            \n\n\n\n            \n                templateUrl\n                ace.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                input\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                value\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setMode\n                            \n                            \n                                setTheme\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mode\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mode\n                    \n                    \n                        mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:48\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            creates new ace instance if not present and sets mode and theme if given \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Re-inits the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Inits the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setMode\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetMode(mode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Sets the editor mode to the specified language (after ace/mode/) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTheme(theme: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Sets the editor theme to the specified theme (after ace/theme/) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        theme\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:40\n                            \n                        \n\n                \n                    \n                        container element for ace editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:26\n                            \n                        \n\n                \n                    \n                        The ace editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     InputComponent\n\n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:36\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:113\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:34\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:30\n                            \n                        \n\n                \n                    \n                        The current value of the editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ElementRef, ViewChild, Input, OnChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent } from '@ec.components/ui';\n// import 'ace-builds/src-noconflict/ace.js';\n\n/** Workaround that expects ace to be imported somewhere else... */\ndeclare const ace: any;\n/** Wraps ace editor as angular component. Implements ControlValueAccessor!\n *\n * https://components.entrecode.de/misc/ace\n*/\n@Component({\n    selector: 'ec-ace',\n    templateUrl: 'ace.component.html',\n    styleUrls: ['ace.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => AceComponent),\n            multi: true\n        }\n    ]\n})\nexport class AceComponent extends DefaultInputComponent implements ControlValueAccessor, OnInit, OnChanges {\n    /** The ace editor instance */\n    editor: any;\n    /**\n     * The current value of the editor\n     */\n    value = '';\n    /**\n     * Promise that resolves when the editor has been initialized.\n     */\n    ready: Promise;\n    /** Form input component */\n    input: InputComponent;\n    /**\n     * container element for ace editor\n     */\n    @ViewChild('container') container: ElementRef;\n    /**\n     * mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n     */\n    @Input() mode: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-modelist.js\n    /**\n     * theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n     */\n    @Input() theme: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-themelist.js\n\n    /** creates new ace instance if not present and sets mode and theme if given */\n    init() {\n        if (!this.editor) {\n            this.editor = ace.edit(this.container.nativeElement);\n        }\n        this.ready = Promise.resolve(this.editor);\n        if (this.mode) {\n            this.setMode(this.mode);\n        }\n        if (this.theme) {\n            this.setTheme(this.theme);\n        }\n        if (this.value) {\n            this.editor.setValue(this.value, 1);\n        }\n        this.ready.then((editor) => {\n            editor.on('change', (e) => {\n                this.propagateChange(this.editor.getValue());\n                // TODO: find a way to omit this line in custom components and hook to change from input.component or form.component\n                if (this.input) {\n                    this.input.propagateChange(this.editor.getValue());\n                }\n            });\n        });\n    }\n    /** Sets the editor mode to the specified language (after ace/mode/) */\n    setMode(mode: string) {\n        this.mode = mode;\n        if (!this.editor) {\n            return;\n        }\n        this.editor.session.setMode('ace/mode/' + this.mode);\n    }\n\n    /** Sets the editor theme to the specified theme (after ace/theme/) */\n    setTheme(theme: string) {\n        this.theme = theme;\n        if (!this.editor) {\n            return;\n        }\n        this.editor.setTheme('ace/theme/' + this.theme);\n    }\n\n    /** Inits the editor */\n    ngOnInit() {\n        this.init();\n    }\n    /** Re-inits the editor */\n    ngOnChanges() {\n        this.init();\n    }\n\n    /** writes value to editor on outside model change. */\n    writeValue(value: any) {\n        this.value = value || '';\n        if (!this.ready) {\n            return;\n        }\n        this.ready.then((editor) => {\n            editor.setValue(this.value, 1);\n        });\n    }\n\n    propagateChange = (_: any) => {\n    };\n\n    /** Registers change callback */\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() {\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'AceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AceModule.html":{"url":"modules/AceModule.html","title":"module - AceModule","body":"\n                   \n\n\n\n\n  Modules\n  AceModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_exports\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->AceComponent -->\n\n{\n    : , : (() => ), : true\n}->AceComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ace/src/ace.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AceComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AceComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AceComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { AceComponent } from './ace.component';\n\n@NgModule({\n    imports: [],\n    exports: [AceComponent],\n    declarations: [AceComponent],\n    entryComponents: [AceComponent],\n    providers: [],\n})\nexport class AceModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminEntryInputComponent.html":{"url":"components/AdminEntryInputComponent.html","title":"component - AdminEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-form/admin-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that require having the DatamanagerResource as api.\nThis is currently relevant for account and role fields which come from the ec.api.\n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./admin-entry-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     DataManagerResource\n\n                    \n                \n                    \n                        \n                            Type :     DataManagerResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/admin-entry-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { SdkService } from '@ec.components/data/src/sdk/sdk.service';\nimport { Component } from '@angular/core';\nimport { DefaultInputComponent } from '@ec.components/ui/src/form/default-input/default-input.component';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\n\n/** This component holds the input templates for all field types that require having the DatamanagerResource as api.\n * This is currently relevant for account and role fields which come from the ec.api.\n */\n@Component({\n    templateUrl: './admin-entry-input.component.html',\n})\nexport class AdminEntryInputComponent extends DefaultInputComponent {\n    api: DataManagerResource;\n    constructor(public sdk: SdkService) {\n        super();\n        this.sdk.root.then((root) => this.api = root);\n    }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AssetDirective.html":{"url":"directives/AssetDirective.html","title":"directive - AssetDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  AssetDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/asset/asset.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset by id to the template. \n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecAsset]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                asset\n                            \n                            \n                                promise\n                            \n                            \n                                    Public\n                                sdk\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetId\n                            \n                            \n                                autoload\n                            \n                            \n                                ecAsset\n                            \n                            \n                                levels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/asset/asset.directive.ts:27\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The api to use. Defaults to sdk.api \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetId\n                    \n                    \n                        The asset id that should be loaded\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                    \n                        Should the asset be loaded immediately? Defaults to true \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ecAsset\n                    \n                    \n                        The asset id that should be loaded\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                    \n                        The levels to use. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:21\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                    \n                        Fires as soon as the asset has been loaded. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:25\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:45\n                            \n                        \n\n\n                \n                    \n                            Loads the asset. Can be called from template when using autoload=false \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:34\n                            \n                        \n\n\n                \n                    \n                            as soon as model and id are known, the asset will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            asset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        asset:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:27\n                            \n                        \n\n                \n                    \n                        The current loaded asset \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promise:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:13\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ecAsset\nThis directive can be used to load a single asset directly from the template:\n\n  id: {{myAsset.asset?.assetID}}\n  title: {{myAsset.asset?.title}}\n  tags: {{myAsset.asset?.tags}}\n  created: {{myAsset.asset?.created}}\n  type: {{myAsset.asset?.type}}\n  files: {{myAsset.asset?.files?.length}}\n\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { SdkService } from '../../sdk/sdk.service';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\n\n/** Loads an public asset by id to the template. */\n@Directive({\n  selector: '[ecAsset]',\n  exportAs: 'ecAsset'\n})\nexport class AssetDirective implements OnChanges {\n  /** The loading promise */\n  promise: any;\n  /** The asset id that should be loaded*/\n  @Input() assetId: string;\n  /** The asset id that should be loaded*/\n  @Input() ecAsset: string;\n  /** Should the asset be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** The api to use. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Fires as soon as the asset has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The current loaded asset */\n  public asset: any;\n\n  /** Injects the sdk */\n  constructor(public sdk: SdkService) {\n  }\n\n  /** as soon as model and id are known, the asset will be loaded. */\n  ngOnChanges() {\n    if (this.ecAsset) {\n      this.assetId = this.ecAsset;\n    }\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the asset. Can be called from template when using autoload=false */\n  load(id?: string) {\n    this.assetId = id || this.assetId;\n    if (!this.assetId) {\n      return Promise.reject('cannot load asset: no assetId is set');\n    }\n    const api = this.api || this.sdk.api;\n    if (!api) {\n      throw new Error('cannot load asset: no api was set!');\n    }\n    this.promise = api.asset(this.assetId)\n      .then((asset) => {\n        this.asset = asset;\n        this.loaded.emit(asset);\n        return asset;\n      });\n    return this.promise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AssetListPopComponent.html":{"url":"components/AssetListPopComponent.html","title":"component - AssetListPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AssetListPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/files/asset-list-pop/asset-list-pop.component.ts\n\n\n    \n        Description\n    \n    \n        Entry Pop is an extension of Pop component to host an entry-form.\nYou can use it like a normal pop but with the extra handling of an entry form inside.\nYou can call edit with an entry object to edit an entry, or just call show.\nIt is also possible to bind an entry directly which will then be bound to the form.\n\n    \n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-asset-list-pop\n            \n\n            \n                styleUrls\n                asset-list-pop.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./asset-list-pop.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                delay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                select\n                            \n                            \n                                selectUpload\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                config\n                            \n                            \n                                selection\n                            \n                            \n                                active\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, auth: AuthService, sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:30\n                            \n                        \n\n                \n                    \n                            Injects auth service and calls super constructor. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                    \n                        The assetGroupID that should be picked from. If empty, legacy assets are used \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        CrudConfig for customizing the entry-form and the pop.\n\n                            \n                            Type:    CrudConfig\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The used selection \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                    \n                        If true, .visible is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Event emitter on item selection \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        Emits the value of visible on change. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            emits columnClicked event or toggles selection if no observers. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectUpload\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectUpload(upload: Upload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            method that is called after the upload to select the uploaded item(s). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        upload\n                                                        \n                                                                    Upload\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:52\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. First removes visible and after the delay it removes active. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:43\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. First sets active and after the delay it sets visible. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(visible: boolean, emit: boolean)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:31\n                            \n                        \n\n\n                \n                    \n                            Shows if not visible, hides if visible. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        visible\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                !this.visible\n                                                        \n\n                                                \n                                                \n                                                        emit\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:25\n                            \n                        \n\n                \n                    \n                        The amount of time between setting active and visible. Defaults to 0. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { PopComponent } from '@ec.components/ui/src/pop/pop.component';\nimport { Selection, Item } from '@ec.components/core';\nimport { CrudConfig } from '../../crud/crud-config.interface';\nimport { AuthService } from '../../auth/auth.service';\nimport { Upload } from '../file.service';\nimport { PopService } from '@ec.components/ui/src/pop/pop.service';\nimport { SdkService } from '@ec.components/data';\n\n/** Entry Pop is an extension of Pop component to host an entry-form.\n * You can use it like a normal pop but with the extra handling of an entry form inside.\n * You can call edit with an entry object to edit an entry, or just call show.\n * It is also possible to bind an entry directly which will then be bound to the form.\n * */\n@Component({\n  selector: 'ec-asset-list-pop',\n  templateUrl: './asset-list-pop.component.html',\n  styleUrls: ['./asset-list-pop.component.scss']\n})\n\nexport class AssetListPopComponent extends PopComponent {\n  /** CrudConfig for customizing the entry-form and the pop.*/\n  @Input() config: CrudConfig = {};\n  /** The used selection */\n  @Input() selection: Selection;\n  /** The assetGroupID that should be picked from. If empty, legacy assets are used */\n  @Input() assetGroupID: string;\n  /** Event emitter on item selection */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  /** Injects auth service and calls super constructor. */\n  constructor(protected popService: PopService,\n    private auth: AuthService,\n    public sdk: SdkService) {\n    super(popService);\n  }\n\n  /** method that is called after the upload to select the uploaded item(s). */\n  selectUpload(upload: Upload) {\n    if (!this.selection) {\n      console.warn('no selection.');\n      return;\n    }\n    if (this.config.solo) {\n      this.selection.select(upload.item);\n    } else {\n      this.selection.toggleAll(upload.items);\n    }\n  }\n  /** emits columnClicked event or toggles selection if no observers. */\n  select($event) {\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit($event);\n    } else if (this.selection) {\n      console.log('selection', this.selection);\n      // this.selection.toggle($event);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n      \n        Drop to upload!\n      \n      \n        \n        Hochladen\n\n      \n      \n      \n      \n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Drop to upload!                            Hochladen                                        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'AssetListPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/auth/auth-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                This guard can be used on routes that only can be activated when a user is present in the SdkService.\nIf no user is found, an error message is shown. You can then react via the redirect output. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/auth-guard.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth-guard.service.ts:17\n                            \n                        \n\n\n                \n                    \n                            Checks if the sdk contains a user, if not an error message is shown. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        redirect:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/auth-guard.service.ts:12\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the user check fails. (Meant to be used for redirecting to another page e.g. login) \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { SdkService } from '@ec.components/data/src/sdk/sdk.service';\nimport { NotificationsService } from '@ec.components/ui/src/notifications/notifications.service';\nimport { Subject } from 'rxjs/Subject';\n\n/** This guard can be used on routes that only can be activated when a user is present in the SdkService.\n * If no user is found, an error message is shown. You can then react via the redirect output. */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  /** Subject that is nexted when the user check fails. (Meant to be used for redirecting to another page e.g. login) */\n  redirect: Subject = new Subject();\n\n  constructor(private sdk: SdkService, private notifications: NotificationsService) {\n  }\n  /** Checks if the sdk contains a user, if not an error message is shown. */\n  canActivate() {\n    return this.sdk.ready.then(user => {\n      if (!!user) {\n        return true;\n      }\n      this.notifications.emit({\n        type: 'error',\n        title: 'Diese Seite kann nicht angezeigt werden.',\n        message: 'Sie sind nicht eingeloggt.'\n      });\n      this.redirect.next();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\n()\n\n()\n\nAuthModule -->\n\n()->AuthModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAuthModule -->\n\nAuthGuard->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/auth/auth.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for all auth related components and services. \n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                            \n                                PasswordResetComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuard\n                            \n                            \n                                     AuthService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ()\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoginComponent\n                            \n                            \n                                    PasswordResetComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CookieModule } from 'ngx-cookie';\nimport { UiModule } from '@ec.components/ui/src/ui.module';\nimport { PasswordResetComponent } from './password-reset/password-reset.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './auth-guard.service';\nimport { AuthService } from './auth.service';\n\n/** loads CookieModule */\nexport function cookieFactory(): ModuleWithProviders {\n  // https://github.com/auth0/angular2-jwt/issues/305\n  return CookieModule.forRoot();\n}\n/** Module for all auth related components and services. */\n@NgModule({\n  declarations: [\n    PasswordResetComponent,\n    LoginComponent\n  ],\n  imports: [\n    cookieFactory(),\n    CommonModule,\n    ReactiveFormsModule,\n    UiModule\n  ],\n  exports: [\n    ReactiveFormsModule,\n    PasswordResetComponent,\n    LoginComponent,\n  ],\n  providers: [AuthGuard, AuthService]\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\n{\nprovide: \"environment\",\nuseValue: {\ndatamanagerID: \"83cc6374\",\nenvironment: \"stage\",\nclientID: \"rest\"\n}\n}The environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkPermission\n                            \n                            \n                                getAccount\n                            \n                            \n                                getAllowedModelMethods\n                            \n                            \n                                getAllowedResourceMethods\n                            \n                            \n                                getApi\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                noClientID\n                            \n                            \n                                resetPassword\n                            \n                            \n                                resolveVariables\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceConfig: ResourceConfig, environment: , sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/auth.service.ts:26\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        environment\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckPermission(permission: string, api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:68\n                            \n                        \n\n\n                \n                    \n                            checks given public permission for given api, defaults to this.sdk.api. Also works as ec user \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permission\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAccount(api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns the current account. Works for all apis \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedModelMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedModelMethods(model: string, methods?: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:114\n                            \n                        \n\n\n                \n                    \n                            Returns an array of all allowed methods for the given relation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        methods\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedResourceMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedResourceMethods(relation: string, variables: Object, methods?: string[], api?: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        variables\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        methods\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApi\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApi(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:158\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined: , api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Generic login that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout(api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:148\n                            \n                        \n\n\n                \n                    \n                            Generic logout that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noClientID\n                            \n                            \n                        \n                    \n                \n                \n                    \nnoClientID()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:172\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(email: , api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:136\n                            \n                        \n\n\n                \n                    \n                            Generic password reset that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveVariables\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolveVariables(string: string, variables: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:75\n                            \n                        \n\n\n                \n                    \n                            replaces all variables by values in a string \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        variables\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(undefined: , api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Generic Signup, works for accounts API and PublicAPI \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { SdkService } from '../sdk/sdk.service';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport Core from 'ec.sdk/lib/Core';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: \"environment\",\n   useValue: {\n     datamanagerID: \"83cc6374\",\n     environment: \"stage\",\n     clientID: \"rest\"\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class AuthService {\n\n  /** Calls init and sets ready to true when finished. */\n  constructor(private resourceConfig: ResourceConfig, @Inject('environment') private environment, private sdk: SdkService) {\n  }\n\n  /** Generic login that works with both public and admin API. */\n  login({ email, password }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email))\n      .then((resolvedAPI) => {\n        const _api = resolvedAPI || this.sdk.session;\n        return !_api ? Promise.reject('api_not_found') : _api.login(email, password);\n      }).then(() => {\n        return this.sdk.init();\n      });\n  }\n\n  /** Generic Signup, works for accounts API and PublicAPI */\n  signup({ email, password, invite }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api ? api.signup() : this.sdk.api.signup(email, password, invite)\n      .catch(() => this.sdk.accounts.signup(email, password, invite))\n      .then((res) => {\n        return this.sdk.init();\n      })\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.sdk.api) {\n    return api.me().then((account) => {\n      return account || this.sdk.accounts.me();\n    }).catch((err) => {\n      return this.sdk.api.me();\n    });\n  }\n\n  /** checks given public permission for given api, defaults to this.sdk.api. Also works as ec user */\n  checkPermission(permission: string, api?) {\n    return this.sdk.ready.then((user) => {\n      api = api || this.sdk.user;\n      return api.checkPermission(permission);\n    })\n  }\n  /** replaces all variables by values in a string */\n  resolveVariables(string: string, variables: Object) {\n    Object.keys(variables).forEach((key) => {\n      string = string.replace(``, variables[key]);\n    });\n    return string;\n  }\n\n  /** Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. */\n  getAllowedResourceMethods(relation: string, variables: Object = {}, methods?: string[], api?: Core): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    if (!this.resourceConfig.get(relation) || !this.resourceConfig.get(relation).permissions) {\n      /* console.warn(`relation ${relation} has no defined permissions, defaulting to all methods available`); */\n      return Promise.resolve(['get', 'post', 'put', 'delete']);\n    }\n    const permissions = this.resourceConfig.get(relation).permissions;\n    return Object.keys(permissions)\n      .map((method) => (results) => {\n        return !permissions[method] ? Promise.resolve(results) :\n          permissions[method] === true ? Promise.resolve(results.concat(method)) :\n            this.checkPermission(`${this.resolveVariables(permissions[method], variables)}`, api)\n              .then(res => {\n                if (res) {\n                  results.push(method);\n                }\n                return results;\n              }).catch(err => {\n                return results;\n              })\n      })\n      .reduce((a, b) => a.then(r => b(r)), Promise.resolve([]))\n      .then(_methods => {\n        _methods.filter(x => !!x);\n        return _methods;\n      });\n  }\n\n  /** Returns an array of all allowed methods for the given relation */\n  getAllowedModelMethods(model: string, methods?: string[]): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    return ['get', 'post', 'put', 'delete']\n      .map((method) => (results) =>\n        this.checkPermission(`${model}:${method}`, this.sdk.api)\n          .then(res => {\n            if (res) {\n              results.push(method);\n            }\n            return results;\n          })\n      )\n      .reduce((a, b) => a.then(r => b(r)), Promise.resolve([]))\n      .then(_methods => {\n        _methods.filter(x => !!x);\n        return _methods;\n      });\n  }\n\n  /** Generic password reset that works with both public and admin API. */\n  resetPassword(email, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email))\n      .then((resolvedAPI) => {\n        const _api = resolvedAPI || this.sdk.accounts;\n        return !_api ? Promise.reject('api_not_found') : _api.resetPassword(email);\n      });\n  }\n\n  /** Generic logout that works with both public and admin API. */\n  logout(api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api ? api.logout() : this.sdk.session.logout().catch(() => this.sdk.api.logout())\n      .then(() => {\n        return this.sdk.init();\n      });\n  }\n\n  getApi(email: string) {\n    if (!this.sdk.api && !this.sdk.accounts) {\n      return Promise.reject('no_api_found');\n    }\n    return this.sdk.api.emailAvailable(email)\n      .then((available) => {\n        if (!available) {\n          return this.sdk.api;\n        }\n      }).catch(() => {\n        return;\n      });\n  }\n\n  noClientID() {\n    if (!this.environment.clientID) {\n      return `\nNo clientID set in environment! To enable all auth related functionalities,\nyou can create a client in your datamanager settings and provide it with your environment:\n\n  providers: [\n    {\n      provide: 'environment',\n      useValue: {\n        datamanagerID: '83cc6374',\n        clientID: 'myClient',\n      }\n    }\n  ]\n`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Collection.html":{"url":"classes/Collection.html","title":"class - Collection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Collection\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/collection/collection.ts\n        \n\n            \n                Description\n            \n            \n                A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Public\n                                update$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addAll\n                            \n                            \n                                has\n                            \n                            \n                                hasAll\n                            \n                            \n                                index\n                            \n                            \n                                isEmpty\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                replaceWith\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: Array)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/collection/collection.ts:15\n                            \n                        \n\n                \n                    \n                            Constructs the collection with the given item Array (optional).\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                                    Example :\n                                        \n                                            const numbers = new Collection([1, 2, 3]);\n                                        \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:11\n                            \n                        \n\n                \n                    \n                        The items must all have the same type T.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update:     Subject>\n\n                    \n                \n                    \n                        \n                            Type :     Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:13\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items update \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            update$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update$:     Observable>\n\n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                    \n                        \n                            Default value : this.update.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:15\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items change \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(item: T, unique?: boolean, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:72\n                            \n                        \n\n\n                \n                    \n                            Adds the given item to the Collection. If the unique flag is set, the item will only be added\nif it is not contained.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        unique\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.add(4);\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addAll\n                            \n                            \n                        \n                    \n                \n                \n                    \naddAll(items: Array, unique: boolean, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:90\n                            \n                        \n\n\n                \n                    \n                            Adds the given items to the Collection. If the unique flag is set, only items that are not\ncontained will be added.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        unique\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.addAll([5, 6, 7]);\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            has\n                            \n                            \n                        \n                    \n                \n                \n                    \nhas(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:43\n                            \n                        \n\n\n                \n                    \n                            Checks if the Collection contains the given item.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.has(2); //true\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasAll(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:54\n                            \n                        \n\n\n                \n                    \n                            Checks if the Collection contains all given items.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.has([1,2]); //true\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            index\n                            \n                            \n                        \n                    \n                \n                \n                    \nindex(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:32\n                            \n                        \n\n\n                \n                    \n                            Returns the index of the given item \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisEmpty()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:152\n                            \n                        \n\n\n                \n                    \n                            Returns true if the collection is empty \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(item: T, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:107\n                            \n                        \n\n\n                \n                    \n                            Removes the given item from the Collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.remove(4);\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll(items?: Array, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:124\n                            \n                        \n\n\n                \n                    \n                            Removes all items from the Collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.removeAll();\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            replaceWith\n                            \n                            \n                        \n                    \n                \n                \n                    \nreplaceWith(items: Array, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:139\n                            \n                        \n\n\n                \n                    \n                            Replaces all current items with the given items. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Collection\nCollection is a more sophisticated Array:\nconst collection = new Collection([1, 2, 3]);\ncollection.has(1); //true\ncollection.has(4); //false\ncollection.add(4);\ncollection.remove(4);\ncollection.index(1); //0\ncollection.addAll([10,11,12]); //true\ncollection.hasAll([1,10,11]); //true\ncollection.removeAll();It is the Parent Class of List and Selection.\n\n    \n\n    \n        import { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n/**\n * A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n */\nexport class Collection {\n  /**\n   * The items must all have the same type T.\n   */\n  public items: Array;\n  /** Subject that is nexted when the items update */\n  protected update: Subject> = new Subject();\n  /** Subject that is nexted when the items change */\n  public update$: Observable> = this.update.asObservable();\n\n  /**\n   * Constructs the collection with the given item Array (optional).\n   * @example\n   * ```typescript\n   *  const numbers = new Collection([1, 2, 3]);\n   * ```\n   */\n  constructor(items: Array = []) {\n    this.items = [];\n    items.forEach((item) => {\n      this.items.push(item);\n    });\n  }\n\n  /** Returns the index of the given item */\n  index(item: T): number {\n    return this.items.indexOf(item);\n  }\n\n  /**\n   * Checks if the Collection contains the given item.\n   * @example\n   * ```typescript\n   * numbers.has(2); //true\n   * ```\n   */\n  has(item: T): boolean {\n    return this.index(item) !== -1;\n  }\n\n  /**\n   * Checks if the Collection contains all given items.\n   * @example\n   * ```typescript\n   * numbers.has([1,2]); //true\n   * ```\n   */\n  hasAll(items: Array = []): boolean {\n    if (items === null) {\n      // console.warn('has all fail', this, items);\n      return false;\n    }\n    return items.reduce((has, item) => {\n      return has && this.has(item);\n    }, true);\n  }\n\n  /**\n   * Adds the given item to the Collection. If the unique flag is set, the item will only be added\n   * if it is not contained.\n   * @example\n   * ```typescript\n   * numbers.add(4);\n   * ```\n   */\n  add(item: T, unique?: boolean, event: boolean = true) {\n    if (unique && this.has(item)) {\n      return false;\n    }\n    this.items.push(item);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Adds the given items to the Collection. If the unique flag is set, only items that are not\n   * contained will be added.\n   * @example\n   * ```typescript\n   * numbers.addAll([5, 6, 7]);\n   * ```\n   */\n  addAll(items: Array = [], unique: boolean = false, event: boolean = true) {\n    const length = this.items.length;\n    items.forEach((item) => {\n      this.add(item, unique, false);\n    });\n    if (this.items.length > length && event) {\n      this.update.next(this);\n    }\n  };\n\n  /**\n   * Removes the given item from the Collection.\n   * @example\n   * ```typescript\n   * numbers.remove(4);\n   * ```\n   */\n  remove(item: T, event: boolean = true) {\n    if (!this.has(item)) {\n      return false;\n    }\n    this.items.splice(this.index(item), 1);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Removes all items from the Collection.\n   * @example\n   * ```typescript\n   * numbers.removeAll();\n   * ```\n   */\n  removeAll(items?: Array, event: boolean = true) {\n    const length = this.items.length;\n    if (items) {\n      items.forEach((item) => {\n        this.remove(item, false);\n      });\n    } else {\n      this.items.length = 0;\n    }\n    if (this.items.length , event: boolean = true) {\n    if (this.items && this.items.length) {\n      this.removeAll(undefined, false);\n    }\n    if (items.length) {\n      this.addAll(items, false, false);\n    }\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /** Returns true if the collection is empty */\n  isEmpty() {\n    return this.items.length === 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Config.html":{"url":"classes/Config.html","title":"class - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/config/config.ts\n        \n\n            \n                Description\n            \n            \n                The Root class for all Configurations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                configure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/config/config.ts:5\n                            \n                        \n\n                \n                    \n                        The config object. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configure(key: string, property: string, config?: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/config/config.ts:13\n                            \n                        \n\n\n                \n                    \n                            This method is a getter and setter for configurations. The key stands for the config (e.g. model).\nThe property is a sub property if the config (e.g. fields => model.fields).\nIf no config is given, the method just returns the configuration for the given property.\nIf a config is given, the property config is merged via Object.assign. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Config {\n  // TODO use Map !!!! (like simi did in EventEmitter.ts)\n  /** The config object. */\n  private config: {\n    [key: string]: Object,\n  } = {};\n\n  /** This method is a getter and setter for configurations. The key stands for the config (e.g. model).\n   * The property is a sub property if the config (e.g. fields => model.fields).\n   * If no config is given, the method just returns the configuration for the given property.\n   * If a config is given, the property config is merged via Object.assign. */\n  public configure?(key: string, property: string, config?: Object) {\n    if (!this.config[key]) {\n      this.config[key] = {};\n    }\n    if (!config) {\n      return this.config[key][property];\n    }\n    if (!this.config[key][property]) {\n      this.config[key][property] = {};\n    }\n    Object.assign(this.config[key][property], config);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CrudComponent.html":{"url":"components/CrudComponent.html","title":"component - CrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/crud/crud.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\nhttps://components.entrecode.de/data/crud\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-crud\n            \n\n            \n                styleUrls\n                crud.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./crud.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entryPop\n                            \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPopClass\n                            \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                    Private\n                                loadEntry\n                            \n                            \n                                    Public\n                                mustReload\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                selectEntry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                model\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, notificationService: NotificationsService, symbol: SymbolService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/crud/crud.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                            \n                            Type:    CrudConfig\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model that should be crud'ed. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection that should be used \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Emits when a list element is clicked \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Emits when the selection has changed \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:50\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPopClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPopClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:125\n                            \n                        \n\n\n                \n                    \n                            Returns the pop class that should be used, either uses config.popClass or defaults to ec-pop_drawer-left. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasMethod(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadEntry(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mustReload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mustReload(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Returns true if the visible fields in the list differ from the visible fields in the form\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectEntry(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:113\n                            \n                        \n\n\n                \n                    \n                            Is called when an item in the list is clicked. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entryPop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entryPop:     EntryPopComponent\n\n                    \n                \n                    \n                        \n                            Type :     EntryPopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:44\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        list:     EntryListComponent\n\n                    \n                \n                    \n                        \n                            Type :     EntryListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:42\n                            \n                        \n\n                \n                    \n                        The EntryList inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:46\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:52\n                            \n                        \n\n                \n                    \n                        Emitted Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CrudConfig } from './crud-config.interface';\nimport { EntryFormComponent } from '../entry-form/entry-form.component';\nimport { EntryListComponent } from '../entry-list/entry-list.component';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core/src/selection/selection';\nimport { LoaderComponent } from '@ec.components/ui/src/loader/loader.component';\nimport { LoaderService } from '@ec.components/ui/src/loader/loader.service';\nimport { NotificationsService } from '@ec.components/ui/src/notifications/notifications.service';\nimport 'rxjs/add/operator/switchMap';\nimport { merge } from 'rxjs/observable/merge';\nimport { AuthService } from '../auth/auth.service';\nimport { EntryPopComponent } from '../entry-pop/entry-pop.component';\nimport { WithLoader } from '@ec.components/ui';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport { WithNotifications } from '@ec.components/ui/src/notifications/with-notifications.interface';\nimport { Notification } from '@ec.components/ui/src/notifications/notification';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * https://components.entrecode.de/data/crud\n * */\n@Component({\n  selector: 'ec-crud',\n  templateUrl: './crud.component.html',\n  styleUrls: ['./crud.component.scss']\n})\nexport class CrudComponent implements OnInit, WithLoader, WithNotifications {\n  /** The model that should be crud'ed. */\n  @Input() model: string;\n  /** CrudConfig for customization of the crud's UI.*/\n  @Input() config: CrudConfig = {};\n  /** The selection that should be used */\n  @Input() selection: Selection;\n  /** The EntryList inside the template. */\n  @ViewChild(EntryListComponent) list: EntryListComponent;\n  /** The Pop inside the template. */\n  @ViewChild(EntryPopComponent) entryPop: EntryPopComponent;\n  /** The lists loader */\n  @ViewChild(LoaderComponent) loader: LoaderComponent;\n  /** Emits when a list element is clicked */\n  @Output() columnClicked: EventEmitter = new EventEmitter();\n  /** Emits when the selection has changed */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Emitted Notifications */\n  notifications: Notification[] = []\n\n  constructor(private sdk: SdkService,\n    private auth: AuthService,\n    private loaderService: LoaderService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService,\n    @Optional() public router: Router,\n    @Optional() public route: ActivatedRoute) {\n    if (route) {\n      merge(route.data, route.params, route.queryParams)\n        .subscribe(({ model }) => {\n          if (model) {\n            this.model = model;\n          }\n        });\n    }\n  }\n\n  ngOnInit() {\n    this.auth.getAllowedModelMethods(this.model, this.config.methods)\n      .then((methods) => {\n        this.config.methods = methods;\n      });\n  }\n\n  /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n  public hasMethod(method: string) {\n    return this.config.methods && this.config.methods.indexOf(method) !== -1;\n  }\n\n  /** Returns true if the visible fields in the list differ from the visible fields in the form*/\n  public mustReload(item) {\n    return !Object.keys(item.config.fields).reduce((equal, property) => {\n      return equal && (item.config.fields[property].list !== false || item.config.fields[property].form === false);\n    }, true);\n  }\n\n  /** Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. */\n  private loadEntry(item) {\n    return Promise.resolve().then(() => {\n      if (!this.config.alwaysLoadEntry && !this.mustReload(item) && (!this.config.levels || this.config.levels === 1)) {\n        return item.getBody();\n      }\n      return this.sdk.api.entry(this.model, item.id(), { levels: this.config.levels || 1 })\n    }).then((loadedEntry) => {\n      this.entryPop.edit(loadedEntry);\n      this.notificationService.emit({ hide: this.notifications });\n    }).catch((err) => {\n      console.log('error while loading entry to edit', err);\n      this.notificationService.emit({\n        title: this.symbol.resolve('error.load'),\n        error: err,\n        sticky: true,\n        hide: this.notifications,\n        replace: this.notifications\n      })\n    });\n  }\n\n  /** Is called when an item in the list is clicked. */\n  private selectEntry(item) {\n    if (!item) {\n      return;\n    }\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n      return;\n    }\n    this.loaderService.wait(this.loadEntry(item), this.loader);\n  }\n\n  /** Returns the pop class that should be used, either uses config.popClass or defaults to ec-pop_drawer-left. */\n  getPopClass() {\n    return this.config && this.config.popClass ? this.config.popClass : 'ec-pop_drawer-left';\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{config?.createLabel}}\n        \n          \n        \n      \n    \n  \n  \n    \n    \n  \n\n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{config?.createLabel}}                                                      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'CrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CrudConfig.html":{"url":"interfaces/CrudConfig.html","title":"interface - CrudConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CrudConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/crud/crud-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                The CrudConfig allows a quick customization of an ec-crud component. \n\n            \n\n            \n                Extends\n            \n            \n                    ListConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysLoadEntry\n                                \n                                \n                                            Optional\n                                        createLabel\n                                \n                                \n                                            Optional\n                                        develop\n                                \n                                \n                                            Optional\n                                        disableCreatePop\n                                \n                                \n                                            Optional\n                                        disableListPop\n                                \n                                \n                                            Optional\n                                        disableSelectSwitch\n                                \n                                \n                                            Optional\n                                        keepPopOpen\n                                \n                                \n                                            Optional\n                                        levels\n                                \n                                \n                                            Optional\n                                        loader\n                                \n                                \n                                            Optional\n                                        methods\n                                \n                                \n                                            Optional\n                                        nestedPopClass\n                                \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        permissions\n                                \n                                \n                                            Optional\n                                        popClass\n                                \n                                \n                                            Optional\n                                        useLegacyAssets\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysLoadEntry\n                                    \n                                \n                                \n                                    \n                                        alwaysLoadEntry:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an entry is always loaded when opened, even with lvl1 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createLabel\n                                    \n                                \n                                \n                                    \n                                        createLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for the entry create button \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        develop\n                                    \n                                \n                                \n                                    \n                                        develop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an extra develop button will be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCreatePop\n                                    \n                                \n                                \n                                    \n                                        disableCreatePop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no create pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableListPop\n                                    \n                                \n                                \n                                    \n                                        disableListPop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no list pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSelectSwitch\n                                    \n                                \n                                \n                                    \n                                        disableSelectSwitch:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no select mode switch will be shown \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepPopOpen\n                                    \n                                \n                                \n                                    \n                                        keepPopOpen:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the entry pop will remain open after the entry has been successfully saved. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        levels\n                                    \n                                \n                                \n                                    \n                                        levels:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:     LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoaderComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external loader component that should be used, falls back to internal. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        methods\n                                    \n                                \n                                \n                                    \n                                        methods:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An Array of Methods that should be supported. Possible values are create, read, update and delete\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nestedPopClass\n                                    \n                                \n                                \n                                    \n                                        nestedPopClass:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The class that should be used for the nested resources pops, defaults to no class. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:     NotificationsComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NotificationsComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external notifications component that should be used, falls back to internal \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    maps the permissions to the methods post put create delete \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popClass\n                                    \n                                \n                                \n                                    \n                                        popClass:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The class that should be used for the pop. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useLegacyAssets\n                                    \n                                \n                                \n                                    \n                                        useLegacyAssets:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, legacy assets will be used instead of new assets \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ListConfig } from '@ec.components/core/src/list/list-config.interface';\nimport { LoaderComponent } from '@ec.components/ui/src/loader/loader.component';\nimport { NotificationsComponent } from '@ec.components/ui/src/notifications/notifications.component';\n\n/** The CrudConfig allows a quick customization of an ec-crud component. */\nexport interface CrudConfig extends ListConfig {\n  /** The label for the entry create button */\n  createLabel?: string;\n  /** An Array of Methods that should be supported. Possible values are create, read, update and delete*/\n  methods?: Array;\n  /** An external loader component that should be used, falls back to internal. */\n  loader?: LoaderComponent;\n  /** An external notifications component that should be used, falls back to internal */\n  notifications?: NotificationsComponent;\n  /** If true, an extra develop button will be shown*/\n  develop?: boolean;\n  /** If true, the entry pop will remain open after the entry has been successfully saved. */\n  keepPopOpen?: boolean;\n  /** With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)*/\n  levels?: number;\n  /** If true, an entry is always loaded when opened, even with lvl1 */\n  alwaysLoadEntry?: boolean;\n  /** The class that should be used for the pop. */\n  popClass?: string;\n  /** The class that should be used for the nested resources pops, defaults to no class. */\n  nestedPopClass?: string;\n  /** maps the permissions to the methods post put create delete */\n  permissions?: { put?: string | boolean, post?: string | boolean, get?: string | boolean, delete?: string | boolean }\n  /** If true, no select mode switch will be shown */\n  disableSelectSwitch?: boolean;\n  /** If true, no list pop will be available at selects */\n  disableListPop?: boolean;\n  /** If true, no create pop will be available at selects */\n  disableCreatePop?: boolean;\n  /** If true, legacy assets will be used instead of new assets */\n  useLegacyAssets?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CrudService.html":{"url":"injectables/CrudService.html","title":"injectable - CrudService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/crud/crud.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                matches\n                            \n                            \n                                save\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/crud/crud.service.ts:29\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(filter?: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Yields an observable that emits for all updates that match the given filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clean\n                            \n                            \n                        \n                    \n                \n                \n                    \nclean(value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:84\n                            \n                        \n\n\n                \n                    \n                            Removes all null or undefined values from the given object \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(model: string, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:99\n                            \n                        \n\n\n                \n                    \n                            Creates a new entry with the given value for the given model. Fires the \"create\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            del\n                            \n                            \n                        \n                    \n                \n                \n                    \ndel(model: string, entry: EntryResource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:112\n                            \n                        \n\n\n                \n                    \n                            deletes the given entry and emits the \"delete\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImmutableProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisImmutableProperty(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:78\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given field key is an immutable system property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatches(change: Update, filter: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:36\n                            \n                        \n\n\n                \n                    \n                            Gives true if the given change fits all property values of the filter. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        change\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(model: string, entry: EntryResource, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(model: , entry: EntryResource, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Updates the given entry with the new value. Fires the \"update\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            changes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changes:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:29\n                            \n                        \n\n                \n                    \n                        The changes event is emitted everytime an entry is created or updated. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport EntryList from 'ec.sdk/lib/resources/publicAPI/EntryList';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/filter';\nimport { Subject } from 'rxjs/Subject';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Update {\n  /** The model that has been updated. */\n  model: string | string[],\n  /** The relevant entry. */\n  entry?: EntryResource,\n  /** The list where it happened. */\n  list?: EntryList,\n  /** The type of update. (create/read/update/delete) */\n  type?: 'post' | 'get' | 'put' | 'delete'\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class CrudService {\n  /** The changes event is emitted everytime an entry is created or updated. */\n  private changes: Subject = new Subject();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService) {\n  }\n\n  /** Gives true if the given change fits all property values of the filter. */\n  matches(change: Update, filter: Update): boolean {\n    return Object.keys(filter)\n      .reduce((match, key) => match && change[key] === filter[key], true);\n  }\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: Update): Observable {\n    if (!filter) {\n      return this.changes.asObservable();\n    }\n    return this.changes.asObservable().filter((change: Update) => this.matches(change, filter));\n  }\n\n  /** Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. */\n  save(model: string, entry: EntryResource, value: Object) {\n    if (entry && entry.save) {\n      return this.update(model, entry, value);\n    }\n    return this.create(model, value)\n      .then((_entry) => {\n        return _entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given entry with the new value. Fires the \"update\" change. */\n  update(model, entry: EntryResource, value: Object): Promise {\n    const oldValues = {}; // save old values\n    Object.keys(value).forEach((key) => oldValues[key] = entry[key]);\n    Object.assign(entry, this.clean(value)); // assign new form values\n    return entry.save().then((_entry) => {\n      this.changes.next({ model, entry: _entry, type: 'put' });\n      return _entry;\n    })\n      .catch((err) => {\n        Object.assign(entry, this.clean(oldValues)); // fall back to old values\n        return Promise.reject(err);\n      });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' ||\n      ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (value[key] === '') { // clear empty strings\n          value[key] = null;\n        }\n        if (this.isImmutableProperty(key)) { // filter system properties\n          delete value[key];\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new entry with the given value for the given model. Fires the \"create\" change. */\n  create(model: string, value: Object): Promise {\n    return this.sdk.api.createEntry(model, this.clean(value))\n      .then((entry: EntryResource) => {\n        // console.log('created entry', entry);\n        // TODO make sure leveled entries are returned leveled\n        this.changes.next({ model, entry, type: 'post' });\n        return entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given entry and emits the \"delete\" change. */\n  del(model: string, entry: EntryResource) {\n    return entry.del().then((res) => {\n      this.changes.next({ model, entry, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n  Modules\n  DataModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nCrudService\n\nCrudService\n\nDataModule -->\n\nCrudService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/data.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AdminEntryInputComponent\n                            \n                            \n                                CrudComponent\n                            \n                            \n                                DefaultEntryInputComponent\n                            \n                            \n                                DefaultEntryOutputComponent\n                            \n                            \n                                EntriesDirective\n                            \n                            \n                                EntryDirective\n                            \n                            \n                                EntryFormComponent\n                            \n                            \n                                EntryListComponent\n                            \n                            \n                                EntryPopComponent\n                            \n                            \n                                EntrySelectComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AdminEntryInputComponent\n                            \n                            \n                                DefaultEntryInputComponent\n                            \n                            \n                                DefaultEntryOutputComponent\n                            \n                            \n                                EntrySelectComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     CrudService\n                            \n                            \n                                     HistoryService\n                            \n                            \n                                     ModelConfigService\n                            \n                            \n                                     TypeConfigService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthModule\n                            \n                            \n                                    FilesModule\n                            \n                            \n                                    ResourceModule\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AuthModule\n                            \n                            \n                                    CrudComponent\n                            \n                            \n                                    EntriesDirective\n                            \n                            \n                                    EntryDirective\n                            \n                            \n                                    EntryFormComponent\n                            \n                            \n                                    EntryListComponent\n                            \n                            \n                                    EntryPopComponent\n                            \n                            \n                                    EntrySelectComponent\n                            \n                            \n                                    FilesModule\n                            \n                            \n                                    ResourceModule\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { UiModule } from '@ec.components/ui/src/ui.module';\nimport { ModelConfigService } from './model-config/model-config.service';\nimport { CrudService } from './crud/crud.service';\nimport { DefaultEntryInputComponent } from './entry-form/default-entry-input.component';\nimport { EntryListComponent } from './entry-list/entry-list.component';\nimport { EntryFormComponent } from './entry-form/entry-form.component';\nimport { CrudComponent } from './crud/crud.component';\nimport { DefaultEntryOutputComponent } from './entry-form/default-entry-output.component';\nimport { EntrySelectComponent } from './entry-select/entry-select.component';\nimport { TypeConfigService } from './model-config/type-config.service';\nimport { ResourceListComponent } from './resource-list/resource-list.component';\nimport { SdkModule } from './sdk/sdk.module';\nimport { FilesModule } from './files/files.module';\nimport { AuthModule } from './auth/auth.module';\nimport { EntriesDirective } from './entries/entries.directive';\nimport { EntryDirective } from './entry/entry.directive';\nimport { EntryPopComponent } from './entry-pop/entry-pop.component';\nimport { ResourceFormComponent } from './resource-form/resource-form.component';\nimport { ResourcePopComponent } from './resource-pop/resource-pop.component';\nimport { ResourceCrudComponent } from './resource-crud/resource-crud.component';\nimport { ResourceDeletePopComponent } from './resource-delete-pop/resource-delete-pop.component';\nimport { ResourceSelectComponent } from './resource-select/resource-select.component';\nimport { AdminEntryInputComponent } from './entry-form/admin-entry-input.component';\nimport { ResourceModule } from './resource/resource.module';\nimport { HistoryService } from './sdk/history.service';\n\n@NgModule({\n  entryComponents: [\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    EntrySelectComponent,\n  ],\n  declarations: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    CrudComponent,\n    EntrySelectComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    SdkModule,\n    FilesModule,\n    AuthModule,\n    ResourceModule,\n  ],\n  exports: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    CrudComponent,\n    EntrySelectComponent,\n    RouterModule,\n    UiModule,\n    SdkModule,\n    FilesModule,\n    AuthModule,\n    ResourceModule\n  ],\n  providers: [\n    CrudService,\n    TypeConfigService,\n    ModelConfigService,\n    HistoryService,\n    {\n      provide: 'environment',\n      useValue: {\n        environment: 'live'\n      }\n    }\n  ]\n})\nexport class DataModule {\n  static forEnvironment(environment): ModuleWithProviders {\n    return {\n      ngModule: DataModule,\n      providers: [\n        {\n          provide: 'environment',\n          useValue: Object.assign(\n            {\n              environment: 'live'\n            },\n            environment\n          )\n        }\n      ]\n    };\n  }\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatetimeComponent.html":{"url":"components/DatetimeComponent.html","title":"component - DatetimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatetimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/datetime/datetime.component.ts\n\n\n    \n        Description\n    \n    \n        Input for a datetime.\nhttps://components.entrecode.de/ui/datetime\n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-datetime\n            \n\n            \n                styleUrls\n                datetime.component.scss\n            \n\n\n\n            \n                templateUrl\n                datetime.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                weekdays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                disableTime\n                            \n                            \n                                formControl\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        date\n                    \n                    \n                        The date that should be displayed at start. \n\n                            \n                            Type:    moment.Moment\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableTime\n                    \n                    \n                        If true, the time will not be displayed nor will be editable. \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        The form control that holds the date \n\n                            \n                            Type:    FormControl\n\n                            \n                        \n                            Default value: new FormControl()\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        The input's placeholder \n\n                        \n                            Default value: ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            registerOnChange implementation of ControlValueAccessor \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            registerOnTouched implementation of ControlValueAccessor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Selects the given Date when the model changes. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calendar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        calendar:     CalendarComponent\n\n                    \n                \n                    \n                        \n                            Type :     CalendarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:29\n                            \n                        \n\n                \n                    \n                        The used calendar component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:43\n                            \n                        \n\n                \n                    \n                        Change propagation for ControlValueAccessor \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weekdays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weekdays:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:31\n                            \n                        \n\n                \n                    \n                        Array of the days of a week. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport moment from 'moment-es6';\nimport { CalendarComponent } from './calendar.component';\n\n/** Input for a datetime.\n *\n * https://components.entrecode.de/ui/datetime\n *\n*/\n@Component({\n  selector: 'ec-datetime',\n  templateUrl: 'datetime.component.html',\n  styleUrls: ['datetime.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatetimeComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatetimeComponent implements ControlValueAccessor {\n  /** The date that should be displayed at start. */\n  @Input() date: moment.Moment;\n  /** The form control that holds the date */\n  @Input() formControl: FormControl = new FormControl();\n  /** The used calendar component */\n  @ViewChild(CalendarComponent) calendar: CalendarComponent;\n  /** Array of the days of a week. */\n  public weekdays: string[];\n  /** If true, the time will not be displayed nor will be editable. */\n  @Input() disableTime: boolean;\n  /** The input's placeholder */\n  @Input() placeholder = '';\n\n  /** Selects the given Date when the model changes. */\n  writeValue(value: Date) {\n    this.calendar.writeValue(value);\n  }\n\n  /** Change propagation for ControlValueAccessor */\n  propagateChange = (_: any) => {\n  };\n\n  /** registerOnChange implementation of ControlValueAccessor */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  /** registerOnTouched implementation of ControlValueAccessor */\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n    \n  \n  \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatetimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DatetimePipe.html":{"url":"pipes/DatetimePipe.html","title":"pipe - DatetimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  DatetimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/datetime/datetime.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        datetime\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: Date | string, pattern: string | string[], raw?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Date | string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        pattern\n                                                        \n                                                                    string | string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.symbol.resolve('moment.format.date')\n                                                        \n\n                                                \n                                                \n                                                        raw\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment-es6';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'datetime'\n})\nexport class DatetimePipe implements PipeTransform {\n  constructor(private symbol: SymbolService) { }\n  transform(\n    value: Date | string,\n    pattern: string | string[] = this.symbol.resolve('moment.format.date'),\n    raw?: string\n  ): string {\n    if (!value) {\n      return '';\n    }\n    if (raw) {\n      console.log('raw', raw);\n    }\n    const typed = moment(value, pattern, true);\n    if (!typed.isValid()) {\n      return '';\n    }\n    if (Array.isArray(pattern)) {\n      pattern = pattern[0];\n    }\n    return moment(value).format(pattern);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Day.html":{"url":"interfaces/Day.html","title":"interface - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Day\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/form/datetime/month.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a day inside the a month. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        date\n                                \n                                \n                                        draggable\n                                \n                                \n                                        first\n                                \n                                \n                                        format\n                                \n                                \n                                        index\n                                \n                                \n                                        last\n                                \n                                \n                                        today\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:     moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     moment.Moment\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The moment that is represented by the day. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    determines if the day can be dragged to change the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                    \n                                \n                                \n                                    \n                                        first:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the first in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The formatted day number. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The cell index \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                    \n                                \n                                \n                                    \n                                        last:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the last in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        today\n                                    \n                                \n                                \n                                    \n                                        today:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Flag that is true if the day is today. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Can be given a type, to set a class. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport moment from 'moment-es6';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/debounceTime';\n\n/** Interface for a day inside the a month. */\nexport interface Day {\n  /** The cell index */\n  index: number,\n  /** The moment that is represented by the day. */\n  date: moment.Moment;\n  /** Can be given a type, to set a class. */\n  type?: string;\n  /** The formatted day number. */\n  format: string;\n  /** Flag that is true if the day is today. */\n  today: boolean;\n  /** if the day is the first in the timespan */\n  first: boolean;\n  /** if the day is the last in the timespan */\n  last: boolean;\n  /** determines if the day can be dragged to change the timespan */\n  draggable: boolean;\n}\n\n/** Displays the days of a month in a calendarish table. */\n@Component({\n  selector: 'ec-month',\n  styleUrls: ['month.component.scss'],\n  templateUrl: 'month.component.html'\n})\nexport class MonthComponent implements OnInit, OnChanges {\n  dragged: any;\n  /** The current selected date */\n  @Input() selected: moment.Moment;\n  /** Color array for day cells. E.g. to view a month heatmap */\n  @Input() colors: Object;\n  /** Timespan that is reflected. Marks days inside the span */\n  @Input() timespan: moment.Moment[];\n  /** The current date (for showing month) */\n  @Input() date: moment.Moment;\n  /** The color of days that are inside the timespan */\n  @Input() spancolor = '#ccc'\n  /** If true, the timespan start cannot be dragged */\n  @Input() disableDragStart = false;\n  /** If true, the timespan end cannot be dragged */\n  @Input() disableDragEnd = false;\n  /** The current month as string */\n  public formatted: string;\n  /** The cells containing the days */\n  public cells: Array;\n  /** Format for month in header */\n  public monthFormat = 'MMMM YYYY';\n  /** Emits when the selected day changes. */\n  @Output() dayClicked: EventEmitter = new EventEmitter();\n  /** Changed Timespan selection */\n  @Output() spanChanged: EventEmitter = new EventEmitter();\n\n  protected drag: Subject = new Subject();\n  protected changeSpan: Subject = new Subject();\n\n  constructor(public symbol: SymbolService) {\n    this.monthFormat = this.symbol.resolve('moment.format.month') || this.monthFormat;\n    this.drag.asObservable().debounceTime(100)\n      .subscribe((day) => this.dropDay(day));\n    this.changeSpan.asObservable().debounceTime(800)\n      .subscribe(timespan => this.spanChanged.emit(this.timespan))\n  }\n\n  dropDay(day: Day) {\n    if (!this.dragged || (day.first && this.dragged.first || day.last && this.dragged.last)) {\n      return;\n    }\n    const newTimespan = [].concat(this.timespan);\n    newTimespan[this.dragged.first ? 0 : 1] = day.date.clone();\n    if (newTimespan[0].isAfter(newTimespan[1])) {\n      this.dragged.first = !this.dragged.first;\n      this.dragged.last = !this.dragged.last;\n      newTimespan.reverse();\n    }\n    this.timespan = newTimespan;\n    this.changeSpan.next(this.timespan);\n    /* if (this.cells[0] === day || this.cells[this.cells.length - 1] === day) {\n      // change month if dragging to edge\n      this.setDate(day.date.clone().subtract(1, 'days'));\n    } else {\n      this.setDate();\n    } */\n    this.setDate();\n  }\n\n  dragStart(day, e) {\n    if ((this.disableDragStart && day.first) || (this.disableDragEnd && day.last)) {\n      return;\n    }\n    this.dragged = day;\n    e.preventDefault();\n  }\n\n  mouseUp(day, e) {\n    if (!this.dragged) {\n      return;\n    }\n    delete this.dragged;\n    e.preventDefault();\n  }\n\n  mouseOver(day, e) {\n    if (!this.dragged || this.dragged === day) {\n      return;\n    }\n    e.preventDefault();\n    this.drag.next(day);\n  }\n\n  getDayColor(_moment: moment.Moment) {\n    if (this.colors && this.colors[_moment.toISOString()]) {\n      return this.colors[_moment.toISOString()];\n    }\n  }\n\n  /** Initializes the calendar. */\n  ngOnInit() {\n    this.setDate();\n  }\n\n  /** When changing the date or selected input, the calendar will update its view to display the month containing it. */\n  ngOnChanges(change) {\n    if (change.selected) {\n      this.setDate(this.selected);\n      return;\n    } else if (change.date) {\n      this.setDate(this.date);\n    } else if (change.timespan) {\n      this.setDate();\n    } else if (change.colors) {\n      this.cells = this.getMonth(this.date.clone(), 'current');\n    }\n  }\n\n  /** Returns days of current month */\n  getMonth(day = moment(), type?: string): Array {\n    const begin = day.clone().startOf('month').startOf('week'); // .subtract(weeksbefore * 7, 'days');\n    return new Array(42)\n      .fill(0)\n      .map((d, index) => begin.clone().add(index, 'days'))\n      .map((date, index) => {\n        const isStart = this.timespan && date.clone().startOf('day').isSame(this.timespan[0].clone().startOf('day'));\n        const isEnd = this.timespan && date.clone().startOf('day').isSame(this.timespan[1].clone().startOf('day'));\n        return {\n          index,\n          date,\n          type: date.format('MM YYYY') === day.format('MM YYYY') ? 'current' : 'other',\n          active: this.timespan && date.isBetween(this.timespan[0], this.timespan[1], 'days', '[]'),\n          first: isStart,\n          last: isEnd,\n          draggable: (!this.disableDragStart && isStart) || (!this.disableDragEnd && isEnd),\n          color: this.getDayColor(date),\n          format: date.format('DD'),\n          today: moment().startOf('day').diff(date, 'days') === 0,\n        }\n      });\n  }\n\n\n  /** Sets the calendars viewed date to the given moment's month. Renders always 42 cells to keep the layout consistent. */\n  setDate(date: moment.Moment = this.selected || this.date || moment()) {\n    this.date = date.clone();\n    this.formatted = date.format(this.monthFormat);\n    this.cells = this.getMonth(date.clone(), 'current');\n  }\n\n  /** Selects the day of the given moment. */\n  selectDay(_moment: moment.Moment): void {\n    this.setDate(_moment);\n    this.selected = _moment;\n    this.dayClicked.emit(_moment);\n  }\n\n  /** Clears the current selected date*/\n  clearSelection(): void {\n    delete this.selected;\n  }\n\n  /** Returns true if the given moment is currently selected (on a day basis) */\n  isSelected(_moment: moment.Moment): boolean {\n    if (!this.selected) {\n      return;\n    }\n    return this.selected.startOf('day').diff(_moment, 'days') === 0;\n  }\n\n  canAlter(value, span: string) {\n    if (!this.timespan) {\n      return true;\n    }\n    const newDate = this.date.clone().add(value, span);\n    return newDate.isBetween(this.timespan[0], this.timespan[1], 'months', '[]');\n  }\n\n  /** Updates the viewed date to reflect the given relative changes. */\n  alter(value, span: string): void {\n    if (!this.canAlter(value, span)) {\n      return;\n    }\n    this.setDate(this.date.clone().add(value, span));\n  }\n\n  /** Sets the current viewed date to today. */\n  today(): void {\n    this.setDate(moment());\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryInputComponent.html":{"url":"components/DefaultEntryInputComponent.html","title":"component - DefaultEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-form/default-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that can not be represented by the default input template. \n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-entry-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry-form/default-entry-input.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/default-entry-input.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { DefaultInputComponent } from '@ec.components/ui/src/form/default-input/default-input.component';\nimport { SdkService } from '@ec.components/data/src/sdk/sdk.service';\n\n/** This component holds the input templates for all field types that can not be represented by the default input template. */\n@Component({\n  templateUrl: './default-entry-input.component.html',\n})\nexport class DefaultEntryInputComponent extends DefaultInputComponent {\n  constructor(public sdk: SdkService) {\n    super();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryOutputComponent.html":{"url":"components/DefaultEntryOutputComponent.html","title":"component - DefaultEntryOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-form/default-entry-output.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all output types that cannot be represented by the default output component. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-entry-output\n            \n\n\n\n\n            \n                templateUrl\n                ./default-entry-output.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/default-entry-output.component.ts:12\n                            \n                        \n\n                \n                    \n                        The field to output. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/default-entry-output.component.ts:14\n                            \n                        \n\n                \n                    \n                        The item to display \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core';\n\n/** This component holds the templates for all output types that cannot be represented by the default output component. */\n@Component({\n  selector: 'ec-default-entry-output',\n  templateUrl: './default-entry-output.component.html',\n})\nexport class DefaultEntryOutputComponent {\n  /** The field to output. */\n  field: Field;\n  /** The item to display */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n    JSON\n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} output coming soon!-->\n    {{item?.display(field.property)}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          JSON        🚂🚃🚃🚃 {{field.type}} output coming soon!-->    {{item?.display(field.property)}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultInputComponent.html":{"url":"components/DefaultInputComponent.html","title":"component - DefaultInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/default-input/default-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all basic field types. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core/src/item/item';\n\n/** This component holds the templates for all basic field types. */\n@Component({\n  templateUrl: './default-input.component.html',\n})\nexport class DefaultInputComponent {\n  /** The field for which the input is meant. */\n  public field: Field;\n  /** The item that is targeted by the input */\n  public item: Item;\n  /** The form group that is used */\n  public group: FormGroup;\n  /** The form control that is used */\n  public control: FormControl;\n}\n\n    \n\n    \n        \n  \n\n  \n\n  \n\n  \n    \n      \n    \n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n    \n    \n      {{option}}\n    \n  \n\n  \n    \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  {{option}}                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultOutputComponent.html":{"url":"components/DefaultOutputComponent.html","title":"component - DefaultOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/default-output/default-output.component.ts\n\n\n    \n        Description\n    \n    \n        Holds the templates to output item field values. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-output\n            \n\n            \n                styleUrls\n                default-output.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./default-output.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-output/default-output.component.ts:13\n                            \n                        \n\n                \n                    \n                        The field that should be displayed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-output/default-output.component.ts:15\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core/src/item/item';\n\n/** Holds the templates to output item field values. */\n@Component({\n  selector: 'ec-default-output',\n  styleUrls: ['./default-output.component.scss'],\n  templateUrl: './default-output.component.html',\n})\nexport class DefaultOutputComponent {\n  /** The field that should be displayed */\n  field: Field;\n  /** The item that is targeted by the input */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{label}}\n      \n    \n    (field.maxItems||10)\">\n      ...\n    \n  \n\n  \n    {{item?.display(field.property)}}\n  \n\n  \n    &#10004;\n  \n  \n    {{item?.display(field.property)}}\n  \n\n  \n    {{item?.display(field.property)}}\n  \n  \n    {{item?.display(field.property)}}\n  \n\n  \n    \n    {{item?.display(field.property)}}\n  \n\n  \n    \n  \n\n  \n    \n      \n        \n      \n    -->\n    \n    {{item?.display(field.property)?.length}}\n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    {{item?.display(field.property)}}\n    \n  \n  \n    \n    text\n  \n  \n    {{item?.display(field.property)}}-->\n    JSON\n  \n  \n    {{item?.display(field.property)}}  \n  \n  \n    {{item?.display(field.property)}} \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{label}}              (field.maxItems||10)\">      ...            {{item?.display(field.property)}}        ✔        {{item?.display(field.property)}}        {{item?.display(field.property)}}        {{item?.display(field.property)}}            {{item?.display(field.property)}}                                        -->        {{item?.display(field.property)?.length}}                        {{item?.display(field.property)}}                text        {{item?.display(field.property)}}-->    JSON        {{item?.display(field.property)}}          {{item?.display(field.property)}}   '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropzoneDirective.html":{"url":"directives/DropzoneDirective.html","title":"directive - DropzoneDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DropzoneDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/dropzone/dropzone.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive that turns any element into a zone to drop files. \n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecDropzone]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecDropzone\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.is-active\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                dragleave\n                            \n                            \n                                dragover\n                            \n                            \n                                drop\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/dropzone/dropzone.directive.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                    \n                        If true the element acts normal \n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:11\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ecDropzone\n                    \n                    \n                        Emits when files are dropped \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:9\n                            \n                        \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.is-active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.is-active:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:7\n                            \n                        \n\n                \n                    \n                        The is-active class is bound to the host when dragover is active \n\n                    \n                \n\n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            dragleave\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragleave(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:37\n                            \n                        \n\n\n                \n                    \n                            flips active to false on dragleave \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragover\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragover(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:13\n                            \n                        \n\n\n                \n                    \n                            flips active to true on dragover \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drop\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndrop(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:24\n                            \n                        \n\n\n                \n                    \n                            emits dropped files and flips active to false on drop \n\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\n\n/** Directive that turns any element into a zone to drop files. */\n@Directive({ selector: '[ecDropzone]' })\nexport class DropzoneDirective {\n    /** The is-active class is bound to the host when dragover is active */\n    @HostBinding('class.is-active') private active: boolean;\n    /** Emits when files are dropped */\n    @Output() ecDropzone: EventEmitter = new EventEmitter();\n    /** If true the element acts normal */\n    @Input() disabled = false;\n    /** flips active to true on dragover */\n    @HostListener('dragover', ['$event']) onDragOver(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this.active) {\n            this.active = true;\n        }\n    }\n    /** emits dropped files and flips active to false on drop */\n    @HostListener('drop', ['$event']) onDrop(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (!e.dataTransfer.files || !e.dataTransfer.files.length) {\n            return;\n        }\n        this.ecDropzone.emit(e);\n        this.active = false;\n    }\n    /** flips active to false on dragleave */\n    @HostListener('dragleave', ['$event']) onDragLeave(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (this.active) {\n            this.active = false;\n        }\n    }\n    constructor(private el: ElementRef) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicRackComponent.html":{"url":"components/DynamicRackComponent.html","title":"component - DynamicRackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicRackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/dynamic-rack/dynamic-rack.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./dynamic-rack.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/dynamic-rack/dynamic-rack.component.ts:10\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver, Type, ViewChild } from '@angular/core';\n\n// import { CustomFieldComponent } from './custom-field.component';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  // selector: 'ec-dynamic-rack',\n  templateUrl: './dynamic-rack.component.html'\n})\nexport class DynamicRackComponent {\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n}\n\n    \n\n    \n        \n  \n    -->\n    -->\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      -->    -->  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicRackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicSlotComponent.html":{"url":"components/DynamicSlotComponent.html","title":"component - DynamicSlotComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicSlotComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-dynamic-slot\n            \n\n\n\n\n            \n                templateUrl\n                ./dynamic-slot.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, data: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldHost:     SlotHostDirective\n\n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver, ComponentRef, Type, ViewChild } from '@angular/core';\nimport { SlotHostDirective } from '../slot-host.directive';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-dynamic-slot',\n  templateUrl: './dynamic-slot.component.html'\n})\nexport class DynamicSlotComponent {\n  /** The FieldHostDirective will  be used to nest custom components into the field */\n  @ViewChild(SlotHostDirective) fieldHost: SlotHostDirective;\n\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n\n  /** Loads the given component inside the fieldHost. Sets current item and field by default. */\n  loadComponent(component: Type, data: Object = {}): ComponentRef {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n    const viewContainerRef = this.fieldHost.viewContainerRef;\n    viewContainerRef.clear();\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    Object.assign(componentRef.instance, data);\n    return componentRef;\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicSlotComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntriesDirective.html":{"url":"directives/EntriesDirective.html","title":"directive - EntriesDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  EntriesDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/entries/entries.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entryList of a given model with the given config.\nhttps://components.entrecode.de/data/entries\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecEntries]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                entryList\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Private\n                                promise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                load\n                            \n                            \n                                next\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                prev\n                            \n                            \n                                useList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                endless\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entries/entries.directive.ts:34\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                    \n                        Should the entries be loaded immediately? Defaults to true \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        endless\n                    \n                    \n                        If true, calling next will append the next page to the items, making the list grow.\n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be used. \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model to load from. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        The filterOptions for loading. \n\n                            \n                            Type:    any\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:25\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                            \n                        \n                    \n                \n                \n                    \nentries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:100\n                            \n                        \n\n\n                \n                    \n                            This helper returns all items of the current entryList. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLast\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:54\n                            \n                        \n\n\n                \n                    \n                            Loads the entries \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \nnext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:41\n                            \n                        \n\n\n                \n                    \n                            When the model is known, the entryList will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prev\n                            \n                            \n                        \n                    \n                \n                \n                    \nprev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useList\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseList(entryList: EntryList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entryList\n                                                        \n                                                                    EntryList\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            entryList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entryList:     EntryList\n\n                    \n                \n                    \n                        \n                            Type :     EntryList\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:33\n                            \n                        \n\n                \n                    \n                        The current loaded entryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     EntryResource[]\n\n                    \n                \n                    \n                        \n                            Type :     EntryResource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            promise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promise:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:21\n                            \n                        \n\n                \n                    \n                        The promise of the entryList call. \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        ec-entries\nThis component can be used to load a list of entries from the template:\n\n  \n  {{muffin.name}}\n  \n\n    \n\n    \n        import { Directive, Input, OnChanges } from '@angular/core';\nimport { SdkService } from '../sdk/sdk.service';\nimport EntryList from 'ec.sdk/lib/resources/publicAPI/EntryList';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { WithLoader, LoaderComponent } from '@ec.components/ui';\n\n// import { filterOptions } from 'ec.sdk/lib/resources/ListResource';\n\n/** Loads an entryList of a given model with the given config.\n * https://components.entrecode.de/data/entries\n*/\n@Directive({\n  selector: '[ecEntries]',\n  exportAs: 'ecEntries'\n})\nexport class EntriesDirective implements OnChanges, WithLoader {\n  /** The promise of the entryList call. */\n  private promise: any;\n  /** The model to load from. */\n  @Input() model: string;\n  /** The filterOptions for loading. */\n  @Input() options: any = {}; // TODO cannot import #simibug : filterOptions;\n  /** If true, calling next will append the next page to the items, making the list grow.*/\n  @Input() endless = false;\n  /** Should the entries be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entryList */\n  private entryList: EntryList;\n  public items: EntryResource[] = [];\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService) {\n  }\n\n  /** When the model is known, the entryList will be loaded. */\n  ngOnChanges() {\n    if (!this.model) {\n      return;\n    }\n    if (this.endless && this.options.page && this.options.page > 1) {\n      console.warn('cannot init ecEntries on page!==1 with strategy=endless');\n    }\n    if (this.autoload !== false) {\n      this.load();\n    }\n  }\n\n  /** Loads the entries */\n  load() {\n    this.promise = this.sdk.api.entryList(this.model, this.options)\n      .then(list => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n\n  useList(entryList: EntryList) {\n    this.entryList = entryList;\n    const items = this.entryList.getAllItems();\n    if (this.endless) {\n      this.items = this.items.concat(items);\n      this.items = this.items.filter((item) => this.items.find((_item) => _item.id === item.id));\n    } else {\n      this.items = this.entryList.getAllItems();\n    }\n  }\n\n  next() {\n    this.promise = this.entryList.followNextLink().then(list => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  prev() {\n    this.promise = this.entryList.followPrevLink().then(list => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  isLast() {\n    return !this.entryList || !this.entryList.hasNextLink();\n  }\n\n  isFirst() {\n    if (this.endless) {\n      return true;\n    }\n    return !this.entryList || !this.entryList.hasFirstLink();\n  }\n\n  /** This helper returns all items of the current entryList. */\n  entries() {\n    if (!this.entryList) {\n      return [];\n    }\n    return this.entryList.getAllItems();\n  }\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntryDirective.html":{"url":"directives/EntryDirective.html","title":"directive - EntryDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  EntryDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/entry/entry.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entry by id to the template.\nhttps://components.entrecode.de/data/entries\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecEntry]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                            \n                                promise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                entryId\n                            \n                            \n                                levels\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry/entry.directive.ts:32\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                    \n                        Should the entry be loaded immediately? Defaults to true \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        entryId\n                    \n                    \n                        The entry id that should be loaded\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                    \n                        The levels to use. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be used. \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model to load from \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:22\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                    \n                        Fires as soon as the entry has been loaded. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:28\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:47\n                            \n                        \n\n\n                \n                    \n                            Loads the entry. Can be called from template when using autoload=false \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:39\n                            \n                        \n\n\n                \n                    \n                            as soon as model and id are known, the entry will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entry:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:32\n                            \n                        \n\n                \n                    \n                        The current loaded entry \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promise:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:18\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        ec-entry\nThis directive can be used to load a single entry directly from the template:\n\n{{muffin.entry?.name}}\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { SdkService } from '../sdk/sdk.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { WithLoader, LoaderComponent } from '@ec.components/ui';\n\n/** Loads an entry by id to the template.\n * https://components.entrecode.de/data/entries\n * */\n@Directive({\n  selector: '[ecEntry]',\n  exportAs: 'ecEntry'\n})\nexport class EntryDirective implements OnChanges, WithLoader {\n  /** The loading promise */\n  promise: any;\n  /** The entry id that should be loaded*/\n  @Input() entryId: string;\n  /** The model to load from */\n  @Input() model: string;\n  /** Should the entry be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** Fires as soon as the entry has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entry */\n  entry: any;\n\n  /** Injects the sdk */\n  constructor(private sdk: SdkService) {\n  }\n\n  /** as soon as model and id are known, the entry will be loaded. */\n  ngOnChanges() {\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the entry. Can be called from template when using autoload=false */\n  load() {\n    if (!this.entryId || !this.model) {\n      return;\n    }\n    this.promise = this.sdk.api.entry(this.model, this.entryId, this.levels)\n      .then((entry) => {\n        this.entry = entry;\n        this.loaded.emit(entry);\n        return entry;\n      });\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntryListComponent.html":{"url":"components/EntryListComponent.html","title":"component - EntryListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EntryListComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-list/entry-list.component.ts\n\n\n    \n        Description\n    \n    \n        The EntryListComponent is a thin holder of an EntryList instance. It extends the ListComponent\nhttps://components.entrecode.de/data/entry-list\n\n    \n\n    \n        Extends\n    \n    \n            ResourceListComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-entry-list\n            \n\n            \n                styleUrls\n                entry-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ../../../ui/src/list/list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                list\n                            \n                            \n                                resourceConfig\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createList\n                            \n                            \n                                initFilter\n                            \n                            \n                                    Protected\n                                createList\n                            \n                            \n                                filter\n                            \n                            \n                                initFilterQuery\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                api\n                            \n                            \n                                listResource\n                            \n                            \n                                loader\n                            \n                            \n                                relation\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loaderService: LoaderService, sdk: SdkService, notificationService: NotificationsService, modelConfig: ModelConfigService, crud: CrudService, symbol: SymbolService, resourceService: ResourceService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry-list/entry-list.component.ts:27\n                            \n                        \n\n                \n                    \n                            The constructor will just call super of List\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelConfig\n                                                  \n                                                        \n                                                                    ModelConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        crud\n                                                  \n                                                        \n                                                                    CrudService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model whose entries should be shown.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                            \n                            Type:    Core\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listResource\n                    \n                    \n                        If listResource input is set, the given ListResource will be used directly and loading will be skipped. \n\n                            \n                            Type:    ListResource\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be shown while the list is loaded. \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        If true, only one item is selectable next \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        emits when the list changed (after loading) \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createList\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createList()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:57\n                            \n                        \n\n\n                \n                    \n                            The method to create the list\n\n\n                            \n                                Returns :     Promise | ResourceList\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilter(property: string, value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:114\n                            \n                        \n\n\n                \n                    \n                            This method will filter the list by a given property value and optional operator. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initFilterQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitFilterQuery(fieldFilter: (property: string,value: any) => void)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fieldFilter\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:105\n                            \n                        \n\n\n                \n                    \n                            When changing the model or the config, the list will update\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:78\n                            \n                        \n\n\n                \n                    \n                            Creates/Updates the list and subscribes Observables.  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ListConfig\n\n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:27\n                            \n                        \n\n                \n                    \n                        Overrides the Config of ResourceList with a ListConfig containing an EntryResource \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        list:     ResourceList\n\n                    \n                \n                    \n                        \n                            Type :     ResourceList\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:28\n                            \n                        \n\n                \n                    \n                        The instance of an EntryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resourceConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceConfig:     ResourceConfig\n\n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Entry List\nEntry List is a thin extension of ec-list. It handles loading entries from the datamanager and converting them to a List instance.\n\n    \n\n    \n        import { Component, Input, Optional } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SdkService } from '../sdk/sdk.service';\nimport { ModelConfigService } from '../model-config/model-config.service';\nimport { LoaderService } from '@ec.components/ui/src/loader/loader.service';\nimport { EntryList } from './entry-list';\nimport { CrudService } from '../crud/crud.service';\nimport { NotificationsService } from '@ec.components/ui/src/notifications/notifications.service';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { ListConfig } from '@ec.components/core/src/list/list-config.interface';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport { ResourceService } from '../resource-config/resource.service';\n\n/** The EntryListComponent is a thin holder of an EntryList instance. It extends the ListComponent\n * https://components.entrecode.de/data/entry-list\n*/\n@Component({\n  selector: 'ec-entry-list',\n  templateUrl: '../../../ui/src/list/list.component.html', // TODO avoid relative paths\n  styleUrls: ['./entry-list.component.scss']\n})\nexport class EntryListComponent extends ResourceListComponent {\n  /** The model whose entries should be shown.*/\n  @Input() model: string;\n  /** Overrides the Config of ResourceList with a ListConfig containing an EntryResource */\n  config: ListConfig = {};\n\n  /** The constructor will just call super of List*/\n  constructor(protected loaderService: LoaderService,\n    protected sdk: SdkService,\n    protected notificationService: NotificationsService,\n    protected modelConfig: ModelConfigService,\n    protected crud: CrudService,\n    protected symbol: SymbolService,\n    protected resourceService: ResourceService,\n    @Optional() public route: ActivatedRoute) {\n    super(loaderService, sdk, notificationService, symbol, resourceService, route);\n    /*if (route) {\n      route.params.subscribe(({ model }) => {\n        if (model) {\n          this.model = model;\n        }\n      })\n    }*/\n  }\n\n  initFilter() {\n    this.initFilterQuery((property, value) => {\n      const target = property.split('.');\n      const field = this.config.fields[target[1]];\n      if (target[0] === this.model && field) {\n        return {\n          property: target[1],\n          value: field.queryFilter ? field.queryFilter(value) : value\n        }\n      }\n    });\n  }\n\n  createList(): Promise {\n    if (!this.model) {\n      return;\n    }\n    this.crud.change({ model: this.model })\n      .subscribe((update) => {\n        this.list.load();\n      }); // TODO: remove crud service or similar\n    this.resourceService.change({ relation: this.model })\n      .subscribe((update) => {\n        this.list.load();\n      });\n    return this.modelConfig.generateConfig(this.model, (this.config || {}).fields)\n      .then((config: ListConfig) => {\n        this.config = Object.assign(this.config || {}, config);\n        this.initFilter();\n        return new EntryList(this.model, this.config, this.sdk);\n      });\n\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n        \n        \n          {{group.value}}\n        \n      \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          {{group.value}}                          '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'EntryListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/notifications/error/error.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/error/error.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                    \n                        The error that should be displayed \n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            change update \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            initial update \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            updates error message  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  */\n@Component({\n  selector: 'ec-error',\n  templateUrl: './error.component.html'\n})\n/** Displays an error thrown by the SDK. */\nexport class ErrorComponent implements OnInit, OnChanges {\n  /** The error that should be displayed */\n  @Input() error: any;\n\n  constructor(private symbol: SymbolService) {\n  }\n\n  /** initial update */\n  ngOnInit() {\n    this.update();\n  }\n  /** change update */\n  ngOnChanges() {\n    this.update();\n  }\n  /** updates error message  */\n  update() {\n    if (!this.error) {\n      return;\n    }\n    const message = this.symbol.resolve('error.' + this.error.code);\n    if (message) {\n      this.error.message = message;\n    }\n  }\n}\n\n    \n\n    \n        {{error.code}}\n{{error.dataPath}}\n{{error?.message}}\n{{error.detail}}\n\n  \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{error.code}}{{error.dataPath}}{{error?.message}}{{error.detail}}        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Field.html":{"url":"classes/Field.html","title":"class - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Field\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/field/field.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        FieldConfigProperty\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                    Optional\n                                filterable\n                            \n                            \n                                    Optional\n                                filterOperator\n                            \n                            \n                                    Optional\n                                filterPopClass\n                            \n                            \n                                    Optional\n                                form\n                            \n                            \n                                    Optional\n                                hidden\n                            \n                            \n                                    Optional\n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                input\n                            \n                            \n                                    Optional\n                                label\n                            \n                            \n                                    Optional\n                                maxItems\n                            \n                            \n                                    Optional\n                                output\n                            \n                            \n                                    Optional\n                                placeholder\n                            \n                            \n                                    Optional\n                                property\n                            \n                            \n                                    Optional\n                                required\n                            \n                            \n                                    Optional\n                                sortable\n                            \n                            \n                                    Optional\n                                type\n                            \n                            \n                                    Optional\n                                validate\n                            \n                            \n                                values\n                            \n                            \n                                    Optional\n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlaceholder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(property: string, config: FieldConfigProperty)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/field/field.ts:47\n                            \n                        \n\n                \n                    \n                            A Field is constructed by assigning the given config and the property to itself\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:35\n                            \n                        \n\n                \n                    \n                        Class string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:41\n                            \n                        \n\n                \n                    \n                        if false, the field will not be filterable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterOperator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterOperator:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:27\n                            \n                        \n\n                \n                    \n                        The operator to use for filtering: exact, search, any etc.. see ec.sdk doc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterPopClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterPopClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:29\n                            \n                        \n\n                \n                    \n                        Defines the class for the filter pop, e.g. in list header. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:31\n                            \n                        \n\n                \n                    \n                        Wether or not the field should appear in default forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hidden\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hidden:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:11\n                            \n                        \n\n                \n                    \n                        If true, the field will not be visible anywhere \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:45\n                            \n                        \n\n                \n                    \n                        Icon name that should be associated with the field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:37\n                            \n                        \n\n                \n                    \n                        id for form labels \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:19\n                            \n                        \n\n                \n                    \n                        Custom Component to display form input *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:25\n                            \n                        \n\n                \n                    \n                        Label for Inputs. Defaults to property name. If false, the label is empty. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxItems:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:43\n                            \n                        \n\n                \n                    \n                        Defines the maximum of visible item (for tags view or similar). Defaults to 10 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            output\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        output:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:21\n                            \n                        \n\n                \n                    \n                        Custom Component to display value *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            placeholder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placeholder:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:23\n                            \n                        \n\n                \n                    \n                        Placeholder in inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            property\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        property:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:9\n                            \n                        \n\n                \n                    \n                        The name of the field's property \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            required\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        required:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:7\n                            \n                        \n\n                \n                    \n                        Tells if the field is required in forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sortable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:39\n                            \n                        \n\n                \n                    \n                        if false, the field will not be sortable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:13\n                            \n                        \n\n                \n                    \n                        The field's type \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validate:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:17\n                            \n                        \n\n                \n                    \n                        Custom Validation function \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        values:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:33\n                            \n                        \n\n                \n                    \n                        Possible Values e.g. in a select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            view\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        view:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:15\n                            \n                        \n\n                \n                    \n                        The field's view \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlaceholder\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlaceholder()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns placeholder if any \n\n\n                            \n                                Returns :     string | true\n\n                            \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/field/field.ts:45\n                            \n                        \n                \n                    \n                        wildcard for custom config values \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n\n    \n        Field\nA Field represents a property of an Object, without a specific value.\nIt is used to describe a column or field of one or multiple equally structured objects.\nThe field config (see FieldConfigProperty) can contain different transformation methods, such as:\n\nresolve: This method is used to resolve the field value from the object body.\nIt runs before all other transformation methods.\ndisplay: Transforms the resolved value to a human readable output. It is used for e.g. in list cells.\ngroup: Should return a value that is suitable for grouping multiple different values together, like in a list.\n\nExample Usage:\nconst field = new Field('name', {\n    resolve: (body) => body.value.name,\n    display: (value) => value.toUpperCase(),\n    group: (value) => value.length + ' Buchstaben',\n    sort: (value) => value.length\n    });\nconst name = field.resolve({value:{name:'bobby'}}); // 'bobby'\nfield.display(name); // => 'Bobby'\nfield.group(name); // => '5 Buchstaben'\nfield.sort(name); // => 5The above example is of course only viable to show the concept.\nWhen using the components as a whole, those methods will be called automatically from Item, List or Form.\n\n    \n\n    \n        import { FieldConfigProperty } from '../config/field-config-property.interface';\n\nexport class Field implements FieldConfigProperty {\n  /** Tells if the field is required in forms */\n  required?: boolean;\n  /** The name of the field's property */\n  property?: string;\n  /** If true, the field will not be visible anywhere */\n  hidden?: boolean;\n  /** The field's type */\n  type?: string;\n  /** The field's view */\n  view?: string;\n  /** Custom Validation function */\n  validate?: (value, field) => any;\n  /** Custom Component to display form input **/\n  input?: any;\n  /** Custom Component to display value **/\n  output?: any;\n  /** Placeholder in inputs */\n  placeholder?: string;\n  /** Label for Inputs. Defaults to property name. If false, the label is empty. */\n  label?: string | boolean;\n  /** The operator to use for filtering: exact, search, any etc.. see ec.sdk doc */\n  filterOperator?: string;\n  /** Defines the class for the filter pop, e.g. in list header. */\n  filterPopClass?: string;\n  /** Wether or not the field should appear in default forms */\n  form?: boolean;\n  /** Possible Values e.g. in a select */\n  values: any[] = [];\n  /** Class string */\n  class = '';\n  /** id for form labels */\n  id: string;\n  /** if false, the field will not be sortable in a list */\n  sortable?: boolean;\n  /** if false, the field will not be filterable in a list */\n  filterable?: boolean;\n  /** Defines the maximum of visible item (for tags view or similar). Defaults to 10 */\n  maxItems?: number;\n  /** Icon name that should be associated with the field */\n  icon?: string;\n  /** wildcard for custom config values */\n  [key: string]: any;\n\n  /** A Field is constructed by assigning the given config and the property to itself*/\n  constructor(property: string, config: FieldConfigProperty) {\n    if (config) {\n      Object.assign(this, config);\n    }\n    Object.assign(this, { property: property });\n    this.id = `${this.property}_${Date.now()}`;\n  }\n\n  /** Returns placeholder if any */\n  getPlaceholder() {\n    return this.placeholder || this.label || this.property;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldConfig.html":{"url":"interfaces/FieldConfig.html","title":"interface - FieldConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FieldConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/config/field-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for list fields.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    FieldConfigProperty\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/config/field-config.interface.ts:4\n                            \n                        \n                \n                    \n                        Each field can be configured in the form of FieldConfigProperty. \n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        export interface FieldConfig {\n  /** Each field can be configured in the form of FieldConfigProperty. */\n  [key: string]: FieldConfigProperty\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileOptions.html":{"url":"interfaces/FileOptions.html","title":"interface - FileOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for file options used by new assets \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customNames\n                                \n                                \n                                            Optional\n                                        fieldName\n                                \n                                \n                                            Optional\n                                        ignoreDuplicates\n                                \n                                \n                                            Optional\n                                        includeAssetIDInPath\n                                \n                                \n                                            Optional\n                                        preserveFilenames\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customNames\n                                    \n                                \n                                \n                                    \n                                        customNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional custom names for assets. Mapped by indices to assets. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                    \n                                \n                                \n                                    \n                                        fieldName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom file form fieldName \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreDuplicates\n                                    \n                                \n                                \n                                    \n                                        ignoreDuplicates:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Ignores duplicates \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includeAssetIDInPath\n                                    \n                                \n                                \n                                    \n                                        includeAssetIDInPath:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Includes assetID in path \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preserveFilenames\n                                    \n                                \n                                \n                                    \n                                        preserveFilenames:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Preserves Filenames \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource,\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[],\n  /** The uploaded asset as item */\n  item?: Item\n  /** The uploaded asset as item */\n  items?: Array>\n  /** The list where it happened. */\n  list?: ResourceList,\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  customNames?: string[]\n  /** Custom file form fieldName */\n  fieldName?: string\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n\n  public newAssetListConfig = { // TODO: dont use\n    label: 'title',\n    identifier: 'assetID',\n    fields: {\n      title: {\n        label: 'Titel',\n        sortable: true,\n        filterable: true,\n        type: 'text',\n        view: 'string',\n      },\n    }\n  }\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig) {\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset) {\n    if (Array.isArray(asset)) {\n      return asset.length ? this.isNewAsset(asset[0]) : false;\n    }\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(asset.assetID)\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n    const files = e.target.files || e.dataTransfer.files;\n    if (!files.length) {\n      return;\n    }\n    return api.createDMAssets(assetGroupID, this.getFormData(files, options))\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.newAssetListConfig),\n          items: assets.map(asset => new Item(asset, this.newAssetListConfig))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(e): Promise {\n    const files = e.target.files || e.dataTransfer.files;\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve().then((): Promise Promise> => {\n      if (files.length === 1) {\n        return this.sdk.api.createAsset(data, {})\n      }\n      return this.sdk.api.createAssets(data, {})\n    })\n      .then(res => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      }).then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('legacyAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(assets: Array, assetGroupID?: string): Promise> {\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (assetGroupID) { // new assets\n      return this.sdk.api.dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then(dmAssetList => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then((): any => {\n      if (unresolved.length === 1) {\n        return this.sdk.api.asset(unresolved[0]).then(asset => {\n          return [asset]\n        });\n      }\n      return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 })\n        .then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ?\n              resolved.find((resource) => resource.assetID === asset) : asset)\n        });\n\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                newAssetListConfig\n                            \n                            \n                                    Public\n                                uploads\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormData\n                            \n                            \n                                    Public\n                                isNewAsset\n                            \n                            \n                                    Public\n                                resolveAssets\n                            \n                            \n                                    Public\n                                uploadAssets\n                            \n                            \n                                    Public\n                                uploadFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, typeConfig: TypeConfigService, resourceService: ResourceService, resourceConfig: ResourceConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/file.service.ts:63\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                    TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormData(files: FileList, options?: FileOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:81\n                            \n                        \n\n\n                \n                    \n                            Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    FileOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormData\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isNewAsset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isNewAsset(asset: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:73\n                            \n                        \n\n\n                \n                    \n                            returns true if the given asset is a new one (DMAssetResource) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        asset\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolveAssets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolveAssets(assets: Array, assetGroupID?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:157\n                            \n                        \n\n\n                \n                    \n                            Resolves all assetIDs to PublicAssetResources \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        assets\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        assetGroupID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploadAssets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        uploadAssets(e: , assetGroupID: , options: FileOptions, api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            Upload New Assets \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        assetGroupID\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    FileOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploadFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        uploadFiles(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:123\n                            \n                        \n\n\n                \n                    \n                            Upload old assets \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newAssetListConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newAssetListConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : { // TODO: dont use\n    label: 'title',\n    identifier: 'assetID',\n    fields: {\n      title: {\n        label: 'Titel',\n        sortable: true,\n        filterable: true,\n        type: 'text',\n        view: 'string',\n      },\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploads\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uploads:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:49\n                            \n                        \n\n                \n                    \n                        The changes event is emitted everytime an entry is created or updated. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource,\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[],\n  /** The uploaded asset as item */\n  item?: Item\n  /** The uploaded asset as item */\n  items?: Array>\n  /** The list where it happened. */\n  list?: ResourceList,\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  customNames?: string[]\n  /** Custom file form fieldName */\n  fieldName?: string\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n\n  public newAssetListConfig = { // TODO: dont use\n    label: 'title',\n    identifier: 'assetID',\n    fields: {\n      title: {\n        label: 'Titel',\n        sortable: true,\n        filterable: true,\n        type: 'text',\n        view: 'string',\n      },\n    }\n  }\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig) {\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset) {\n    if (Array.isArray(asset)) {\n      return asset.length ? this.isNewAsset(asset[0]) : false;\n    }\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(asset.assetID)\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n    const files = e.target.files || e.dataTransfer.files;\n    if (!files.length) {\n      return;\n    }\n    return api.createDMAssets(assetGroupID, this.getFormData(files, options))\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.newAssetListConfig),\n          items: assets.map(asset => new Item(asset, this.newAssetListConfig))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(e): Promise {\n    const files = e.target.files || e.dataTransfer.files;\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve().then((): Promise Promise> => {\n      if (files.length === 1) {\n        return this.sdk.api.createAsset(data, {})\n      }\n      return this.sdk.api.createAssets(data, {})\n    })\n      .then(res => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      }).then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('legacyAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(assets: Array, assetGroupID?: string): Promise> {\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (assetGroupID) { // new assets\n      return this.sdk.api.dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then(dmAssetList => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then((): any => {\n      if (unresolved.length === 1) {\n        return this.sdk.api.asset(unresolved[0]).then(asset => {\n          return [asset]\n        });\n      }\n      return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 })\n        .then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ?\n              resolved.find((resource) => resource.assetID === asset) : asset)\n        });\n\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n  Modules\n  FilesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nAssetDirective\n\nAssetDirective\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\n\n\nResourceModule\n\nResourceModule\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/files/files.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AssetDirective\n                            \n                            \n                                AssetListPopComponent\n                            \n                            \n                                AssetSelectComponent\n                            \n                            \n                                DropzoneDirective\n                            \n                            \n                                ImageDirective\n                            \n                            \n                                UploadComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AssetSelectComponent\n                            \n                            \n                                UploadComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     FileService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ResourceModule\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AssetDirective\n                            \n                            \n                                    AssetListPopComponent\n                            \n                            \n                                    AssetSelectComponent\n                            \n                            \n                                    DropzoneDirective\n                            \n                            \n                                    ImageDirective\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UploadComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { UiModule } from '@ec.components/ui/src/ui.module';\nimport { AssetSelectComponent } from './asset-select/asset-select.component';\nimport { FileService } from './file.service';\nimport { UploadComponent } from './upload/upload.component';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { AssetDirective } from './asset/asset.directive';\nimport { ImageDirective } from './image/image.directive';\nimport { AssetListPopComponent } from './asset-list-pop/asset-list-pop.component';\nimport { ResourceModule } from '../resource/resource.module';\nimport { DropzoneDirective } from './dropzone/dropzone.directive';\n\n@NgModule({\n  entryComponents: [\n    AssetSelectComponent,\n    UploadComponent,\n  ],\n  declarations: [\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    SdkModule,\n    ResourceModule\n  ],\n  exports: [\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n    SdkModule,\n  ],\n  providers: [\n    FileService\n  ],\n})\nexport class FilesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormConfig.html":{"url":"interfaces/FormConfig.html","title":"interface - FormConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FormConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/form/form-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                FormConfig is an extension of ItemConfig. \n\n            \n\n            \n                Extends\n            \n            \n                    ItemConfig\n            \n\n\n\n\n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\n\n/** FormConfig is an extension of ItemConfig. */\nexport interface FormConfig extends ItemConfig {\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n  Modules\n  FormModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nCalendarComponent->FormModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nFormModule -->\n\nDaterangeComponent->FormModule\n\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nFormModule -->\n\nDatetimePipe->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nFormModule -->\n\nHeatmapComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nFormModule -->\n\nMonthComponent->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nFormModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nFormModule->DaterangeComponent \n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nFormModule->DatetimePipe \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nFormModule->HeatmapComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nFormModule->MonthComponent \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nIconModule\n\nIconModule\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/form.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CalendarComponent\n                            \n                            \n                                DaterangeComponent\n                            \n                            \n                                DatetimeComponent\n                            \n                            \n                                DatetimePipe\n                            \n                            \n                                DefaultInputComponent\n                            \n                            \n                                DefaultOutputComponent\n                            \n                            \n                                FormComponent\n                            \n                            \n                                HeatmapComponent\n                            \n                            \n                                MaxItemsPipe\n                            \n                            \n                                MonthComponent\n                            \n                            \n                                ToggleComponent\n                            \n                            \n                                VisibleFieldsPipe\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                DefaultInputComponent\n                            \n                            \n                                DefaultOutputComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     FormService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IconModule\n                            \n                            \n                                    IoModule\n                            \n                            \n                                    LoaderModule\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    SymbolModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CalendarComponent\n                            \n                            \n                                    DaterangeComponent\n                            \n                            \n                                    DatetimeComponent\n                            \n                            \n                                    DatetimePipe\n                            \n                            \n                                    FormComponent\n                            \n                            \n                                    HeatmapComponent\n                            \n                            \n                                    IoModule\n                            \n                            \n                                    MaxItemsPipe\n                            \n                            \n                                    MonthComponent\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    ToggleComponent\n                            \n                            \n                                    VisibleFieldsPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormComponent } from './form.component';\nimport { DefaultInputComponent } from './default-input/default-input.component';\nimport { DefaultOutputComponent } from './default-output/default-output.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PopModule } from '../pop/pop.module';\nimport { FormService } from './form.service';\nimport { VisibleFieldsPipe } from './visible-fields.pipe';\nimport { IoModule } from '../io/io.module';\nimport { DatetimeComponent } from './datetime/datetime.component';\nimport { MonthComponent } from './datetime/month.component';\nimport { DatetimePipe } from './datetime/datetime.pipe';\nimport { ToggleComponent } from './toggle/toggle.component';\nimport { CalendarComponent } from './datetime/calendar.component';\nimport { LoaderModule } from '../loader/loader.module';\nimport { IconModule } from '../icon/icon.module';\nimport { MaxItemsPipe } from './max-items.pipe';\nimport { SymbolModule } from '../symbol/symbol.module';\nimport { HeatmapComponent } from './datetime/heatmap.component';\nimport { DaterangeComponent } from './datetime/daterange.component';\n\n@NgModule({\n  entryComponents: [\n    DefaultInputComponent,\n    DefaultOutputComponent,\n  ],\n  declarations: [\n    FormComponent,\n    DefaultInputComponent,\n    DefaultOutputComponent,\n    DatetimeComponent,\n    DatetimePipe,\n    MonthComponent,\n    HeatmapComponent,\n    DaterangeComponent,\n    CalendarComponent,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    ToggleComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    PopModule,\n    IoModule,\n    LoaderModule,\n    IconModule,\n    SymbolModule\n  ],\n  exports: [\n    FormComponent,\n    ReactiveFormsModule,\n    DatetimeComponent,\n    DatetimePipe,\n    CalendarComponent,\n    HeatmapComponent,\n    DaterangeComponent,\n    MonthComponent,\n    PopModule,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    IoModule,\n    ToggleComponent,\n  ],\n  providers: [\n    FormService\n  ]\n})\nexport class FormModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/form/form.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the interface between Angular Forms and ec.components core classes. \n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addField\n                            \n                            \n                                    Public\n                                getGroup\n                            \n                            \n                                getValidators\n                            \n                            \n                                validateFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addField\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addField(field: Field, form: Form, group: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            adds a new field to a form. handles form group and control \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        group\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroup(form: Form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Initializes the form group from the form fields\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValidators\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValidators(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Extracts all validators from a given Field instance. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidatorFn[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateFactory(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Returns a Validation function from the given field (using field.validate) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidationErrors | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Form } from '@ec.components/core/src/form/form';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators\n} from '@angular/forms';\nimport { Field } from '@ec.components/core/src/field/field';\n\n/** This service is the interface between Angular Forms and ec.components core classes. */\n@Injectable()\nexport class FormService {\n\n  /** Initializes the form group from the form fields*/\n  public getGroup(form: Form) {\n    const control = {};\n    form.fields.filter((field) => field.form !== false)\n      .forEach((field) => {\n        const validators = this.getValidators(field);\n        control[field.property] = new FormControl(form.getValue(field.property), validators)\n        // TODO use { updateOn: blur } when updating to angular 5.0.0\n        // see https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4\n      });\n    return new FormGroup(control);\n  }\n\n  /** adds a new field to a form. handles form group and control */\n  public addField(field: Field, form: Form, group: FormGroup) {\n    const validators = this.getValidators(field);\n    const control = new FormControl(form.getValue(field.property), validators);\n    group.addControl(field.property, control);\n  }\n\n  /** Extracts all validators from a given Field instance. */\n  getValidators(field: Field): ValidatorFn[] {\n    const validators = [];\n    if (field.required) {\n      validators.push(Validators.required);\n    }\n    if (field.validate) {\n      validators.push(this.validateFactory(field));\n    }\n    return validators;\n  }\n\n  /** Returns a Validation function from the given field (using field.validate) */\n  validateFactory(field: Field): ValidationErrors | null {\n    return (control: AbstractControl) => {\n      if (!field.validate) {\n        return;\n      }\n      const error = field.validate(control.value, field);\n      if (error) {\n        return {\n          custom: error\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocodeService.html":{"url":"injectables/GeocodeService.html","title":"injectable - GeocodeService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GeocodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/location/src/geocode.service.ts\n        \n\n            \n                Description\n            \n            \n                Wraps google maps api to handle geocode operations \n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                autocompleteAddress\n                            \n                            \n                                geocodeLatLng\n                            \n                            \n                                    Public\n                                getNearestAddress\n                            \n                            \n                                    Public\n                                observeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapLoader: MapsAPILoader, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/geocode.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapLoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autocompleteAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        autocompleteAddress(el: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Turns an input element to an maps autocomplete searchbar. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocodeLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \ngeocodeLatLng(geocoder: , location: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Reverse address lookup for a given location \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocoder\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        location\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNearestAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNearestAddress(location: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Returns the nearest address for a given location \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            observeElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        observeElement(el: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Observes a given input element, transforming it into an autocomplete \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { MapsAPILoader } from '@agm/core';\nimport { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { switchMap } from 'rxjs/operators';\n\n/** declares google namespace */\ndeclare var google: any;\n\n/** Wraps google maps api to handle geocode operations */\n@Injectable()\nexport class GeocodeService {\n\n    constructor(private mapLoader: MapsAPILoader,\n        private ngZone: NgZone) { }\n\n    /** Observes a given input element, transforming it into an autocomplete */\n    public observeElement(el) {\n        return new Observable(observer => {\n            const autocomplete = new google.maps.places.Autocomplete(el, {\n                types: ['address']\n            });\n            autocomplete.addListener('place_changed', () => {\n                this.ngZone.run(() => {\n                    // get the place result\n                    const place = autocomplete.getPlace();\n                    // verify result\n                    if (place.geometry === undefined || place.geometry === null) {\n                        return;\n                    }\n                    const coords = {\n                        latitude: place.geometry.location.lat(),\n                        longitude: place.geometry.location.lng()\n                    }\n                    observer.next(coords);\n                    /* observer.complete(); */\n                });\n            });\n        });\n    }\n\n    /** Turns an input element to an maps autocomplete searchbar. */\n    public autocompleteAddress(el): Observable {\n        return fromPromise(this.mapLoader.load())\n            .pipe(switchMap(() => this.observeElement(el)));\n    }\n\n    /** Reverse address lookup for a given location */\n    geocodeLatLng(geocoder, location): Promise {\n        return new Promise((resolve, reject) => {\n            geocoder.geocode({ location }, (results, status) => {\n                if (status === 'OK') {\n                    resolve(results);\n                } else {\n                    reject(status);\n                }\n            });\n        });\n    }\n\n    /** Returns the nearest address for a given location */\n    public getNearestAddress(location: { latitude: number, longitude: number }): Promise> {\n        return this.mapLoader.load().then(() => {\n            return this.geocodeLatLng(\n                new google.maps.Geocoder, {\n                    lat: location.latitude,\n                    lng: location.longitude\n                }\n            );\n        })\n    }\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GroupPipe.html":{"url":"pipes/GroupPipe.html","title":"pipe - GroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  GroupPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/list/group.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        group\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: Array>, property: string, value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/group.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Item } from '@ec.components/core';\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'group'\n})\nexport class GroupPipe implements PipeTransform {\n  transform(items: Array>, property: string, value: any): any {\n    if (!property) {\n      return items;\n    }\n    return items.filter((item) => {\n      return item.group(property) === value;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryService.html":{"url":"injectables/HistoryService.html","title":"injectable - HistoryService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/sdk/history.service.ts\n        \n\n            \n                Description\n            \n            \n                The HistoryService keeps track of live updates for models entries and datamanagers. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                eventSources\n                            \n                            \n                                    Public\n                                loaderService\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                promises\n                            \n                            \n                                    Public\n                                resourceService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disableUpdates\n                            \n                            \n                                enableUpdates\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService, loaderService: LoaderService, router: Router, resourceService: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/sdk/history.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableUpdates\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisableUpdates(key: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Closes the event stream for the given key \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableUpdates\n                            \n                            \n                        \n                    \n                \n                \n                    \nenableUpdates(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Enables Updates for the given resource. The relation is passed through the Update instances on change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    ModelResource | DataManagerResource | EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            Toggles live updates on the resource and stores them under the given key. The relation is passed through the Update instances on change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    ModelResource | DataManagerResource | EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eventSources\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eventSources:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:16\n                            \n                        \n\n                \n                    \n                        EventSources that are active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaderService:     LoaderService\n\n                    \n                \n                    \n                        \n                            Type :     LoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promises\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promises:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:14\n                            \n                        \n\n                \n                    \n                        Current loaded histories \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceService:     ResourceService\n\n                    \n                \n                    \n                        \n                            Type :     ResourceService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Resource } from 'halfred';\nimport ModelResource from 'ec.sdk/lib/resources/datamanager/ModelResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { ResourceService } from '@ec.components/data/src/resource-config/resource.service';\nimport { NotificationsService, LoaderService } from '@ec.components/ui';\nimport { Router } from '@angular/router';\n\n/** The HistoryService keeps track of live updates for models entries and datamanagers. */\n@Injectable()\nexport class HistoryService {\n    /** Current loaded histories */\n    promises: { [relation: string]: Promise } = {};\n    /** EventSources that are active */\n    eventSources: { [relation: string]: any } = {}; // EventSource[]\n\n    constructor(\n        public notificationService: NotificationsService,\n        public loaderService: LoaderService,\n        public router: Router,\n        public resourceService: ResourceService) { }\n    /** Toggles live updates on the resource and stores them under the given key. The relation is passed through the Update instances on change. */\n    toggle(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key = this.router.url.split('?')[0]) {\n        if (this.promises[key] && !this.eventSources[relation]) {\n            return this.promises[key];\n        }\n        this.disableUpdates(key);\n        this.promises[key] = this.enableUpdates(resource, relation, key)\n            .then(source => {\n                this.eventSources[key] = source;\n            })\n            .catch(error => {\n                delete this.promises[key];\n            });\n        this.loaderService.wait(this.promises[key]);\n    }\n\n    /** Closes the event stream for the given key */\n    disableUpdates(key = this.router.url.split('?')[0]) {\n        if (this.eventSources[key]) {\n            this.eventSources[key].close();\n            delete this.promises[key];\n            delete this.eventSources[key];\n            return;\n        }\n    }\n\n    /** Enables Updates for the given resource. The relation is passed through the Update instances on change. */\n    enableUpdates(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key = this.router.url.split('?')[0]) {\n        if (!resource || !resource.newHistory) {\n            throw new Error('cannot get history: no newHistory method found on given resource');\n        }\n        if (this.promises[key]) {\n            return this.promises[key];\n        }\n        const loading = resource.newHistory()\n            .then(source => {\n                source.addEventListener('entryUpdated', (e) => {\n                    const data = JSON.parse(e.data);\n                    this.resourceService.changes.next({\n                        relation,\n                        type: 'put',\n                        identifier: data ? data.entryID : ''\n                    });\n                }, false);\n                source.addEventListener('entryCreated', (e) => {\n                    const data = JSON.parse(e.data);\n                    this.resourceService.changes.next({\n                        relation,\n                        type: 'post',\n                        identifier: data ? data.entryID : ''\n                    });\n                }, false);\n                return source;\n            })\n            .catch(error => {\n                this.notificationService.emit({\n                    title: 'History Error',\n                    error\n                });\n            });\n        this.loaderService.wait(loading);\n        return loading;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/icon/icon.component.ts\n\n\n    \n        Description\n    \n    \n        Displays icons by name. If the matching Icon (from registry contains a content, the content is shown. If not, is is expected to be a ec-icon. \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-icon\n            \n\n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(iconService: IconService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/icon/icon.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iconService\n                                                  \n                                                        \n                                                                    IconService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of the icon. An Icon with this name is expected to be present in the current iconService registry. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.component.ts:19\n                            \n                        \n\n\n                \n                    \n                            The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     Symbol\n\n                    \n                \n                    \n                        \n                            Type :     Symbol\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.component.ts:15\n                            \n                        \n\n                \n                    \n                        The resolved icon (by name) \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Icon\nDisplays an icon:\nThe default icon set uses ec-icons. You have to embedd them to your index.html (or similar):\n  Using another icon set\nYou can also use other icons:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.use(emojiIcons);\n    }\n}Overriding icons\nYou can also override the current icon registry:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.set(emojiIcons);\n    }\n}This will override the icon registry with the given icons, but keep the rest.\n\n    \n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { IconService } from './icon.service';\nimport { Symbol } from '../symbol/symbol.interface';\n\n/** Displays icons by name. If the matching Icon (from registry contains a content, the content is shown. If not, is is expected to be a ec-icon. */\n@Component({\n    selector: 'ec-icon',\n    templateUrl: './icon.component.html'\n})\n\nexport class IconComponent implements OnInit {\n    /** The name of the icon. An Icon with this name is expected to be present in the current iconService registry. */\n    @Input() name: string;\n    /** The resolved icon (by name) */\n    icon: Symbol;\n    constructor(private iconService: IconService) {\n    }\n    /** The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. */\n    ngOnInit() {\n        this.icon = this.iconService.get(this.name);\n        if (!this.icon) {\n            console.warn(`Icon ${this.name} cannot be found. Using the following icon registry:`, this.iconService.registry);\n        }\n    }\n}\n\n    \n\n    \n        \n{{icon.content}}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{icon.content}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IconModule.html":{"url":"modules/IconModule.html","title":"module - IconModule","body":"\n                   \n\n\n\n\n  Modules\n  IconModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\n\nIconComponent\n\nIconComponent\n\n\n\nIconModule\n\nIconModule\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/icon/icon.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                IconComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     IconService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    IconComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IconComponent } from './icon.component';\nimport { IconService } from './icon.service';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [IconComponent],\n    exports: [IconComponent],\n    providers: [IconService],\n})\nexport class IconModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconService.html":{"url":"injectables/IconService.html","title":"injectable - IconService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  IconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/icon/icon.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons) \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registry\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registry:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : ecIcons\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.service.ts:9\n                            \n                        \n\n                \n                    \n                        The current icon set that is registered to the service. It will be used to resolve icons from. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ecIcons } from './ec-icons';\nimport { Symbol } from '../symbol/symbol.interface';\nimport { SymbolService } from '../symbol/symbol.service';\n/** Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons) */\n@Injectable()\nexport class IconService extends SymbolService {\n    /** The current icon set that is registered to the service. It will be used to resolve icons from. */\n    public registry: Symbol[] = ecIcons;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ImageDirective.html":{"url":"directives/ImageDirective.html","title":"directive - ImageDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ImageDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/image/image.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. \n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        img [ecImage]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                setUrl\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecImage\n                            \n                            \n                                size\n                            \n                            \n                                thumb\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/image/image.directive.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ecImage\n                    \n                    \n                        The assetID that should be loaded \n\n                            \n                            Type:    string | DMAssetResource\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        The size that should be requested. \n\n                        \n                            Default value: 200\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thumb\n                    \n                    \n                        If true, the image will be requested as thumb (square) \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:15\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:40\n                            \n                        \n\n\n                \n                    \n                            Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:28\n                            \n                        \n\n\n                \n                    \n                            Reads ecImage input as assetId and loads if autoload is not false \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(asset: PublicAssetResource | DMAssetResource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        asset\n                                                        \n                                                                    PublicAssetResource | DMAssetResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:21\n                            \n                        \n\n                \n                    \n                        Resolved asset url. \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        ecImage\nThis directive can be used to load an image:\n\nID: {{myImage.asset?.assetID}}\n    \n\n    \n        import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { AssetDirective } from '../asset/asset.directive';\nimport { SdkService } from '../../sdk/sdk.service';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\n\n/** Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. */\n@Directive({\n  selector: 'img [ecImage]',\n  exportAs: 'ecImage'\n})\nexport class ImageDirective extends AssetDirective implements OnChanges {\n  /** If true, the image will be requested as thumb (square) */\n  @Input() thumb: boolean;\n  /** The size that should be requested. */\n  @Input() size = 200;\n  /** The assetID that should be loaded */\n  @Input() ecImage: string | DMAssetResource;\n  /** Resolved asset url. */\n  url: string;\n\n  constructor(public sdk: SdkService, private elementRef: ElementRef) {\n    super(sdk);\n  }\n\n  /** Reads ecImage input as assetId and loads if autoload is not false */\n  ngOnChanges() {\n    if (typeof this.ecImage === 'string') {\n      this.assetId = this.ecImage;\n    } else if (this.ecImage && this.ecImage.assetID) {\n      this.use(this.ecImage);\n    }\n    if (this.autoload !== false && this.assetId) {\n      this.load();\n    }\n  }\n\n  /** Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) */\n  load(id?: string) {\n    return super.load(id).then(this.use.bind(this));\n  }\n\n  use(asset: PublicAssetResource | DMAssetResource) {\n    return Promise.resolve().then(() => {\n      if (asset.type !== 'image') {\n        return Promise.reject(`ecImage only works for assets of type image.\n        Loaded id ${asset.id} is of type ${asset.type}`);\n      }\n      if (asset instanceof DMAssetResource) { // new asset\n        return asset.getFileVariant(this.size, this.thumb);\n      } else if (asset instanceof PublicAssetResource) { // old asset\n        if (this.thumb) {\n          return asset.getImageThumbUrl(this.size, '');\n        }\n        return asset.getImageUrl(this.size, '');\n      }\n    }).then(this.setUrl.bind(this));\n  }\n\n  setUrl(url: string) {\n    this.url = url;\n    this.elementRef.nativeElement.src = this.url;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/input/input.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n    \n        Extends\n    \n    \n            DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-input\n            \n\n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentInstance\n                            \n                            \n                                propagateChange\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                control\n                            \n                            \n                                debounce\n                            \n                            \n                                field\n                            \n                            \n                                group\n                            \n                            \n                                item\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        component\n                    \n                    \n                        Overrides the default component \n\n                            \n                            Type:    Type\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                    \n                        The belonging form control. This is not required if you pass in a field and group. \n\n                            \n                            Type:    FormControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                    \n                        Debounce time in ms before the changed event emits. \n\n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        The instance of field that should be used in the template, can also be a property name. \n\n                            \n                            Type:    Field\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        group\n                    \n                    \n                        The belonging form group \n\n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                        The belonging item \n\n                            \n                            Type:    Item\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        property\n                    \n                    \n                        The property name that is edited. Expects a form as item input \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        The changed ouput emits whenever the form control of the input changes. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, data: Object)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentInstance:     Component\n\n                    \n                \n                    \n                        \n                            Type :     Component\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:40\n                            \n                        \n\n                \n                    \n                        Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\nYou can access a form's InputComponents via FormComponent#inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldHost:     SlotHostDirective\n\n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, OnChanges, Type, ComponentRef, forwardRef } from '@angular/core';\n\nimport { FormControl, FormGroup, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\nimport { DefaultInputComponent } from '../../form/default-input/default-input.component';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core/src/item/item';\nimport { Form } from '@ec.components/core/src/form/form';\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-input',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputComponent extends DynamicSlotComponent implements ControlValueAccessor, OnChanges {\n  /** The belonging form group */\n  @Input() group: FormGroup;\n  /** The belonging form control. This is not required if you pass in a field and group. */\n  @Input() control: FormControl;\n  /** The changed ouput emits whenever the form control of the input changes. */\n  @Output() changed = new EventEmitter();\n  /** Debounce time in ms before the changed event emits. */\n  @Input() debounce = 0;\n  /** The instance of field that should be used in the template, can also be a property name. */\n  @Input() field: Field;\n  /** The property name that is edited. Expects a form as item input */\n  @Input() property: string;\n  /** The belonging item */\n  @Input() item: Item;\n  /** Overrides the default component */\n  @Input() component: Type;\n  /** Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\n   * You can access a form's InputComponents via FormComponent#inputs */\n  componentInstance: Component\n\n  ngOnChanges() {\n    if (this.property && this.item instanceof Form) {\n      this.field = this.item.getField(this.property);\n    }\n    if (!this.field) {\n      return;\n    }\n    const data = {\n      group: this.group,\n      control: this.control || this.group ? this.group.get(this.field.property) : null,\n      item: this.item,\n      field: this.field,\n      input: this\n    };\n\n    const componentRef = this.loadComponent(this.component || this.field.input || DefaultInputComponent, data);\n    this.componentInstance = componentRef.instance;\n    if (componentRef.instance.control) {\n      componentRef.instance.control.valueChanges\n        .debounceTime(this.debounce)\n        .subscribe((change) => {\n          this.changed.emit(change);\n          this.propagateChange(change);\n        });\n    }\n    if (this.field && typeof this.field.init === 'function') {\n      this.field.init(this.componentInstance, this);\n    }\n  }\n\n  /** writes value to editor on outside model change. */\n  writeValue(value: any) {\n    if (this.componentInstance && this.componentInstance['writeValue']) {\n      this.componentInstance['writeValue'](value); // TODO: this is pretty hacky\n    }\n  }\n\n  propagateChange = (_: any) => {\n  };\n\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputErrorsComponent.html":{"url":"components/InputErrorsComponent.html","title":"component - InputErrorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputErrorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/input-errors/input-errors.component.ts\n\n\n    \n        Description\n    \n    \n        This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-input-errors\n            \n\n            \n                styleUrls\n                input-errors.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input-errors.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/input-errors/input-errors.component.ts:13\n                            \n                        \n\n                \n                    \n                            Imported error messages. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                    \n                        The form control that should be tracked \n\n                            \n                            Type:    FormControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input-errors/input-errors.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getErrors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getErrors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input-errors/input-errors.component.ts:19\n                            \n                        \n\n\n                \n                    \n                            This method will iterate over the control errors and generate objects for the template. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/input-errors/input-errors.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SymbolService } from '../../symbol/symbol.service';\n\n/** This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. */\n@Component({\n  selector: 'ec-input-errors',\n  templateUrl: './input-errors.component.html',\n  styleUrls: ['./input-errors.component.scss']\n})\nexport class InputErrorsComponent {\n  /** The form control that should be tracked */\n  @Input() control: FormControl;\n  /** Imported error messages. */\n  constructor(public symbol: SymbolService) {\n  }\n\n  /** This method will iterate over the control errors and generate objects for the template. */\n  private getErrors() {\n    return Object.keys(this.control.errors).reduce((errs, key) => {\n      let message;\n      if (key === 'custom') {\n        message = this.control.errors[key];\n      } else {\n        message = this.symbol.resolve('error.input.' + key) || this.symbol.resolve('error.input.invalid');\n      }\n      errs.push({\n        key: key,\n        error: this.control.errors[key],\n        message\n      });\n      return errs;\n    }, []);\n  }\n\n}\n\n    \n\n    \n        \n  {{error.message}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{error.message}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputErrorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IoModule.html":{"url":"modules/IoModule.html","title":"module - IoModule","body":"\n                   \n\n\n\n\n  Modules\n  IoModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\n\n\nIoModule\n\nIoModule\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/io/io.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DynamicRackComponent\n                            \n                            \n                                DynamicSlotComponent\n                            \n                            \n                                InputComponent\n                            \n                            \n                                InputErrorsComponent\n                            \n                            \n                                OutputComponent\n                            \n                            \n                                SlotHostDirective\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                DefaultInputComponent\n                            \n                            \n                                DefaultOutputComponent\n                            \n                            \n                                InputComponent\n                            \n                            \n                                InputErrorsComponent\n                            \n                            \n                                OutputComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DynamicRackComponent\n                            \n                            \n                                    DynamicSlotComponent\n                            \n                            \n                                    InputComponent\n                            \n                            \n                                    InputErrorsComponent\n                            \n                            \n                                    OutputComponent\n                            \n                            \n                                    SlotHostDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DynamicSlotComponent } from './dynamic-slot/dynamic-slot.component';\nimport { SlotHostDirective } from './slot-host.directive';\nimport { DefaultInputComponent } from '../form/default-input/default-input.component';\nimport { DefaultOutputComponent } from '../form/default-output/default-output.component';\nimport { OutputComponent } from './output/output.component';\nimport { InputComponent } from './input/input.component';\nimport { InputErrorsComponent } from './input-errors/input-errors.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DynamicRackComponent } from './dynamic-rack/dynamic-rack.component';\n\n@NgModule({\n  entryComponents: [\n    DefaultInputComponent,\n    DefaultOutputComponent,\n    InputComponent,\n    OutputComponent,\n    InputErrorsComponent,\n  ],\n  declarations: [\n    InputErrorsComponent,\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n    InputErrorsComponent,\n    ReactiveFormsModule,\n  ],\n  providers: []\n})\nexport class IoModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemConfig.html":{"url":"interfaces/ItemConfig.html","title":"interface - ItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/item/item-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                An ItemConfig describes an abstract entity with certain properties.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                                \n                                            Optional\n                                        identifier\n                                \n                                \n                                            Optional\n                                        identifierPattern\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        onSave\n                                \n                                \n                                            Optional\n                                        parent\n                                \n                                \n                                            Optional\n                                        resolve\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Items field Config \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to identify items from another (e.g. in a selection). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifierPattern\n                                    \n                                \n                                \n                                    \n                                        identifierPattern:     RegExp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RegExp\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Pattern of the identifier field. Is used e.g. in the searchbar \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to display the item for humans \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSave\n                                    \n                                \n                                \n                                    \n                                        onSave:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Callback that is invoked when the item is saved \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolve\n                                    \n                                \n                                \n                                    \n                                        resolve:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom resolve path function. It can be used e.g. to access subbranches of an Object. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For primitive values only: the title for the item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of the Item. It determines how it will be displayed in different contexts \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Item } from './item';\nimport { FieldConfigProperty } from '../config/field-config-property.interface';\nimport { FieldConfig } from '../config/field-config.interface';\n\n/** An ItemConfig describes an abstract entity with certain properties.*/\nexport interface ItemConfig {\n  /** For primitive values only: the title for the item */\n  title?: string;\n  /** The Property that is used to identify items from another (e.g. in a selection). */\n  identifier?: string;\n  /** Pattern of the identifier field. Is used e.g. in the searchbar */\n  identifierPattern?: RegExp;\n  /** The Property that is used to display the item for humans */\n  label?: string;\n  /** The Items field Config */\n  fields?: FieldConfig;\n  /** The type of the Item. It determines how it will be displayed in different contexts */\n  type?: string;\n  /** Custom resolve path function. It can be used e.g. to access subbranches of an Object. */\n  resolve?: (body: T) => any;\n  /** Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.*/\n  parent?: any;\n  /** Callback that is invoked when the item is saved */\n  onSave?: (item?: Item, value?: Object) => Promise | T; // TODO rename to save\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/list.component.ts\n\n\n    \n        Description\n    \n    \n        The ListComponent will render a list containing the given items or collection.\nBasic Example:\nhttps://components.entrecode.de/ui/list/basic\nWith Tranforms:\nhttps://components.entrecode.de/ui/list/transforms\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list\n            \n\n            \n                styleUrls\n                list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectIndex\n                            \n                            \n                                selectNext\n                            \n                            \n                                selectPrev\n                            \n                            \n                                showHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                collection\n                            \n                            \n                                config\n                            \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                paginationConfig\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        collection\n                    \n                    \n                        The used collection \n\n                            \n                            Type:    Collection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        Config input for List \n\n                            \n                            Type:    ListConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        The visible items \n\n                            \n                            Type:    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The Instance of the List \n\n                            \n                            Type:    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        paginationConfig\n                    \n                    \n                        Custom PaginationConfig \n\n                            \n                            Type:    PaginationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The used selection \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        If true, only one item is selectable next \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:35\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Event emitter on item selection \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Event emitter on selection change \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncolumnClick(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Column click handler. Triggers select.emit(item) with fallback to selection.toggle\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Changing items or collection will trigger reconstructing the list with the new items.\nChanging the selection will reconstruct the selection \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIndex(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Selects the item with the given index \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectNext\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectNext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Selects the next item \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectPrev\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectPrev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Selects the previous item \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowHeader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Decides if the header should be visible or not \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ListConfig\n\n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:24\n                            \n                        \n\n                \n                    \n                        The current list config \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        List\nThe List is one of the main components to work with.\nThe basic idea is to display collections of data in a structured but flexible way.\nYou can create a new List like this:\nthis.trees = new List(\n//first argument: Array of Objects\n[{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}],\n//second (optional) argument: ListConfig\n{\n  fields: {\n    name: {\n      label: 'Name'\n    },\n    height: {\n      label: 'Height',\n      group: (h) => h > 10 ? 'Higher than 10m' : 'Lower than 10m'\n    },\n    fruits: {\n      label: 'Has Fruits?',\n      display: (value) => value ? 'yes' : 'no'\n    },\n  }\n})This is how you display a List instance into your template:\n\n    \n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { Collection, List, ListConfig, Selection } from '@ec.components/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport { PaginationConfig } from './pagination/pagination-config.interface';\n\n/**\n * The ListComponent will render a list containing the given items or collection.\n *\n * Basic Example:\n *\n * https://components.entrecode.de/ui/list/basic\n *\n * With Tranforms:\n * https://components.entrecode.de/ui/list/transforms\n * */\n@Component({\n  selector: 'ec-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ListComponent implements OnChanges {\n  /** The current list config */\n  config: ListConfig = {};\n  /** Config input for List */\n  // tslint:disable-next-line:no-input-rename\n  @Input('config') configInput: ListConfig;\n  /** The visible items */\n  @Input() items: Array;\n  /** The used collection */\n  @Input() collection: Collection;\n  /** The used selection */\n  @Input() selection: Selection;\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** Event emitter on item selection */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  /** Event emitter on selection change */\n  @Output() selected: EventEmitter> = new EventEmitter();\n  /** The Instance of the List */\n  @Input() list: List;\n  /** Custom PaginationConfig */\n  @Input() paginationConfig: PaginationConfig;\n\n  /** Changing items or collection will trigger reconstructing the list with the new items.\n   * Changing the selection will reconstruct the selection */\n  ngOnChanges(changes?) {\n    this.config = Object.assign(this.config || {}, this.configInput || {});\n    if (this.items) {\n      this.list = new List(this.items, this.config);\n    } else if (this.collection) {\n      this.list = new List(this.collection.items, this.config);\n    }\n    if (!this.list) {\n      return;\n    }\n    if (!this.selection) {\n      this.selection = new Selection([], this.list.config);\n    }\n    if (this.selection) {\n      this.selection.update$.subscribe((selection: Selection) => {\n        this.selected.emit(selection);\n      })\n    }\n  }\n\n  /** Column click handler. Triggers select.emit(item) with fallback to selection.toggle*/\n  columnClick(item) {\n    if (this.list.config.selectMode && this.selection) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      return this.columnClicked.emit(item);\n    }\n  }\n  /** Decides if the header should be visible or not */\n  showHeader() {\n    return this.list && this.list.config && !this.list.config.disableHeader && (this.list.fields.length || this.list.config.title)\n      && (this.list.config.alwaysShowHeader || !this.list.isEmpty());\n  }\n\n  /** Selects the item with the given index */\n  selectIndex(index: number) {\n    if (!this.selection || this.list.isEmpty() || !this.list.items[index]) {\n      return;\n    }\n    this.selection.select(this.list.items[index]);\n  }\n\n  /** Selects the next item */\n  selectNext() {\n    let index = 0;\n    if (!this.selection.isEmpty()) {\n      index = this.list.items.indexOf(this.selection.items[0]) + 1;\n    }\n    this.selection.removeAll();\n    this.selectIndex(index % this.list.items.length);\n  }\n\n  /** Selects the previous item */\n  selectPrev() {\n    let index = this.list.items.length - 1;\n    if (!this.selection.isEmpty()) {\n      index = this.list.items.indexOf(this.selection.items[0]) + this.list.items.length - 1;\n    }\n    this.selection.removeAll();\n    this.selectIndex(index % this.list.items.length);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n        \n        \n          {{group.value}}\n        \n      \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          {{group.value}}                          '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListConfig.html":{"url":"interfaces/ListConfig.html","title":"interface - ListConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/list/list-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for List Classes.\n\n            \n\n            \n                Extends\n            \n            \n                    ItemConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysShowHeader\n                                \n                                \n                                            Optional\n                                        availableSizes\n                                \n                                \n                                            Optional\n                                        desc\n                                \n                                \n                                            Optional\n                                        disableHeader\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                            Optional\n                                        maxColumns\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        query\n                                \n                                \n                                            Optional\n                                        selectMode\n                                \n                                \n                                            Optional\n                                        size\n                                \n                                \n                                            Optional\n                                        solo\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                                \n                                            Optional\n                                        sortBy\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysShowHeader\n                                    \n                                \n                                \n                                    \n                                        alwaysShowHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the header will also be shown when the list is empty. Defaults to false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        availableSizes\n                                    \n                                \n                                \n                                    \n                                        availableSizes:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The available sizes. If not set, the size cannot be changed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                    \n                                \n                                \n                                    \n                                        desc:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set to true, the sorting will be descending \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableHeader\n                                    \n                                \n                                \n                                    \n                                        disableHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will have no header. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    tells the list to show only items that match the filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxColumns\n                                    \n                                \n                                \n                                    \n                                        maxColumns:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximal visible columns. Defaults to 8 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The current active page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    a query that will be turned in to a filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectMode\n                                    \n                                \n                                \n                                    \n                                        selectMode:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will show its checkboxes and will select on column click.\nThe columnClicked output will be ignored as long selectMode is active \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The number of items per page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        solo\n                                    \n                                \n                                \n                                    \n                                        solo:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Should the selection be solo? \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of properties that is sorted after, experimental... \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortBy\n                                    \n                                \n                                \n                                    \n                                        sortBy:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The property name that is sorted after \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For lists with primitive values only: the title of the list header \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\n\n/**\n *  Configuration for List Classes.\n * */\nexport interface ListConfig extends ItemConfig {\n  /** For lists with primitive values only: the title of the list header */\n  title?: string;\n  /** The property name that is sorted after */\n  sortBy?: string;\n  /** Array of properties that is sorted after, experimental... */\n  sort?: string[];\n  /** If set to true, the sorting will be descending */\n  desc?: boolean;\n  /** If true, the list will show its checkboxes and will select on column click.\n   * The columnClicked output will be ignored as long selectMode is active */\n  selectMode?: boolean\n  /** If true, the list will have no header. */\n  disableHeader?: boolean\n  /** If true, the header will also be shown when the list is empty. Defaults to false */\n  alwaysShowHeader?: boolean\n  /** The current active page */\n  page?: number,\n  /** The number of items per page */\n  size?: number,\n  /** The available sizes. If not set, the size cannot be changed */\n  availableSizes?: number[],\n  /** Should the selection be solo? */\n  solo?: boolean,\n  /** tells the list to show only items that match the filter */\n  filter?: { [key: string]: any },\n  /** a query that will be turned in to a filter */\n  query?: { [key: string]: any },\n  /** Maximal visible columns. Defaults to 8 */\n  maxColumns?: number\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListHeaderComponent.html":{"url":"components/ListHeaderComponent.html","title":"component - ListHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/list-header/list-header.component.ts\n\n\n    \n        Description\n    \n    \n        This component renders, as the name states, the header of a list.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-header\n            \n\n            \n                styleUrls\n                list-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                pops\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyFilter\n                            \n                            \n                                    Public\n                                editFilter\n                            \n                            \n                                    Public\n                                fieldLabel\n                            \n                            \n                                    Public\n                                removeFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The list instance \n\n                            \n                            Type:    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        applyFilter(property: , value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Applies the given filter to the list. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        editFilter(pop: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            opens the given filter pop and closes all others \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pop\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fieldLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fieldLabel(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFilter(property: , control: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        control\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filter:     FormComponent\n\n                    \n                \n                    \n                        \n                            Type :     FormComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:22\n                            \n                        \n\n                \n                    \n                        The form that holds the current filter information \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pops\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pops:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:20\n                            \n                        \n\n                \n                    \n                        The pop dropdowns that contain the filtering \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { PopComponent } from '../../pop/pop.component';\nimport { FormComponent } from '../../form/form.component';\nimport { List } from '@ec.components/core/src/list/list';\nimport { Selection } from '@ec.components/core/src/selection/selection';\nimport { Field } from '@ec.components/core';\n\n/** This component renders, as the name states, the header of a list.*/\n@Component({\n  selector: 'ec-list-header',\n  templateUrl: './list-header.component.html',\n  styleUrls: ['./list-header.component.scss']\n})\nexport class ListHeaderComponent {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** The pop dropdowns that contain the filtering */\n  @ViewChildren('filterPop') pops: QueryList;\n  /** The form that holds the current filter information */\n  @ViewChild('filterForm') filter: FormComponent;\n\n  /** opens the given filter pop and closes all others */\n  public editFilter(pop) {\n    pop.toggle();\n    // this.pops.forEach((pop) => pop.hide());\n  }\n\n  /** Applies the given filter to the list. */\n  public applyFilter(property, value) {\n    this.list.filter(property, value);\n  }\n\n  public removeFilter(property, control) {\n    control.reset();\n  }\n\n  public fieldLabel(field: Field) {\n    if (field.label === false) {\n      return '';\n    }\n    return field.label || field.property;\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n  \n\n    \n      \n    \n\n    \n      {{fieldLabel(field)}}\n    \n    \n\n    \n      \n        \n        &times;\n      \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{fieldLabel(field)}}                                  ×            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListItemsComponent.html":{"url":"components/ListItemsComponent.html","title":"component - ListItemsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListItemsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/list-items/list-items.component.ts\n\n\n    \n        Description\n    \n    \n        The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\nIt can either be given an Array of Items or just the list parent to control the shown items. \n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-items\n            \n\n            \n                styleUrls\n                list-items.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-items.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.\n\n                            \n                            Type:    Item[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The list instance \n\n                            \n                            Type:    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        If true, only one item is selectable next \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Event emitter on item clicked \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncolumnClick(item: Item, e: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Propagate clicked item to host or toggle selection. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Checks for host and uses its list. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Item, List, Selection } from '@ec.components/core';\nimport { ListComponent } from '../list.component';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\n\n/** The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\n * It can either be given an Array of Items or just the list parent to control the shown items. */\n@Component({\n  selector: 'ec-list-items',\n  templateUrl: './list-items.component.html',\n  styleUrls: ['./list-items.component.scss']\n})\nexport class ListItemsComponent implements OnChanges {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.*/\n  @Input() items: Item[];\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** Event emitter on item clicked */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n\n  /** Checks for host and uses its list. */\n  ngOnChanges() {\n    if (!this.items && this.list) {\n      this.items = this.list.page;\n    }\n  }\n\n  /** Propagate clicked item to host or toggle selection. */\n  columnClick(item: Item, e: Event) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (this.selection && this.list && this.list.config.selectMode) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListItemsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ListModule.html":{"url":"modules/ListModule.html","title":"module - ListModule","body":"\n                   \n\n\n\n\n  Modules\n  ListModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_imports\n\n\n\ncluster_ListModule_exports\n\n\n\n\nGroupPipe\n\nGroupPipe\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nFormModule\n\nFormModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/list/list.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GroupPipe\n                            \n                            \n                                ListComponent\n                            \n                            \n                                ListHeaderComponent\n                            \n                            \n                                ListItemsComponent\n                            \n                            \n                                PaginationComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    IconModule\n                            \n                            \n                                    SymbolModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    GroupPipe\n                            \n                            \n                                    ListComponent\n                            \n                            \n                                    ListHeaderComponent\n                            \n                            \n                                    ListItemsComponent\n                            \n                            \n                                    PaginationComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ListComponent } from './list.component';\nimport { ListItemsComponent } from './list-items/list-items.component';\nimport { ListHeaderComponent } from './list-header/list-header.component';\nimport { GroupPipe } from './group.pipe';\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { FormModule } from '../form/form.module';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '../icon/icon.module';\nimport { SymbolModule } from '../symbol/symbol.module';\n\n@NgModule({\n  declarations: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    GroupPipe,\n  ],\n  imports: [\n    CommonModule,\n    FormModule,\n    IconModule,\n    SymbolModule\n  ],\n  exports: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    GroupPipe,\n    FormModule,\n  ],\n  providers: []\n})\nexport class ListModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/loader/loader.component.ts\n\n\n    \n        Description\n    \n    \n        The ec-loader can be plugged into various components to be triggered when they load stuff.\nhttps://components.entrecode.de/ui/loader\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-loader\n            \n\n            \n                styleUrls\n                loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stack\n                            \n                            \n                                    Private\n                                timestamp\n                            \n                            \n                                    Private\n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hide\n                            \n                            \n                                    Private\n                                show\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(host: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                            Injects the host element. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nwait(promise: Promise)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\nMake sure the given promise is catched (so the loader will stop loading on error)! \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promise\n                                                        \n                                                                    Promise\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stack:     Collection>\n\n                    \n                \n                    \n                        \n                            Type :     Collection>\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:14\n                            \n                        \n\n                \n                    \n                        The current stack of loading promises.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timestamp:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                        The timestamp of the last time a promise has been added to the stack. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:16\n                            \n                        \n\n                \n                    \n                        The loader's visibility status. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Loader\nThe loader can be used to indicate any kind of loading activity\nTemplate\n\n\nGlobal Loader\nLocal LoaderThe default classes can be found here.\nUsage\nYou can use a global loader that handles every action or use multiple local loaders:\nimport { LoaderComponent, LoaderService } from '@ec.components/ui';\nexport class MyApp {\n  @ViewChild('globalLoader') globalLoader: LoaderComponent;\n  @ViewChild('localLoader') localLoader: LoaderComponent;\n  constructor(private loaderService: LoaderService) {\n      this.loaderService.use(this.globalLoader); // set global loader\n  }\n  globalLoader() { // When not passing a loader to .wait, the global loader (set by .use) is used.\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)));\n  }\n  localLoader() {\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)), this.localLoader);\n    // this.localLoader.wait(new Promise((resolve) => setTimeout(resolve, 2000))); // alternative way\n  }\n}The advantage of local loaders is that you can place them in specific places of your template to only \"disable\" a part of your site while loading and not the whole page.\nSee the commented out line in localLoader for a direct way to trigger a loader without the service.\nHow it works\nEach time .wait is called on the LoaderService, the target loader throws the given promise on a stack. When all promises on the stack have been resolved, the loader is hidden. This is better than just a boolean switch because multiple loading activies do not interfere with each other.\n\n    \n\n    \n        import { Component, ElementRef } from '@angular/core';\nimport { Collection } from '@ec.components/core/src/collection/collection';\n\n/** The ec-loader can be plugged into various components to be triggered when they load stuff.\n * https://components.entrecode.de/ui/loader\n*/\n@Component({\n  selector: 'ec-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent {\n  /** The current stack of loading promises.*/\n  private stack: Collection> = new Collection([]);\n  /** The loader's visibility status. */\n  private visible = false;\n  /** The timestamp of the last time a promise has been added to the stack. */\n  private timestamp;\n\n  /** Injects the host element. */\n  constructor(private host: ElementRef) {\n  }\n\n  /** Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, */\n  private show() {\n    this.visible = true; // show loader\n    this.host.nativeElement.classList.add('is-active');\n  }\n\n  /** Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, */\n  private hide() {\n    this.visible = false; // show loader\n    this.host.nativeElement.classList.remove('is-active');\n  }\n\n  /** Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\n   * Make sure the given promise is catched (so the loader will stop loading on error)! */\n  wait(promise: Promise) {\n    this.stack.add(promise); // add promise to stack\n    this.show();\n    const timestamp = Date.now();\n    this.timestamp = timestamp; // get timestamp\n    Promise.all(this.stack.items)\n      .then(() => {\n        if (timestamp === this.timestamp) {\n          this.hide();\n          this.stack.removeAll();\n        }\n      });\n    return promise;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoaderModule.html":{"url":"modules/LoaderModule.html","title":"module - LoaderModule","body":"\n                   \n\n\n\n\n  Modules\n  LoaderModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\n\n\nLoaderModule\n\nLoaderModule\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/loader/loader.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoaderComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     LoaderService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoaderComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\nimport { LoaderService } from './loader.service';\n\n@NgModule({\n  declarations: [\n    LoaderComponent,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    LoaderComponent,\n  ],\n  providers: [LoaderService]\n})\nexport class LoaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/loader/loader.service.ts\n        \n\n            \n                Description\n            \n            \n                The loader service registers promises \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(loader: LoaderComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.service.ts:11\n                            \n                        \n\n\n                \n                    \n                            Sets a global loader that can be triggered without having the reference. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                        \n                                                                    LoaderComponent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nwait(promise: Promise, loader: LoaderComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        promise\n                                                        \n                                                                    Promise\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        loader\n                                                        \n                                                                    LoaderComponent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.loader\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.service.ts:8\n                            \n                        \n\n                \n                    \n                        The global loader that should be used if not loader is passed to wait. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\n\n/** The loader service registers promises */\n@Injectable()\nexport class LoaderService {\n  /** The global loader that should be used if not loader is passed to wait. */\n  loader: LoaderComponent;\n\n  /** Sets a global loader that can be triggered without having the reference. */\n  use(loader: LoaderComponent) {\n    this.loader = loader;\n  }\n\n  /** Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)*/\n  wait(promise: Promise, loader: LoaderComponent = this.loader) {\n    if (!loader || !promise) {\n      // console.warn('cannot trigger loader: no promise or loader given');\n      return;\n    }\n    return loader.wait(promise);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationMapComponent.html":{"url":"components/LocationMapComponent.html","title":"component - LocationMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/location-map.component.ts\n\n\n    \n        Description\n    \n    \n        Shows Google Maps Map \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-map\n            \n\n            \n                styleUrls\n                location-map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                markerDragEnd\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                readOnly\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                    \n                        The desired map center \n\n                            \n                            Type:    literal type\n\n                            \n                        \n                            Default value: { latitude: 48.8093253, longitude: 9.159388100000001 }\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                    \n                        If true, no markers can be changed or set \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        Form input component \n\n                            \n                            Type:    literal type\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        Emits when the marker has been changed \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markerDragEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkerDragEnd(coords: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            changes value on marker dragend \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        coords\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue(value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            sets the value cand changes the center \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/** Shows Google Maps Map */\n@Component({\n    selector: 'ec-location-map',\n    templateUrl: './location-map.component.html',\n    styleUrls: ['./location-map.component.scss']\n})\n\nexport class LocationMapComponent {\n    /** The desired map center */\n    @Input() center: { longitude: any; latitude: any; } = { latitude: 48.8093253, longitude: 9.159388100000001 };\n    /** If true, no markers can be changed or set */\n    @Input() readOnly: boolean;\n    /** Emits when the marker has been changed */\n    @Output() change: EventEmitter = new EventEmitter();\n    /** Form input component */\n    @Input() value: {\n        longitude: number,\n        latitude: number\n    };\n\n    /** sets the value cand changes the center */\n    setValue(value) {\n        this.value = value;\n        if (value) {\n            this.center = value;\n        }\n    }\n    /** changes value on marker dragend */\n    markerDragEnd(coords) {\n        if (!coords) {\n            console.warn('no coords');\n            return;\n        }\n        const position = { longitude: coords.lng, latitude: coords.lat };\n        this.setValue(position);\n        this.change.emit(position);\n    }\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n  Modules\n  LocationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_imports\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/location/src/location.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module holds all location/map related components and services \n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LocationMapComponent\n                            \n                            \n                                LocationPickerComponent\n                            \n                            \n                                LocationSearchComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                LOCATION_COMPONENTS\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     GeocodeService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LocationMapComponent\n                            \n                            \n                                    LocationPickerComponent\n                            \n                            \n                                    LocationSearchComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { AgmCoreModule } from '@agm/core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationPickerComponent } from './location-picker.component';\nimport { LocationSearchComponent } from './location-search.component';\n/** The components of this module */\nconst LOCATION_COMPONENTS = [\n    LocationMapComponent,\n    LocationSearchComponent,\n    LocationPickerComponent,\n];\n/** This module holds all location/map related components and services */\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        UiModule,\n        AgmCoreModule.forRoot({\n            apiKey: 'AIzaSyAdgEUE1Yxo1F-qb1MrO56u5KATpX9j8o4',\n            libraries: ['places']\n        })],\n    exports: LOCATION_COMPONENTS,\n    declarations: LOCATION_COMPONENTS,\n    entryComponents: LOCATION_COMPONENTS,\n    providers: [GeocodeService],\n})\nexport class LocationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationPickerComponent.html":{"url":"components/LocationPickerComponent.html","title":"component - LocationPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/location-picker.component.ts\n\n\n    \n        Description\n    \n    \n        Component with map and autocomplete input to pick a location. Implements ControlValueAccessor \n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-location-picker\n            \n\n            \n                styleUrls\n                location-picker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-picker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                geocodeService\n                            \n                            \n                                input\n                            \n                            \n                                map\n                            \n                            \n                                propagateChange\n                            \n                            \n                                search\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setValue\n                            \n                            \n                                updateAddress\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControl\n                            \n                            \n                                showRawValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/location-picker.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                    GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        The form control that holds the location \n\n                            \n                            Type:    FormControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showRawValue\n                    \n                    \n                        If true, the raw location value will be visible\n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue(value: , fromSearch?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Sets value of map and propagates change \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fromSearch\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateAddress()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            updates the address string by reverse geo lookup  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geocodeService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocodeService:     GeocodeService\n\n                    \n                \n                    \n                        \n                            Type :     GeocodeService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     InputComponent\n\n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     LocationMapComponent\n\n                    \n                \n                    \n                        \n                            Type :     LocationMapComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:28\n                            \n                        \n\n                \n                    \n                        The nested LocationMapComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => { }\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        search:     LocationSearchComponent\n\n                    \n                \n                    \n                        \n                            Type :     LocationSearchComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:30\n                            \n                        \n\n                \n                    \n                        The nested LocationSearchComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationSearchComponent } from './location-search.component';\n\n/** Component with map and autocomplete input to pick a location. Implements ControlValueAccessor */\n@Component({\n    selector: 'ec-location-picker',\n    templateUrl: './location-picker.component.html',\n    styleUrls: ['./location-picker.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LocationPickerComponent),\n            multi: true\n        }\n    ]\n})\n\nexport class LocationPickerComponent extends DefaultInputComponent implements ControlValueAccessor {\n    /** The form control that holds the location */\n    @Input() formControl: FormControl;\n    /** If true, the raw location value will be visible*/\n    @Input() showRawValue = true;\n    /** The nested LocationMapComponent */\n    @ViewChild(LocationMapComponent) map: LocationMapComponent;\n    /** The nested LocationSearchComponent */\n    @ViewChild(LocationSearchComponent) search: LocationSearchComponent;\n    /** Form input component */\n    input: InputComponent;\n\n    constructor(\n        public geocodeService: GeocodeService,\n    ) {\n        super();\n    }\n\n    /** Sets value of map and propagates change */\n    setValue(value, fromSearch?: boolean) {\n        if (!value) {\n            this.search.clear();\n        }\n        this.map.setValue(value);\n        if (!fromSearch) {\n            this.updateAddress();\n        }\n        this.propagateChange(value);\n        if (this.input) {\n            this.input.propagateChange(value);\n        }\n    }\n\n    /** Writes value to editor on outside model change. */\n    writeValue(value: any) {\n        this.map.setValue(value);\n        this.updateAddress();\n    }\n\n    /** updates the address string by reverse geo lookup  */\n    updateAddress() {\n        const value = this.map.value;\n        if (!value) {\n            this.search.searchInput.nativeElement.value = '';\n            return;\n        }\n        this.geocodeService.getNearestAddress(value)\n            .then(results => {\n                if (results.length) {\n                    this.search.searchInput.nativeElement.value = results[0].formatted_address;\n                } else {\n                    this.search.searchInput.nativeElement.value = '';\n                }\n            });\n    }\n\n    propagateChange = (_: any) => { };\n\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() { }\n}\n\n    \n\n    \n        \n\n\n    \n\n{{map.value | json}}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{map.value | json}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationSearchComponent.html":{"url":"components/LocationSearchComponent.html","title":"component - LocationSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/location-search.component.ts\n\n\n    \n        Description\n    \n    \n        Google Maps Location Searchbar \n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-search\n            \n\n\n\n\n            \n                templateUrl\n                ./location-search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/location-search.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                    GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        Placeholder for input \n\n                        \n                            Default value: 'Search Location'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        emits when the coords have been changed (after selecting a match) \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            Clears the searchbar input value \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            subscribes to changes from the inputs autocomplete using geocodeService. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchInput:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:15\n                            \n                        \n\n                \n                    \n                        The search input element \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, EventEmitter, Input, NgZone, Output, ViewChild } from '@angular/core';\nimport { } from 'googlemaps';\nimport { GeocodeService } from './geocode.service';\n\n/** Google Maps Location Searchbar */\n@Component({\n    selector: 'ec-location-search',\n    templateUrl: './location-search.component.html'\n})\n\nexport class LocationSearchComponent implements AfterViewInit {\n    /** Placeholder for input */\n    @Input() placeholder = 'Search Location';\n    /** The search input element */\n    @ViewChild('search') searchInput: ElementRef;\n    /** emits when the coords have been changed (after selecting a match) */\n    @Output() change: EventEmitter = new EventEmitter();\n\n    constructor(\n        private geocodeService: GeocodeService,\n        private ngZone: NgZone\n    ) {\n    }\n    /** Clears the searchbar input value */\n    clear() {\n        if (this.searchInput) {\n            this.searchInput.nativeElement.value = '';\n        }\n    }\n    /** subscribes to changes from the inputs autocomplete using geocodeService. */\n    ngAfterViewInit() {\n        this.geocodeService.autocompleteAddress(this.searchInput.nativeElement)\n            .subscribe(\n                coords => {\n                    this.change.emit(coords);\n                }\n            );\n    }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/auth/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\nhttps://components.entrecode.de/auth/auth\n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login\n            \n\n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     \n\n                    \n                \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:24\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport { LoaderComponent, NotificationsService, WithLoader } from '@ec.components/ui';\nimport { AuthService } from '../auth.service';\nimport { WithNotifications } from '@ec.components/ui/src/notifications/with-notifications.interface';\nimport { Notification } from '@ec.components/ui/src/notifications/notification';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\n\n/** Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\n * https://components.entrecode.de/auth/auth\n*/\n@Component({\n  selector: 'ec-login',\n  templateUrl: 'login.component.html'\n})\n\nexport class LoginComponent implements WithLoader, WithNotifications {\n  /** You can optionally specify PublicAPI instance. Defaults to SdkService#api. */\n  @Input() api: PublicAPI;\n  /** Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The included loader. */\n  @ViewChild(LoaderComponent) loader;\n  /** Error notifications */\n  notifications: Notification[] = [];\n\n  constructor(public auth: AuthService,\n    public notificationService: NotificationsService,\n    public symbol: SymbolService) {\n  }\n  /** Communicates with the AuthService. Handles loader, notifications and success Subject. */\n  login({ email, password }) {\n    const login = this.auth.login({ email, password }, this.api)\n      .then((user) => {\n        this.notificationService.emit({\n          type: 'success',\n          title: this.symbol.resolve('login.success'),\n          hide: this.notifications\n        });\n        this.success.emit(user);\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: this.symbol.resolve('login.error'),\n          error,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications\n        });\n        console.log('could not login', error);\n      });\n    this.loader.wait(login);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/login-form/login-form.component.ts\n\n\n    \n        Description\n    \n    \n        Login Form Component with validation. Fires success event with credentials on submit.\nhttps://components.entrecode.de/ui/login\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login-form\n            \n\n            \n                styleUrls\n                login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                notifications\n                            \n                            \n                                    Private\n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClasses\n                            \n                            \n                                buttonLabel\n                            \n                            \n                                emailLabel\n                            \n                            \n                                emailPlaceholder\n                            \n                            \n                                loader\n                            \n                            \n                                passwordLabel\n                            \n                            \n                                passwordPlaceholder\n                            \n                            \n                                showLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/login-form/login-form.component.ts:44\n                            \n                        \n\n                \n                    \n                            Injects the FormBuilder\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonClasses\n                    \n                    \n                        Additional Button classes \n\n                        \n                            Default value: ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                    \n                        The Label of the submit button. Defaults to Login \n\n                        \n                            Default value: 'Login'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emailLabel\n                    \n                    \n                        The Label of the Mail field \n\n                        \n                            Default value: 'E-Mail'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emailPlaceholder\n                    \n                    \n                        The Placeholder of the mail Field \n\n                        \n                            Default value: 'E-Mail Adresse'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be shown during login \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordLabel\n                    \n                    \n                        The Label of the password field. \n\n                        \n                            Default value: 'Passwort'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordPlaceholder\n                    \n                    \n                        The Placeholder of the password field \n\n                        \n                            Default value: 'Passwort'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showLabels\n                    \n                    \n                        If true, email and password wont have labels \n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                    \n                        Event that emits when calling showError. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Event that emits on succesful submit of the form, passing the login credentials. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Initializes the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showError\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowError(err: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Shows the given error in the form. Clears the password field and emits the error event. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        err\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:22\n                            \n                        \n\n                \n                    \n                        Contains possible error messages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:18\n                            \n                        \n\n                \n                    \n                        The login's form group.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:44\n                            \n                        \n\n                \n                    \n                        Recent error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            submitted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitted:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:20\n                            \n                        \n\n                \n                    \n                        Flips true when submitted. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Login Form\nThe Login Form UI component is meant to be extended by a component that communicates with an API.\n    \n    \n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport { FieldValidators } from '../validators/field-validators';\nimport { LoaderComponent } from '../../loader/loader.component';\nimport { WithLoader } from '../../loader/with-loader.interface';\n\n/** Login Form Component with validation. Fires success event with credentials on submit.\n * https://components.entrecode.de/ui/login\n*/\n@Component({\n  selector: 'ec-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss']\n})\nexport class LoginFormComponent implements OnInit, WithLoader {\n  /** The login's form group.*/\n  public form: FormGroup;\n  /** Flips true when submitted. */\n  private submitted: boolean;\n  /** Contains possible error messages. */\n  public errorMessage: string;\n  /** Event that emits on succesful submit of the form, passing the login credentials. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** Event that emits when calling showError. */\n  @Output() error: EventEmitter = new EventEmitter();\n  /** The loader that should be shown during login */\n  @Input() loader: LoaderComponent;\n  /** If true, email and password wont have labels */\n  @Input() showLabels = true;\n  /** The Label of the Mail field */\n  @Input() emailLabel = 'E-Mail';\n  /** The Placeholder of the mail Field */\n  @Input() emailPlaceholder = 'E-Mail Adresse';\n  /** The Label of the password field. */\n  @Input() passwordLabel = 'Passwort';\n  /** The Placeholder of the password field */\n  @Input() passwordPlaceholder = 'Passwort';\n  /** The Label of the submit button. Defaults to Login */\n  @Input() buttonLabel = 'Login';\n  /** Additional Button classes */\n  @Input() buttonClasses = '';\n  /** Recent error Notifications */\n  notifications: Notification[];\n\n  /** Injects the FormBuilder*/\n  constructor(private fb: FormBuilder) {\n  }\n\n  /** Initializes the form */\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, FieldValidators.email]], // emailAvailable?\n      password: ['', [Validators.required]],\n    });\n  }\n\n  /** Shows the given error in the form. Clears the password field and emits the error event. */\n  showError(err): any {\n    this.errorMessage = err.message;\n    this.form.get('password').setValue('');\n    this.error.emit(err);\n    Observable.throw(err);\n  }\n\n  /** Method that is meant to be overwritten by a subclass to communicate with an API. */\n  login(value) { // meant to be overridden\n    return Promise.resolve(value);\n  }\n\n  /** Is called when the form has been successfully submitted. Calls login and resets the form after. */\n  onSubmit() {\n    this.submitted = true;\n    delete this.errorMessage;\n    if (!this.form.valid) {\n      return;\n    }\n    const login = this.login(this.form.value)\n      .then((res) => {\n        this.form.reset();\n        this.success.emit(res);\n      });\n    if (this.loader) {\n      this.loader.wait(login);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{errorMessage}}\n  \n  \n    {{emailLabel}}\n    \n    \n    \n  \n  \n    Passwort\n    \n    \n  \n  \n    {{buttonLabel}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{errorMessage}}        {{emailLabel}}                    Passwort                {{buttonLabel}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MaxItemsPipe.html":{"url":"pipes/MaxItemsPipe.html","title":"pipe - MaxItemsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  MaxItemsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/max-items.pipe.ts\n        \n\n            \n                Description\n            \n            \n                This pipe slices an array after the nth item \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        maxItems\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(array: Array, maxItems: number, start: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/max-items.pipe.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        maxItems\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        start\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n/** This pipe slices an array after the nth item */\n@Pipe({\n    name: 'maxItems'\n})\n\nexport class MaxItemsPipe implements PipeTransform {\n    transform(array: Array = [], maxItems: number, start: number = 0): any {\n        return array.slice(start, maxItems);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MediumEditorComponent.html":{"url":"components/MediumEditorComponent.html","title":"component - MediumEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MediumEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/medium-editor/src/medium-editor.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps medium-editor to a reactive form component.\nhttps://components.entrecode.de/misc/medium-editor\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-medium-editor\n            \n\n            \n                styleUrls\n                medium-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                medium-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Private\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                modelChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        data model \n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        MediumEditor options \n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        empty placeholder \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:39\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        modelChange\n                    \n                    \n                        change emitter \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            destroys editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            inits editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:43\n                            \n                        \n\n                \n                    \n                        container element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     MediumEditor\n\n                    \n                \n                    \n                        \n                            Type :     MediumEditor\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:47\n                            \n                        \n\n                \n                    \n                        editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:49\n                            \n                        \n\n                \n                    \n                        ready promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:45\n                            \n                        \n\n                \n                    \n                        current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport * as MediumEditor from 'medium-editor/dist/js/medium-editor';\n\n/** Wraps medium-editor to a reactive form component.\n * https://components.entrecode.de/misc/medium-editor\n*/\n@Component({\n  selector: 'ec-medium-editor',\n  styleUrls: ['./medium-editor.component.scss'],\n  templateUrl: 'medium-editor.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MediumEditorComponent),\n      multi: true\n    }\n  ]\n})\nexport class MediumEditorComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  /** data model */\n  @Input() model: any;\n  /** MediumEditor [options](https://github.com/yabwe/medium-editor#mediumeditor-options) */\n  @Input() options: any;\n  /** empty placeholder */\n  @Input() placeholder: string;\n  /** change emitter */\n  @Output() modelChange: EventEmitter = new EventEmitter();\n  /** container element */\n  @ViewChild('container') container: ElementRef;\n  /** current value */\n  value: any;\n  /** editor instance */\n  private editor: MediumEditor;\n  /** ready promise */\n  public ready: Promise;\n\n  /** inits editor */\n  ngOnInit() {\n    this.container.nativeElement.innerHTML = this.model || '';\n    this.options.placeholder = this.placeholder;\n    this.editor = new MediumEditor(this.container.nativeElement, this.options);\n    this.editor.subscribe('editableInput', () => {\n      this.value = this.editor.getContent();\n      this.propagateChange(this.value);\n    });\n    this.ready = Promise.resolve(this.editor);\n  }\n  /** destroys editor */\n  ngOnDestroy(): void {\n    this.editor.destroy();\n  }\n\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    this.ready.then((editor) => {\n      editor.setContent(this.value);\n    });\n  }\n\n  propagateChange = (_: any) => {\n  };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'MediumEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediumModule.html":{"url":"modules/MediumModule.html","title":"module - MediumModule","body":"\n                   \n\n\n\n\n  Modules\n  MediumModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MediumModule\n\n\n\ncluster_MediumModule_declarations\n\n\n\ncluster_MediumModule_MediumEditorComponent_providers\n\n\n\ncluster_MediumModule_exports\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n\n\nMediumModule\n\nMediumModule\n\nMediumModule -->\n\nMediumEditorComponent->MediumModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumModule->MediumEditorComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->MediumEditorComponent -->\n\n{\n    : , : (() => ), : true\n}->MediumEditorComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/medium-editor/src/medium.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MediumEditorComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MediumEditorComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MediumEditorComponent } from './medium-editor.component';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [MediumEditorComponent],\n  declarations: [MediumEditorComponent],\n  providers: [],\n})\nexport class MediumModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/menu/menu.component.ts\n\n\n    \n        Description\n    \n    \n        Renders a nested menu from a given routes Array (the same you would use for angular routing). \n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-menu,[ec-menu]\n            \n\n            \n                styleUrls\n                menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hover\n                            \n                            \n                                    Private\n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelTimeout\n                            \n                            \n                                getColor\n                            \n                            \n                                getItemColor\n                            \n                            \n                                getLevel\n                            \n                            \n                                getPath\n                            \n                            \n                                hasActivePath\n                            \n                            \n                                hoverItem\n                            \n                            \n                                hoverOut\n                            \n                            \n                                isActive\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colors\n                            \n                            \n                                hoverDelay\n                            \n                            \n                                parent\n                            \n                            \n                                route\n                            \n                            \n                                routes\n                            \n                            \n                                title\n                            \n                            \n                                vanishDelay\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                            Injects the Router. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colors\n                    \n                    \n                        Color map of submenus. \n\n                            \n                            Type:    string[]\n\n                            \n                        \n                            Default value: ['#29A9E1', '#00DBF0', '#4A5EA9', '#29A9E1', '#C9C8D4']\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hoverDelay\n                    \n                    \n                        Delay before menu is shown on mouseover. \n\n                        \n                            Default value: 50\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parent\n                    \n                    \n                        Parent Menu (when nested) \n\n                            \n                            Type:    MenuComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        route\n                    \n                    \n                        The currently active route \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        routes\n                    \n                    \n                        Routes that should be used for the menu. You can use your angular router routes here. \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                        The title of the menu \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        vanishDelay\n                    \n                    \n                        Delay before menu is hidden after mouseout. \n\n                        \n                            Default value: 500\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelTimeout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Cancels the current timeout \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetColor(level: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Returns the color for the current level. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getItemColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetItemColor(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Returns the color for the given item. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLevel(level: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Returns the level of nesting (parent=0). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPath\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPath(item: , path: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Returns the full path to an item. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasActivePath\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasActivePath(item: , parent: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item or a child of it is active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        parent\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nhoverItem(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Hovers the item after hoverDelay timeout. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nhoverOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:95\n                            \n                        \n\n\n                \n                    \n                            Hovers out after vanishDelay \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisActive(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item is active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item is selected. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            updates the routes on change of route \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hover\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hover:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:29\n                            \n                        \n\n                \n                    \n                        The currently hovered Route\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeout:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                        The timeout for delay handling \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router'; // TODO cannot import Route...\n\n/** Renders a nested menu from a given routes Array (the same you would use for angular routing). */\n@Component({\n  selector: 'ec-menu,[ec-menu]',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnChanges {\n  /** Routes that should be used for the menu. You can use your angular router routes here. */\n  @Input() routes; // : Route[];\n  /** The currently active route */\n  @Input() route; // : Route;\n  /** The title of the menu */\n  @Input() title: string;\n  /** Parent Menu (when nested) */\n  @Input() parent: MenuComponent;\n  /** Color map of submenus. */\n  @Input() colors: string[] = ['#29A9E1', '#00DBF0', '#4A5EA9', '#29A9E1', '#C9C8D4'];\n  /** Delay before menu is hidden after mouseout. */\n  @Input() vanishDelay = 500;\n  /** Delay before menu is shown on mouseover. */\n  @Input() hoverDelay = 50;\n  /** The currently hovered Route*/\n  public hover; // : Route;\n  /** The timeout for delay handling */\n  private timeout;\n\n  /** Injects the Router. */\n  constructor(private router: Router) {\n  }\n\n  /** updates the routes on change of route */\n  ngOnChanges() {\n    if (this.route) {\n      this.routes = this.route.children\n      .filter(route => route.path && route.path.indexOf(':') === -1)\n      .filter(route => !route.data || !route.data.hidden);\n    }\n  }\n\n  /** Returns true if the item or a child of it is active. */\n  hasActivePath(item, parent = this) { // this.parent\n    return parent.getPath(item) === this.router.url;\n  }\n\n  /** Returns true if the item is selected. */\n  isSelected(item) {\n    const path = this.getPath(item);\n    return path !== '/' && (path === this.router.url || this.router.url.indexOf(path) === 0);\n  }\n\n  /** Returns true if the item is active. */\n  isActive(item) {\n    return this.hover === item || (!this.hover && this.isSelected(item));\n  }\n\n  /** Returns the level of nesting (parent=0). */\n  getLevel(level = 0) {\n    return this.parent ? this.parent.getLevel(++level) : level;\n  }\n\n  /** Returns the color for the current level. */\n  getColor(level = 0) {\n    return this.colors[this.getLevel(level) % this.colors.length];\n  }\n\n  /** Returns the color for the given item. */\n  getItemColor(item) {\n    return this.isActive(item) ? this.getColor(1) : 'initial';\n  }\n\n  /** Hovers the item after hoverDelay timeout. */\n  hoverItem(item) { // : Route\n    if (!this.hover) {\n      this.hover = item;\n    }\n    this.timeout = setTimeout(() => {\n      this.hover = item;\n    }, this.hoverDelay);\n  }\n\n  /** Cancels the current timeout */\n  cancelTimeout() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  /** Hovers out after vanishDelay */\n  hoverOut() {\n    this.timeout = setTimeout(() => {\n      delete this.hover;\n    }, this.vanishDelay)\n  }\n\n  /** Returns the full path to an item. */\n  getPath(item, path: string = '') {\n    path = '/' + item.path + path;\n    if (!this.parent) {\n      return path;\n    }\n    return this.parent.getPath(this.route, path);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{title}}\n    \n    \n      {{item.data?.title || item.path}}\n      {{item.data?.title || item.path}}\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{title}}              {{item.data?.title || item.path}}      {{item.data?.title || item.path}}        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MockupComponent.html":{"url":"components/MockupComponent.html","title":"component - MockupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MockupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/mockup/mockup.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the style prototypes \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-mockup\n            \n\n            \n                styleUrls\n                mockup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./mockup.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n/** This component holds the style prototypes */\n@Component({\n  selector: 'ec-mockup',\n  templateUrl: './mockup.component.html',\n  styleUrls: ['./mockup.component.scss']\n})\nexport class MockupComponent {\n}\n\n    \n\n    \n        \n  \n    ec.list\n\n    ec.list\n    \n      \n        \n          \n            \n          \n          \n            Groupname\n          \n          \n            \n              \n              \n                \n                  delete\n                \n                \n                  dublicate\n                \n              \n            \n          \n        \n        \n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .selected\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .error\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .disabled\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .success\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .info\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .invalid\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .custom-item-class\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n    ec.list.card\n    \n      \n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n      \n    \n    ec.list.simple\n    \n      \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n      \n    \n  \n\n-->\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      ec.list    ec.list                                                                        Groupname                                                                                              delete                                                  dublicate                                                                                                                                                                                                                Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .selected                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .error                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .disabled                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .success                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .info                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .invalid                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .custom-item-class                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                                ec.list.card                                                                                                                                  Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                            ec.list.simple                                                      Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                          -->'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'MockupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfig.html":{"url":"interfaces/ModelConfig.html","title":"interface - ModelConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/model-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig, FieldConfigProperty } from '@ec.components/core';\n\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfig {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelConfigService.html":{"url":"injectables/ModelConfigService.html","title":"injectable - ModelConfigService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ModelConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/model-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The main class for configuring the behaviour of a model.\nBy default, everything is auto generated from the model's schema but can be overriden via the\nset method. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                omittedFields\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSystemPropertiesToFieldConfig\n                            \n                            \n                                generateConfig\n                            \n                            \n                                generateFieldConfig\n                            \n                            \n                                get\n                            \n                            \n                                isSystemProperty\n                            \n                            \n                                parseType\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(crud: CrudService, sdk: SdkService, typeConfig: TypeConfigService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/model-config/model-config.service.ts:27\n                            \n                        \n\n                \n                    \n                            Injects CrudService and SdkService. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        crud\n                                                  \n                                                        \n                                                                    CrudService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                    TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addSystemPropertiesToFieldConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \naddSystemPropertiesToFieldConfig(config: FieldConfig, override: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:68\n                            \n                        \n\n\n                \n                    \n                            Assigns default system fields to given config. Does not override by default \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    FieldConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        override\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateConfig(model: string, fieldConfig?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:179\n                            \n                        \n\n\n                \n                    \n                            Returns the given model's config and generates a field config from the schema if it is not configured. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fieldConfig\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateFieldConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateFieldConfig(model: string, fields?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:130\n                            \n                        \n\n\n                \n                    \n                            Generates a proper fieldConfig for a given model and an optional local fieldConfig.\nOperates in three layers: If a local fieldConfig is given, it will be used.\nIf no local fieldConfig is given, the global model's field config is used.\nIf no global field config is found for that model, it will be generated from the model schema.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fields\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Retrieves the given model config.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            ModelConfig.get(&#39;muffin&#39;); //returns muffin config;\n                                        \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSystemProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSystemProperty(property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Checks if a given property name is a system property (either part of omittedFields or beginning with _).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parseType\n                            \n                            \n                        \n                    \n                \n                \n                    \nparseType(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:113\n                            \n                        \n\n\n                \n                    \n                            Parses the property type (as contained in the property schema's title field). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { raw: string; name: any; relation: any; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(property: string, config: CrudConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Sets the given model config.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    CrudConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            ModelConfig.set(&#39;muffin&#39;, {\nfields: {\ntitle: {\nlabel: &#39;Muffin Titel&#39;\n}\n});\n                                        \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            omittedFields\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        omittedFields:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'id',\n    'private',\n    'created',\n    'creator',\n    'modified'\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:21\n                            \n                        \n\n                \n                    \n                        Array of property names that are omitted by default. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { CrudService } from '../crud/crud.service';\nimport { Config } from '@ec.components/core/src/config/config';\nimport { FieldConfig } from '@ec.components/core/src/config/field-config.interface';\nimport { FieldConfigProperty } from '@ec.components/core/src/config/field-config-property.interface';\nimport { SdkService } from '../sdk/sdk.service';\nimport { TypeConfigService } from './type-config.service';\nimport { ListConfig } from '@ec.components/core/src/list/list-config.interface';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport moment from 'moment-es6';\n\n/** The main class for configuring the behaviour of a model.\n * By default, everything is auto generated from the model's schema but can be overriden via the\n * set method. */\n@Injectable()\nexport class ModelConfigService extends Config {\n  /** Array of property names that are omitted by default. */\n  omittedFields: Array = [\n    'id',\n    'private',\n    'created',\n    'creator',\n    'modified'\n  ];\n\n  /** Injects CrudService and SdkService. */\n  constructor(private crud: CrudService,\n    private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private symbol: SymbolService) {\n    super();\n  }\n\n  /** Retrieves the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.get('muffin'); //returns muffin config;\n   * ```\n   * */\n  get(property: string): CrudConfig {\n    return this.configure('model', property);\n  }\n\n  /** Sets the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.set('muffin', {\n   *  fields: {\n   *    title: {\n   *      label: 'Muffin Titel'\n   *    }\n   *  });\n   * ```\n   * */\n  set(property: string, config: CrudConfig): CrudConfig {\n    return this.configure('model', property, config);\n  }\n\n  /** Checks if a given property name is a system property (either part of omittedFields or beginning with _).*/\n  isSystemProperty(property: string) {\n    return property[0] === '_' || this.omittedFields.indexOf(property) !== -1;\n  }\n\n  /** Assigns default system fields to given config. Does not override by default */\n  addSystemPropertiesToFieldConfig(config: FieldConfig, override = false) {\n    const defaultConfig = {\n      id: {\n        label: this.symbol.resolve('field.label.id'),\n        view: 'string',\n        form: false,\n        immutable: true,\n        hidden: true\n      },\n      _created: {\n        label: this.symbol.resolve('field.label.created'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        form: false,\n        immutable: true,\n        sortable: true,\n        hidden: true,\n        rawFilter: true\n      },\n      _modified: {\n        label: this.symbol.resolve('field.label.modified'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        form: false,\n        immutable: true,\n        sortable: true,\n        hidden: false,\n        rawFilter: true\n      },\n      _creator: {\n        label: this.symbol.resolve('field.label.creator'),\n        display: this.typeConfig.displayAccount(),\n        view: 'account',\n        form: false,\n        immutable: true,\n        hidden: true\n      }\n    };\n    Object.keys(defaultConfig).forEach(property =>\n      Object.assign(config, {\n        [property]: override ? defaultConfig[property] : config[property] || defaultConfig[property]\n      }));\n  }\n\n  /** Parses the property type (as contained in the property schema's title field). */\n  parseType(type: string) {\n    if (!type) {\n      return null;\n    }\n    const match = type.match(/^(\\w*)()?/i);\n    return !match.length ? null : {\n      raw: type,\n      name: match[1],\n      relation: match.length > 2 ? match[3] : null\n    };\n  }\n\n  /** Generates a proper fieldConfig for a given model and an optional local fieldConfig.\n   * Operates in three layers: If a local fieldConfig is given, it will be used.\n   * If no local fieldConfig is given, the global model's field config is used.\n   * If no global field config is found for that model, it will be generated from the model schema.\n   * */\n  generateFieldConfig(model: string, fields?): Promise> {\n    let fieldConfig;\n    return Promise.resolve().then(() => {\n      if (fields) {\n        return fields;\n      }\n      // use global config, if given\n      if (this.get(model) && this.get(model).fields) {\n        return this.get(model).fields;\n      }\n    }).then((config) => {\n      fieldConfig = config;\n      return this.sdk.getSchema(model);\n    }).then((schema) => {\n      schema = schema.allOf[1];\n      const properties = Object.keys(schema.properties)\n        .filter(property => (!fieldConfig && !this.isSystemProperty(property)) || (fieldConfig && !!fieldConfig[property]));\n      fieldConfig = fieldConfig || {};\n      this.addSystemPropertiesToFieldConfig(fieldConfig); // prepends system fields\n      properties.forEach(property => {\n        let type;\n        if (property === '_entryTitle') {\n          type = {\n            raw: 'text',\n            name: 'text',\n            model: null\n          };\n        } else {\n          type = this.parseType(schema.properties[property].title);\n        }\n        if (!type) {\n          console.error('Model Property Schema title ', schema.properties[property].title, ' was unexpected, ignoring property', property)\n          return;\n        }\n        fieldConfig[property] = Object.assign({\n          label: property,\n          schema: schema.properties[property],\n          relation: type.relation,\n          readOnly: schema.properties[property].readOnly || this.isSystemProperty(property),\n          // required: schema.required.indexOf(property) !== -1, // TODO\n          display: ((value) => value)\n        }, this.typeConfig.get(type.name),\n          fieldConfig[property] ? fieldConfig[property] : {});\n      });\n      return fieldConfig;\n    });\n  }\n\n  /** Returns the given model's config and generates a field config from the schema if it is not configured. */\n  generateConfig(model: string, fieldConfig?): Promise> {\n    const config = Object.assign({}, this.get(model) || {}); // clone\n    Object.assign(config, {\n      identifier: 'id',\n      identifierPattern: /^[0-9A-Za-z-_]{7,14}$/, // shortID pattern\n      label: '_entryTitle',\n      onSave: (item: Item, value) => this.crud.save(model, item.getBody(), value)\n    });\n    if (!model) {\n      return Promise.resolve(config);\n    }\n    return this.generateFieldConfig(model, fieldConfig).then((fields) => {\n      Object.assign(config, { fields });\n      return Promise.resolve(config);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfiguration.html":{"url":"interfaces/ModelConfiguration.html","title":"interface - ModelConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/model-configuration.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig, FieldConfigProperty } from '@ec.components/core';\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfiguration {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notification.html":{"url":"classes/Notification.html","title":"class - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/notifications/notification.ts\n        \n\n            \n                Description\n            \n            \n                A Notification is used inside NotificationService and NotificationComponent to display any information to the user.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                append\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                hide\n                            \n                            \n                                    Optional\n                                host\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                replace\n                            \n                            \n                                    Optional\n                                sticky\n                            \n                            \n                                    Optional\n                                time\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notification: Notification)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                            The constructor just looks if an error is set, and if yes, sets the type to error. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                  \n                                                        \n                                                                    Notification\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            append\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        append:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:22\n                            \n                        \n\n                \n                    \n                        If set, the notification will be appended to the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:18\n                            \n                        \n\n                \n                    \n                        If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hide:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:20\n                            \n                        \n\n                \n                    \n                        Notifications that should be hidden when this one gets active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            host\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        host:     NotificationsComponent\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:10\n                            \n                        \n\n                \n                    \n                        The host the is NotificationsComponent that should display the notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:8\n                            \n                        \n\n                \n                    \n                        The message is shown below the title and is meant for further description. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            replace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        replace:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                        If set, the notification will replace all others in the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sticky\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sticky:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:14\n                            \n                        \n\n                \n                    \n                        If true, the notification will stay forever \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            time\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        time:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:12\n                            \n                        \n\n                \n                    \n                        The amount of ms it should be visible \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:6\n                            \n                        \n\n                \n                    \n                        The title is the headline of a notification and the only value that is required. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:16\n                            \n                        \n\n                \n                    \n                        Determines the looks. Currently info, error and success are defined. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotificationsComponent } from './notifications.component';\n\n/** A Notification is used inside NotificationService and NotificationComponent to display any information to the user.*/\nexport class Notification {\n  /** The title is the headline of a notification and the only value that is required. */\n  title?: string;\n  /** The message is shown below the title and is meant for further description. */\n  message?: string;\n  /** The host the is NotificationsComponent that should display the notification. */\n  host?: NotificationsComponent;\n  /** The amount of ms it should be visible */\n  time?: number;\n  /** If true, the notification will stay forever */\n  sticky?: boolean;\n  /** Determines the looks. Currently info, error and success are defined. */\n  type?: string;\n  /** If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.*/\n  error?: any;\n  /** Notifications that should be hidden when this one gets active */\n  hide?: this[];\n  /** If set, the notification will be appended to the given array of Notifications when activated */\n  append?: this[];\n  /** If set, the notification will replace all others in the given array of Notifications when activated */\n  replace?: this[];\n\n  /** The constructor just looks if an error is set, and if yes, sets the type to error. */\n  constructor(notification: Notification) {\n    if (notification.error) {\n      this.type = 'error';\n    }\n    Object.assign(this, notification);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/notifications/notifications.component.ts\n\n\n    \n        Description\n    \n    \n        Displays any kind of Notification inside the DOM.\nIt listens on the notificationService.$emitter for notifications.\nhttps://components.entrecode.de/ui/notifications\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-notifications\n            \n\n            \n                styleUrls\n                notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                time\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/notifications.component.ts:22\n                            \n                        \n\n                \n                    \n                            Listens on the NotificationService and shows each notification that has this component set as host, or none at all. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        time\n                    \n                    \n                        The default time for a notification to be visible. Will be ignored if the notification itself has a time set. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Collection\n\n                    \n                \n                    \n                        \n                            Type :     Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.component.ts:20\n                            \n                        \n\n                \n                    \n                        The current stack of notifications that are visible. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Notifications\nThe Notifications Module is a combination of the NotificationsService and the NotificationsComponent.\nSimple Usage\n\nPlace the component somewhere in your app template:\n\n\nEmit notifications via the service\n\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  showNotification() {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        message: 'Das ist die Beschreibung'\n      });\n  }\n\n  doSomethingRisky() {\n      return Promise.reject('Fehler')\n      .catch((err) => {\n          this.notifications.emit({\n              error: err, // passing the error Object\n              title: 'Fehler!'\n          })\n      })\n  }\n}The given type will be added as class. The classes that are available by default can be looked up here.\nAdvanced Usage\nYou can also use multiple ec-notifications at different places:\n\n\nA\nBAll you have to do, is pass the instance of the component that should display the notification via the host property:\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  emit(host) {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        host: host\n      });\n  }\n}Hiding previous errors\nHere is an example usage of a typical success/error handling.\nIt features hiding previous notifications. We recommended you to use the WithNotifications interface for that case.\nexport class MuffinComponent implements WithNotifications {\n  /** Recent Error notification */\n  notifications: Notification[] = [];\n\nconstructor(\n    public bakery:BakeryService,\n    public notificationService: NotificationsService,\n    )\n\n  bake() {\n    this.bakery.bake().then(()=> {\n        this.notificationService.emit({\n            title: 'Muffin was baken!',\n            hide: this.notifications // this will hide all preceding notifications\n        })\n    }).catch(error=>{\n        this.notificationService.emit({\n            title: 'Error while baking',\n            sticky: true,\n            hide: this.notifications, // this will hide all preceding notifications\n            replace: this.notifications // this will replace the given array with the new notification\n        })\n    });\n  }\n}The hide option is useful to hide obsolete errors. E.g. If you successfully log in after one failiure, the sticky error notification of the first attempt will be hidden. This enables you to keep errors messages as long as they are needed.\nInstead of replace, you could also use append (see notification.component.ts for implementation).\n\n    \n\n    \n        import { Component, Input } from '@angular/core';\nimport { Notification } from './notification';\nimport { Collection } from '@ec.components/core/src/collection/collection';\nimport { NotificationsService } from './notifications.service';\n\n/** Displays any kind of Notification inside the DOM.\n * It listens on the notificationService.$emitter for notifications.\n * https://components.entrecode.de/ui/notifications\n * */\n@Component({\n  selector: 'ec-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent {\n  /** The current stack of notifications that are visible. */\n  notifications: Collection = new Collection([]);\n  /** The default time for a notification to be visible. Will be ignored if the notification itself has a time set. */\n  @Input() time: number;\n\n  /** Listens on the NotificationService and shows each notification that has this component set as host, or none at all. */\n  constructor(private notificationService: NotificationsService) {\n    this.time = this.time || this.notificationService.defaultTime;\n    this.notificationService.emitter$.subscribe((notification: Notification) => {\n      if (notification.hide) {\n        this.notifications.removeAll(notification.hide);\n      }\n      if (!notification.title && !notification.message) {\n        console.warn('tried to emit notification without message and title', notification);\n        return;\n      }\n      if (notification.append) {\n        notification.append.push(notification);\n      }\n      if (notification.replace) {\n        notification.replace.length = 0;\n        notification.replace.push(notification);\n      }\n      if (!notification.host || notification.host === this) {\n        this.notifications.add(notification);\n        if (notification.sticky) {\n          if (notification.time) {\n            console.warn('notification.time is ignored because it was set sticky');\n          }\n          return;\n        }\n        setTimeout(() => this.notifications.remove(notification), notification.time || this.time)\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    {{notification.title}}\n    {{notification.message}}\n    \n    \n    \n      \n        \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{notification.title}}    {{notification.message}}                                                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationsModule.html":{"url":"modules/NotificationsModule.html","title":"module - NotificationsModule","body":"\n                   \n\n\n\n\n  Modules\n  NotificationsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_imports\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\n\nErrorComponent\n\nErrorComponent\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nIconModule\n\nIconModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/notifications/notifications.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ErrorComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     NotificationsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IconModule\n                            \n                            \n                                    PopModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ErrorComponent\n                            \n                            \n                                    NotificationsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NotificationsComponent } from './notifications.component';\nimport { NotificationsService } from './notifications.service';\nimport { PopModule } from '../pop/pop.module';\nimport { ErrorComponent } from './error/error.component';\nimport { IconModule } from '../icon/icon.module';\n\n@NgModule({\n  declarations: [\n    NotificationsComponent,\n    ErrorComponent,\n  ],\n  imports: [\n    CommonModule,\n    PopModule,\n    IconModule,\n  ],\n  exports: [\n    NotificationsComponent,\n    ErrorComponent,\n  ],\n  providers: [\n    {\n      provide: 'useDesktopNotifications',\n      useValue: false\n    }, NotificationsService]\n})\nexport class NotificationsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/notifications/notifications.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the main interaction layer for the developer to show notifications.\nYou can use desktop notifications by default by providing:\n{\nprovide: \"useDesktopNotifications\",\nuseValue: true\n}in your module's providers.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultTime\n                            \n                            \n                                    Private\n                                emitter\n                            \n                            \n                                    Public\n                                emitter$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                desktopNotification\n                            \n                            \n                                emit\n                            \n                            \n                                getPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(useDesktopNotifications: )\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                            The constructors injects the useDesktopNotifications flag from the module.\nIf true, all notifications will be shown as desktop notifications instead. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        useDesktopNotifications\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desktopNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \ndesktopNotification(notification: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Emits a desktop notification after asking for permission (if not already granted). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emit\n                            \n                            \n                        \n                    \n                \n                \n                    \nemit(notification: Notification, desktop?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        desktop\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPermission()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Asks for permission to show desktop notifications, if not already granted. \n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            defaultTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                        The default view time for a notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            emitter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emitter:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:22\n                            \n                        \n\n                \n                    \n                        The emitter subject to fire notifications. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            emitter$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emitter$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.emitter.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:24\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when a new notification comes in. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { Notification } from './notification';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n/** Workaround to get window without typescript complaining */\ndeclare const window;\n\n/** This service is the main interaction layer for the developer to show notifications.\n * You can use desktop notifications by default by providing:\n * ```json\n {\n   provide: \"useDesktopNotifications\",\n   useValue: true\n }```\n * in your module's providers.\n *\n * */\n@Injectable()\nexport class NotificationsService {\n  /** The emitter subject to fire notifications. */\n  private emitter: Subject = new Subject();\n  /** Observable that is nexted when a new notification comes in. */\n  public emitter$: Observable = this.emitter.asObservable();\n  /** The default view time for a notification. */\n  public defaultTime = 5000;\n\n  /** The constructors injects the useDesktopNotifications flag from the module.\n   * If true, all notifications will be shown as desktop notifications instead. */\n  constructor(@Inject('useDesktopNotifications') private useDesktopNotifications) {\n  }\n\n  /** Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.*/\n  emit(notification: Notification, desktop?: boolean) {\n    const instance = new Notification(notification);\n    if (desktop || this.useDesktopNotifications) {\n      this.desktopNotification(instance);\n    } else {\n      this.emitter.next(instance);\n    }\n    return instance;\n  }\n\n  /** Asks for permission to show desktop notifications, if not already granted. */\n  getPermission(): Promise {\n    if (window.Notification.permission === 'granted') {\n      return Promise.resolve();\n    }\n    return window.Notification.requestPermission().then((permission) => {\n      // If the user accepts, let's create a notification\n      if (permission !== 'granted') {\n        return Promise.reject('Desktop Notification Permission Denied!');\n      }\n    });\n  }\n\n  /** Emits a desktop notification after asking for permission (if not already granted). */\n  desktopNotification(notification: Notification) {\n    if (!('Notification' in window)) {\n      console.warn('This browser does not support desktop notification');\n    }\n    this.getPermission().then(() => {\n      const message = new window.Notification(notification.title, { body: notification.message });\n      if (notification.sticky) {\n        if (notification.time) {\n          console.warn('notification.time is ignored because it was set sticky');\n        }\n        return;\n      }\n      setTimeout(() => message.close(), notification.time || this.defaultTime)\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OutputComponent.html":{"url":"components/OutputComponent.html","title":"component - OutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/output/output.component.ts\n\n\n    \n        Description\n    \n    \n        Outputs the given field of the given item, rendering the component dynamically. \n\n    \n\n    \n        Extends\n    \n    \n            DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-output\n            \n\n            \n                styleUrls\n                output.component.scss\n            \n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        The instance of field that should be used in the template \n\n                            \n                            Type:    Field\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/output/output.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                        The belonging item \n\n                            \n                            Type:    Item\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/output/output.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/output/output.component.ts:21\n                            \n                        \n\n\n                \n                    \n                            The component is loade as soon as the field and item are known.\nIf the field has no output property set, the DefaultOutputComponent will be rendered. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, data: Object)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldHost:     SlotHostDirective\n\n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges } from '@angular/core';\nimport { DefaultOutputComponent } from '../../form/default-output/default-output.component';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core/src/item/item';\n\n/** Outputs the given field of the given item, rendering the component dynamically. */\n@Component({\n  selector: 'ec-output',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n  styleUrls: ['./output.component.scss']\n})\nexport class OutputComponent extends DynamicSlotComponent implements OnChanges {\n  /** The instance of field that should be used in the template */\n  @Input() field: Field;\n  /** The belonging item */\n  @Input() item: Item;\n\n  /** The component is loade as soon as the field and item are known.\n   * If the field has no output property set, the DefaultOutputComponent will be rendered. */\n  ngOnChanges() {\n    if (this.field && this.item) {\n      this.loadComponent(this.field.output || DefaultOutputComponent,\n        {\n          item: this.item,\n          field: this.field\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'OutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/pagination/pagination.ts\n        \n\n            \n                Description\n            \n            \n                This class can be used to control the loading behaviour of external data. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                change\n                            \n                            \n                                    Public\n                                change$\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                pages\n                            \n                            \n                                    Protected\n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                first\n                            \n                            \n                                getPage\n                            \n                            \n                                getPages\n                            \n                            \n                                isActive\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                last\n                            \n                            \n                                    Protected\n                                load\n                            \n                            \n                                next\n                            \n                            \n                                params\n                            \n                            \n                                prev\n                            \n                            \n                                select\n                            \n                            \n                                setTotal\n                            \n                            \n                                slice\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: ListConfig, total?: number)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/pagination/pagination.ts:16\n                            \n                        \n\n                \n                    \n                            You can init each Pagination instance with an optional config.\nIf no config is provided, it will default to {page: 1, size: 25}. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ListConfig\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        change:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:14\n                            \n                        \n\n                \n                    \n                        Subject for tracking changes. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            change$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        change$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.change.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:16\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when the pagination has changed. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ListConfig\n\n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:10\n                            \n                        \n\n                \n                    \n                        The pagination config \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pages:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:12\n                            \n                        \n\n                \n                    \n                        Array to iterate over the number of pages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            total\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        total:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:8\n                            \n                        \n\n                \n                    \n                        The total number of items that is being paginated. It can be changed via setTotal. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first\n                            \n                            \n                        \n                    \n                \n                \n                    \nfirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:90\n                            \n                        \n\n\n                \n                    \n                            Loads the first Page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:34\n                            \n                        \n\n\n                \n                    \n                            Retrieves the current page \n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPages\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:39\n                            \n                        \n\n\n                \n                    \n                            Retrieves the number of pages \n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisActive(page: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:104\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given page number is currently active.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:109\n                            \n                        \n\n\n                \n                    \n                            Returns true if the current page is the first one \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLast\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:114\n                            \n                        \n\n\n                \n                    \n                            Returns true if the current page is the last one \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last\n                            \n                            \n                        \n                    \n                \n                \n                    \nlast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:95\n                            \n                        \n\n\n                \n                    \n                            Loads the last page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        load(config?: ListConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:74\n                            \n                        \n\n\n                \n                    \n                            Merges config and fires next on change \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ListConfig\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \nnext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:44\n                            \n                        \n\n\n                \n                    \n                            Loads the next page. Throws error if already on last page. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            params\n                            \n                            \n                        \n                    \n                \n                \n                    \nparams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:127\n                            \n                        \n\n\n                \n                    \n                            Returns an object with all relevant infos about the current state of pagination \n\n\n                            \n                                Returns :     { page: number; pages: number; total: number; from: number; to: any; size: any; availableSizes: a...\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prev\n                            \n                            \n                        \n                    \n                \n                \n                    \nprev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:53\n                            \n                        \n\n\n                \n                    \n                            Loads the previous page. Throws error if already on first page. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(page: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:82\n                            \n                        \n\n\n                \n                    \n                            Selects the given page number \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTotal\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTotal(total: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:64\n                            \n                        \n\n\n                \n                    \n                            Sets the total number of items and calculcates the page count.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        total\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slice\n                            \n                            \n                        \n                    \n                \n                \n                    \nslice(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:122\n                            \n                        \n\n\n                \n                    \n                            slices a given array according to the current pagination state \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSize(size: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:139\n                            \n                        \n\n\n                \n                    \n                            updates the size of the pages.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        size\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Pagination\nPagination can be used to keep track of the pages of arbitrary items.\nconst pagination = new Pagination({ size: 10 });\npagination.setTotal(50); //tells the pagination that it should paginate over 50 items.\npagination.getPages(); //5See list.ts/list.component for example usage.\n\n    \n\n    \n        import { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { ListConfig } from '../list/list-config.interface';\n\n/** This class can be used to control the loading behaviour of external data. */\nexport class Pagination {\n  /** The total number of items that is being paginated. It can be changed via setTotal. */\n  protected total: number;\n  /** The pagination config */\n  protected config: ListConfig;\n  /** Array to iterate over the number of pages. */\n  public pages: Array;\n  /** Subject for tracking changes. */\n  private change = new Subject();\n  /** Observable that is nexted when the pagination has changed. */\n  public change$: Observable = this.change.asObservable();\n\n  /** You can init each Pagination instance with an optional config.\n   * If no config is provided, it will default to ```{page: 1, size: 25}```. */\n  constructor(config?: ListConfig, total?: number) {\n    this.config = { page: 1, size: 25 };\n    Object.assign(this.config, config);\n    Object.assign(this.config, {\n      availableSizes: Array.from(new Set([this.config.size]\n        .concat(this.config.availableSizes || [10, 25, 50, 100], [this.config.size])\n        .sort(((a, b) => a - b))))\n    });\n    if (total) {\n      this.setTotal(total);\n    }\n  }\n\n  /** Retrieves the current page */\n  getPage(): number {\n    return this.config.page;\n  }\n\n  /** Retrieves the number of pages */\n  getPages(): number {\n    return this.pages ? this.pages.length : 0;\n  }\n\n  /** Loads the next page. Throws error if already on last page. */\n  next(): void {\n    if (this.isLast()) {\n      return; // already last page\n    }\n    this.config.page += 1;\n    this.load();\n  }\n\n  /** Loads the previous page. Throws error if already on first page. */\n  prev(): void {\n    if (this.isFirst()) {\n      return; // already first page\n    }\n    this.config.page -= 1;\n    this.load();\n  }\n\n  /**\n   * Sets the total number of items and calculcates the page count.\n   * */\n  setTotal(total: number) {\n    this.total = total;\n    this.pages = new Array(Math.ceil(this.total / this.config.size));\n    if (this.config.page !== 1 && this.config.page > this.pages.length) {\n      this.config.page = this.pages.length || 1;\n      this.load();\n    }\n  }\n\n  /** Merges config and fires next on change */\n  protected load(config?: ListConfig): void {\n    if (config) {\n      Object.assign(this.config, config);\n    }\n    this.change.next(this.config);\n  }\n\n  /** Selects the given page number */\n  select(page: number): void {\n    if (page === this.config.page) {\n      return;\n    }\n    this.load({ page: page });\n  }\n\n  /** Loads the first Page */\n  first(): void {\n    this.load({ page: 1 });\n  }\n\n  /** Loads the last page */\n  last() {\n    if (!this.pages) {\n      throw new Error(`Cannot load last page without knowing the item count.\n        Call setTotal(itemCount) before loading.`);\n    }\n    this.load({ page: this.pages.length });\n  }\n\n  /** Returns true if the given page number is currently active.*/\n  isActive(page: number): boolean {\n    return this.config.page === page;\n  }\n\n  /** Returns true if the current page is the first one */\n  isFirst(): boolean {\n    return this.config.page === 1;\n  }\n\n  /** Returns true if the current page is the last one */\n  isLast(): boolean {\n    if (!this.pages) {\n      return true;\n    }\n    return this.config.page === this.pages.length;\n  }\n\n  /** slices a given array according to the current pagination state */\n  slice(items: Array): Array {\n    return items.slice((this.config.page - 1) * this.config.size, (this.config.page) * this.config.size);\n  }\n\n  /** Returns an object with all relevant infos about the current state of pagination */\n  params() {\n    return {\n      page: this.getPage(),\n      pages: this.getPages(),\n      total: this.total,\n      from: (this.getPage() - 1) * this.config.size + 1,\n      to: Math.min(this.getPage() * this.config.size, this.total),\n      size: this.config.size,\n      availableSizes: this.config.availableSizes,\n    }\n  }\n  /** updates the size of the pages.  */\n  updateSize(size: number) {\n    if (!size) {\n      return;\n    }\n    this.load({ size, page: 1 });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/pagination/pagination.component.ts\n\n\n    \n        Description\n    \n    \n        The Pagination component renders a given instance of the Pagination class.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n                AfterViewInit\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pagination\n            \n\n            \n                styleUrls\n                pagination.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                page\n                            \n                            \n                                    Private\n                                pageContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                translateContainer\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                pagination\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        The config that is used \n\n                            \n                            Type:    PaginationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pagination\n                    \n                    \n                        A Pagination Instance \n\n                            \n                            Type:    Pagination\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \nisVisible(page: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Determines if a page should be visible \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            When the view is ready, the container is translated.  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            As soon as the pagination is known, the change$ event is subscribed to translate the container on change.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Init config. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \ntranslateContainer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Translates the page container that the current page is in the middle \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSize(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:18\n                            \n                        \n\n                \n                    \n                        The div container for the pages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            page\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        page:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:22\n                            \n                        \n\n                \n                    \n                        The pages li elements. The first one is used to determine the container translation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pageContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageContainer:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:20\n                            \n                        \n\n                \n                    \n                        The ul around pages \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Pagination\nTODO\n\n    \n\n    \n        import { AfterViewInit, Component, ElementRef, Input, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { Pagination } from '@ec.components/core';\nimport { PaginationConfig } from './pagination-config.interface';\n\n/**\n * The Pagination component renders a given instance of the Pagination class.\n */\n@Component({\n  selector: 'ec-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.scss']\n})\nexport class PaginationComponent implements OnChanges, AfterViewInit, OnInit {\n  /** A Pagination Instance */\n  @Input() pagination: Pagination;\n  /** The div container for the pages*/\n  @ViewChild('container') private container: ElementRef;\n  /** The ul around pages */\n  @ViewChild('pageContainer') private pageContainer: ElementRef;\n  /** The pages li elements. The first one is used to determine the container translation. */\n  @ViewChildren('page') private page: QueryList;\n  /** The config that is used */\n  @Input() config: PaginationConfig;\n  /** Init config. */\n\n  /** Init config. */\n  ngOnInit() {\n    this.config = new PaginationConfig(this.config);\n  }\n\n  /** As soon as the pagination is known, the change$ event is subscribed to translate the container on change.*/\n  ngOnChanges() {\n    if (!this.pagination) {\n      return;\n    }\n    this.pagination.change$.subscribe((config) => {\n      this.translateContainer();\n    });\n    this.config = new PaginationConfig(this.config);\n  }\n  /** When the view is ready, the container is translated.  */\n  ngAfterViewInit() {\n    this.translateContainer();\n  }\n\n  /** Translates the page container that the current page is in the middle */\n  translateContainer() {\n    if (!this.page || !this.pageContainer) {\n      // console.warn('pages not ready');\n      return;\n    }\n    const itemWidth = this.page.first.nativeElement.clientWidth;\n    const page = this.pagination.getPage();\n    let translation = Math.max(0, itemWidth * (page - this.config.range - 1));\n    translation = Math.min(translation, (this.pagination.getPages() - (2 * this.config.range) - 1) * itemWidth);\n    this.pageContainer.nativeElement.style = `transform:translateX(-${translation}px)`;\n    this.container.nativeElement.style = `max-width:${(1 + 2 * this.config.range) * itemWidth}px`;\n  }\n\n  /** Determines if a page should be visible */\n  isVisible(page) {\n    const current = this.pagination.getPage();\n    return Math.abs(current - page) \n    \n\n    \n        \n  \n    1\">\n      \n        \n          {{'pagination.first' | symbol}}\n        \n      \n      \n        \n          {{'pagination.prev' | symbol}}\n        \n      \n    \n    1\">\n      \n        \n          \n            {{i+1}}\n          \n        \n      \n    \n    1\">\n      \n        \n          {{'pagination.next' | symbol}}\n        \n      \n      \n        \n          {{'pagination.last' | symbol}}\n        \n      \n    \n  \n  \n    {{pagination.params().from}} - {{pagination.params().to}} {{ 'pagination.of' | symbol}} {{pagination.params().total}}\n  \n  \n     1\" (change)=\"updateSize($event.target.value)\" class=\"input\">\n      \n        {{size}} {{'pagination.size' | symbol}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      1\">                        {{\\'pagination.first\\' | symbol}}                                      {{\\'pagination.prev\\' | symbol}}                      1\">                                    {{i+1}}                                1\">                        {{\\'pagination.next\\' | symbol}}                                      {{\\'pagination.last\\' | symbol}}                          {{pagination.params().from}} - {{pagination.params().to}} {{ \\'pagination.of\\' | symbol}} {{pagination.params().total}}         1\" (change)=\"updateSize($event.target.value)\" class=\"input\">              {{size}} {{\\'pagination.size\\' | symbol}}            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationConfig.html":{"url":"classes/PaginationConfig.html","title":"class - PaginationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/list/pagination/pagination-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for a pagination component \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideFirstLast\n                            \n                            \n                                hidePages\n                            \n                            \n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: PaginationConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor assigns the config \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    PaginationConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideFirstLast\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hideFirstLast:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:9\n                            \n                        \n\n                \n                    \n                        Hides first and last Link \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hidePages:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                        Hides pages \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            range\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        range:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:7\n                            \n                        \n\n                \n                    \n                        Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\nNOTE: For a smoother UX, there are minimum 2 * range + 1 pages visible.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\n\n/** Configuration for a pagination component */\nexport class PaginationConfig {\n    /** Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\n * NOTE: For a smoother UX, there are minimum ```2 * range + 1``` pages visible.*/\n    range = 2;\n    /** Hides first and last Link */\n    hideFirstLast: boolean;\n    /** Hides pages */\n    hidePages: boolean;\n    /** The constructor assigns the config */\n    constructor(config: PaginationConfig) {\n        Object.assign(this, config);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordResetComponent.html":{"url":"components/PasswordResetComponent.html","title":"component - PasswordResetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordResetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/auth/password-reset/password-reset.component.ts\n\n\n    \n        Description\n    \n    \n        Form to send password reset request. \n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-password-reset\n            \n\n\n\n\n            \n                templateUrl\n                password-reset.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                email\n                            \n                            \n                                loader\n                            \n                            \n                                lockForm\n                            \n                            \n                                    Public\n                                notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                reset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/password-reset/password-reset.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        Optional api to be used (if not using sdk.api instance) \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        Custom placeholder for email field \n\n                        \n                            Default value: 'E-Mail Adresse...'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Event after request was successful \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Sends request through AuthService and shows notifications + loader. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:16\n                            \n                        \n\n                \n                    \n                        The user email \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     \n\n                    \n                \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:24\n                            \n                        \n\n                \n                    \n                        The loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lockForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lockForm:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:14\n                            \n                        \n\n                \n                    \n                        To ensure the user only sends one request, the form is locked after the request has been sent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { LoaderComponent, NotificationsService, WithLoader } from '@ec.components/ui';\nimport { AuthService } from '../auth.service';\n\n/** Form to send password reset request. */\n@Component({\n  selector: 'ec-password-reset',\n  templateUrl: 'password-reset.component.html'\n})\n\nexport class PasswordResetComponent implements WithLoader {\n  /** To ensure the user only sends one request, the form is locked after the request has been sent */\n  lockForm: boolean;\n  /** The user email */\n  email: string;\n  /** Optional api to be used (if not using sdk.api instance) */\n  @Input() api: PublicAPI;\n  /** Custom placeholder for email field */\n  @Input() placeholder = 'E-Mail Adresse...';\n  /** Event after request was successful */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The loader */\n  @ViewChild(LoaderComponent) loader;\n\n  constructor(public auth: AuthService, public notifications: NotificationsService) {\n  }\n  /** Sends request through AuthService and shows notifications + loader. */\n  reset() {\n    const reset = this.auth.resetPassword(this.email, this.api)\n      .then(() => {\n        this.notifications.emit({\n          type: 'success',\n          title: 'Mail versendet',\n          message: 'Sie haben soeben eine Mail mit weiteren Anweisungen erhalten',\n          sticky: true\n        });\n        this.lockForm = true;\n        this.success.emit();\n      }).catch((error) => {\n        this.notifications.emit({\n          title: 'Fehler beim Passwort zurücksetzen',\n          error,\n          sticky: true\n        });\n        console.log('could not reset password', error);\n      });\n    this.loader.wait(reset);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  Passwort zurücksetzen\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Passwort zurücksetzen'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordResetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PopComponent.html":{"url":"components/PopComponent.html","title":"component - PopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PopComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/pop/pop.component.ts\n\n\n    \n        Description\n    \n    \n        A Pop is an area of content whose visibility can be toggled.\nIt can be used e.g as dialog, drawer or dialog.\nhttps://components.entrecode.de/ui/pop\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pop\n            \n\n            \n                styleUrls\n                pop.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pop.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/pop/pop.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                    \n                        If true, .visible is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        Emits the value of visible on change. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. First removes visible and after the delay it removes active. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. First sets active and after the delay it sets visible. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(visible: boolean, emit: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Shows if not visible, hides if visible. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        visible\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                !this.visible\n                                                        \n\n                                                \n                                                \n                                                        emit\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:25\n                            \n                        \n\n                \n                    \n                        The amount of time between setting active and visible. Defaults to 0. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Pop\nA Pop is not just a modal, but a section of markup that appears (pops) anywhere and with any style on your page.\nUsage\n\n    \n        Close\n    \n    \n        Some body content\n    \n    \n        This is the footer\n    \n\nShow popThe default pop classes can be looked up here.\n\n    \n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PopService } from './pop.service';\n\n/** A Pop is an area of content whose visibility can be toggled.\n * It can be used e.g as dialog, drawer or dialog.\n * https://components.entrecode.de/ui/pop\n * */\n@Component({\n  selector: 'ec-pop',\n  templateUrl: './pop.component.html',\n  styleUrls: ['./pop.component.scss']\n})\nexport class PopComponent {\n  /** If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  */\n  @Input() active: boolean;\n  /** If true, .visible is set on .ec-pop-container.  */\n  @Input() visible: boolean;\n  /** Emits the value of visible on change. */\n  // tslint:disable-next-line:no-output-rename\n  @Output('toggle') _toggle: EventEmitter = new EventEmitter();\n  /** The amount of time between setting active and visible. Defaults to 0. */\n  delay = 0;\n\n  constructor(protected popService: PopService) {\n  }\n\n  /** Shows if not visible, hides if visible. */\n  public toggle(visible: boolean = !this.visible, emit: boolean = false) {\n    if (!visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n    if (emit) {\n      this._toggle.emit(visible);\n    }\n  }\n\n  /** Shows the pop. First sets active and after the delay it sets visible. */\n  public show() {\n    this.active = true;\n    this.popService.stack.add(this);\n    setTimeout(() => {\n      this.visible = true;\n    }, this.delay);\n  }\n\n  /** Hides the pop. First removes visible and after the delay it removes active. */\n  public hide() {\n    this.visible = false;\n    this.popService.stack.remove(this);\n    if (!this.delay) {\n      return;\n    }\n    setTimeout(() => {\n      this.active = false;\n    }, this.delay);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'PopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PopModule.html":{"url":"modules/PopModule.html","title":"module - PopModule","body":"\n                   \n\n\n\n\n  Modules\n  PopModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\n\nPopComponent\n\nPopComponent\n\n\n\nPopModule\n\nPopModule\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/pop/pop.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PopComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     PopService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    PopComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PopComponent } from './pop.component';\nimport { PopService } from './pop.service';\n\n@NgModule({\n  declarations: [\n    PopComponent\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    PopComponent\n  ],\n  providers: [PopService]\n})\nexport class PopModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PopService.html":{"url":"injectables/PopService.html","title":"injectable - PopService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PopService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/pop/pop.service.ts\n        \n\n            \n                Description\n            \n            \n                Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stack\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/pop/pop.service.ts:9\n                            \n                        \n\n                \n                    \n                            Listens for escape keys and hides latest pop + removes the pop from stack \n\n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stack:     Collection\n\n                    \n                \n                    \n                        \n                            Type :     Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.service.ts:9\n                            \n                        \n\n                \n                    \n                        Stack of current opened pops \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Collection } from '@ec.components/core';\nimport { PopComponent } from './pop.component';\n\n/** Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. */\n@Injectable()\nexport class PopService {\n    /** Stack of current opened pops */\n    stack: Collection = new Collection();\n    /** Listens for escape keys and hides latest pop + removes the pop from stack */\n    constructor() {\n        window.addEventListener('keydown', (event) => {\n            if ((event.keyCode === 27 || event.key === 'Escape') && this.stack.items.length) {\n                const latestPop = this.stack.items[this.stack.items.length - 1];\n                latestPop.hide();\n                this.stack.remove(latestPop);\n            }\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceConfig.html":{"url":"injectables/ResourceConfig.html","title":"injectable - ResourceConfig","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ResourceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/resource-config/resource-config.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                base64uuid\n                            \n                            \n                                created\n                            \n                            \n                                get\n                            \n                            \n                                hexColor\n                            \n                            \n                                shortID\n                            \n                            \n                                stringField\n                            \n                            \n                                tagsField\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService, typeConfig: TypeConfigService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-config/resource-config.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                    TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            base64uuid\n                            \n                            \n                        \n                    \n                \n                \n                    \nbase64uuid()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            regex for base64 uuid \n\n\n                            \n                                Returns :     RegExp\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreated(label: string, symbol: SymbolService)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            returns the config for a created field \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'Date'\n                                                        \n\n                                                \n                                                \n                                                        symbol\n                                                        \n                                                                    SymbolService\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { label: string; sortable: boolean; view: string; display: any; group: any; form: boolean; immuta...\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(relationName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:15\n                            \n                        \n\n\n                \n                    \n                            Returns the CrudConfig for the given relation name. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relationName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hexColor\n                            \n                            \n                        \n                    \n                \n                \n                    \nhexColor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            returns the config for a hexColor field \n\n\n                            \n                                Returns :     { label: string; view: string; prefill: string; }\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shortID\n                            \n                            \n                        \n                    \n                \n                \n                    \nshortID()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            returns regex for a shortID \n\n\n                            \n                                Returns :     RegExp\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stringField\n                            \n                            \n                        \n                    \n                \n                \n                    \nstringField(label: , filterable: , sortable: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            returns the config for a string field \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        filterable\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                                \n                                                        sortable\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { label: any; view: string; filterable: boolean; sortable: boolean; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagsField\n                            \n                            \n                        \n                    \n                \n                \n                    \ntagsField(label: , list: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            returns the config for a tags field \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        list\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { label: any; view: string; display: (value: any) => any; list: boolean; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuid\n                            \n                            \n                        \n                    \n                \n                \n                    \nuuid()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            returns regex for a uuid \n\n\n                            \n                                Returns :     RegExp\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n                \n                    \n                        getconfig()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:76\n                                \n                            \n                    \n                        \n                                Returns the whole resource-config, which maps a resource relation name to a CrudConfig. \n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DefaultEntryInputComponent } from '@ec.components/data/src/entry-form/default-entry-input.component';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { AdminEntryInputComponent } from '../entry-form/admin-entry-input.component';\nimport { TypeConfigService } from '../model-config/type-config.service';\n\n@Injectable()\n/** Contains default configurations for all kinds of resources. Used by ResourceList and ResourceForm.  */\nexport class ResourceConfig {\n\n  constructor(private symbol: SymbolService, private typeConfig: TypeConfigService) { }\n  /** Returns the CrudConfig for the given relation name. */\n  get(relationName: string): CrudConfig {\n    if (!this.config[relationName]) {\n      console.error(`${relationName} could not be found in the resource-config.\n      Use one of ${Object.keys(this.config[relationName])}`);\n      return;\n    } // TODO enrich fields with type with type-config?\n    return this.config[relationName];\n  }\n\n  /** returns the config for a created field */\n  created(label = 'Date', symbol: SymbolService) {\n    return {\n      label,\n      sortable: true,\n      view: 'date',\n      display: this.typeConfig.displayDate(),\n      group: this.typeConfig.groupDate(),\n      form: false,\n      immutable: true\n    }\n  };\n  /** returns the config for a hexColor field */\n  hexColor() {\n    return {\n      label: '#',\n      view: 'color',\n      prefill: '#ffffff'\n    }\n  };\n  /** returns the config for a tags field */\n  tagsField(label, list = true) {\n    return {\n      label,\n      view: 'tags',\n      display: (value) => value || [],\n      list\n    };\n  }\n  /** returns the config for a string field */\n  stringField(label, filterable = true, sortable = true) {\n    return {\n      label,\n      view: 'string',\n      filterable,\n      sortable\n    };\n  }\n  /** returns regex for a shortID */\n  shortID(): RegExp {\n    return /^[0-9A-Za-z-_]{7,14}$/;\n  }\n  /** returns regex for a uuid */\n  uuid(): RegExp {\n    return /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\n  }\n  /** regex for base64 uuid */\n  base64uuid(): RegExp {\n    return /^[a-zA-Z0-9\\\\-_]{22}$/;\n  }\n\n  /** Returns the whole resource-config, which maps a resource relation name to a CrudConfig. */\n  get config(): { [key: string]: CrudConfig } {\n    return {\n      dataManager: {\n        identifier: 'dataManagerID',\n        identifierPattern: this.uuid(),\n        label: 'title',\n        permissions: {\n          post: 'dm-create',\n          put: 'dm::edit',\n          delete: 'dm::delete',\n          get: true\n        },\n        fields: {\n          hexColor: this.hexColor(),\n          shortID: {\n            immutable: true,\n            list: false\n          },\n          title: Object.assign(this.stringField('Name'), { required: true }),\n          description: {\n            label: this.symbol.resolve('field.label.description'),\n            view: 'string',\n            filterable: true\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            view: 'json',\n            list: false,\n            immutable: true\n          },\n          defaultLocale: {\n            list: false,\n            immutable: true\n          },\n          locales: this.tagsField(this.symbol.resolve('field.label.locales'), false),\n          publicAssetRights: Object.assign(\n            this.tagsField(this.symbol.resolve('datamanager.field.label.publicAssetRights'), false),\n            { immutable: true }),\n          rights: Object.assign(this.tagsField('rights', false), { immutable: true }),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      model: {\n        identifier: 'modelID',\n        identifierPattern: this.uuid(),\n        label: 'title',\n        fields: {\n          hexColor: this.hexColor(),\n          title: Object.assign(this.stringField('Model'), { required: true }),\n          description: {\n            label: this.symbol.resolve('field.label.description'),\n            view: 'string',\n            filterable: true,\n          },\n          locales: {\n            list: false,\n            prefill: []\n          },\n          fields: {\n            view: 'tags',\n            display: (value) => {\n              return (value || []).map(field => field.title).filter(field => field[0] !== '_')\n            },\n            prefill: []\n          },\n          titleField: {\n            view: 'string',\n            list: false\n          },\n          config: {\n            list: false,\n            view: 'json'\n          },\n          hasEntries: {\n            immutable: true,\n            view: 'boolean'\n          },\n          hooks: {\n            display: (value) => {\n              return (value || []).map(hook => (hook.methods || []).join(', '))\n            },\n            view: 'tags'\n          },\n          policies: {\n            display: (value) => {\n              return (value || []).map(policy => policy.method)\n            },\n            view: 'tags'\n          },\n          sync: {\n            list: false,\n            view: 'json',\n            immutable: true\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      // ec accounts\n      account: {\n        identifier: 'accountID',\n        identifierPattern: this.uuid(),\n        label: 'email',\n        permissions: {\n          get: 'acc:list',\n          put: 'acc:edit:'\n        },\n        fields: {\n          name: this.stringField(this.symbol.resolve('field.label.name')),\n          email: {\n            label: this.symbol.resolve('field.label.email'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          hasPassword: {\n            label: this.symbol.resolve('field.label.password'),\n            view: 'boolean',\n            filterable: true,\n            sortable: true,\n            readOnly: true\n          },\n          hasPendingEmail: {\n            label: this.symbol.resolve('account.field.label.hasPendingEmail'),\n            view: 'boolean',\n            filterable: true,\n            sortable: true,\n            readOnly: true\n          },\n          language: {\n            label: this.symbol.resolve('account.field.label.language'),\n            view: 'string',\n            list: false\n          },\n          openID: {\n            list: false\n          },\n          permissions: this.tagsField(this.symbol.resolve('account.field.label.permissions'), false),\n          groups: {\n            label: this.symbol.resolve('account.field.label.groups'),\n            type: 'groups',\n            input: DefaultEntryInputComponent,\n            list: false,\n            display: (value) => value ? value.map(group => group.name) : []\n          },\n          state: {\n            label: this.symbol.resolve('account.field.label.state')\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dmAccount: {\n        identifier: 'accountID',\n        identifierPattern: this.uuid(),\n        label: 'title',\n        permissions: {\n          get: 'acc:list',\n          put: 'acc:edit:'\n        },\n        methods: ['get', 'put', 'delete'],\n        fields: {\n          accountID: {\n            label: this.symbol.resolve('field.label.id'),\n            view: 'string'\n          },\n          email: {\n            label: this.symbol.resolve('field.label.email'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          hasPassword: {\n            label: this.symbol.resolve('dmAccount.field.label.hasPassword'),\n            view: 'boolean',\n            filterable: true,\n            readOnly: true\n          },\n          pending: {\n            label: this.symbol.resolve('dmAccount.field.label.pending'),\n            view: 'boolean',\n            filterable: true,\n            readOnly: true\n          },\n          oauth: {\n            list: false\n          }\n        }\n      },\n      template: {\n        identifier: 'templateID',\n        identifierPattern: this.uuid(),\n        label: 'name',\n        permissions: {\n          post: 'dm-template-create',\n          get: 'dm-template::view'\n        },\n        fields: {\n          name: {\n            label: this.symbol.resolve('template.field.label.template'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          version: {\n            label: this.symbol.resolve('template.field.label.version'),\n            display: this.typeConfig.displayDate(),\n            group: this.typeConfig.groupDate(),\n            form: false\n          }\n        }\n      },\n      app: {\n        identifier: 'appID',\n        identifierPattern: this.uuid(),\n        permissions: {\n          post: 'app-create',\n          delete: 'app::delete',\n          put: 'app::edit'\n        },\n        fields: {\n          hexColor: this.hexColor(),\n          shortID: {\n            label: this.symbol.resolve('field.label.shortID'),\n            list: false\n          },\n          title: {\n            label: this.symbol.resolve('app.field.label.app'),\n            view: 'string',\n            filterable: true,\n            sortable: true,\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      platform: {\n        identifier: 'platformID',\n        identifierPattern: this.uuid(),\n        fields: {\n          title: {\n            label: this.symbol.resolve('platform.field.label.platform'),\n            view: 'string'\n          },\n          platformType: {\n            label: this.symbol.resolve('platform.field.label.platformType'),\n            view: 'string'\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            view: 'json',\n            list: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      asset: { // old ec.asset\n        identifier: 'assetID',\n        identifierPattern: this.uuid(),\n        fields: {\n          thumb: {\n            form: false,\n            label: this.symbol.resolve('asset.field.label.thumb'),\n            view: 'preview',\n            resolve: (asset) => {\n              if (asset.type !== 'image') {\n                return '';\n              }\n              return asset.getImageUrl(200);\n            },\n            immutable: true\n          },\n          assetID: {\n            label: 'assetID',\n            list: false,\n            form: false,\n            immutable: true\n          },\n          title: {\n            label: this.symbol.resolve('field.label.title'),\n            view: 'string',\n            sortable: true,\n            filterable: true\n          },\n          files: {\n            label: this.symbol.resolve('asset.field.label.files'),\n            view: 'tag',\n            form: false,\n            display: value => value.length,\n            immutable: true\n          },\n          tags: this.tagsField(this.symbol.resolve('asset.field.label.tags')),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      legacyAsset: { // old public assets\n        identifier: 'assetID',\n        identifierPattern: this.uuid(),\n        fields: {\n          thumb: {\n            form: false,\n            label: this.symbol.resolve('asset.field.label.thumb'),\n            view: 'preview',\n            resolve: (asset) => {\n              if (asset.type !== 'image') {\n                return '';\n              }\n              return asset.getImageUrl(200);\n            },\n            immutable: true\n          },\n          assetID: {\n            label: 'assetID',\n            list: false,\n            form: false,\n            immutable: true\n          },\n          title: {\n            label: this.symbol.resolve('field.label.title'),\n            view: 'string',\n            sortable: true,\n            filterable: true\n          },\n          files: {\n            label: this.symbol.resolve('asset.field.label.files'),\n            view: 'tag',\n            form: false,\n            display: value => value.length,\n            immutable: true\n          },\n          tags: this.tagsField(this.symbol.resolve('asset.field.label.tags')),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      // https://doc.entrecode.de/en/develop/resources/dm-assetgroup/\n      assetGroup: {\n        identifier: 'assetGroupID',\n        fields: {\n          assetGroupID: {\n            label: this.symbol.resolve('asset.field.label.assetGroupID'),\n            view: 'string',\n            filterable: true\n          },\n          public: {\n            view: 'boolean',\n            prefill: false\n          },\n          settings: {\n            view: 'json',\n            display: (json) => JSON.stringify(json),\n            prefill: {}\n            /*\n            urlExpiration: string\n            disabledTypes: Array\n            imageSizes: Array\n            thumbSizes: Array\n            */\n          },\n          policies: {\n            view: 'tags',\n            display: (policies) => (policies || []).map(p => p.method),\n            prefill: []\n            /*\n            method: get, put, post, delete\n            user: public, dmUser\n            conditions: JSON or null (https://entrecode.de/schema/dm-assetgroup#definitions/conditions)\n            */\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dmAsset: { // new assets\n        identifier: 'assetID',\n        identifierPattern: this.base64uuid(),\n        fields: {\n          file: {\n            label: this.symbol.resolve('dmAsset.field.label.file'),\n            display: value => value.url,\n            view: 'preview',\n            immutable: true,\n            form: false\n          },\n          thumb: {\n            form: false,\n            list: false,\n            label: this.symbol.resolve('asset.field.label.thumb'),\n            view: 'preview',\n            resolve: (asset) => {\n              if (asset.type !== 'image' || !asset.thumbnails || !asset.thumbnails.length) {\n                return '';\n              }\n              return asset.thumbnails[0].url;\n            },\n            immutable: true\n          },\n          assetID: {\n            label: this.symbol.resolve('dmAsset.field.label.assetID'),\n            list: false,\n            form: false,\n            immutable: true\n          },\n          title: {\n            label: this.symbol.resolve('field.label.title'),\n            view: 'string',\n            sortable: true,\n            filterable: true\n          },\n          caption: {\n            label: this.symbol.resolve('dmAsset.field.label.caption'),\n            view: 'string'\n          },\n          duplicates: {\n            label: this.symbol.resolve('dmAsset.field.label.duplicates'),\n            view: 'number',\n            list: false,\n            form: false\n          },\n          thumbnails: {\n            label: this.symbol.resolve('dmAsset.field.label.thumbnails'),\n            display: values => values.map(value => value.url),\n            list: false,\n            form: false\n          },\n          type: {\n            label: this.symbol.resolve('dmAsset.field.label.type'),\n            view: 'string',\n            immutable: true,\n            form: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dmClient: {\n        identifier: 'clientID',\n        fields: {\n          clientID: {\n            label: this.symbol.resolve('client.field.label.clientID'),\n            view: 'string'\n          },\n          callbackURL: {\n            label: this.symbol.resolve('client.field.label.callbackURL'),\n            view: 'string',\n          },\n          tokenMethod: this.tagsField(this.symbol.resolve('client.field.label.tokenMethod')),\n          disableStrategies: this.tagsField(this.symbol.resolve('client.field.label.disableStrategies')),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      role: {\n        identifier: 'roleID',\n        identifierPattern: this.uuid(),\n        label: 'name',\n        fields: {\n          name: {\n            label: this.symbol.resolve('field.label.name'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          label: {\n            label: this.symbol.resolve('field.label.label'),\n            view: 'string'\n          },\n          accounts: {\n            label: this.symbol.resolve('role.field.label.accounts'),\n            type: 'accounts',\n            prefill: [],\n            list: false,\n            display: (value) => value ? value.title : '',\n            input: AdminEntryInputComponent,\n            filterPopClass: 'ec-pop_dialog'\n          },\n          addRegistered: {\n            label: this.symbol.resolve('role.field.label.addRegistered'),\n            view: 'boolean'/* ,\n        prefill: false */\n          },\n          addUnregistered: {\n            label: this.symbol.resolve('role.field.label.addUnregistered'),\n            view: 'boolean'/* ,\n        prefill: false */\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      codeSource: {\n        identifier: 'codeSourceID',\n        identifierPattern: this.uuid(),\n        fields: {\n          codeSourceID: {\n            label: this.symbol.resolve('field.label.id'),\n          },\n          codeSourceType: {\n            label: this.symbol.resolve('field.label.type'),\n            view: 'tag'\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            list: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dataSource: {\n        identifier: 'dataSourceID',\n        identifierPattern: this.uuid(),\n        fields: {\n          dataSourceID: {\n            label: this.symbol.resolve('field.label.id'),\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      target: {\n        identifier: 'targetID',\n        identifierPattern: this.uuid(),\n        fields: {\n          targetType: {\n            label: this.symbol.resolve('field.label.type'),\n            view: 'tag'\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            list: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      group: {\n        identifier: 'groupID',\n        identifierPattern: this.uuid(),\n        label: 'name',\n        fields: {\n          name: {\n            label: this.symbol.resolve('field.label.name'),\n          },\n          permissions: {\n            view: 'tags',\n            display: (value) => value || [],\n            list: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceCrudComponent.html":{"url":"components/ResourceCrudComponent.html","title":"component - ResourceCrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceCrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/resource-crud/resource-crud.component.ts\n\n\n    \n        Description\n    \n    \n        The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-crud\n            \n\n            \n                styleUrls\n                resource-crud.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./resource-crud.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                pop\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                getPopClass\n                            \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                initMethods\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                config\n                            \n                            \n                                relation\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                createClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, notificationService: NotificationsService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-crud/resource-crud.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                            \n                            Type:    Core\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                            \n                            Type:    CrudConfig\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection that should be used \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:39\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Emits when a list element is clicked \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        createClicked\n                    \n                    \n                        Output that is nexted when pressing the create button \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Emits when the selection has changed \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:49\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPopClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPopClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Returns the pop class that should be used, either uses config.popClass or defaults to ec-pop_drawer-left. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasMethod(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitMethods()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Called on list columnClicked \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        list:     ResourceListComponent\n\n                    \n                \n                    \n                        \n                            Type :     ResourceListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:41\n                            \n                        \n\n                \n                    \n                        The ResourceListComponent inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:45\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pop:     ResourcePopComponent\n\n                    \n                \n                    \n                        \n                            Type :     ResourcePopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:43\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core/src/selection/selection';\nimport { LoaderComponent } from '@ec.components/ui/src/loader/loader.component';\nimport { LoaderService } from '@ec.components/ui/src/loader/loader.service';\nimport { NotificationsService } from '@ec.components/ui/src/notifications/notifications.service';\nimport 'rxjs/add/operator/switchMap';\nimport { merge } from 'rxjs/observable/merge';\nimport { AuthService } from '../auth/auth.service';\nimport { WithLoader } from '@ec.components/ui';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport Core from 'ec.sdk/lib/Core';\nimport { ResourceFormComponent } from '../resource-form/resource-form.component';\n\n/** The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * */\n@Component({\n    selector: 'ec-resource-crud',\n    templateUrl: './resource-crud.component.html',\n    styleUrls: ['./resource-crud.component.scss']\n})\nexport class ResourceCrudComponent implements OnInit, WithLoader {\n    /** The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors */\n    @Input() api: Core; // sdk api connector\n    /** The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) */\n    @Input() relation: string;\n    /** CrudConfig for customization of the crud's UI.*/\n    @Input() config: CrudConfig = {};\n    /** The selection that should be used */\n    @Input() selection: Selection;\n    /** The ResourceListComponent inside the template. */\n    @ViewChild(ResourceListComponent) list: ResourceListComponent;\n    /** The Pop inside the template. */\n    @ViewChild(ResourcePopComponent) pop: ResourcePopComponent;\n    /** The lists loader */\n    @ViewChild(LoaderComponent) loader: LoaderComponent;\n    /** Emits when a list element is clicked */\n    @Output() columnClicked: EventEmitter = new EventEmitter();\n    /** Emits when the selection has changed */\n    @Output() selected: EventEmitter = new EventEmitter();\n    /** Output that is nexted when pressing the create button */\n    @Output() createClicked: EventEmitter = new EventEmitter();\n\n    constructor(private sdk: SdkService,\n        private auth: AuthService,\n        private loaderService: LoaderService,\n        private notificationService: NotificationsService,\n        @Optional() public router: Router,\n        @Optional() public route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.initMethods();\n    }\n\n    initMethods() {\n        if (!this.relation) {\n            return;\n        }\n        this.auth.getAllowedResourceMethods(this.relation, {}, this.config.methods)\n            .then((methods) => {\n                this.config.methods = methods;\n            });\n    }\n\n    /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n    public hasMethod(method: string) {\n        return this.config.methods && this.config.methods.indexOf(method) !== -1;\n    }\n\n    /** Called on list columnClicked */\n    select(item) {\n        if (!item) {\n            return;\n        }\n        if (this.columnClicked.observers.length) {\n            this.columnClicked.emit(item);\n            return;\n        }\n        this.pop.edit(item.getBody());\n        // TODO: check CrudComponent#loadEntry for further inspiration\n    }\n\n    /** Returns the pop class that should be used, either uses config.popClass or defaults to ec-pop_drawer-left. */\n    getPopClass() {\n        return this.config && this.config.popClass ? this.config.popClass : 'ec-pop_dialog';\n    }\n    /** Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. */\n    create() {\n        if (this.createClicked.observers.length) {\n            this.createClicked.next();\n        } else if (this.pop) {\n            this.pop.create()\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{config?.createLabel}}\n                \n                    \n                \n            \n            \n                \n            \n        \n    \n    \n        \n    \n    \n    \n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{config?.createLabel}}                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceCrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceDeletePopComponent.html":{"url":"components/ResourceDeletePopComponent.html","title":"component - ResourceDeletePopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceDeletePopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/resource-delete-pop/resource-delete-pop.component.ts\n\n\n    \n        Description\n    \n    \n        This component can be used to delete all kinds of resources with a confirmation pop.\n\nLÖSCHEN!\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-delete-pop\n            \n\n            \n                styleUrls\n                resource-delete-pop.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./resource-delete-pop.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loader\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                pop\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirm\n                            \n                            \n                                delete\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                relation\n                            \n                            \n                                resource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService, loader: LoaderService, resourceService: ResourceService, notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:27\n                            \n                        \n\n                \n                    \n                            Injects SymbolService and LoaderService \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        relation\n                    \n                    \n                        The relation where it happened \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resource\n                    \n                    \n                        The resource to delete \n\n                            \n                            Type:    Resource\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleted\n                    \n                    \n                        Output that is after the deletion was successful. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirm\n                            \n                            \n                        \n                    \n                \n                \n                    \nconfirm(resource: Resource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            The confirm method sets a given resource and shows the confirmation pop. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.resource\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(resource: Resource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            The delete method calls del() of the given resource. You can also pass a resource to delete directly to set it.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.resource\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderService\n\n                    \n                \n                    \n                        \n                            Type :     LoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pop:     PopComponent\n\n                    \n                \n                    \n                        \n                            Type :     PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:21\n                            \n                        \n\n                \n                    \n                        The pop inside the view. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, Output, EventEmitter, Input } from '@angular/core';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport { PopComponent, LoaderService, NotificationsService } from '@ec.components/ui';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { ResourceService } from '../resource-config/resource.service';\n/** This component can be used to delete all kinds of resources with a confirmation pop.\n *\n * ```html\n * \n * LÖSCHEN!\n * ```\n *\n */\n@Component({\n    selector: 'ec-resource-delete-pop',\n    templateUrl: './resource-delete-pop.component.html',\n    styleUrls: ['./resource-delete-pop.component.scss']\n})\nexport class ResourceDeletePopComponent {\n    /** The pop inside the view. */\n    @ViewChild(PopComponent) pop: PopComponent;\n    /** The resource to delete */\n    @Input() resource: Resource;\n    /** The relation where it happened */\n    @Input() relation: string;\n    /** Output that is after the deletion was successful. */\n    @Output() deleted: EventEmitter = new EventEmitter();\n    /** Injects SymbolService and LoaderService */\n    constructor(public symbol: SymbolService,\n        public loader: LoaderService,\n        private resourceService: ResourceService,\n        public notificationService: NotificationsService) { }\n    /** The delete method calls del() of the given resource. You can also pass a resource to delete directly to set it.  */\n    delete(resource: Resource = this.resource) {\n        if (!resource) {\n            console.error('cannot delete: no resource given!');\n            return;\n        }\n        const deletion = this.resourceService.del(this.relation, this.resource)\n            .then(res => {\n                this.notificationService.emit({\n                    title: this.symbol.resolve('success.delete'),\n                    type: 'success',\n                });\n                this.pop.hide();\n                this.deleted.next(res);\n            }).catch(error => {\n                this.notificationService.emit({\n                    title: this.symbol.resolve('error.delete'),\n                    error\n                });\n            });\n        this.loader.wait(deletion);\n    }\n    /** The confirm method sets a given resource and shows the confirmation pop. */\n    confirm(resource: Resource = this.resource) {\n        this.resource = resource;\n        this.pop.show();\n    }\n}\n\n    \n\n    \n        \n    {{'resource.delete.question' | symbol}}\n    \n        {{'resource.delete.yes' | symbol}}\n    \n    \n        {{'resource.delete.no' | symbol}}\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{\\'resource.delete.question\\' | symbol}}            {{\\'resource.delete.yes\\' | symbol}}                {{\\'resource.delete.no\\' | symbol}}    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceDeletePopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResourceModule.html":{"url":"modules/ResourceModule.html","title":"module - ResourceModule","body":"\n                   \n\n\n\n\n  Modules\n  ResourceModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_imports\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/resource/resource.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ResourceCrudComponent\n                            \n                            \n                                ResourceDeletePopComponent\n                            \n                            \n                                ResourceFormComponent\n                            \n                            \n                                ResourceListComponent\n                            \n                            \n                                ResourcePopComponent\n                            \n                            \n                                ResourceSelectComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ResourceListComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ResourceConfig\n                            \n                            \n                                     ResourceService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ResourceCrudComponent\n                            \n                            \n                                    ResourceDeletePopComponent\n                            \n                            \n                                    ResourceFormComponent\n                            \n                            \n                                    ResourceListComponent\n                            \n                            \n                                    ResourcePopComponent\n                            \n                            \n                                    ResourceSelectComponent\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { UiModule } from '@ec.components/ui';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourceFormComponent } from '../resource-form/resource-form.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport { ResourceCrudComponent } from '../resource-crud/resource-crud.component';\nimport { ResourceDeletePopComponent } from '../resource-delete-pop/resource-delete-pop.component';\nimport { ResourceSelectComponent } from '../resource-select/resource-select.component';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\n\n@NgModule({\n  entryComponents: [\n    ResourceListComponent,\n  ],\n  declarations: [\n    ResourceListComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    SdkModule,\n  ],\n  exports: [\n    UiModule,\n    SdkModule,\n    ResourceListComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n  ],\n  providers: [\n    ResourceService,\n    ResourceConfig,\n  ],\n})\nexport class ResourceModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceService.html":{"url":"injectables/ResourceService.html","title":"injectable - ResourceService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ResourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/resource-config/resource.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changes\n                            \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                matches\n                            \n                            \n                                save\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, config: ResourceConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-config/resource.service.ts:34\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(filter?: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Yields an observable that emits for all updates that match the given filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clean\n                            \n                            \n                        \n                    \n                \n                \n                    \nclean(value: Object, setEmptyStringsToNull: , deleteNullProperties: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Removes all null or undefined values from the given object \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        setEmptyStringsToNull\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                                \n                                                        deleteNullProperties\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(relation: string, value: Object, api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:113\n                            \n                        \n\n\n                \n                    \n                            Creates a new resource with the given value for the given relation. Fires the \"create\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            del\n                            \n                            \n                        \n                    \n                \n                \n                    \ndel(relation: string, resource: Resource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:124\n                            \n                        \n\n\n                \n                    \n                            deletes the given resource and emits the \"delete\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImmutableProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisImmutableProperty(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:89\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given field key is an immutable system property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatches(change: Update, filter: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Gives true if the given change fits all property values of the filter. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        change\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(item: Item, value: Object, relation: string, api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Saves the given resource with the given value. If the resource is not yet existing,\nit will be created.Otherwise it will be updated. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(relation: , resource: Resource, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Updates the given resource with the new value. Fires the \"update\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changes:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:34\n                            \n                        \n\n                \n                    \n                        The changes event is emitted everytime an resource is created or updated. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ResourceConfig\n\n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/filter';\nimport { Subject } from 'rxjs/Subject';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { ResourceList } from '../resource-list/resource-list';\nimport Core from 'ec.sdk/lib/Core';\nimport { Item } from '@ec.components/core';\nimport { ResourceConfig } from './resource-config.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Update {\n    /** The relation that has been updated. */\n    relation: string | string[],\n    /** The relevant resource. */\n    resource?: Resource,\n    /** The list where it happened. */\n    list?: ResourceList,\n    /** The type of update. (create/read/update/delete) */\n    type?: 'post' | 'get' | 'put' | 'delete',\n    /** An identifier associated with the update e.g. an entryID */\n    identifier?: string\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class ResourceService {\n    /** The changes event is emitted everytime an resource is created or updated. */\n    public changes: Subject = new Subject();\n\n    /** Injects sdk */\n    constructor(private sdk: SdkService, public config: ResourceConfig) {\n    }\n\n    /** Gives true if the given change fits all property values of the filter. */\n    matches(change: Update, filter: Update): boolean {\n        return Object.keys(filter)\n            .reduce((match, key) => match && change[key] === filter[key], true);\n    }\n\n    /** Yields an observable that emits for all updates that match the given filter */\n    change(filter?: Update): Observable {\n        if (!filter) {\n            return this.changes.asObservable();\n        }\n        return this.changes.asObservable().filter((change: Update) => this.matches(change, filter));\n    }\n\n    /** Saves the given resource with the given value. If the resource is not yet existing,\n     * it will be created.Otherwise it will be updated. */\n    save(item: Item, value: Object, relation: string, api: Core): Promise {\n        const resource = item.getBody();\n        if (item.config.onSave) {\n            return Promise.resolve(item.config.onSave(item, value))\n        }\n        item.deleteImmutableProperties(value);\n        if (resource && resource.save) {\n            return this.update(relation, resource, value);\n        }\n        return this.create(relation, value, api)\n            .then((_resource) => {\n                return _resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** Updates the given resource with the new value. Fires the \"update\" change. */\n    update(relation, resource: Resource, value: Object): Promise {\n        const oldValues = {}; // save old values\n        Object.keys(value).forEach((key) => oldValues[key] = resource[key]);\n        Object.assign(resource, this.clean(value, false, false)); // assign new form values\n        return resource.save().then((_resource) => {\n            this.changes.next({ relation, resource: _resource, type: 'put' });\n            return _resource;\n        })\n            .catch((err) => {\n                Object.assign(resource, this.clean(oldValues, false, false)); // fall back to old values\n                return Promise.reject(err);\n            });\n    }\n\n    /** Returns true if the given field key is an immutable system property */\n    isImmutableProperty(key: string) {\n        return key[0] === '_' ||\n            ['id', 'created', 'modified'].indexOf(key) !== -1;\n    }\n\n    /** Removes all null or undefined values from the given object */\n    clean(value: Object, setEmptyStringsToNull = true, deleteNullProperties = true): Object {\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                if (setEmptyStringsToNull && value[key] === '') { // clear empty strings\n                    value[key] = null;\n                }\n                if (deleteNullProperties && value[key] === null) {\n                    delete value[key];\n                }\n                if (this.isImmutableProperty(key)) { // filter system properties\n                    delete value[key];\n                }\n            }\n        }\n        return value;\n    }\n\n    /** Creates a new resource with the given value for the given relation. Fires the \"create\" change. */\n    create(relation: string, value: Object, api: Core): Promise {\n        return api.create(relation, this.clean(value))\n            .then((resource: Resource) => {\n                this.changes.next({ relation, resource, type: 'post' });\n                return resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** deletes the given resource and emits the \"delete\" change. */\n    del(relation: string, resource: Resource) {\n        return resource.del().then((res) => {\n            this.changes.next({ relation, resource, type: 'delete' });\n            return res;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafeHtmlPipe.html":{"url":"pipes/SafeHtmlPipe.html","title":"pipe - SafeHtmlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  SafeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/vc/src/safe-html.pipe.ts\n        \n\n            \n                Description\n            \n            \n                trusts the incoming html as safe. uses bypassSecurityTrustHtml \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        safeHtml\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/vc/src/safe-html.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n                            Transforms the html value \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n/** trusts the incoming html as safe. uses bypassSecurityTrustHtml */\n@Pipe({ name: 'safeHtml' })\nexport class SafeHtmlPipe implements PipeTransform {\n  /** Injects DomSanitizer */\n  constructor(private sanitized: DomSanitizer) {\n  }\n  /** Transforms the html value */\n  transform(value) {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SdkModule.html":{"url":"modules/SdkModule.html","title":"module - SdkModule","body":"\n                   \n\n\n\n\n  Modules\n  SdkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\n\nSdkService\n\nSdkService\n\n\n\nSdkModule\n\nSdkModule\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/sdk/sdk.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     SdkService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SdkService } from './sdk.service';\n\n@NgModule({\n  entryComponents: [],\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [\n    SdkService\n  ],\n})\nexport class SdkModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SdkService.html":{"url":"injectables/SdkService.html","title":"injectable - SdkService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SdkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/sdk/sdk.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\n{\nprovide: \"environment\",\nuseValue: {\ndatamanagerID: \"83cc6374\",\nenvironment: \"stage\",\nclientID: \"rest\"\n}\n}The environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _api\n                            \n                            \n                                    Public\n                                accounts\n                            \n                            \n                                apiResolved\n                            \n                            \n                                    Public\n                                datamanager\n                            \n                            \n                                    Public\n                                environment\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                roots\n                            \n                            \n                                    Private\n                                schemaRequests\n                            \n                            \n                                    Public\n                                session\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAccount\n                            \n                            \n                                getSchema\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                noApi\n                            \n                            \n                                useDatamanager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(environment: )\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/sdk/sdk.service.ts:72\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAccount(api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:121\n                            \n                        \n\n\n                \n                    \n                            Returns the current account. Works for all apis \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.accounts\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSchema\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSchema(model: , api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:110\n                            \n                        \n\n\n                \n                    \n                            Returns a schema for the given model. Caches the promise. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this._api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init(environment: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:80\n                            \n                        \n\n\n                \n                    \n                            Creates all the API instances and determines the current user. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.environment\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noApi\n                            \n                            \n                        \n                    \n                \n                \n                    \nnoApi(api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:133\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this._api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useDatamanager\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseDatamanager(shortID: string, environment: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:100\n                            \n                        \n\n\n                \n                    \n                            Uses the given datamanager and optional short id to init api. \nIf you set \"datamanagerID\" in your environment, this method is called automatically. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        shortID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        environment\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.environment\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _api:     PublicAPI\n\n                    \n                \n                    \n                        \n                            Type :     PublicAPI\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:47\n                            \n                        \n\n                \n                    \n                        Current Public API instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accounts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        accounts:     Accounts\n\n                    \n                \n                    \n                        \n                            Type :     Accounts\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:45\n                            \n                        \n\n                \n                    \n                        Current Accounts instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiResolved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        apiResolved:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:30\n                            \n                        \n\n                \n                    \n                        Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datamanager\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        datamanager:     DataManager\n\n                    \n                \n                    \n                        \n                            Type :     DataManager\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:61\n                            \n                        \n\n                \n                    \n                        Current DataManager instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:72\n                            \n                        \n\n                \n                    \n                        Promise that should be used before using any auth related stuff:\nthis.sdk.ready.then(account => {});\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roots\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roots:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:32\n                            \n                        \n\n                \n                    \n                        Collects different datamanager root instances \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            schemaRequests\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        schemaRequests:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:65\n                            \n                        \n\n                \n                    \n                        Pending schema requests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     Session\n\n                    \n                \n                    \n                        \n                            Type :     Session\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:43\n                            \n                        \n\n                \n                    \n                        Current Session instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     AccountResource\n\n                    \n                \n                    \n                        \n                            Type :     AccountResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:63\n                            \n                        \n\n                \n                    \n                        Current User \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        root\n                    \n                \n\n                \n                    \n                        getroot()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/sdk/sdk.service.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/sdk/sdk.service.ts:49\n                                \n                            \n                    \n                        \n                                getter for api. Throws error if no api present. \n\n\n                                \n                                    Returns :     PublicAPI\n\n                                \n                        \n                    \n\n                \n                    \n                        setapi(api: )\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/sdk/sdk.service.ts:56\n                                \n                            \n                    \n                        \n                                Sets the public api \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            api\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport Accounts from 'ec.sdk/lib/Accounts';\nimport Core, { environment as env } from 'ec.sdk/lib/Core';\nimport DataManager from 'ec.sdk/lib/DataManager';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport Session from 'ec.sdk/lib/Session';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: \"environment\",\n   useValue: {\n     datamanagerID: \"83cc6374\",\n     environment: \"stage\",\n     clientID: \"rest\"\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class SdkService {\n  /** Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) */\n  apiResolved: boolean;\n  /** Collects different datamanager root instances */\n  roots: { [id: string]: Promise } = {};\n  get root(): Promise {\n    if (!this._api) {\n      throw new Error('no api');\n    }\n    if (!this.roots[this._api.dataManagerID]) {\n      this.roots[this._api.dataManagerID] = this.ready.then(() => this.datamanager.dataManager(this._api.dataManagerID));\n    }\n    return this.roots[this._api.dataManagerID];\n  };\n  /** Current Session instance */\n  public session: Session;\n  /** Current Accounts instance */\n  public accounts: Accounts;\n  /** Current Public API instance */\n  public _api: PublicAPI;\n  /** getter for api. Throws error if no api present. */\n  get api(): PublicAPI {\n    if (this.noApi()) {\n      throw new Error('get api: ' + this.noApi());\n    }\n    return this._api;\n  }\n  /** Sets the public api */\n  set api(api: PublicAPI) {\n    this._api = api;\n    this._api.resolve().then(() => this.apiResolved = true);\n  }\n  /** Current DataManager instance */\n  public datamanager: DataManager;\n  /** Current User */\n  public user: AccountResource;\n  /** Pending schema requests */\n  private schemaRequests = {};\n  /** Promise that should be used before using any auth related stuff:\n   *\n   * ```ts\n   * this.sdk.ready.then(account => {});\n   * ```\n   * */\n  public ready: Promise;\n\n  /** Calls init and sets ready to true when finished. */\n  constructor(@Inject('environment') public environment) {\n    this.init();\n  }\n\n  /** Creates all the API instances and determines the current user. */\n  public init(environment = this.environment): Promise {\n    this.environment = environment;\n    this.session = new Session(environment.environment);\n    if (environment.clientID) {\n      this.session.setClientID(environment.clientID);\n    }\n    this.accounts = new Accounts(environment.environment);\n    if (environment.datamanagerID) {\n      this.useDatamanager(environment.datamanagerID, environment);\n    }\n    this.ready = this.getAccount()\n      .then((user) => {\n        this.user = user;\n        this.datamanager = new DataManager(environment.environment);\n        return this.user;\n      });\n    return this.ready;\n  }\n  /** Uses the given datamanager and optional short id to init api. \n   * If you set \"datamanagerID\" in your environment, this method is called automatically. */\n  useDatamanager(shortID: string, environment = this.environment) {\n    this.apiResolved = false;\n    this._api = new PublicAPI(shortID, environment.environment, true);\n    this._api.resolve().then(api => this.apiResolved = true);\n    if (environment.clientID) {\n      this._api.setClientID(environment.clientID);\n    }\n  }\n\n  /** Returns a schema for the given model. Caches the promise. */\n  getSchema(model, api = this._api) {\n    if (this.noApi(api)) {\n      return Promise.reject('getSchema: ' + this.noApi(api));\n    }\n    if (!this.schemaRequests[model]) {\n      this.schemaRequests[model] = api.getSchema(model);\n    }\n    return this.schemaRequests[model];\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.accounts) {\n    if (this.noApi(api)) {\n      /* return Promise.reject('getAccount: ' + this.noApi(api)); */\n      return Promise.resolve();\n    }\n    return api.me().then((account) => {\n      return account || this._api.me();\n    }).catch((err) => {\n      return null;\n    });\n  }\n\n  noApi(api: Core = this._api) {\n    if (!api) {\n      return `No API was initialized. Either set datamanagerID in your environment or call useDatamanager with your shortID`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/select/select.component.ts\n\n\n    \n        Description\n    \n    \n        The SelectComponent will render a dropdown of a given list.\nhttps://components.entrecode.de/ui/select\n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-select\n            \n\n            \n                styleUrls\n                select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pop\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                clickInside\n                            \n                            \n                                    Private\n                                clickItem\n                            \n                            \n                                initSelection\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                removeItem\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                use\n                            \n                            \n                                useConfig\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                list\n                            \n                            \n                                placeholder\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                            \n                                value\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                itemClick\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        Configuration Object for List \n\n                            \n                            Type:    ListConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The Instance of the List \n\n                            \n                            Type:    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        Input placeholder \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The used selection \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        Wether or not the selection should be solo \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        The visible items \n\n                            \n                            Type:    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        values\n                    \n                    \n                        Available Items \n\n                            \n                            Type:    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:41\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        Event emitter on item selection \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemClick\n                    \n                    \n                        Event emitter on selected item click \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:37\n                            \n                        \n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:47\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changed\n                            \n                            \n                        \n                    \n                \n                \n                    \nchanged()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:137\n                            \n                        \n\n\n                \n                    \n                            Fires on selection change. Hides pop if solo \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickInside\n                            \n                            \n                        \n                    \n                \n                \n                    \nclickInside(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            is intended to be called when clicking inside and the dropdown should not toggle \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            clickItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clickItem(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:120\n                            \n                        \n\n\n                \n                    \n                            Is called when a selected item is clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitSelection()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            creates the collection from the config \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:148\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:152\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveItem(item: Item, e?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Removes the given item from selection + triggers clickInside \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        select(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:125\n                            \n                        \n\n\n                \n                    \n                            Select handler. Toggles selection. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(value: , event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Uses the given value as selection items \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseConfig(config: ListConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:113\n                            \n                        \n\n\n                \n                    \n                            Initializes either with values, collection or list. Creates Selection with config. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ListConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Called when the model changes \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pop:     PopComponent\n\n                    \n                \n                    \n                        \n                            Type :     PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:45\n                            \n                        \n\n                \n                    \n                        The selection pop \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:145\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Select\nYou can pass an array of items that will be used for a selection instance.\n\n\n{{values | json}}TODO: update\n\n    \n\n    \n        import { Component, EventEmitter, forwardRef, Input, OnChanges, OnInit, Output, ViewChild, ViewEncapsulation, HostListener } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { List, ListConfig, Selection } from '@ec.components/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport { PopComponent } from '../pop/pop.component';\n\n/**\n * The SelectComponent will render a dropdown of a given list.\n *\n * https://components.entrecode.de/ui/select\n * */\n@Component({\n  selector: 'ec-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => SelectComponent),\n      multi: true\n    }\n  ]\n})\nexport class SelectComponent implements ControlValueAccessor, OnInit, OnChanges {\n  /** Configuration Object for List */\n  @Input() config: ListConfig;\n  /** The visible items */\n  @Input() value: Array;\n  /** The used selection */\n  @Input() selection: Selection;\n  /** Input placeholder */\n  @Input() placeholder: string;\n  /** Event emitter on item selection */\n  @Output() change: EventEmitter> = new EventEmitter();\n  /** Event emitter on selected item click */\n  @Output() itemClick: EventEmitter> = new EventEmitter();\n  /** The Instance of the List */\n  @Input() list: List;\n  /** Available Items */\n  @Input() values: Array;\n  /** Wether or not the selection should be solo */\n  @Input() solo: boolean;\n  /** The selection pop */\n  @ViewChild(PopComponent) pop: PopComponent;\n\n  @HostListener('document:click', ['$event']) clickedOutside($event) {\n    if (this.pop) {\n      this.pop.hide();\n    }\n  }\n  /** is intended to be called when clicking inside and the dropdown should not toggle */\n  clickInside(e) {\n    if (!e) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  ngOnInit() {\n    this.initSelection();\n  }\n\n  ngOnChanges() {\n    this.initSelection();\n  }\n\n  /** creates the collection from the config */\n  initSelection() {\n    if (this.values) {\n      if (this.list) {\n        console.warn('ec-select: list is overwritten by values', this.list);\n      }\n      this.list = new List(this.values, this.config);\n    }\n    if (this.list && !this.config) {\n      this.config = this.list.config;\n    }\n    if (!this.config) { // || !this.config.selectMode\n      return;\n    }\n    this.config = Object.assign({ solo: this.solo }, this.config);\n    this.selection = new Selection(this.value || [], this.config);\n    this.selection.update$.subscribe(() => {\n      this.changed();\n    });\n  }\n\n  /** Called when the model changes */\n  writeValue(value: any) {\n    this.use(value, false);\n  }\n\n  /** Removes the given item from selection + triggers clickInside */\n  removeItem(item: Item, e?) {\n    this.selection.remove(item);\n    this.clickInside(e);\n  }\n\n  /** Uses the given value as selection items */\n  use(value, event = true) {\n    this.value = Array.isArray(value) ? value : (value ? [value] : []);\n    Object.assign(this.config || {}, { solo: this.solo });\n    if (this.selection && this.value && this.value.length) {\n      Object.assign(this.config, { selection: this.selection });\n      const list = new List(this.value, this.config);\n      this.selection.replaceWith(list.items, event);\n    }\n  }\n\n  /** Initializes either with values, collection or list. Creates Selection with config. */\n  useConfig(config: ListConfig = {}) {\n    this.config = Object.assign(this.config || {}, config);\n    this.initSelection();\n    this.writeValue(this.value);\n  }\n\n  /** Is called when a selected item is clicked*/\n  private clickItem(item) {\n    this.itemClick.emit(item);\n  }\n\n  /** Select handler. Toggles selection. */\n  public select(item) {\n    this.selection.toggle(item);\n  }\n\n  public toggle(e) {\n    if (this.pop) {\n      this.pop.toggle();\n    }\n    this.clickInside(e);\n  }\n\n  /** Fires on selection change. Hides pop if solo */\n  changed() {\n    this.change.emit(this.selection);\n    if (this.config.solo && this.pop) {\n      this.pop.hide();\n    }\n    return this.propagateChange(this.selection.getValue());\n  }\n\n  propagateChange = (_: any) => {\n  };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n  \n  \n    {{placeholder||'Auswählen'}}\n  \n  \n    \n      \n        {{selected.display()}}\n        &times;\n      \n    \n  \n  \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{placeholder||\\'Auswählen\\'}}                      {{selected.display()}}        ×                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SelectModule.html":{"url":"modules/SelectModule.html","title":"module - SelectModule","body":"\n                   \n\n\n\n\n  Modules\n  SelectModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_SelectComponent_providers\n\n\n\ncluster_SelectModule_imports\n\n\n\ncluster_SelectModule_exports\n\n\n\n\nSelectComponent\n\nSelectComponent\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->SelectComponent -->\n\n{\n    : , : (() => ), : true\n}->SelectComponent\n\n\n\n\n\nListModule\n\nListModule\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/select/select.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                SelectComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ListModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ListModule\n                            \n                            \n                                    SelectComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SelectComponent } from './select.component';\nimport { ListModule } from '../list/list.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ListModule\n  ],\n  declarations: [SelectComponent],\n  exports: [ListModule, SelectComponent],\n  providers: [],\n})\nexport class SelectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SlotHostDirective.html":{"url":"directives/SlotHostDirective.html","title":"directive - SlotHostDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  SlotHostDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/io/slot-host.directive.ts\n        \n\n            \n                Description\n            \n            \n                The field host is a helper to load components inside its view container.\nsee https://angular.io/guide/dynamic-component-loader\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ec-slot-host]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/slot-host.directive.ts:9\n                            \n                        \n\n                \n                    \n                            The constructor exposes the viewContainer that is used to load components into from outside.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewContainerRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/slot-host.directive.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } from '@angular/core';\n\n/** The field host is a helper to load components inside its view container.\n * see https://angular.io/guide/dynamic-component-loader\n * */\n@Directive({\n  selector: '[ec-slot-host]',\n})\nexport class SlotHostDirective {\n  /** The constructor exposes the viewContainer that is used to load components into from outside.*/\n  constructor(public viewContainerRef: ViewContainerRef) {\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sorter.html":{"url":"classes/Sorter.html","title":"class - Sorter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sorter\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/sorter/sorter.ts\n        \n\n            \n                Description\n            \n            \n                The Sorter is a singleton that handles all kinds of sorting operations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sortType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getAlgorithm\n                            \n                            \n                                    Static\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sortType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortType:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'string': sortString,\n    'number': sortNumber,\n    'boolean': sortBoolean\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/sorter/sorter.ts:25\n                            \n                        \n\n                \n                    \n                        Contains sorting methods for different value types. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getAlgorithm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAlgorithm(items: Array>, property?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/sorter/sorter.ts:32\n                            \n                        \n\n\n                \n                    \n                            Returns the sorting algorithm for the given item array. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sort(items: Array>, property?: string, desc?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/sorter/sorter.ts:62\n                            \n                        \n\n\n                \n                    \n                            Sorts a given Array of items after a given property.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Array of arbitrary content.\n\n                                                        \n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional property to sort after (For Objects)\n\n                                                        \n                                                \n                                                \n                                                        desc\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional Flag that will reverse sort the result (descending).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Sorter\nThe Sorter is a static class that acts as a helper to sort different primitive types. See the tests for example usage.\n\n    \n\n    \n        import { Item } from '../item/item';\n\n/** Used for natural sorting of strings */\nconst collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n\n/** Sorts strings (naturally) */\nexport function sortString(a, b) {\n  return collator.compare(a, b);\n}\n\n/** Sorts numbers */\nexport function sortNumber(a, b) {\n  return a - b;\n}\n\n/** Sorts booleans */\nexport function sortBoolean(a, b) {\n  return a ? -1 : 1;\n}\n\n/** The Sorter is a singleton that handles all kinds of sorting operations. */\nexport abstract class Sorter {\n\n  /** Contains sorting methods for different value types. */\n  static sortType = {\n    'string': sortString,\n    'number': sortNumber,\n    'boolean': sortBoolean\n  };\n\n  /** Returns the sorting algorithm for the given item array. */\n  private static getAlgorithm(items: Array>, property?: string): (a, b) => number {\n    if (!items.length) {\n      return;\n    }\n    if (property && !items\n      .reduce((has, item) => has && item.sort(property) !== undefined, true)) {\n      console.warn('cannot sort property \"' + property + '\" because not all items have that property', items);\n      return;\n    }\n    const types = items\n      .map(item => typeof item.sort(property))\n      .filter((item, index, _items) => _items.indexOf(item) === index);\n    if (types.length > 1) {\n      console.warn('cannot sort items because they contain multiple types:', types);\n      return;\n    }\n    if (!this.sortType[types[0]]) {\n      console.warn('cannot sort items because no algorithm was found for type', types[0]);\n      return;\n    }\n    return this.sortType[types[0]];\n  }\n\n  /** Sorts a given Array of items after a given property.\n   * @param items Array of arbitrary content.\n   * @param property Optional property to sort after (For Objects)\n   * @param desc Optional Flag that will reverse sort the result (descending).\n   * @param resolve Optional resolve function to expose relevant the part of object that contains\n   *   the given property. */\n\n  static sort(items: Array>, property?: string, desc?: boolean): Array {\n    const algorithm = this.getAlgorithm(items, property);\n    if (!algorithm) {\n      return;\n    }\n    items.sort((a, b) => {\n      if (!property) {\n        return algorithm(a.resolve(), b.resolve());\n      }\n      return algorithm(a.sort(property), b.sort(property));\n    });\n    if (desc) {\n      items.reverse();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Symbol.html":{"url":"interfaces/Symbol.html","title":"interface - Symbol","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Symbol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.interface.ts\n        \n\n            \n                Description\n            \n            \n                A Symbol is specified with a unique name and an optional string content.  \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        content\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name under which the symbol is accessible. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Symbol {\n    /** The name under which the symbol is accessible. */\n    name: string\n    /** Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. */\n    content?: string\n};\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SymbolModule.html":{"url":"modules/SymbolModule.html","title":"module - SymbolModule","body":"\n                   \n\n\n\n\n  Modules\n  SymbolModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_providers\n\n\n\n\nSymbolService\n\nSymbolService\n\n\n\nSymbolModule\n\nSymbolModule\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     SymbolService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SymbolService } from './symbol.service';\nimport { SymbolPipe } from './symbol.pipe';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [SymbolPipe],\n    exports: [SymbolPipe],\n    providers: [SymbolService],\n})\nexport class SymbolModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolPipe.html":{"url":"injectables/SymbolPipe.html","title":"injectable - SymbolPipe","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SymbolPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The symbol pipe translates Symbol names to their content.\n{{ 'entry.saved' | symbol }}See SymbolService for more info about Symbols.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.pipe.ts:21\n                            \n                        \n\n\n                \n                    \n                            Calls SymbolService.resolve with the given name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, Injectable, PipeTransform } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport { SymbolService } from './symbol.service';\n\n/** The symbol pipe translates Symbol names to their content.\n *\n * ```html\n * {{ 'entry.saved' | symbol }}\n * ```\n *\n * See SymbolService for more info about Symbols.\n */\n@Pipe({\n    name: 'symbol'\n})\n@Injectable()\nexport class SymbolPipe implements PipeTransform {\n    /** Depends on the SymbolService */\n    constructor(private symbol: SymbolService) { }\n    /** Calls SymbolService.resolve with the given name */\n    transform(name: string): string {\n        if (!name) {\n            return '';\n        }\n        return this.symbol.resolve(name) || '';\n    }\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolService.html":{"url":"injectables/SymbolService.html","title":"injectable - SymbolService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SymbolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register symbols for localization. The default set is de. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registry\n                            \n                            \n                                    Public\n                                sets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                resolve\n                            \n                            \n                                set\n                            \n                            \n                                use\n                            \n                            \n                                useSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/symbol/symbol.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            finds a symbol in the registry by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Symbol\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:36\n                            \n                        \n\n\n                \n                    \n                            resolves a symbols content by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(symbols: Symbol[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set to enhance the current registry.\nAll duplicates will be overriden. Non specified symbols will stay in the registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(symbols: Symbol[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set. Replaces registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useSet\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseSet(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:23\n                            \n                        \n\n\n                \n                    \n                            uses the set with the given key \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registry:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:9\n                            \n                        \n\n                \n                    \n                        The current symbol set that is registered to the service. It will be used to resolve strings from. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sets:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        en, de\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport de from './de';\nimport en from './en';\n/** Service to register symbols for localization. The default set is de. */\n@Injectable()\nexport class SymbolService {\n    /** The current symbol set that is registered to the service. It will be used to resolve strings from. */\n    public registry: Symbol[];\n    public sets: { [key: string]: Symbol[] } = {\n        en, de\n    }\n    constructor() {\n        this.registry = Object.keys(this.sets).length ? this.sets[Object.keys(this.sets)[0]] : [];\n    }\n\n    /** Uses the given symbol set. Replaces registry. */\n    use(symbols: Symbol[]) {\n        this.registry = symbols;\n    }\n\n    /** uses the set with the given key */\n    useSet(key: string) {\n        if (!this.sets[key]) {\n            throw new Error('the symbol set with the key \"' + key + '\" does not exist');\n        }\n        this.use(this.sets[key]);\n    }\n\n    /** finds a symbol in the registry by name */\n    get(name: string): Symbol {\n        return this.registry.find(symbol => symbol.name === name);\n    }\n\n    /** resolves a symbols content by name */\n    resolve(name: string): string {\n        const symbol = this.get(name);\n        if (symbol) {\n            return symbol.content;\n        }\n        return null;\n    }\n\n    /** Uses the given symbol set to enhance the current registry.\n     * All duplicates will be overriden. Non specified symbols will stay in the registry. */\n    set(symbols: Symbol[] = []) {\n        symbols.map(symbol => {\n            const index = this.registry.indexOf(this.get(symbol.name));\n            if (index === -1) {\n                this.registry.push(symbol);\n            } else {\n                this.registry[index] = symbol;\n            }\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabComponent.html":{"url":"components/TabComponent.html","title":"component - TabComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/tab/tab.component.ts\n\n\n    \n        Description\n    \n    \n        A Tab is meant to be placed inside TabsComponent \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tab\n            \n\n            \n                styleUrls\n                tab.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tab.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                route\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                deactivated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/tab/tab.component.ts:22\n                            \n                        \n\n                \n                    \n                            The constructor adds the tab itself to its TabsComponent parent. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                    \n                        The tab's label \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        route\n                    \n                    \n                        If set, the tab will be selected when the given (relative) route is active. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        If set to true, the tab will be selected at start. \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        activated\n                    \n                    \n                        Output that emits when the tab is activated \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deactivated\n                    \n                    \n                        Output that emits when the tab is deactivated \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activate\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Selects the tab and nexts activated \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Deselects the tab and nexts activated \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parent:     TabsComponent\n\n                    \n                \n                    \n                        \n                            Type :     TabsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:22\n                            \n                        \n\n                \n                    \n                        The parent TabsComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { TabsComponent } from '../tabs/tabs.component';\n\n/** A Tab is meant to be placed inside TabsComponent */\n@Component({\n  selector: 'ec-tab',\n  templateUrl: './tab.component.html',\n  styleUrls: ['./tab.component.scss']\n})\nexport class TabComponent {\n  /** The tab's label */\n  @Input() label: string;\n  /** If set to true, the tab will be selected at start. */\n  @Input() selected: boolean;\n  /** If set, the tab will be selected when the given (relative) route is active. */\n  @Input() route: string;\n  /** Output that emits when the tab is activated */\n  @Output() activated: EventEmitter = new EventEmitter();\n  /** Output that emits when the tab is deactivated */\n  @Output() deactivated: EventEmitter = new EventEmitter();\n  /** The parent TabsComponent */\n  parent: TabsComponent;\n\n  /** The constructor adds the tab itself to its TabsComponent parent. */\n  constructor(public el: ElementRef) {\n  }\n  /** Selects the tab and nexts activated */\n  activate() {\n    this.selected = true;\n    this.activated.next();\n  }\n  /** Deselects the tab and nexts activated */\n  deactivate() {\n    this.selected = false;\n    this.deactivated.next();\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/tabs/tabs.component.ts\n\n\n    \n        Description\n    \n    \n        The TabsComponent holds serveral instances of TabComponent.\nhttps://components.entrecode.de/ui/tabs\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tabs\n            \n\n            \n                styleUrls\n                tabs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initTabs\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                select\n                            \n                            \n                                selectByUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/tabs/tabs.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) \n\n                            \n                            Type:    TabComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTabs\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitTabs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterContentInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterContentInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(tab: TabComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Selects the given tab (Component). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                        \n                                                                    TabComponent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectByUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectByUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Selects the tab associated with the route present in the given url \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabs:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChildren\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:15\n                            \n                        \n\n                \n                    \n                        The nested Tabs \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Tabs\nThis is how you use Tabs:\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \nTODO:\n\n*ngIf\nSlot for templated Tab Header\n\n\n    \n\n    \n        import { Component, ContentChildren, Input, QueryList, AfterContentInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { TabComponent } from '../tab/tab.component';\n\n/** The TabsComponent holds serveral instances of TabComponent.\n * https://components.entrecode.de/ui/tabs\n*/\n@Component({\n  selector: 'ec-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.scss']\n})\nexport class TabsComponent implements AfterContentInit {\n  /** The nested Tabs */\n  @ContentChildren(TabComponent) tabs: QueryList;\n  /** You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) */\n  @Input() selected: TabComponent;\n\n  constructor(private router: Router, private route: ActivatedRoute) {\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.selectByUrl(event.url);\n      }\n    });\n  }\n\n  /** Selects the tab associated with the route present in the given url */\n  selectByUrl(url: string) {\n    if (!url || !this.tabs) {\n      return;\n    }\n    const paths = url.split('/');\n    const match = this.tabs.find((tab) => tab.route === paths[paths.length - 1]);\n    if (match) {\n      this.select(match);\n    }\n  }\n\n  initTabs() {\n    this.tabs.forEach((tab) => {\n      tab.parent = this;\n      if (tab.el.nativeElement.getAttribute('selected') !== null) {\n        this.select(tab);\n      }\n    });\n    this.selectByUrl(this.router.url);\n  }\n\n  ngAfterContentInit() {\n    this.initTabs();\n  }\n\n  /** Selects the given tab (Component). */\n  select(tab: TabComponent) {\n    if (this.selected) {\n      this.selected.deactivate();\n    }\n    this.selected = tab;\n    tab.activate();\n    if (tab.route) {\n      this.router.navigate([tab.route], { relativeTo: this.route });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{tab.label}}\n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{tab.label}}                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TinymceComponent.html":{"url":"components/TinymceComponent.html","title":"component - TinymceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TinymceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/tinymce/src/tinymce/tinymce.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps tinymce as a control input.\nhttps://components.entrecode.de/misc/tinymce\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-tinymce\n            \n\n            \n                styleUrls\n                tinymce.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tinymce.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Public\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                update\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                debounce\n                            \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in packages/tinymce/src/tinymce/tinymce.component.ts:67\n                            \n                        \n\n                \n                    \n                            Subscribes for changes and propagates them + calling application tick manually :( \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                    \n                        Debounce time for value change processing \n\n                        \n                            Default value: 200\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settings\n                    \n                    \n                        TinyMCE Settings. Get Object.assigned to the default settings \n\n                            \n                            Type:    any\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:63\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        Output that emits when the value has been changed by the user \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:65\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Initializes the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            Destroys the editor. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:133\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:57\n                            \n                        \n\n                \n                    \n                        The container where the editor is rendered \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:55\n                            \n                        \n\n                \n                    \n                        The current editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => { }\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:127\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:53\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:59\n                            \n                        \n\n                \n                    \n                        Subject that is nexted on editor change \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:67\n                            \n                        \n\n                \n                    \n                        Current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  ApplicationRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  AfterViewInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/debounceTime';\nimport * as tinymce from 'tinymce';\nimport 'tinymce/themes/modern';\nimport 'tinymce/plugins/fullscreen';\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/template';\nimport 'tinymce/plugins/autoresize';\nimport 'tinymce/plugins/code';\nimport 'tinymce/plugins/link';\nimport 'tinymce/plugins/table';\nimport 'tinymce/plugins/visualblocks';\nimport 'tinymce/plugins/autolink';\nimport 'tinymce/plugins/lists';\nimport 'tinymce/plugins/contextmenu';\nimport 'tinymce/plugins/textcolor';\nimport 'tinymce/plugins/colorpicker';\nimport { editorSettings } from './tinymce-settings';\n\n/** Wraps tinymce as a control input.\n * https://components.entrecode.de/misc/tinymce\n*/\n@Component({\n  selector: 'ec-tinymce',\n  templateUrl: './tinymce.component.html',\n  styleUrls: ['./tinymce.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TinymceComponent),\n      multi: true\n    }\n  ]\n})\nexport class TinymceComponent\n  implements AfterViewInit, OnDestroy, ControlValueAccessor {\n  /** Promise that resolves when the editor has been initialized */\n  ready: Promise;\n  /** The current editor instance */\n  public editor: any;\n  /** The container where the editor is rendered */\n  @ViewChild('container') container: ElementRef;\n  /** Subject that is nexted on editor change */\n  update: Subject = new Subject();\n  /** Debounce time for value change processing */\n  @Input() debounce = 200;\n  /** TinyMCE Settings. Get Object.assigned to the default settings */\n  @Input() settings: any = {};\n  /** Output that emits when the value has been changed by the user */\n  @Output() change: EventEmitter = new EventEmitter();\n  /** Current value */\n  public value = '';\n\n  /** Subscribes for changes and propagates them + calling application tick manually :( */\n  constructor(private app: ApplicationRef) {\n    this.update\n      .asObservable()\n      .debounceTime(this.debounce)\n      .subscribe(editor => {\n        this.value = editor.getContent();\n        this.propagateChange(this.value);\n        this.change.emit(this.value);\n        this.app.tick();\n      });\n  }\n\n  /** Initializes the editor */\n  ngAfterViewInit() {\n    this.ready = Promise.resolve(\n      tinymce.init(\n        Object.assign(\n          editorSettings,\n          {\n            target: this.container.nativeElement\n          },\n          this.settings\n        )\n      )\n    ).then(editor => {\n      this.editor = editor[0];\n      this.editor.setContent(this.value || '');\n      this.editor.on('dblclick', e => {\n        if (e.target.localName === 'img') {\n          this.editor.buttons.image.onclick(true, e.toElement);\n        }\n      });\n      this.editor.on('change keyup', res => this.update.next(this.editor));\n      return this.editor;\n    });\n  }\n\n  /** Destroys the editor. */\n  ngOnDestroy() {\n    if (this.editor) {\n      this.ready.then(editor => {\n        editor.destroy();\n      });\n    }\n  }\n\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    if (!this.ready) {\n      return;\n    }\n    this.ready.then(editor => {\n      editor.setContent(this.value);\n    });\n  }\n\n  propagateChange = (_: any) => { };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() { }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'TinymceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TinymceModule.html":{"url":"modules/TinymceModule.html","title":"module - TinymceModule","body":"\n                   \n\n\n\n\n  Modules\n  TinymceModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/tinymce/src/tinymce.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TinymceComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TinymceComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TinymceComponent } from './tinymce/tinymce.component';\n\n@NgModule({\n  declarations: [TinymceComponent],\n  exports: [TinymceComponent]\n})\nexport class TinymceModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/toggle/toggle.component.ts\n\n\n    \n        Description\n    \n    \n        The toggle component is an alternative to the default boolean checkbox with fancier style.\nIt is used in the default input template for the view 'toggle'. \n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-toggle\n            \n\n            \n                styleUrls\n                toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propagateChange\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                toggle\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        The toggles placeholder (currently not in use) \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Register Touch \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            Toggles the value \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            writes incoming value \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:20\n                            \n                        \n\n                \n                    \n                        The current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/** The toggle component is an alternative to the default boolean checkbox with fancier style.\n * It is used in the default input template for the view 'toggle'. */\n@Component({\n  selector: 'ec-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ToggleComponent),\n      multi: true\n    }\n  ]\n})\nexport class ToggleComponent implements ControlValueAccessor {\n  /** The current value */\n  value: boolean;\n  /** The toggles placeholder (currently not in use) */\n  @Input() placeholder: string;\n\n  /** Toggles the value */\n  toggle() {\n    this.value = !this.value;\n    this.propagateChange(this.value);\n  }\n  /** writes incoming value */\n  writeValue(value: boolean) {\n    this.value = value;\n  }\n  /* Propagates change*/\n  propagateChange = (_: any) => {\n  };\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n  /** Register Touch */\n  registerOnTouched() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/vc/src/toolbar/toolbar.component.ts\n\n\n    \n        Description\n    \n    \n        ecvc toolbar containing editing tools. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-vc-toolbar\n            \n\n            \n                styleUrls\n                toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                editor\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                focusout\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        editor\n                    \n                    \n                        The editor to control \n\n                            \n                            Type:    EditorComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/vc/src/toolbar/toolbar.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nclick(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/vc/src/toolbar/toolbar.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            host click \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusout\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nfocusout(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/vc/src/toolbar/toolbar.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Blocks event on focus out \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                \n                    \nclick(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/vc/src/toolbar/toolbar.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            blocks event on click \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, HostListener, Input } from '@angular/core';\nimport { EditorComponent } from '../editor/editor.component';\n\n/** ecvc toolbar containing editing tools. */\n@Component({\n  selector: 'ec-vc-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent {\n\n  /** The editor to control */\n  @Input() editor: EditorComponent;\n  /** host click */\n  @HostListener('click', ['$event'])\n  /** Blocks the incoming event from propagating. */\n  blockEvent(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    return false;\n  }\n  /** blocks event on click */\n  click(e: any) {\n    return this.blockEvent(e);\n  }\n  /** Blocks event on focus out */\n  @HostListener('focusout', ['$event'])\n  focusOut(e: any) {\n    return this.blockEvent(e);\n  }\n}\n\n    \n\n    \n        {{editor?.caret?.phrasing?.type || '-'}}\n\n  \n    \n      \n        {{el.tag}}\n      \n    \n  \n  \n    \n      \n        {{el.tag}}\n      \n    \n  \n\n\n\n  {{editor.caret?.flow?.type || '-'}} >\n  {{editor.caret?.phrasing?.type || '-'}}\n\n-->\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{editor?.caret?.phrasing?.type || \\'-\\'}}                    {{el.tag}}                                {{el.tag}}              {{editor.caret?.flow?.type || \\'-\\'}} >  {{editor.caret?.phrasing?.type || \\'-\\'}}-->'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeConfigService.html":{"url":"injectables/TypeConfigService.html","title":"injectable - TypeConfigService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TypeConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/type-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The TypeConfig holds each field type's specific behaviour in certain situations \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                nestedCrudConfig\n                            \n                            \n                                    Private\n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayAccount\n                            \n                            \n                                displayDate\n                            \n                            \n                                get\n                            \n                            \n                                groupDate\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/model-config/type-config.service.ts:137\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayAccount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:172\n                            \n                        \n\n\n                \n                    \n                            Returns an account display function \n\n\n                            \n                                Returns :     (value: any, entry: any, property: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayDate(time: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:166\n                            \n                        \n\n\n                \n                    \n                            Returns a date display function. If time is true, the time will be displayed too. Usese 'moment.format.date' and 'moment.format.time' symbols. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (value: any) => any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:141\n                            \n                        \n\n\n                \n                    \n                            Returns the base FieldConfig for the given type. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FieldConfigProperty\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngroupDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:177\n                            \n                        \n\n\n                \n                    \n                            Returns a date group function. Uses 'moment.format.month' symbol \n\n\n                            \n                                Returns :     (value: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(type: string, config: FieldConfigProperty)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:157\n                            \n                        \n\n\n                \n                    \n                            Assigns the given config to the type, e.g. to change the default template of a type. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nestedCrudConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nestedCrudConfig:     CrudConfig\n\n                    \n                \n                    \n                        \n                            Type :     CrudConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    size: 10,\n    // methods: ['get'],\n    popClass: 'ec-pop_fullscreen'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:18\n                            \n                        \n\n                \n                    \n                        The default config for nested crud lists, as passed to entry-select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            types\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        types:     FieldConfig\n\n                    \n                \n                    \n                        \n                            Type :     FieldConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    id: {\n      view: 'label'\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true,\n    },\n    boolean: {\n      prefill: false,\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact'\n    },\n    decimal: {\n      view: 'number',\n      sortable: true,\n    },\n    url: {\n      sortable: true,\n      filterable: true,\n    },\n    asset: {\n      view: 'asset',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    assets: {\n      view: 'assets',\n      input: DefaultEntryInputComponent,\n      /* display: (value, entry, property) => entry.getImageThumbUrl(property, 100), */\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    email: {},\n    phone: {\n      view: 'string'\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: (value) => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(this.symbol.resolve('moment.format.date'))\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    entries: {\n      view: 'tags',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => value ? JSON.stringify(value) : ''\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => value ? value.longitude + ',' + value.latitude : '',\n      filterPopClass: 'ec-pop_dialog'\n    },\n    account: {\n      display: (value) => value ? value.title : '',\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    },\n    role: {\n      display: (value) => value ? value.name : '',\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:25\n                            \n                        \n\n                \n                    \n                        Defines the base configuration of each type.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FieldConfigProperty } from '@ec.components/core/src/config/field-config-property.interface';\nimport { FieldConfig } from '@ec.components/core/src/config/field-config.interface';\nimport { DefaultInputComponent } from '@ec.components/ui/src/form/default-input/default-input.component';\nimport { DefaultOutputComponent } from '@ec.components/ui/src/form/default-output/default-output.component';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport moment from 'moment-es6';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { AdminEntryInputComponent } from '../entry-form/admin-entry-input.component';\nimport { DefaultEntryInputComponent } from '../entry-form/default-entry-input.component';\nimport { DefaultEntryOutputComponent } from '../entry-form/default-entry-output.component';\n\n/** The TypeConfig holds each field type's specific behaviour in certain situations */\n@Injectable()\nexport class TypeConfigService {\n  /** The default config for nested crud lists, as passed to entry-select */\n  private nestedCrudConfig: CrudConfig = {\n    size: 10,\n    // methods: ['get'],\n    popClass: 'ec-pop_fullscreen'\n  };\n\n  /** Defines the base configuration of each type.*/\n  private types: FieldConfig = {\n    id: {\n      view: 'label'\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true,\n    },\n    boolean: {\n      prefill: false,\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact'\n    },\n    decimal: {\n      view: 'number',\n      sortable: true,\n    },\n    url: {\n      sortable: true,\n      filterable: true,\n    },\n    asset: {\n      view: 'asset',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    assets: {\n      view: 'assets',\n      input: DefaultEntryInputComponent,\n      /* display: (value, entry, property) => entry.getImageThumbUrl(property, 100), */\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    email: {},\n    phone: {\n      view: 'string'\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: (value) => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(this.symbol.resolve('moment.format.date'))\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    entries: {\n      view: 'tags',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => value ? JSON.stringify(value) : ''\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => value ? value.longitude + ',' + value.latitude : '',\n      filterPopClass: 'ec-pop_dialog'\n    },\n    account: {\n      display: (value) => value ? value.title : '',\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    },\n    role: {\n      display: (value) => value ? value.name : '',\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    }\n  };\n  constructor(private symbol: SymbolService) { }\n\n  /** Returns the base FieldConfig for the given type. */\n  get(type: string): FieldConfigProperty {\n    const config = this.types[type];\n    if (!config) {\n      console.error('missing config for type', type);\n      return {};\n    }\n    Object.assign(config, {\n      type,\n      view: config.view || type,\n      input: config.input || DefaultInputComponent,\n      output: config.output || DefaultOutputComponent,\n    });\n    return config;\n  }\n\n  /** Assigns the given config to the type, e.g. to change the default template of a type. */\n  set(type: string, config: FieldConfigProperty) {\n    if (!this.types[type]) {\n      console.error('cannot configure non existing type', type);\n      return;\n    }\n    Object.assign(this.types[type], config);\n  }\n\n  /** Returns a date display function. If time is true, the time will be displayed too. Usese 'moment.format.date' and 'moment.format.time' symbols. */\n  displayDate(time = true) {\n    const format = this.symbol.resolve('moment.format.date') + (time ? ' ' + this.symbol.resolve('moment.format.time') : '');\n    return (value) => value ? moment(value).format(format) : '';\n  }\n\n  /** Returns an account display function */\n  displayAccount() {\n    return (value, entry, property) => entry.getTitle(property) || this.symbol.resolve('field.creator.ecuser');\n  }\n\n  /** Returns a date group function. Uses 'moment.format.month' symbol */\n  groupDate() {\n    return (value) => moment(value).format(this.symbol.resolve('moment.format.month'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n  Modules\n  UiModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiModule\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_exports\n\n\n\n\nFormModule\n\nFormModule\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\n\n\nListModule\n\nListModule\n\nUiModule -->\n\nListModule->UiModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\n\n\nSelectModule\n\nSelectModule\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/ui.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    IconModule\n                            \n                            \n                                    ListModule\n                            \n                            \n                                    LoaderModule\n                            \n                            \n                                    NotificationsModule\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    SelectModule\n                            \n                            \n                                    SymbolModule\n                            \n                            \n                                    UtilityModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    IconModule\n                            \n                            \n                                    ListModule\n                            \n                            \n                                    LoaderModule\n                            \n                            \n                                    NotificationsModule\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    SelectModule\n                            \n                            \n                                    SymbolModule\n                            \n                            \n                                    UtilityModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ListModule } from './list/list.module';\nimport { FormModule } from './form/form.module';\nimport { PopModule } from './pop/pop.module';\nimport { LoaderModule } from './loader/loader.module';\nimport { NotificationsModule } from './notifications/notifications.module';\nimport { UtilityModule } from './utility/utility.module';\nimport { SelectModule } from './select/select.module';\nimport { IconModule } from './icon/icon.module';\nimport { SymbolModule } from './symbol/symbol.module';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    UtilityModule,\n    NotificationsModule,\n    PopModule,\n    LoaderModule,\n    FormModule,\n    ListModule,\n    SelectModule,\n    IconModule,\n    SymbolModule\n  ],\n  exports: [\n    ReactiveFormsModule,\n    FormsModule,\n    UtilityModule,\n    PopModule,\n    NotificationsModule,\n    LoaderModule,\n    ListModule,\n    FormModule,\n    SelectModule,\n    IconModule,\n    SymbolModule\n  ]\n})\nexport class UiModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Update.html":{"url":"interfaces/Update.html","title":"interface - Update","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Update\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/crud/crud.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the CrudService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        entry\n                                \n                                \n                                            Optional\n                                        list\n                                \n                                \n                                        model\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entry\n                                    \n                                \n                                \n                                    \n                                        entry:     EntryResource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EntryResource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant entry. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     EntryList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EntryList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The model that has been updated. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of update. (create/read/update/delete) \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport EntryList from 'ec.sdk/lib/resources/publicAPI/EntryList';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/filter';\nimport { Subject } from 'rxjs/Subject';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Update {\n  /** The model that has been updated. */\n  model: string | string[],\n  /** The relevant entry. */\n  entry?: EntryResource,\n  /** The list where it happened. */\n  list?: EntryList,\n  /** The type of update. (create/read/update/delete) */\n  type?: 'post' | 'get' | 'put' | 'delete'\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class CrudService {\n  /** The changes event is emitted everytime an entry is created or updated. */\n  private changes: Subject = new Subject();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService) {\n  }\n\n  /** Gives true if the given change fits all property values of the filter. */\n  matches(change: Update, filter: Update): boolean {\n    return Object.keys(filter)\n      .reduce((match, key) => match && change[key] === filter[key], true);\n  }\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: Update): Observable {\n    if (!filter) {\n      return this.changes.asObservable();\n    }\n    return this.changes.asObservable().filter((change: Update) => this.matches(change, filter));\n  }\n\n  /** Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. */\n  save(model: string, entry: EntryResource, value: Object) {\n    if (entry && entry.save) {\n      return this.update(model, entry, value);\n    }\n    return this.create(model, value)\n      .then((_entry) => {\n        return _entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given entry with the new value. Fires the \"update\" change. */\n  update(model, entry: EntryResource, value: Object): Promise {\n    const oldValues = {}; // save old values\n    Object.keys(value).forEach((key) => oldValues[key] = entry[key]);\n    Object.assign(entry, this.clean(value)); // assign new form values\n    return entry.save().then((_entry) => {\n      this.changes.next({ model, entry: _entry, type: 'put' });\n      return _entry;\n    })\n      .catch((err) => {\n        Object.assign(entry, this.clean(oldValues)); // fall back to old values\n        return Promise.reject(err);\n      });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' ||\n      ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (value[key] === '') { // clear empty strings\n          value[key] = null;\n        }\n        if (this.isImmutableProperty(key)) { // filter system properties\n          delete value[key];\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new entry with the given value for the given model. Fires the \"create\" change. */\n  create(model: string, value: Object): Promise {\n    return this.sdk.api.createEntry(model, this.clean(value))\n      .then((entry: EntryResource) => {\n        // console.log('created entry', entry);\n        // TODO make sure leveled entries are returned leveled\n        this.changes.next({ model, entry, type: 'post' });\n        return entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given entry and emits the \"delete\" change. */\n  del(model: string, entry: EntryResource) {\n    return entry.del().then((res) => {\n      this.changes.next({ model, entry, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Upload.html":{"url":"interfaces/Upload.html","title":"interface - Upload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Upload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the CrudService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        asset\n                                \n                                \n                                            Optional\n                                        assets\n                                \n                                \n                                            Optional\n                                        item\n                                \n                                \n                                            Optional\n                                        items\n                                \n                                \n                                            Optional\n                                        list\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asset\n                                    \n                                \n                                \n                                    \n                                        asset:     PublicAssetResource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant asset. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assets\n                                    \n                                \n                                \n                                    \n                                        assets:     PublicAssetResource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant assets (when uploading multiple). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     Item\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Item\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     ResourceList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ResourceList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource,\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[],\n  /** The uploaded asset as item */\n  item?: Item\n  /** The uploaded asset as item */\n  items?: Array>\n  /** The list where it happened. */\n  list?: ResourceList,\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  customNames?: string[]\n  /** Custom file form fieldName */\n  fieldName?: string\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n\n  public newAssetListConfig = { // TODO: dont use\n    label: 'title',\n    identifier: 'assetID',\n    fields: {\n      title: {\n        label: 'Titel',\n        sortable: true,\n        filterable: true,\n        type: 'text',\n        view: 'string',\n      },\n    }\n  }\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig) {\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset) {\n    if (Array.isArray(asset)) {\n      return asset.length ? this.isNewAsset(asset[0]) : false;\n    }\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(asset.assetID)\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n    const files = e.target.files || e.dataTransfer.files;\n    if (!files.length) {\n      return;\n    }\n    return api.createDMAssets(assetGroupID, this.getFormData(files, options))\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.newAssetListConfig),\n          items: assets.map(asset => new Item(asset, this.newAssetListConfig))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(e): Promise {\n    const files = e.target.files || e.dataTransfer.files;\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve().then((): Promise Promise> => {\n      if (files.length === 1) {\n        return this.sdk.api.createAsset(data, {})\n      }\n      return this.sdk.api.createAssets(data, {})\n    })\n      .then(res => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      }).then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('legacyAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(assets: Array, assetGroupID?: string): Promise> {\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (assetGroupID) { // new assets\n      return this.sdk.api.dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then(dmAssetList => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then((): any => {\n      if (unresolved.length === 1) {\n        return this.sdk.api.asset(unresolved[0]).then(asset => {\n          return [asset]\n        });\n      }\n      return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 })\n        .then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ?\n              resolved.find((resource) => resource.assetID === asset) : asset)\n        });\n\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadComponent.html":{"url":"components/UploadComponent.html","title":"component - UploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/files/upload/upload.component.ts\n\n\n    \n        Description\n    \n    \n        This component will render an input field to upload files to the datamanager. \n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-upload\n            \n\n\n\n\n            \n                templateUrl\n                ./upload.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                fileInput\n                            \n                            \n                                    Public\n                                filesToUpload\n                            \n                            \n                                notifications\n                            \n                            \n                                pop\n                            \n                            \n                                uploadPromise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clear\n                            \n                            \n                                trigger\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetGroup\n                            \n                            \n                                assetGroupID\n                            \n                            \n                                custom\n                            \n                            \n                                loader\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, fileService: FileService, loaderService: LoaderService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/upload/upload.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The api to use for the upload. Defaults to sdk.api \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroup\n                    \n                    \n                        The asset group to upload into. If not defined, old assets will be used! DEPRECATED! \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                    \n                        The asset group to upload into. If not defined, old assets will be used! \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        custom\n                    \n                    \n                        If true, a pop to rename files + customize flags will appear before uploading. \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be used while uploading\n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        Upload options \n\n                            \n                            Type:    FileOptions\n\n                            \n                        \n                            Default value: {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    customNames: []\n  }\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        The input placeholder\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Emits when an upload is complete. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(e: , api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Uploads the files from the input event. Handles loader and notifications. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            clears the file input \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trigger\n                            \n                            \n                        \n                    \n                \n                \n                    \ntrigger()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            opens the system upload window by triggering the input \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upload\n                            \n                            \n                        \n                    \n                \n                \n                    \nupload(e: , api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Triggers upload of current selected files \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileInput:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:43\n                            \n                        \n\n                \n                    \n                        Reference to the input[type=file] element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filesToUpload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filesToUpload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:47\n                            \n                        \n\n                \n                    \n                        Error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pop:     PopComponent\n\n                    \n                \n                    \n                        \n                            Type :     PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:45\n                            \n                        \n\n                \n                    \n                        Pop child for new asset options. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadPromise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uploadPromise:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { PopComponent } from '@ec.components/ui/src/pop/pop.component';\nimport { FileOptions } from './../file.service';\nimport { Component, EventEmitter, Input, Output, ElementRef, ViewChild } from '@angular/core';\nimport { SdkService } from '../../sdk/sdk.service';\nimport { FileService, Upload } from '../file.service';\nimport { LoaderComponent, WithLoader, LoaderService, NotificationsService } from '@ec.components/ui';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { WithNotifications } from '@ec.components/ui/src/notifications/with-notifications.interface';\nimport { Notification } from '@ec.components/ui/src/notifications/notification';\n\n/** This component will render an input field to upload files to the datamanager. */\n@Component({\n  selector: 'ec-upload',\n  templateUrl: './upload.component.html',\n})\nexport class UploadComponent implements WithLoader, WithNotifications {\n  event: any;\n  uploadPromise: Promise;\n  public filesToUpload: any;\n  /** The input placeholder*/\n  @Input() placeholder: string;\n  /** The loader that should be used while uploading*/\n  @Input() loader: LoaderComponent;\n  /** The asset group to upload into. If not defined, old assets will be used! */\n  @Input() assetGroupID: string;\n  /** The asset group to upload into. If not defined, old assets will be used! DEPRECATED! */\n  @Input() assetGroup: string;\n  /** If true, a pop to rename files + customize flags will appear before uploading. */\n  @Input() custom: boolean;\n  /** Upload options */\n  @Input() options: FileOptions = {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    customNames: []\n  };\n  /** The api to use for the upload. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Emits when an upload is complete. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** Reference to the input[type=file] element */\n  @ViewChild('fileInput') fileInput: ElementRef;\n  /** Pop child for new asset options. */\n  @ViewChild(PopComponent) pop: PopComponent;\n  /** Error Notifications */\n  notifications: Notification[] = [];\n\n  constructor(private sdk: SdkService,\n    private fileService: FileService,\n    private loaderService: LoaderService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService) {\n  }\n  /** opens the system upload window by triggering the input */\n  trigger() {\n    if (!this.fileInput) {\n      console.error('cannot trigger upload: file input element not found!');\n      return;\n    }\n    /* this.clear(); */\n    this.fileInput.nativeElement.click();\n  }\n\n  /** Uploads the files from the input event. Handles loader and notifications. */\n  change(e, api = this.sdk.api) {\n    if (!e || !e.target || !e.target.files || !e.target.files.length) {\n      return;\n    }\n    this.filesToUpload = e.target.files;\n    if (this.custom) {\n      this.event = e;\n      this.pop.show();\n      return;\n    }\n    return this.upload(e, api);\n  }\n\n  /** clears the file input */\n  clear() {\n    if (!this.fileInput) {\n      return;\n    }\n    this.fileInput.nativeElement.value = ''; // clear input to eventually trigger change on same file\n  }\n\n  /** Triggers upload of current selected files */\n  upload(e, api = this.sdk.api) {\n    e.preventDefault();\n    e.stopPropagation();\n    const assetGroupID = this.assetGroupID || this.assetGroup;\n    this.uploadPromise = (assetGroupID ?\n      this.fileService.uploadAssets(e, assetGroupID, this.options, api) :\n      this.fileService.uploadFiles(e))\n      .then((_upload) => {\n        this.success.emit(_upload);\n        this.notificationService.emit({\n          title: this.symbol.resolve('success.upload'),\n          type: 'success',\n          hide: this.notifications\n        });\n        this.pop.hide();\n        return _upload;\n      }).catch((err) => {\n        console.error(err);\n        this.notificationService.emit({\n          title: this.symbol.resolve('error.upload'),\n          error: err,\n          sticky: true,\n          hide: this.notifications,\n          append: this.notifications\n        });\n      });\n    this.loaderService.wait(this.uploadPromise, this.loader);\n    this.uploadPromise.then(() => {\n      delete this.uploadPromise;\n    })\n    return this.uploadPromise;\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n        \n    \n    \n        \n            \n            \n                \n                {{'upload.preserveFilenames' | symbol}}\n            \n        \n        \n            \n            \n                \n                {{'upload.includeAssetIDInPath' | symbol}}\n            \n        \n        \n            \n            \n                \n                {{'upload.ignoreDuplicates' | symbol}}\n            \n        \n        \n            {{ f.name }}\n            \n                \n            \n        \n        Upload\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                        {{\\'upload.preserveFilenames\\' | symbol}}                                                                                    {{\\'upload.includeAssetIDInPath\\' | symbol}}                                                                                    {{\\'upload.ignoreDuplicates\\' | symbol}}                                        {{ f.name }}                                                        Upload    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilityModule.html":{"url":"modules/UtilityModule.html","title":"module - UtilityModule","body":"\n                   \n\n\n\n\n  Modules\n  UtilityModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_imports\n\n\n\ncluster_UtilityModule_exports\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUtilityModule -->\n\nMenuComponent->UtilityModule\n\n\n\n\n\nMockupComponent\n\nMockupComponent\n\nUtilityModule -->\n\nMockupComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nUtilityModule->IoModule \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nUtilityModule->MenuComponent \n\n\n\n\n\nMockupComponent \n\nMockupComponent \n\nMockupComponent  -->\n\nUtilityModule->MockupComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nIoModule\n\nIoModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/utility/utility.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginFormComponent\n                            \n                            \n                                MenuComponent\n                            \n                            \n                                MockupComponent\n                            \n                            \n                                TabComponent\n                            \n                            \n                                TabsComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IoModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    IoModule\n                            \n                            \n                                    LoginFormComponent\n                            \n                            \n                                    MenuComponent\n                            \n                            \n                                    MockupComponent\n                            \n                            \n                                    TabComponent\n                            \n                            \n                                    TabsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { TabsComponent } from './tabs/tabs.component';\nimport { TabComponent } from './tab/tab.component';\nimport { MockupComponent } from './mockup/mockup.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { IoModule } from '../io/io.module';\n\n@NgModule({\n  entryComponents: [],\n  declarations: [\n    TabsComponent,\n    TabComponent,\n    MockupComponent,\n    MenuComponent,\n    LoginFormComponent,\n  ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    IoModule,\n    CommonModule,\n    RouterModule,\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    IoModule,\n    TabsComponent,\n    TabComponent,\n    MockupComponent,\n    MenuComponent,\n    LoginFormComponent,\n    RouterModule,\n  ],\n  providers: [],\n})\nexport class UtilityModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcModule.html":{"url":"modules/VcModule.html","title":"module - VcModule","body":"\n                   \n\n\n\n\n  Modules\n  VcModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcModule\n\n\n\ncluster_VcModule_declarations\n\n\n\ncluster_VcModule_exports\n\n\n\n\nEditorComponent\n\nEditorComponent\n\n\n\nVcModule\n\nVcModule\n\nVcModule -->\n\nEditorComponent->VcModule\n\n\n\n\n\nSafeHtmlPipe\n\nSafeHtmlPipe\n\nVcModule -->\n\nSafeHtmlPipe->VcModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nVcModule -->\n\nToolbarComponent->VcModule\n\n\n\n\n\nEditorComponent \n\nEditorComponent \n\nEditorComponent  -->\n\nVcModule->EditorComponent \n\n\n\n\n\nSafeHtmlPipe \n\nSafeHtmlPipe \n\nSafeHtmlPipe  -->\n\nVcModule->SafeHtmlPipe \n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nVcModule->ToolbarComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/vc/src/vc.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                EditorComponent\n                            \n                            \n                                SafeHtmlPipe\n                            \n                            \n                                ToolbarComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                EditorComponent\n                            \n                            \n                                ToolbarComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    EditorComponent\n                            \n                            \n                                    SafeHtmlPipe\n                            \n                            \n                                    ToolbarComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\n\nimport { NgModule } from '@angular/core';\nimport { SafeHtmlPipe } from './safe-html.pipe';\nimport { EditorComponent } from './editor/editor.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\n\n@NgModule({\n  entryComponents: [\n    EditorComponent,\n    ToolbarComponent,\n  ],\n  declarations: [\n    EditorComponent,\n    ToolbarComponent,\n    SafeHtmlPipe,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    EditorComponent,\n    ToolbarComponent,\n    SafeHtmlPipe,\n  ],\n  providers: [],\n})\nexport class VcModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/VisibleFieldsPipe.html":{"url":"pipes/VisibleFieldsPipe.html","title":"pipe - VisibleFieldsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  VisibleFieldsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/visible-fields.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        visibleFields\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(fields: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/visible-fields.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n                            Filters out all fields that should not be displayed in a regular form \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fields\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Field } from '@ec.components/core/src/field/field';\n\n/** The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. */\n@Pipe({\n  name: 'visibleFields'\n})\nexport class VisibleFieldsPipe implements PipeTransform {\n  /** Filters out all fields that should not be displayed in a regular form */\n  transform(fields: Array): any {\n    return fields.filter((field) => {\n      return field.form !== false;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithLoader.html":{"url":"interfaces/WithLoader.html","title":"interface - WithLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/loader/with-loader.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses a loader. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:     LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoaderComponent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The loader that is contacted on any kind of loading operation. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { LoaderComponent } from './loader.component';\n/** This interface can be used on a component that uses a loader. */\nexport interface WithLoader {\n  /** The loader that is contacted on any kind of loading operation. */\n  loader: LoaderComponent\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithNotifications.html":{"url":"interfaces/WithNotifications.html","title":"interface - WithNotifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithNotifications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/notifications/with-notifications.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses notifications. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        silent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:     Notification[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Notification[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Stores notification history for later access. E.g. stores errors that should be hidden later. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        silent\n                                    \n                                \n                                \n                                    \n                                        silent:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no notifications will be emitted \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Notification } from './notification';\n\n\n/** This interface can be used on a component that uses notifications. */\nexport interface WithNotifications {\n    /** Stores notification history for later access. E.g. stores errors that should be hidden later. */\n    notifications?: Notification[];\n    /** If true, no notifications will be emitted */\n    silent?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\n\n@ec.componentss/data 0.23.0\nBREAKING CHANGE:\n\nadded useLegacyAssets flag to use old assets. All projects still using old assets need to set this flag to migrate! The flag can be used in the field config or directly in the asset-select config.\n\n\n0.17.0\n\nadded resource module with all resource related components and services\ncan now add delete and modify entries and resource through the selects\nasset select now supports old and new assets. When you pass [assetGroupID] to select (or list/upload), new assets will be used.\ndeprecated asset-list, because ec.sdk now supports public api relations.\n\nBREAKING CHANGE:\n\nremoved [field] input from selects\n\n\n0.15.0\n\ncan now use SdkService without datamanagerID.\nadded resource-delete-pop\nremoved labels config from pagination-config. now using symbol.service\nadded ec-resource-select\nadded support for new assets\n\n\n0.14.0\n\nadded ready event to FormComponent when initialization is complete.\nadded ResourcePopComponent for creating and editing resources.\nadded permissions option to resource-config to automatically show only allowed actions.\nadded ResourceCrudComponent for easy create/read/update/delete of any resource.\ncan now set field config label to false to show an empty label. (COM-89)\noptimized ec-select toggle behaviour (COM-92, COM-93)\ncan now set placeholder for ec-password-reset (COM-101)\nadded SymbolService for localization\n\n\n0.13.0\n\ncan now configure the maximum visible items for 'tags' view via the maxItems option in the field config. The default value is 10.\nadded auto generated id to all fields. Those ids are used in label#for and input#id. You should also reference this id in custom inputs to make the label clickable.\nadded ec-icon component for more flexible icons.\nadded paginationConfig Input to ListComponent (+ all children like ResourceListComponent)\nadded maxColumns option to list-config.\n\nBREAKING CHANGES:\n\nCOM-98: active/visible classes: renamed active to is-active, visible to is-visible and disabled to is-disabled\nCOM-95: renamed is-sortable-active to is-sorted + added is-sorted-asc and is-sorted-desc\nCOM-96: replaced all usages of ec-icon with new ec-icon component (nests one level deeper)\nCOM-45: removed range input from pagination, replaced with PaginationConfig with additional options (see docs)\nremoved [host] input from ListItemsComponent due to incompatibilities.\nrenamed list config property disableSelection to selectMode and inverted its value meaning. When selectMode is true, the checkboxes are shown and the columnClicked event is ignored as long as selectMode is active. You can toggle the selectMode via list#toggleSelectMode.\nremoved DatamanagerListComponent and ModelListComponent. You can use ResourceList for both now.\n\n\n0.12.0\nBREAKING CHANGE:\n\nform.component (and all children): renamed (submit) output to (submitted)\n\n\n0.10.0\nBREAKING CHANGES:\n\nlist.component (and all extending components): renamed select output to columnClicked. (Global replace \"(select)\" to \"(columnClicked)\").\nmonth.component: renamed select output to dayClicked (similar to list.component)\n\n\n0.9.0\n\nadded use method to selection.component to write the model from outside\nBREAKING CHANGES:\necPublicAsset has been renamed to ecAsset and now supports direct id binding to directive.\n\n\n0.8.2\n\nadded ec-toggle to default inputs (use view: 'toggle' in field config)\nadded ec-calendar\nsystem fields (id, created, modified etc) are now readOnly by default\n\n\n0.8.1\n\nadded ec-entry-pop\n\n\n0.8.0\nBREAKING CHANGES:\n\nremoved PublicService and AdminService, you should use sdk methods instead.\nlogin/signup + more auth methods have been moved from SdkService to new AuthService\nformer ec-login has been renamed to ec-login-form, the new ec-login handles login automatically.\ncrud methods have been renamend to 'get', 'put', 'post', 'delete'\nec-entry and ec-entries are now directives ecEntry and ecEntries\n\n\n0.7.0\nBREAKING CHANGES:\n\npop classes have been completely changed to:\n.ec-pop_fullscreen\n.ec-pop_dialog\n.ec-pop_drawer-left\n.ec-pop_drawer-top\n.ec-pop_drawer-right\n.ec-pop_drawer-bottom\n.ec-pop_toast-top\n.ec-pop_toast-bottom\n\n\nadded @ec.components/style package\n\n\n0.6.0\n\nEntryFormComponent.deleteEntry now returns the deletion promise.\nfix: SdkService.ready promise was not renewed after login\nLoginComponent now accepts a loader as input\nBREAKING CHANGES:\nFormComponent.submitted now emits the instance of Form and not the group\n\n\n0.5.3\n\nfeature: asset-select is now capable of using ngModel with two way binding\n\n\n0.5.2\n\nremoved DataRoutingModule from DataModule\nfeature: asset-select can now resolve assetID's.\nfeature: added filterPopClass config option to field-property-config.\nfurther styling\n\n\n0.5.1\n\nfurther styling\nfix: could not set custom inputs/outputs for entry fields\nnow using ec.sdk 0.8.6\n\n\n0.5.0\n\nfurther styling\nBREAKING CHANGES:\nview: 'label' must now be view: 'tag'\nview: 'labels' must now be view: 'tags'\nselection is now a direct input of ec-crud instead of a config property\n\n\n0.4.1\n\nfixed tests after refactoring\nwrote project setup tutorial\nfurther styling\n\n\n0.4.0\n\nnow using ec.sdk 0.8.5\n\nBREAKING CHANGES:\n\nall imports from '@ec.components/_/' must now lead to '@ec.components//src/_'\nimports from '@ec.components/*' can stay the same and should generally be preferred.\n\n\n0.3.1\n\nrefactored typings to be aot compatible\nrefactored imports\nbegan styling\n\n\n0.3.0\n\nnow using ec.sdk 0.8.1\nnow supporting default routes for filtering and more\nAssetInput is now default for asset/assets fields\n\n\n0.2.0\n\nnow using ec.sdk 0.7.1\nentry-form now supports lvl1 entries even with nested resources\nec-datetime now supports iso dates\n\n\n0.1.1\n\nchanged src folder and module structure\nec-model-list\nec-asset-select\nec-upload\nec-datetime input\n\n\n0.1.0 (2017-08-23)\n\nthe most important basic components are now implemented\ndynamic input/output templates\nec-entry, ec-entries\nadded demo with multiple routes\nec-form\nmuch more\n\n\n0.0.2 (2017-05-11)\n\nimproved list\nimproved imports\n\n\n0.0.1 (2017-05-10)\n\ninitial release\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    packages/ace/src/ace.component.ts\n            \n            \n                component\n            \n            \n                AceComponent\n            \n            \n                90 %\n                (19/21)\n            \n        \n        \n            \n                \n                    packages/ace/src/ace.component.ts\n            \n            \n                variable\n            \n            \n                ace\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/collection/collection.ts\n            \n            \n                class\n            \n            \n                Collection\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    packages/core/src/config/config.ts\n            \n            \n                class\n            \n            \n                Config\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/core/src/config/field-config-property.interface.ts\n            \n            \n                interface\n            \n            \n                FieldConfigProperty\n            \n            \n                100 %\n                (36/36)\n            \n        \n        \n            \n                \n                    packages/core/src/config/field-config.interface.ts\n            \n            \n                interface\n            \n            \n                FieldConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/field/field.ts\n            \n            \n                class\n            \n            \n                Field\n            \n            \n                95 %\n                (22/23)\n            \n        \n        \n            \n                \n                    packages/core/src/form/form-config.interface.ts\n            \n            \n                interface\n            \n            \n                FormConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/form/form.ts\n            \n            \n                class\n            \n            \n                Form\n            \n            \n                92 %\n                (26/28)\n            \n        \n        \n            \n                \n                    packages/core/src/item/item-config.interface.ts\n            \n            \n                interface\n            \n            \n                ItemConfig\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    packages/core/src/item/item.ts\n            \n            \n                class\n            \n            \n                Item\n            \n            \n                91 %\n                (21/23)\n            \n        \n        \n            \n                \n                    packages/core/src/list/list-config.interface.ts\n            \n            \n                interface\n            \n            \n                ListConfig\n            \n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                    packages/core/src/list/list.ts\n            \n            \n                class\n            \n            \n                List\n            \n            \n                100 %\n                (35/35)\n            \n        \n        \n            \n                \n                    packages/core/src/pagination/pagination.ts\n            \n            \n                class\n            \n            \n                Pagination\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                    packages/core/src/selection/selection.ts\n            \n            \n                class\n            \n            \n                Selection\n            \n            \n                100 %\n                (40/40)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                class\n            \n            \n                Sorter\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                function\n            \n            \n                sortBoolean\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                function\n            \n            \n                sortNumber\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                function\n            \n            \n                sortString\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                variable\n            \n            \n                collator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/auth-guard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuard\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/auth.module.ts\n            \n            \n                function\n            \n            \n                cookieFactory\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/email-available.validator.ts\n            \n            \n                variable\n            \n            \n                emailAvailable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/errors.ts\n            \n            \n                variable\n            \n            \n                backendErrorCodes\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/errors.ts\n            \n            \n                variable\n            \n            \n                errors\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/password-reset/password-reset.component.ts\n            \n            \n                component\n            \n            \n                PasswordResetComponent\n            \n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                    packages/data/src/crud/crud-config.interface.ts\n            \n            \n                interface\n            \n            \n                CrudConfig\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                    packages/data/src/crud/crud.component.ts\n            \n            \n                component\n            \n            \n                CrudComponent\n            \n            \n                78 %\n                (15/19)\n            \n        \n        \n            \n                \n                    packages/data/src/crud/crud.service.ts\n            \n            \n                injectable\n            \n            \n                CrudService\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    packages/data/src/crud/crud.service.ts\n            \n            \n                interface\n            \n            \n                Update\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    packages/data/src/entries/entries.directive.ts\n            \n            \n                directive\n            \n            \n                EntriesDirective\n            \n            \n                66 %\n                (12/18)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/admin-entry-input.component.ts\n            \n            \n                component\n            \n            \n                AdminEntryInputComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/default-entry-input.component.ts\n            \n            \n                component\n            \n            \n                DefaultEntryInputComponent\n            \n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/default-entry-output.component.ts\n            \n            \n                component\n            \n            \n                DefaultEntryOutputComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/entry-form.component.ts\n            \n            \n                component\n            \n            \n                EntryFormComponent\n            \n            \n                97 %\n                (35/36)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-list/entry-list.component.ts\n            \n            \n                component\n            \n            \n                EntryListComponent\n            \n            \n                71 %\n                (15/21)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-list/entry-list.ts\n            \n            \n                class\n            \n            \n                EntryList\n            \n            \n                88 %\n                (23/26)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-pop/entry-pop.component.ts\n            \n            \n                component\n            \n            \n                EntryPopComponent\n            \n            \n                92 %\n                (25/27)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-select/entry-select.component.ts\n            \n            \n                component\n            \n            \n                EntrySelectComponent\n            \n            \n                82 %\n                (38/46)\n            \n        \n        \n            \n                \n                    packages/data/src/entry/entry.directive.ts\n            \n            \n                directive\n            \n            \n                EntryDirective\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    packages/data/src/files/asset-list-pop/asset-list-pop.component.ts\n            \n            \n                component\n            \n            \n                AssetListPopComponent\n            \n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                    packages/data/src/files/asset-select/asset-select.component.ts\n            \n            \n                component\n            \n            \n                AssetSelectComponent\n            \n            \n                68 %\n                (30/44)\n            \n        \n        \n            \n                \n                    packages/data/src/files/asset/asset.directive.ts\n            \n            \n                directive\n            \n            \n                AssetDirective\n            \n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                    packages/data/src/files/dropzone/dropzone.directive.ts\n            \n            \n                directive\n            \n            \n                DropzoneDirective\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                    packages/data/src/files/file.service.ts\n            \n            \n                injectable\n            \n            \n                FileService\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    packages/data/src/files/file.service.ts\n            \n            \n                interface\n            \n            \n                FileOptions\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    packages/data/src/files/file.service.ts\n            \n            \n                interface\n            \n            \n                Upload\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    packages/data/src/files/image/image.directive.ts\n            \n            \n                directive\n            \n            \n                ImageDirective\n            \n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                    packages/data/src/files/upload/upload.component.ts\n            \n            \n                component\n            \n            \n                UploadComponent\n            \n            \n                80 %\n                (16/20)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/model-config.interface.ts\n            \n            \n                interface\n            \n            \n                ModelConfig\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/model-config.service.ts\n            \n            \n                injectable\n            \n            \n                ModelConfigService\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/model-configuration.interface.ts\n            \n            \n                interface\n            \n            \n                ModelConfiguration\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/type-config.service.ts\n            \n            \n                injectable\n            \n            \n                TypeConfigService\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-config/resource-config.service.ts\n            \n            \n                injectable\n            \n            \n                ResourceConfig\n            \n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-config/resource.service.ts\n            \n            \n                injectable\n            \n            \n                ResourceService\n            \n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-config/resource.service.ts\n            \n            \n                interface\n            \n            \n                Update\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-crud/resource-crud.component.ts\n            \n            \n                component\n            \n            \n                ResourceCrudComponent\n            \n            \n                75 %\n                (15/20)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-delete-pop/resource-delete-pop.component.ts\n            \n            \n                component\n            \n            \n                ResourceDeletePopComponent\n            \n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-form/resource-form.component.ts\n            \n            \n                component\n            \n            \n                ResourceFormComponent\n            \n            \n                92 %\n                (35/38)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-form/resource-form.ts\n            \n            \n                class\n            \n            \n                ResourceForm\n            \n            \n                84 %\n                (27/32)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-list/resource-list.component.ts\n            \n            \n                component\n            \n            \n                ResourceListComponent\n            \n            \n                90 %\n                (29/32)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-list/resource-list.ts\n            \n            \n                class\n            \n            \n                ResourceList\n            \n            \n                94 %\n                (52/55)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-pop/resource-pop.component.ts\n            \n            \n                component\n            \n            \n                ResourcePopComponent\n            \n            \n                92 %\n                (24/26)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-select/resource-select.component.ts\n            \n            \n                component\n            \n            \n                ResourceSelectComponent\n            \n            \n                79 %\n                (39/49)\n            \n        \n        \n            \n                \n                    packages/data/src/sdk/history.service.ts\n            \n            \n                injectable\n            \n            \n                HistoryService\n            \n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                    packages/data/src/sdk/sdk.service.ts\n            \n            \n                injectable\n            \n            \n                SdkService\n            \n            \n                88 %\n                (15/17)\n            \n        \n        \n            \n                \n                    packages/location/src/geocode.service.ts\n            \n            \n                injectable\n            \n            \n                GeocodeService\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    packages/location/src/geocode.service.ts\n            \n            \n                variable\n            \n            \n                google\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/location/src/location-map.component.ts\n            \n            \n                component\n            \n            \n                LocationMapComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    packages/location/src/location-picker.component.ts\n            \n            \n                component\n            \n            \n                LocationPickerComponent\n            \n            \n                72 %\n                (13/18)\n            \n        \n        \n            \n                \n                    packages/location/src/location-search.component.ts\n            \n            \n                component\n            \n            \n                LocationSearchComponent\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                    packages/location/src/location.module.ts\n            \n            \n                variable\n            \n            \n                LOCATION_COMPONENTS\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/medium-editor/src/medium-editor.component.ts\n            \n            \n                component\n            \n            \n                MediumEditorComponent\n            \n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                    packages/tinymce/src/tinymce/tinymce-settings.ts\n            \n            \n                variable\n            \n            \n                editorSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/tinymce/src/tinymce/tinymce.component.ts\n            \n            \n                component\n            \n            \n                TinymceComponent\n            \n            \n                81 %\n                (13/16)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/calendar.component.ts\n            \n            \n                component\n            \n            \n                CalendarComponent\n            \n            \n                76 %\n                (40/52)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/daterange.component.ts\n            \n            \n                component\n            \n            \n                DaterangeComponent\n            \n            \n                65 %\n                (23/35)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/datetime.component.ts\n            \n            \n                component\n            \n            \n                DatetimeComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/datetime.pipe.ts\n            \n            \n                pipe\n            \n            \n                DatetimePipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/heatmap.component.ts\n            \n            \n                component\n            \n            \n                HeatmapComponent\n            \n            \n                63 %\n                (26/41)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/month.component.ts\n            \n            \n                component\n            \n            \n                MonthComponent\n            \n            \n                66 %\n                (22/33)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/month.component.ts\n            \n            \n                interface\n            \n            \n                Day\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/default-input/default-input.component.ts\n            \n            \n                component\n            \n            \n                DefaultInputComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/default-output/default-output.component.ts\n            \n            \n                component\n            \n            \n                DefaultOutputComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/form.component.ts\n            \n            \n                component\n            \n            \n                FormComponent\n            \n            \n                96 %\n                (27/28)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/form.service.ts\n            \n            \n                injectable\n            \n            \n                FormService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/max-items.pipe.ts\n            \n            \n                pipe\n            \n            \n                MaxItemsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/toggle/toggle.component.ts\n            \n            \n                component\n            \n            \n                ToggleComponent\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/visible-fields.pipe.ts\n            \n            \n                pipe\n            \n            \n                VisibleFieldsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/ec-icons.ts\n            \n            \n                variable\n            \n            \n                ecIcons\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/emoji-icons.ts\n            \n            \n                variable\n            \n            \n                emojiIcons\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/icon.component.ts\n            \n            \n                component\n            \n            \n                IconComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/icon.service.ts\n            \n            \n                injectable\n            \n            \n                IconService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/dynamic-rack/dynamic-rack.component.ts\n            \n            \n                component\n            \n            \n                DynamicRackComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts\n            \n            \n                component\n            \n            \n                DynamicSlotComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/input-errors/input-errors.component.ts\n            \n            \n                component\n            \n            \n                InputErrorsComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/input/input.component.ts\n            \n            \n                component\n            \n            \n                InputComponent\n            \n            \n                82 %\n                (14/17)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/output/output.component.ts\n            \n            \n                component\n            \n            \n                OutputComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/slot-host.directive.ts\n            \n            \n                directive\n            \n            \n                SlotHostDirective\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/group.pipe.ts\n            \n            \n                pipe\n            \n            \n                GroupPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/list-header/list-header.component.ts\n            \n            \n                component\n            \n            \n                ListHeaderComponent\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/list-items/list-items.component.ts\n            \n            \n                component\n            \n            \n                ListItemsComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/list.component.ts\n            \n            \n                component\n            \n            \n                ListComponent\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/pagination/pagination-config.interface.ts\n            \n            \n                class\n            \n            \n                PaginationConfig\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/pagination/pagination.component.ts\n            \n            \n                component\n            \n            \n                PaginationComponent\n            \n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                    packages/ui/src/loader/loader.component.ts\n            \n            \n                component\n            \n            \n                LoaderComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/loader/loader.service.ts\n            \n            \n                injectable\n            \n            \n                LoaderService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    packages/ui/src/loader/with-loader.interface.ts\n            \n            \n                interface\n            \n            \n                WithLoader\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/error/error.component.ts\n            \n            \n                component\n            \n            \n                ErrorComponent\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notification.ts\n            \n            \n                class\n            \n            \n                Notification\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notifications.component.ts\n            \n            \n                component\n            \n            \n                NotificationsComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notifications.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationsService\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notifications.service.ts\n            \n            \n                variable\n            \n            \n                window\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/with-notifications.interface.ts\n            \n            \n                interface\n            \n            \n                WithNotifications\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/pop/pop.component.ts\n            \n            \n                component\n            \n            \n                PopComponent\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    packages/ui/src/pop/pop.service.ts\n            \n            \n                injectable\n            \n            \n                PopService\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/select/select.component.ts\n            \n            \n                component\n            \n            \n                SelectComponent\n            \n            \n                74 %\n                (20/27)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.interface.ts\n            \n            \n                interface\n            \n            \n                Symbol\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.pipe.ts\n            \n            \n                injectable\n            \n            \n                SymbolPipe\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.pipe.ts\n            \n            \n                injectable\n            \n            \n                SymbolPipe\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.service.ts\n            \n            \n                injectable\n            \n            \n                SymbolService\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/login-form/login-form.component.ts\n            \n            \n                component\n            \n            \n                LoginFormComponent\n            \n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/menu/menu.component.ts\n            \n            \n                component\n            \n            \n                MenuComponent\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/mockup/mockup.component.ts\n            \n            \n                component\n            \n            \n                MockupComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/tab/tab.component.ts\n            \n            \n                component\n            \n            \n                TabComponent\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/tabs/tabs.component.ts\n            \n            \n                component\n            \n            \n                TabsComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/validators/email.validator.ts\n            \n            \n                variable\n            \n            \n                emailValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/validators/field-validators.ts\n            \n            \n                variable\n            \n            \n                FieldValidators\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/vc/src/editor/editor.component.ts\n            \n            \n                component\n            \n            \n                EditorComponent\n            \n            \n                9 %\n                (6/62)\n            \n        \n        \n            \n                \n                    packages/vc/src/editor/editor.component.ts\n            \n            \n                variable\n            \n            \n                document\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/vc/src/safe-html.pipe.ts\n            \n            \n                pipe\n            \n            \n                SafeHtmlPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/vc/src/toolbar/toolbar.component.ts\n            \n            \n                component\n            \n            \n                ToolbarComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/compiler : ^5.2.2\n        \n            @angular/core : ^5.2.2\n        \n            @angular/forms : ^5.2.2\n        \n            @angular/http : ^5.2.2\n        \n            @angular/platform-browser : ^5.2.2\n        \n            @angular/platform-browser-dynamic : ^5.2.2\n        \n            @angular/router : ^5.2.2\n        \n            @ec.components/data : ^0.21.0\n        \n            @ec.components/medium-editor : ^0.2.0\n        \n            @ec.components/style : ^0.10.0\n        \n            @ec.components/tinymce : ^0.2.0\n        \n            @ec.components/location : ^0.3.0\n        \n            ace-builds : ^1.2.9\n        \n            core-js : ^2.5.3\n        \n            moment-es6 : ^1.0.0\n        \n            ngx-cookie : ^2.0.1\n        \n            rxjs : ^5.5.6\n        \n            stream : 0.0.2\n        \n            tinymce : ^4.7.6\n        \n            x.ui : ^8.0.0-beta.4\n        \n            zone.js : ^0.8.20\n        \n            ec.sdk : ^0.16.3\n        \n            @agm/core : ^1.0.0-beta.2\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cookieFactory   (packages/.../auth.module.ts)\n                        \n                        \n                            sortBoolean   (packages/.../sorter.ts)\n                        \n                        \n                            sortNumber   (packages/.../sorter.ts)\n                        \n                        \n                            sortString   (packages/.../sorter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/data/src/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cookieFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \ncookieFactory()\n                    \n                \n\n\n\n\n                \n                    \n                            loads CookieModule \n\n\n                    \n                \n            \n        \n\n    packages/core/src/sorter/sorter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sortBoolean\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBoolean(a: , b: )\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts booleans \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortNumber(a: , b: )\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts numbers \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortString\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortString(a: , b: )\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts strings (naturally) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nec.components\nThis is the main project for ec.components, written in Typescript and Angular.\nModules\nThere are three main modules:\n\n*@ec.components/core*: contains core typescript classes (no angular, no datamanager)\n*@ec.components/ui*: contains core ui components (angular, no datamanager)\n*@ec.components/data*: contains ui components for datamanager (angular+datamanager)\n\nThe dependencies stack up from core to data (data > ui > core).\nThe packages sources are located at src/packages.\nThere is also a fourth module called ```*@ec.components/style*`.\nIt contains more sophisticated styles for ui components using x.ui.\nDocumentation\nThe main documentation is located at https://entrecode.github.io/ec.components/.\nYou can find a getting started guide there\nDemo\nA Demo is available at https://components.entrecode.de/.\nDevelopment\nThis project was generated with Angular CLI version 1.0.0-rc.0.\nLerna\nThe repository is a monorepo, managed by lerna.\nDeveloping with Symlinks\nThe start npm script will automatically use the symlinks from src/packages for @ec.components.\nIt also deletes eventually existing node_modules folders inside the packages.\nThis enables you to always use imports like: import  from '@ec.components/'.\nPublishing\n\nRun bootstrap task, this will call lerna bootstrap for core/ui/data packages and their prepublish scripts:npm run bootstrap\nRun publish task and select versions:npm run publish\n\nTo publish a new package, make sure you run npm publish --access=public before running lerna.\nMake sure you update the symlinks.sh and delete-modules.sh scripts to make it work for the demo server.\nImport Structure\nAll imports inside src/packages that import from the same package or another ec.components package must be relative.\n\nImports from the same package should always import the index file \"from '..'\"\nThis implies that all components/classes etc are placed inside a flat subfolder structure.\nThe relative path '..' therefore links to the index.ts where all package exports are defined.\n\n\nImports from another package should always import the relative path to the package index (e.g. ../../packages/core)\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive/pipe/service/class/module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nUse the --env=prod or --env=stag for environment builds.\nCAUTION: you may have to \"es2015\" in tsconfig.json / lib to make UglifyJS work\nsee https://github.com/mishoo/UglifyJS2/issues/659\nBuild Trouble Shooting\nErrors like this (or similar):\nERROR in ./node_modules/@ec.components/data/src/auth/auth.service.ts\nModule build failed: Error: /Users/kon/workspace/0.entrecode/nwb.admin/node_modules/@ec.components/data/src/auth/auth.service.ts is missing from the TypeScript compilation. Please make sure it is in your tsconfig via the 'files' or 'include' property.can be fixed by including the ec.components files explicitly (+excluding the test files):\n{\n  \"extends\": \"../tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"../out-tsc/app\",\n    \"baseUrl\": \"./\",\n    \"module\": \"es2015\",\n    \"types\": []\n  },\n  \"exclude\": [\n    \"test.ts\",\n    \"**/*.spec.ts\",\n    \"../node_modules/@ec.components/**/*.spec.ts\"\n  ],\n  \"include\": [\n    \"**/*.ts\",\n    \"../node_modules/@ec.components/**/*.ts\"\n  ]\n}Running unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nBefore running the tests make sure you are serving the app via ng serve.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nImpressum & Datenschutz\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AceModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IconModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IoModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ListModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoaderModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediumModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PopModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResourceModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SdkModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SelectModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SymbolModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TinymceModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilityModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_exports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_exports\n\n\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_MediumModule\n\n\n\ncluster_MediumModule_declarations\n\n\n\ncluster_MediumModule_exports\n\n\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_exports\n\n\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_providers\n\n\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\ncluster_UiModule\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_exports\n\n\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_exports\n\n\n\ncluster_VcModule\n\n\n\ncluster_VcModule_declarations\n\n\n\ncluster_VcModule_exports\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->AceComponent -->\n\n{\n    : , : (() => ), : true\n}->AceComponent\n\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n ), : true\n}->MediumEditorComponent -->\n\n{\n    : , : (() => ), : true\n}->MediumEditorComponent\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\n ), : true\n}->SelectComponent -->\n\n{\n    : , : (() => ), : true\n}->SelectComponent\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\n()\n\n()\n\nAuthModule -->\n\n()->AuthModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAuthModule -->\n\nAuthGuard->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nCrudService\n\nCrudService\n\nDataModule -->\n\nCrudService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\nAssetDirective\n\nAssetDirective\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nCalendarComponent->FormModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nFormModule -->\n\nDaterangeComponent->FormModule\n\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nFormModule -->\n\nDatetimePipe->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nFormModule -->\n\nHeatmapComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nFormModule -->\n\nMonthComponent->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nFormModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nFormModule->DaterangeComponent \n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nFormModule->DatetimePipe \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nFormModule->HeatmapComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nFormModule->MonthComponent \n\n\n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nPopModule\n\nPopModule\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nGroupPipe\n\nGroupPipe\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\nUiModule -->\n\nListModule->UiModule\n\n\n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\nMediumModule\n\nMediumModule\n\nMediumModule -->\n\nMediumEditorComponent->MediumModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumModule->MediumEditorComponent \n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\nPopComponent\n\nPopComponent\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\nSdkService\n\nSdkService\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n\n\nSymbolService\n\nSymbolService\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\nIoModule  -->\n\nUtilityModule->IoModule \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nUtilityModule->MenuComponent \n\n\n\n\n\nMockupComponent \n\nMockupComponent \n\nMockupComponent  -->\n\nUtilityModule->MockupComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUtilityModule -->\n\nMenuComponent->UtilityModule\n\n\n\n\n\nMockupComponent\n\nMockupComponent\n\nUtilityModule -->\n\nMockupComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\nEditorComponent\n\nEditorComponent\n\n\n\nVcModule\n\nVcModule\n\nVcModule -->\n\nEditorComponent->VcModule\n\n\n\n\n\nSafeHtmlPipe\n\nSafeHtmlPipe\n\nVcModule -->\n\nSafeHtmlPipe->VcModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nVcModule -->\n\nToolbarComponent->VcModule\n\n\n\n\n\nEditorComponent \n\nEditorComponent \n\nEditorComponent  -->\n\nVcModule->EditorComponent \n\n\n\n\n\nSafeHtmlPipe \n\nSafeHtmlPipe \n\nSafeHtmlPipe  -->\n\nVcModule->SafeHtmlPipe \n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nVcModule->ToolbarComponent \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            21 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        56 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        19 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        14 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        16 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ace   (packages/.../ace.component.ts)\n                        \n                        \n                            backendErrorCodes   (packages/.../errors.ts)\n                        \n                        \n                            collator   (packages/.../sorter.ts)\n                        \n                        \n                            document   (packages/.../editor.component.ts)\n                        \n                        \n                            ecIcons   (packages/.../ec-icons.ts)\n                        \n                        \n                            editorSettings   (packages/.../tinymce-settings.ts)\n                        \n                        \n                            emailAvailable   (packages/.../email-available.validator.ts)\n                        \n                        \n                            emailValidator   (packages/.../email.validator.ts)\n                        \n                        \n                            emojiIcons   (packages/.../emoji-icons.ts)\n                        \n                        \n                            errors   (packages/.../errors.ts)\n                        \n                        \n                            FieldValidators   (packages/.../field-validators.ts)\n                        \n                        \n                            google   (packages/.../geocode.service.ts)\n                        \n                        \n                            LOCATION_COMPONENTS   (packages/.../location.module.ts)\n                        \n                        \n                            window   (packages/.../notifications.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ace/src/ace.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ace:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround that expects ace to be imported somewhere else... \n\n                    \n                \n\n            \n        \n\n    packages/data/src/auth/errors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            backendErrorCodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backendErrorCodes:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  2460: {\n    'account_not_found': 'Der Login war ungültig.'\n  }\n}\n                        \n                    \n\n                \n                    \n                        Maps error messages to error codes that come from the backend. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errors:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  emailUnavailable: 'Diese Email ist schon vergeben',\n  required: 'Dieses Feld ist ein Pflichtfeld',\n  pattern: 'Ungültige Eingabe',\n  minlength: 'Die Eingabe ist kurz'\n}\n                        \n                    \n\n                \n                    \n                        Error Messages to show in notifications. \n\n                    \n                \n\n            \n        \n\n    packages/core/src/sorter/sorter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            collator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        collator:     \n\n                    \n                \n                    \n                        \n                            Default value : new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' })\n                        \n                    \n\n                \n                    \n                        Used for natural sorting of strings \n\n                    \n                \n\n            \n        \n\n    packages/vc/src/editor/editor.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        document:     \n\n                    \n                \n\n                \n                    \n                        declares document \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/icon/ec-icons.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ecIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ecIcons:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  { name: 'add' },\n  { name: 'add-circle' },\n  { name: 'alarm' },\n  { name: 'alarm-clock' },\n  { name: 'alarm-silent' },\n  { name: 'align-center' },\n  { name: 'align-justify' },\n  { name: 'align-left' },\n  { name: 'align-right' },\n  { name: 'all-caps' },\n  { name: 'brackets' },\n  { name: 'angle-tool' },\n  { name: 'arrange-1-to-9' },\n  { name: 'arrange-9-to-1' },\n  { name: 'arrange-a-to-z' },\n  { name: 'arrange-z-to-a' },\n  { name: 'arrow-down' },\n  { name: 'arrow-down-left' },\n  { name: 'arrow-down-right' },\n  { name: 'arrow-left' },\n  { name: 'arrow-return' },\n  { name: 'arrow-right' },\n  { name: 'arrow-up' },\n  { name: 'arrow-up-left' },\n  { name: 'arrow-up-right' },\n  { name: 'artboard' },\n  { name: 'asterisk' },\n  { name: 'at-sign' },\n  { name: 'bank' },\n  { name: 'bank-note' },\n  { name: 'banking-debit-machine' },\n  { name: 'barcode' },\n  { name: 'trash' },\n  { name: 'binoculars' },\n  { name: 'bitcoin-coin' },\n  { name: 'bookmark' },\n  { name: 'border-bottom' },\n  { name: 'border-inside' },\n  { name: 'border-inside-vertical' },\n  { name: 'border-inside-horizontal' },\n  { name: 'border-left' },\n  { name: 'border-none' },\n  { name: 'border-outside' },\n  { name: 'border-right' },\n  { name: 'border-top' },\n  { name: 'box' },\n  { name: 'briefcase' },\n  { name: 'bus' },\n  { name: 'graph-pie' },\n  { name: 'scale' },\n  { name: 'whiteboard' },\n  { name: 'graph-plot' },\n  { name: 'calculator' },\n  { name: 'calculator-2' },\n  { name: 'calendar' },\n  { name: 'calendar-check' },\n  { name: 'calendar-close' },\n  { name: 'calendar-pencil' },\n  { name: 'calendar-refresh-2' },\n  { name: 'camera' },\n  { name: 'brightness-1' },\n  { name: 'camera-off' },\n  { name: 'camera-pin' },\n  { name: 'camera-refresh' },\n  { name: 'car-6' },\n  { name: 'dashboard' },\n  { name: 'tape' },\n  { name: 'center-point' },\n  { name: 'chat-bubble-circle' },\n  { name: 'chat-bubble-circle-active' },\n  { name: 'chat-bubble-square' },\n  { name: 'chat-bubble-square-active' },\n  { name: 'chat-bubble-square-2' },\n  { name: 'chat-bubbles-square' },\n  { name: 'check-box' },\n  { name: 'cloud' },\n  { name: 'cloud-disable' },\n  { name: 'cloud-download' },\n  { name: 'cloud-refresh' },\n  { name: 'cloud-upload' },\n  { name: 'cloud-wifi' },\n  { name: 'color-contrast-off' },\n  { name: 'color-contrast-on' },\n  { name: 'color-palette' },\n  { name: 'computer-screen' },\n  { name: 'contact-book' },\n  { name: 'content-book' },\n  { name: 'content-bookmark' },\n  { name: 'filter' },\n  { name: 'layers-hide' },\n  { name: 'layers-show' },\n  { name: 'note' },\n  { name: 'content-view-array' },\n  { name: 'content-view-content' },\n  { name: 'content-view-list' },\n  { name: 'content-view-module' },\n  { name: 'crop' },\n  { name: 'cursor-arrow' },\n  { name: 'cursor-hand' },\n  { name: 'cursor-move' },\n  { name: 'cursor-select-area' },\n  { name: 'cursor-tap' },\n  { name: 'cursor-target' },\n  { name: 'data-download' },\n  { name: 'data-syncing' },\n  { name: 'data-transfer' },\n  { name: 'data-upload' },\n  { name: 'delete' },\n  { name: 'dial-pad' },\n  { name: 'diamond' },\n  { name: 'divide' },\n  { name: 'email' },\n  { name: 'email-read' },\n  { name: 'envelope' },\n  { name: 'equaliser' },\n  { name: 'eraser' },\n  { name: 'expand' },\n  { name: 'expand-2' },\n  { name: 'expand-vertical' },\n  { name: 'expand-horizontal' },\n  { name: 'exposure-level' },\n  { name: 'file-add' },\n  { name: 'file-copy' },\n  { name: 'file-new' },\n  { name: 'file-notes-document' },\n  { name: 'file-notes-new' },\n  { name: 'files' },\n  { name: 'files-thumbs' },\n  { name: 'flash' },\n  { name: 'flash-off' },\n  { name: 'flip-down' },\n  { name: 'flip-left' },\n  { name: 'flip-right' },\n  { name: 'flip-up' },\n  { name: 'focus' },\n  { name: 'focus-off' },\n  { name: 'folder-new' },\n  { name: 'folders' },\n  { name: 'font-color' },\n  { name: 'font-size' },\n  { name: 'format-clear' },\n  { name: 'frame' },\n  { name: 'gradient' },\n  { name: 'hash' },\n  { name: 'health-blood-drop' },\n  { name: 'eye-closed' },\n  { name: 'highlight' },\n  { name: 'hourglass' },\n  { name: 'id-card' },\n  { name: 'inbox' },\n  { name: 'indent-decrease' },\n  { name: 'indent-increase' },\n  { name: 'infinity-loop' },\n  { name: 'interface-alert-circle' },\n  { name: 'interface-information' },\n  { name: 'interface-question-mark' },\n  { name: 'intersect' },\n  { name: 'italic' },\n  { name: 'key' },\n  { name: 'laptop' },\n  { name: 'square' },\n  { name: 'lightbulb' },\n  { name: 'link' },\n  { name: 'link-broken' },\n  { name: 'list-bullets' },\n  { name: 'list-number' },\n  { name: 'location-direction' },\n  { name: 'location-globe' },\n  { name: 'location-gps-off' },\n  { name: 'location-gps-on' },\n  { name: 'location-plan' },\n  { name: 'location-map' },\n  { name: 'location-pin-1' },\n  { name: 'location-pin-2' },\n  { name: 'lock-closed' },\n  { name: 'lock-open' },\n  { name: 'leave' },\n  { name: 'harry-potter' },\n  { name: 'measuring-tool' },\n  { name: 'minus-front' },\n  { name: 'mobile-phone' },\n  { name: 'money-note-coin' },\n  { name: 'move-down' },\n  { name: 'move-left' },\n  { name: 'move-right' },\n  { name: 'move-to-back' },\n  { name: 'move-to-front' },\n  { name: 'move-up' },\n  { name: 'music-note' },\n  { name: 'hamburger' },\n  { name: 'more-horizontal' },\n  { name: 'more-vertical' },\n  { name: 'new-square' },\n  { name: 'outbox' },\n  { name: 'paint-brush' },\n  { name: 'paint-bucket' },\n  { name: 'paint-palette' },\n  { name: 'paint-roll' },\n  { name: 'paperclip' },\n  { name: 'paperplane' },\n  { name: 'paragraph' },\n  { name: 'paragraph-left-to-right' },\n  { name: 'paragraph-right-to-left' },\n  { name: 'paragraph-spacing' },\n  { name: 'pen-tool' },\n  { name: 'pencil' },\n  { name: 'percent' },\n  { name: 'bug' },\n  { name: 'photo-landscape' },\n  { name: 'photo-portrait' },\n  { name: 'photo-view-all' },\n  { name: 'picture-layer' },\n  { name: 'pin' },\n  { name: 'home' },\n  { name: 'power' },\n  { name: 'printer' },\n  { name: 'qr-code' },\n  { name: 'quote-closing' },\n  { name: 'quote-opening' },\n  { name: 'reflect-left' },\n  { name: 'reflect-right' },\n  { name: 'close-x-big' },\n  { name: 'ruler' },\n  { name: 'scale-vertical' },\n  { name: 'scissors' },\n  { name: 'select-area' },\n  { name: 'send-to-back' },\n  { name: 'send-to-front' },\n  { name: 'database' },\n  { name: 'settings-slider' },\n  { name: 'share' },\n  { name: 'megaphone' },\n  { name: 'rss' },\n  { name: 'signal' },\n  { name: 'signal-tower' },\n  { name: 'shear-left' },\n  { name: 'shear-right' },\n  { name: 'shopping-bag-alt' },\n  { name: 'shopping-basket' },\n  { name: 'shopping-cart' },\n  { name: 'shrink' },\n  { name: 'shrink-diagonal' },\n  { name: 'shrink-horizontal' },\n  { name: 'shrink-vertical' },\n  { name: 'command' },\n  { name: 'sign-euro' },\n  { name: 'sign-ramp-left' },\n  { name: 'sign-ramp-right' },\n  { name: 'skull' },\n  { name: 'sliders' },\n  { name: 'slider' },\n  { name: 'small-caps' },\n  { name: 'speaker-volume-decrease' },\n  { name: 'speaker-volume-high' },\n  { name: 'speaker-volume-increase' },\n  { name: 'speaker-volume-low' },\n  { name: 'speaker-volume-off' },\n  { name: 'spelling-check' },\n  { name: 'spray-paint' },\n  { name: 'strike-through' },\n  { name: 'subscript' },\n  { name: 'substract' },\n  { name: 'sunny' },\n  { name: 'superscript' },\n  { name: 'switch-left' },\n  { name: 'switch-right' },\n  { name: 'switches' },\n  { name: 'bluetooth' },\n  { name: 'wifi' },\n  { name: 'repeat' },\n  { name: 'synchronize' },\n  { name: 'switch' },\n  { name: 'price-tag' },\n  { name: 'tank' },\n  { name: 'text' },\n  { name: 'text-eraser' },\n  { name: 'rotate-right' },\n  { name: 'rotate-left' },\n  { name: 'text-vector' },\n  { name: 'toolbox' },\n  { name: 'underline' },\n  { name: 'unite' },\n  { name: 'user' },\n  { name: 'vector-circle' },\n  { name: 'vector-line' },\n  { name: 'vector-square' },\n  { name: 'video-call' },\n  { name: 'video-clip' },\n  { name: 'eject' },\n  { name: 'next' },\n  { name: 'pause' },\n  { name: 'play' },\n  { name: 'previous' },\n  { name: 'stop' },\n  { name: 'heart-outlined' },\n  { name: 'star-outlined' },\n  { name: 'thumbs-down' },\n  { name: 'thumbs-up' },\n  { name: 'zoom-in' },\n  { name: 'zoom-out' },\n  { name: 'glasses' },\n  { name: 'save' },\n  { name: 'chevron-left' },\n  { name: 'chevron-right' },\n  { name: 'move-vertical' },\n  { name: 'drag-handle' },\n  { name: 'user-chat' },\n  { name: 'text-input' },\n  { name: 'tablet' },\n  { name: 'company' },\n  { name: 'android' },\n  { name: 'apple' },\n  { name: 'facebook' },\n  { name: 'google' },\n  { name: 'linkedin' },\n  { name: 'twitter' },\n  { name: 'xing' },\n  { name: 'youtube' },\n  { name: 'find' },\n  { name: 'business-man' },\n  { name: 'factory' },\n  { name: 'building' },\n  { name: 'fax' },\n  { name: 'globe' },\n  { name: 'phone' },\n  { name: 'close-x-circle' },\n  { name: 'ticket' },\n  { name: 'key-enter' },\n  { name: 'key-left' },\n  { name: 'key-right' },\n  { name: 'key-shift' },\n  { name: 'img' },\n  { name: 'smiley' },\n  { name: 'arrow-next' },\n  { name: 'arrow-prev' },\n  { name: 'wand' },\n  { name: 'h-align-left' },\n  { name: 'h-align-middle' },\n  { name: 'h-align-right' },\n  { name: 'v-align-bottom' },\n  { name: 'v-align-middle' },\n  { name: 'v-align-top' },\n  { name: 'flip-h' },\n  { name: 'flip-v' },\n  { name: 'graph-bar' },\n  { name: 'check' },\n  { name: 'layer-down' },\n  { name: 'layer-up' },\n  { name: 'undo' },\n  { name: 'redo' },\n  { name: 'stackoverflow' },\n  { name: 'kununu' },\n  { name: 'totop' },\n  { name: 'shopping-bag' },\n  { name: 'profile-circle' },\n  { name: 'heart-filled' },\n  { name: 'github' },\n  { name: 'glue' },\n  { name: 'adhesive-tape' },\n  { name: 'transparent' },\n  { name: 'recycling' },\n  { name: 'dumbbell' },\n  { name: 'instagram' },\n  { name: 'eye-open' },\n  { name: 'water-bottle' },\n  { name: 'close-x' },\n  { name: 'star-filled' },\n  { name: 'clock' },\n  { name: 'appointment' },\n  { name: 'save-date' },\n  { name: 'whistle' },\n  { name: 'weight' },\n  { name: 'share-alt' },\n  { name: 'coin-transfer' },\n  { name: 'toggle-caret' },\n  { name: 'config' },\n  { name: 'server' },\n  { name: 'undo-2' },\n  { name: 'filter-2' },\n  { name: 'article' },\n  { name: 'bold' },\n  { name: 'bigger-text' },\n  { name: 'checkmark' },\n  { name: 'cross' },\n  { name: 'img-center' },\n  { name: 'img-full' },\n  { name: 'img-left' },\n  { name: 'smaller-text' },\n  { name: 'checkmark-2' }\n]\n                        \n                    \n\n                \n                    \n                        Contains all icons that are available in ec-icons font. \n\n                    \n                \n\n            \n        \n\n    packages/tinymce/src/tinymce/tinymce-settings.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            editorSettings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorSettings:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  theme: 'modern',\n  menubar: false,\n  branding: false,\n  resize: true,\n  skin: false,\n  plugins: [\n    'paste template autoresize fullscreen code link table visualblocks autolink lists contextmenu textcolor colorpicker'\n  ],\n  autoresize_min_height: 300,\n  autoresize_max_height: 800,\n  content_css: [\n    'https://icons.entrecode.de/ec-icons-3.0.0.min.css'\n  ],\n  paste_as_text: true,\n  table_toolbar: false,\n  table_default_attributes: {\n    class: 'table-grid'\n  },\n  table_class_list: [\n    { title: 'grid', value: 'table-grid' },\n  ],\n  // templates: [],\n  textcolor_map: [\n    '37474F', 'Text',\n    '879195', 'Text Light',\n    '00B0FF', 'Link',\n    'FF5353', 'Super',\n    'FFFF8D', 'Highlight',\n    'FFFFFF', 'Weiß'\n  ],\n  link_class_list: [\n    { title: 'einfacher link', value: '' },\n    { title: 'Normaler Button', value: 'btn' },\n    { title: 'Super Button', value: 'btn super' },\n    { title: 'Sekundärer Button', value: 'btn minor' }\n  ],\n  style_formats: [\n    { title: 'H2 - Titel', block: 'h2' },\n    { title: 'H3 - Untertitel', block: 'h3' },\n    { title: 'H4 - Überschrift 1', block: 'h4' },\n    { title: 'H5 - Überschrift 2', block: 'h5' },\n    { title: 'Einfacher Absatz', block: 'p' },\n    { title: 'Einleitung', block: 'p', classes: 'lead' },\n    { title: 'Quellenangabe', inline: 'small' },\n    { title: 'Checkliste', selector: 'ul', classes: 'v-checklist' },\n    { title: 'Frage', selector: 'p', classes: 'v-question' },\n    { title: 'Antwort', selector: 'p', classes: 'v-reply' }\n  ],\n  formats: {\n    alignleft: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-left'\n    },\n    aligncenter: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-center'\n    },\n    alignright: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-right'\n    },\n    alignjustify: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-full'\n    }\n  },\n  toolbar: 'undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | forecolor | table | template | bullist numlist | link internal image youtube | removeformat | code | fullscreen',\n  setup: (editor) => {\n\n    editor.addButton('youtube', {\n      icon: 'media',\n      onclick: function (edit, element) {\n        const window = editor.windowManager.open({\n          title: 'Youtube einfügen',\n          body: [{\n            type: 'textbox',\n            name: 'yt',\n            label: 'Youtube-Url/ID'\n          }],\n          onsubmit: function (e) {\n            const yt = e.data.yt;\n\n            if (yt) {\n              const ytUrl = /(?:https?:\\/\\/(?:[a-z]+.)?)(?:youtu\\.?be(?:\\.com)?\\/)(?:embed\\/)?(?:(?:(?:(?:watch\\?)?(?:time_continue=(?:[0-9]+))?.+v=)?([a-zA-Z0-9_-]+))(?:\\?t\\=(?:[0-9a-zA-Z]+))?)/g.exec(yt);\n              const url = 'https://www.youtube.com/embed/' + (ytUrl ? ytUrl[1] : yt) + '?feature=oembed&rel=0';\n              editor.insertContent('');\n            }\n          }\n        });\n      }\n    });\n\n    // TODO\n    /*editor.addButton('image', {\n      icon: 'image',\n      onclick: function (edit, element) {\n        const id = Date.now();\n        const window = editor.windowManager.open({\n          title: 'Bild/Datei einfügen',\n          body: [{\n            type: 'container',\n            html: '' +\n            'Alt-Text' +\n            '' +\n            'Text' +\n            '' +\n            '' +\n            ' automatische Breite'\n          }],\n        });\n      }\n    });*/\n  }\n}\n                        \n                    \n\n                \n                    \n                        Default settings for tinymce editor. \n\n                    \n                \n\n            \n        \n\n    packages/data/src/auth/email-available.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : (control: FormControl, delay: number = 500) => {\n  /*return Datamanager.api().emailAvailable(control.value).then((available) => {\n    if (available) {\n      return null;\n    }\n    return { emailUnavailable: true };\n  });*/\n}\n                        \n                    \n\n                \n                    \n                        TODO use this.sdk.accounts.emailAvailable \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/utility/validators/email.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailValidator:     ValidatorFn\n\n                    \n                \n                    \n                        \n                            Type :     ValidatorFn\n\n                        \n                    \n                    \n                        \n                            Default value : Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\n                        \n                    \n\n                \n                    \n                        Validates an email. Used for email inputs \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/icon/emoji-icons.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emojiIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emojiIcons:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { name: 'add', content: '➕' },\n    { name: 'close', content: '❌' },\n    { name: 'bitcoin-coin', content: '&#x1F4B0;' },\n    { name: 'bookmark', content: '&#x1F516;' },\n    { name: 'bus', content: '&#x1F68C;' },\n    { name: 'calendar', content: '&#x1F4C5;' },\n    { name: 'camera', content: '&#x1F4F7;' },\n    { name: 'check-box', content: '✅' },\n    { name: 'cloud', content: '☁' },\n    { name: 'computer-screen', content: '&#x1F5A5;' },\n    { name: 'note', content: '&#x1F3B5;' },\n    { name: 'email', content: '&#x1F4E7;' },\n    { name: 'find', content: '&#x1F50D;' }\n]\n                        \n                    \n\n                \n                    \n                        Contains fonts using emojis. \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/utility/validators/field-validators.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FieldValidators\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FieldValidators:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  email: emailValidator\n}\n                        \n                    \n\n                \n                    \n                        Groups together all validators that are meant to be used on fields. \n\n                    \n                \n\n            \n        \n\n    packages/location/src/geocode.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        declares google namespace \n\n                    \n                \n\n            \n        \n\n    packages/location/src/location.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LOCATION_COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOCATION_COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    LocationMapComponent,\n    LocationSearchComponent,\n    LocationPickerComponent,\n]\n                        \n                    \n\n                \n                    \n                        The components of this module \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/notifications/notifications.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            window\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        window:     \n\n                    \n                \n\n                \n                    \n                        Workaround to get window without typescript complaining \n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial.html":{"url":"additional-documentation/project-setup-tutorial.html","title":"additional-page - Project Setup Tutorial","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up a new project with ec.components\nThis tutorial will show you how to set up a new project with the ec.components.\n1. Prequisites\nInstall angular-cli globally:\nnpm install -g @angular/cliThe following versions have been used for this tutorial:\n\n@angular/cli: 1.3.2\n@angular/animations: 4.3.6\n@angular/common: 4.3.6\n@angular/compiler: 4.3.6\n@angular/core: 4.3.6\n@angular/forms: 4.3.6\n@angular/http: 4.3.6\n@angular/platform-browser: 4.3.6\n@angular/platform-browser-dynamic: 4.3.6\n@angular/router: 4.3.6\n@angular/cli: 1.3.2\n@angular/compiler-cli: 4.3.6\n@angular/language-service: 4.3.6\ntypescript: 2.4.2\n\nYou can lookup your versions with ng --version\n2. Generate new Project\nng new ec-project --prefix ec-admin --routing true --style scssMake sure you replace ec-project with your project name and the prefix ec-admin with a project related shorthand symbol.\nMore info on the options for new.\n3. Install @ec.components/data\ncd ec-project\nyarn add @ec.components/data --save\nyarn add @ec.components/style --saveThis will install the data package which depends on ui and core packages.\nThe style package contains styles for ui and data.\n4. Import Styles\nInto your styles.scss, import the following styles:\n@import \"~xlcss/sass/xlcss.scss\";\n@import \"~x.ui/src/_config\";\n@import \"~x.ui/src/x.ui-sandbox.scss\";\n@import \"~@ec.components/style/components.scss\";5. Setup environment\nIn src/environments, you can find the different environment files.\nBy Default, there is a dev and a prod environment. For this tutorial, those two should be enough. We will use the dev environment for dev and staging and the prod environment for live. You could also add more environments, for more information, look here. \nsrc/environments/environment.ts:\nexport const environment = {\n  production: false,\n  environment: 'stage', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-dev-client' // your clientID\n};src/environments/environment.prod.ts:\nexport const environment = {\n  production: true,\n  environment: 'live', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-live-client' // your clientID\n};The .prod environment will be used when running ng build for production.\nThe client should use token method body. The callback URL does not matter.\n6. Add DataModule\nGo to src/app/app.module and add DataModule to your imports:\nimport { DataModule } from '@ec.components/data';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    DataModule.forEnvironment(environment),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }Here we are importing the DataModule along with the environment to then import it into our AppModule with the forEnvironment method.\n7. Add --ssl flag\nin your package.json, edit your start script to look like this:\n\"start\": \"ng serve --ssl\",Without the --ssl flag, the authorization won't work, because it enforces https.\n8. Add a component\ne.g. add to src/app/app.component.html:\nThis assumes that the model muffin exists inside the datamanager provided through your environment.\n9. Run the fun\nThats it! Now you can run the app using:\nnpm run startnow navigate to https://localhost:4200\n10. Add Notifications\nTo your app.component, you can add a global notification component, outside of your routing:\nThis will display all messages sent by the components or your own modules.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/routes.html":{"url":"additional-documentation/project-setup-tutorial/routes.html","title":"additional-page - Routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding Routes\nThis short tutorial demonstrates how to quickly generate routes with components.\nIn the following tutorials, refer to this when you are called to create a new route.\n1. Create Component\nGenerate a new component\nng generate component muffinsAdd template to src/app/muffins/muffins.component.html\n2. Add a Route\nsrc/app/app-routing.module.ts:\nimport { MuffinsComponent } from './muffins/muffins.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: []\n  },\n  {\n    path: 'muffins',\n    component: MuffinsComponent\n  }\n];3. Run the Route\nNow you can access the muffin crud at https://localhost:4200/muffins\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/authorization.html":{"url":"additional-documentation/project-setup-tutorial/authorization.html","title":"additional-page - Authorization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n  constructor(public router: Router) {\n  }\n\n  redirect() {\n    this.router.navigate(['profile'])\n  }3. Add Login Component to template\nUse this in your login.component.html template:\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-fields.html":{"url":"additional-documentation/project-setup-tutorial/custom-fields.html","title":"additional-page - Custom Fields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustom Field Configuration\nAdd a model config\nYou can configure a models behaviour over the ModelConfigService.\nIt is recommended to configure a model in a parent component of all possible ec-crud lists or nested forms.\nexport class MuffinsComponent {\n  constructor(private modelConfig: ModelConfigService) {\n    moment.locale('de'); //set moment locale\n\n    this.modelConfig.set('muffin', {\n      fields: {\n        pictures: {\n          label: 'Bilder' //this label is shown above the form field and in the table header\n        },\n        name: {\n          label: 'Muffin Name',\n          group: (name) => {\n            return name[0].toUpperCase() //the return value is used to show group headers in a sorted list\n          },\n          required: true //when required, a new entry form cannot be saved without a value set for the field\n        },\n        _created: { //you can also access the system properties\n          label: 'Erstellt',\n          form: false, //this will hide the field inside the form\n          group: (value) => moment(value).format('YYYY')\n        },\n        amazement_factor: {\n          label: 'Amazement Faktor',\n          display: (value) => { //this will transform the value for output e.g. in a list cell\n            return (value * 10) + '%'\n          },\n          group: (value) => {\n            return value > 5 ? 'Größer als 50%' : 'Kleiner als 50%';\n          },\n          validate: (value) => { //this function will run when validating the value inside a form\n            if (typeof value !== 'number') {\n              return; //value is valid\n            }\n            if (value  10) {\n              return 'Darf maximal 10 sein';\n            }\n          }\n        },\n      }\n    });\n}Using custom inputs and outputs\n1. Create Custom Input Component\nng g c custom-inputThis component will serve as a container for all possible custom input fields.\n2. Extend InputComponent (custom-input.component.ts)\nTo make the current field information available to the template, you need to extend InputComponent from @ec.components/ui:\nimport { Component } from '@angular/core';\nimport { InputComponent } from '@ec.components/ui';\n\n@Component({\n  selector: 'clubapp-custom-input',\n  templateUrl: './custom-input.component.html',\n  styleUrls: ['./custom-input.component.scss']\n})\nexport class CustomInputComponent extends InputComponent {\n}CMD+Click on InputComponent to see which properties you can now use!\n3. Add Markup (custom-input.component.html)\nNow we can decide which custom input should be used, based on e.g. the fields view value:\n\n  \n  \n    \n  \n  \n     -->\n  \nOf course you could also switch based on property name or type, depending on your application.\nThe id property of field is referenced in the label of the form. By adding it to the input makes sure your label click enters the input.\n4. Add CustomInputComponent to entryComponents:\nBecause the custom component will be loaded dynamically, your module needs to declare it as entryComponent:\n@NgModule({\n  entryComponents: [\n    CustomInputComponent\n  ]\n  /** more stuff **/\n})\nexport class AppModule {\n}5. Add CustomInputComponent to field config:\nNow you can add the Component as input to your field config:\nthis.modelConfig.set('muffin', {\n      fields: {\n        url: {\n          label: 'URL',\n          view: 'speakingurl',\n          input: CustomInputComponent\n        },\n        openingHours: {\n          label: 'Öffnungszeiten',\n          view: 'openingHours',\n          input: CustomInputComponent\n        }\n})By changing the view option, we can now decide which case will be met!\nCustom Form Controls\nNow what if you want to use a custom form control that does not rely on primitve inputs like number or text?\nIn the above custom-input.component template, we use  with a formControl input.\nTo have access to the form control's value, you need to provide a ControlValueAccessor:\nimport { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { InputComponent } from '@ec.components/ui';\n\n@Component({\n  selector: 'ec-opening-hours',\n  templateUrl: './opening-hours.component.html',\n  styleUrls: ['./opening-hours.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OpeningHoursComponent),\n      multi: true\n    }\n  ]\n})\nexport class OpeningHoursComponent extends InputComponent implements ControlValueAccessor {\n\n  writeValue(value: any) {\n    console.log('received value', value);\n  }\n\n  propagateChange = (_: any) => {\n  };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {\n  }\n\n}Now you can implement your own logic and call propagateChange when you change the value from your component, and react to change via the writeValue method!\nYou now could also use your component with ngModel or formControl in another context!\nMore information on this pattern: https://blog.thoughtram.io/angular/2016/07/27/custom-form-controls-in-angular-2.html\nUPDATE: Custom Fields without wrapper\nYou can now also use custom components as input directly without needing to wrap them explicitly.\nWhat you need to is:\n\nExtend DefaultInputComponent\n\nexport class JsonEditorComponent extends extends DefaultInputComponent\nadd the input component as member variable:\n\n/** Form input component */\ninput: InputComponent;and propagate the change to the input as well:\nthis.propagateChange(this.value);\nif (this.input) { // this is the important part\n this.input.propagateChange(this.value);\n}input will be defined when the component is used as input component inside ec-form.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{"url":"additional-documentation/project-setup-tutorial/adding-new-packages.html","title":"additional-page - Adding New Packages","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding a new package\nTo add a new package to @ec.components, follow this guide!\n1. Create folder in packages\nCreate a new folder, e.g. mkdir packages/medium-editor\n2. init npm\ncd packages/medium-editor && npm init\n\nMake sure to name the package scoped: ```@ec.components/*`\nAdd dependencies according to your needs, e.g. angular etc.\n\n3. Create src folder\nCreate a src folder and add your super cool typescript code.\n\nMake sure your package.json main file is correct.\nMake sure you have all dependencies up to date.\n\n4. add package to symlinks.sh\n\nAdd your package name to the symlinks script.\n\n5. add package to delete-modules.sh script\n\nAdd your package name to the delete-modules script.\n\n6. add package to main package.json dependencies\n\nKeep version up to date (or use * as wildcard)\nrun npm i\n\n7. add package to lerna.json\n\nThis integrates the package to the bootstrap/publish cycle of lerna.\n\n8. Manually Publish package the first time\nBefore being able to publish with lerna, you have to publish it manually the first time:\nnpm publish --access=publicsee https://docs.npmjs.com/cli/access#details.\n9. Add Demo\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/publishing.html":{"url":"additional-documentation/project-setup-tutorial/publishing.html","title":"additional-page - Publishing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n  constructor(public router: Router) {\n  }\n\n  redirect() {\n    this.router.navigate(['profile'])\n  }3. Add Login Component to template\nUse this in your login.component.html template:\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui.html":{"url":"additional-documentation/ui.html","title":"additional-page - UI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUI Components Overview\nNow that the Core classes were discussed, lets have a look at its application in the ui components.\nThe ui components, which lay inside the ui package are all basic angular components.\nThey are API agnostic, meaning they do not contain any datamanager logic (or similar).\nAPI related components are meant to inherit from the base ui components to eliminate redundancies.\nInstallation\nnpm i @ec.components/uiDemo\nTBD:\n\nList\nCustom Cell Components\nTransform fields\n\n\nForm\nCustom Field Components\nInline Forms\n\n\nLogin\nPop\nTabs\nSelect\n\nNotifications\n\nLoader\nMenu\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/icons.html":{"url":"additional-documentation/ui/icons.html","title":"additional-page - Icons","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIcon\nDisplays an icon:\nThe default icon set uses ec-icons. You have to embedd them to your index.html (or similar):\n  Using another icon set\nYou can also use other icons:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.use(emojiIcons);\n    }\n}Overriding icons\nYou can also override the current icon registry:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.set(emojiIcons);\n    }\n}This will override the icon registry with the given icons, but keep the rest.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/notificationscomponent.html":{"url":"additional-documentation/ui/notificationscomponent.html","title":"additional-page - NotificationsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNotifications\nThe Notifications Module is a combination of the NotificationsService and the NotificationsComponent.\nSimple Usage\n\nPlace the component somewhere in your app template:\n\n\nEmit notifications via the service\n\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  showNotification() {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        message: 'Das ist die Beschreibung'\n      });\n  }\n\n  doSomethingRisky() {\n      return Promise.reject('Fehler')\n      .catch((err) => {\n          this.notifications.emit({\n              error: err, // passing the error Object\n              title: 'Fehler!'\n          })\n      })\n  }\n}The given type will be added as class. The classes that are available by default can be looked up here.\nAdvanced Usage\nYou can also use multiple ec-notifications at different places:\n\n\nA\nBAll you have to do, is pass the instance of the component that should display the notification via the host property:\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  emit(host) {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        host: host\n      });\n  }\n}Hiding previous errors\nHere is an example usage of a typical success/error handling.\nIt features hiding previous notifications. We recommended you to use the WithNotifications interface for that case.\nexport class MuffinComponent implements WithNotifications {\n  /** Recent Error notification */\n  notifications: Notification[] = [];\n\nconstructor(\n    public bakery:BakeryService,\n    public notificationService: NotificationsService,\n    )\n\n  bake() {\n    this.bakery.bake().then(()=> {\n        this.notificationService.emit({\n            title: 'Muffin was baken!',\n            hide: this.notifications // this will hide all preceding notifications\n        })\n    }).catch(error=>{\n        this.notificationService.emit({\n            title: 'Error while baking',\n            sticky: true,\n            hide: this.notifications, // this will hide all preceding notifications\n            replace: this.notifications // this will replace the given array with the new notification\n        })\n    });\n  }\n}The hide option is useful to hide obsolete errors. E.g. If you successfully log in after one failiure, the sticky error notification of the first attempt will be hidden. This enables you to keep errors messages as long as they are needed.\nInstead of replace, you could also use append (see notification.component.ts for implementation).\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/loadercomponent.html":{"url":"additional-documentation/ui/loadercomponent.html","title":"additional-page - LoaderComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLoader\nThe loader can be used to indicate any kind of loading activity\nTemplate\n\n\nGlobal Loader\nLocal LoaderThe default classes can be found here.\nUsage\nYou can use a global loader that handles every action or use multiple local loaders:\nimport { LoaderComponent, LoaderService } from '@ec.components/ui';\nexport class MyApp {\n  @ViewChild('globalLoader') globalLoader: LoaderComponent;\n  @ViewChild('localLoader') localLoader: LoaderComponent;\n  constructor(private loaderService: LoaderService) {\n      this.loaderService.use(this.globalLoader); // set global loader\n  }\n  globalLoader() { // When not passing a loader to .wait, the global loader (set by .use) is used.\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)));\n  }\n  localLoader() {\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)), this.localLoader);\n    // this.localLoader.wait(new Promise((resolve) => setTimeout(resolve, 2000))); // alternative way\n  }\n}The advantage of local loaders is that you can place them in specific places of your template to only \"disable\" a part of your site while loading and not the whole page.\nSee the commented out line in localLoader for a direct way to trigger a loader without the service.\nHow it works\nEach time .wait is called on the LoaderService, the target loader throws the given promise on a stack. When all promises on the stack have been resolved, the loader is hidden. This is better than just a boolean switch because multiple loading activies do not interfere with each other.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/listcomponent.html":{"url":"additional-documentation/ui/listcomponent.html","title":"additional-page - ListComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nList\nThe List is one of the main components to work with.\nThe basic idea is to display collections of data in a structured but flexible way.\nYou can create a new List like this:\nthis.trees = new List(\n//first argument: Array of Objects\n[{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}],\n//second (optional) argument: ListConfig\n{\n  fields: {\n    name: {\n      label: 'Name'\n    },\n    height: {\n      label: 'Height',\n      group: (h) => h > 10 ? 'Higher than 10m' : 'Lower than 10m'\n    },\n    fruits: {\n      label: 'Has Fruits?',\n      display: (value) => value ? 'yes' : 'no'\n    },\n  }\n})This is how you display a List instance into your template:\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/formcomponent.html":{"url":"additional-documentation/ui/formcomponent.html","title":"additional-page - FormComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nForm\nTBD\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/logincomponent.html":{"url":"additional-documentation/ui/logincomponent.html","title":"additional-page - LoginComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLogin Form\nThe Login Form UI component is meant to be extended by a component that communicates with an API.\n    \n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/popcomponent.html":{"url":"additional-documentation/ui/popcomponent.html","title":"additional-page - PopComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPop\nA Pop is not just a modal, but a section of markup that appears (pops) anywhere and with any style on your page.\nUsage\n\n    \n        Close\n    \n    \n        Some body content\n    \n    \n        This is the footer\n    \n\nShow popThe default pop classes can be looked up here.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/tabscomponent.html":{"url":"additional-documentation/ui/tabscomponent.html","title":"additional-page - TabsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTabs\nThis is how you use Tabs:\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \nTODO:\n\n*ngIf\nSlot for templated Tab Header\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/selectcomponent.html":{"url":"additional-documentation/ui/selectcomponent.html","title":"additional-page - SelectComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSelect\nYou can pass an array of items that will be used for a selection instance.\n\n\n{{values | json}}TODO: update\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/data.html":{"url":"additional-documentation/data.html","title":"additional-page - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Components Overview\nDemo\n\nSdkService\nModelConfig\nHow to set up custom fields (input/output)\n\n\nentry-list\nentry-form\nentry-select\ncrud\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/medium.html":{"url":"additional-documentation/medium.html","title":"additional-page - Medium","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/medium-editor\nThis package wraps the medium-editor as an Angular Directive.\nInstallation\n\nInstall package\n\nnpm install @ec.components/medium-editor --save\nAdd Module\n\nimport { MediumModule } from '@ec.components/medium-editor';\n\n@NgModule({\n  imports: [\n    MediumModule\n  ]\n})\nexport class AppModule {\n}\nUse it\n\n \n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinymce.html":{"url":"additional-documentation/tinymce.html","title":"additional-page - TinyMCE","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/tinymce\nThis package wraps the tinymce editor as an Angular Component.\nInstallation\n\nInstall package\n\nnpm install @ec.components/tinymce --save\nAdd Module\n\nimport { TinymceModule } from '@ec.components/tinymce';\n\n@NgModule({\n  imports: [\n    TinymceModule\n  ]\n})\nexport class AppModule {\n}\nUse it\n\n \n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ace.html":{"url":"additional-documentation/ace.html","title":"additional-page - Ace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/ace\nThis package wraps the ace editor as an Angular Component.\nInstallation\n\nInstall package\n\nnpm install @ec.components/ace --save\nAdd Module\n\nimport { AceModule } from '@ec.components/ace';\n\n@NgModule({\n  imports: [\n    AceModule\n  ]\n})\nexport class AppModule {\n}\nAdd CDN\n\nEither add the cdn src to your index.html:\n  \n`Or import from ace-builds (in app.module):\nimport 'ace-builds/src-noconflict/ace.js';When importing, you also need to import all extensions/modes/themes that you want to use manually.\n\nUse it\n\n \n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes.html":{"url":"additional-documentation/core-classes.html","title":"additional-page - Core Classes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction\nThis is the Tutorial for ec.components.\nIt will take a look at all the major concepts in a didactic order.\nHINT: if you are looking for more information than this tutorial, have a look at the tests or the\nDemos!\nCore Classes\nThe core classes, which lay inside the core package are the abstract base for all components.\nThey are typescript only, without using any angular or datamanager code.\nInstead of EventEmitters there the Observables are served via RxJS subjects.\nInstallation\nnpm i @ec.components/core\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/field.html":{"url":"additional-documentation/core-classes/field.html","title":"additional-page - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nField\nA Field represents a property of an Object, without a specific value.\nIt is used to describe a column or field of one or multiple equally structured objects.\nThe field config (see FieldConfigProperty) can contain different transformation methods, such as:\n\nresolve: This method is used to resolve the field value from the object body.\nIt runs before all other transformation methods.\ndisplay: Transforms the resolved value to a human readable output. It is used for e.g. in list cells.\ngroup: Should return a value that is suitable for grouping multiple different values together, like in a list.\n\nExample Usage:\nconst field = new Field('name', {\n    resolve: (body) => body.value.name,\n    display: (value) => value.toUpperCase(),\n    group: (value) => value.length + ' Buchstaben',\n    sort: (value) => value.length\n    });\nconst name = field.resolve({value:{name:'bobby'}}); // 'bobby'\nfield.display(name); // => 'Bobby'\nfield.group(name); // => '5 Buchstaben'\nfield.sort(name); // => 5The above example is of course only viable to show the concept.\nWhen using the components as a whole, those methods will be called automatically from Item, List or Form.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/item.html":{"url":"additional-documentation/core-classes/item.html","title":"additional-page - Item","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nItem\nThe foundation for all entities is the Item class.\nIt consists of a body (value) and a config (see ItemConfig).\nIt can be used with arbitrary body values but is mainly thought to be a wrapper for objects.\nPrimitive use:\nconst primitive = new Item('a');\nprimitive.resolve(); //'a'Default use:\nconst tommy = new Item({ name: 'tommy' });\ntommy.resolve('name'); //'tommy'\ntommy.display('name'); //'tommy'\ntommy.group('name'); //'tommy'\ntommy.sort('name'); //'tommy'Item with fields definition\nWhen using it with objects, it can be passed a config (see ItemConfig) to set up its field config (see FieldConfig.\nEach item can call directly call a transformation function for a field:\nconst bobby = new Item({ value: { name: 'bobby' } }, {\n  fields: {\n    name: {\n      resolve: (body) => body.value.name,\n      display: (value) => value.toUpperCase(),\n      group: (value) => value.length + ' Buchstaben',\n      sort: (value) => value.length\n    }\n  }\n});\nbobby.resolve('name'); //'bobby'\nbobby.display('name'); //'Bobby'\nbobby.group('name'); //'5 Buchstaben'\nbobby.sort('name'); //5Identifiers and labels\nAn Item also brings the concept of identifiers and labels:\nconst e = new Item({ nr: '#AYQ', title: 'Wurst' }, { identifier: 'nr', label: 'title');\ne.id(); //'#AYQ'\ne.display(); //'Wurst'Saving items\nYou can set up a callback that is invoked when calling item.save():\nconst n = new Item(1, { onSave: (item, body) => body+1 });\nn.save();\nn.resolve(); //2\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/form.html":{"url":"additional-documentation/core-classes/form.html","title":"additional-page - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nForm\nForm is an Item with extra functions:\n\ninstantiates fields to iterate over\ngetters for fields and property values, including prefills.\n\nconst tommy = new Form({ name: 'tommy' }); //init without config\ntommy.getValue('name')); //'tommy'\nconst bobby = new Form(null, { fields: { name: { prefill:'bobby' }}}); //init with config only\ntommy.getValue('name')); //'bobby'\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/collection.html":{"url":"additional-documentation/core-classes/collection.html","title":"additional-page - Collection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCollection\nCollection is a more sophisticated Array:\nconst collection = new Collection([1, 2, 3]);\ncollection.has(1); //true\ncollection.has(4); //false\ncollection.add(4);\ncollection.remove(4);\ncollection.index(1); //0\ncollection.addAll([10,11,12]); //true\ncollection.hasAll([1,10,11]); //true\ncollection.removeAll();It is the Parent Class of List and Selection.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/pagination.html":{"url":"additional-documentation/core-classes/pagination.html","title":"additional-page - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPagination\nPagination can be used to keep track of the pages of arbitrary items.\nconst pagination = new Pagination({ size: 10 });\npagination.setTotal(50); //tells the pagination that it should paginate over 50 items.\npagination.getPages(); //5See list.ts/list.component for example usage.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/list.html":{"url":"additional-documentation/core-classes/list.html","title":"additional-page - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nList\nList is a Collection with list specific features:\n\nIt instantiates each array value as an Item\nIt instantiates each field property config as a Field.\nIt supports getting items by identifier via the id method (if identifier is set)\nIt supports filtering, sorting, grouping and pagination.\n\nthis.trees = new List([{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}, {\n  name: 'Cinnamon',\n  height: 10,\n  fruits: true\n}], {\n  size: 3,\n  fields: {\n    name: {\n      label: 'Name',\n      view: 'string',\n      required: true,\n      input: CoolStringComponent,\n      output: CoolStringComponent\n    },\n    height: {\n      label: 'Höhe',\n      group: (h) => h > 10 ? 'Höher als 10m' : 'Niedriger als 10m',\n      view: 'number',\n      required: true,\n      validate: (value) => {\n        if (value  value ? 'ja' : 'nein',\n      view: 'boolean'\n    },\n  },\n});Here is an easy example of using a List instance in a template with Angular:\n\n    \n        {{tree.display('name')}}\n        Früchte? {{tree.display('fruits')}}\n    \n\nNach Name sortierenFor all the features, have a look at the List documentation.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/selection.html":{"url":"additional-documentation/core-classes/selection.html","title":"additional-page - Selection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSelection\nSelection is a List with selection specific features:\n\nsupports select method with solo option\noverrides the index method to allow all items with the same identifier to be recognized as selected.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/sorter.html":{"url":"additional-documentation/core-classes/sorter.html","title":"additional-page - Sorter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSorter\nThe Sorter is a static class that acts as a helper to sort different primitive types. See the tests for example usage.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
