var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AceComponent.html",[0,0.244,1,1.244]],["body/components/AceComponent.html",[0,0.411,1,1.754,2,0.176,3,0.176,4,0.602,5,0.818,6,0.818,7,1.121,8,0.154,9,2.421,10,0.305,11,2.866,12,6.068,13,4.991,14,2.406,15,1.811,16,4.106,17,4.59,18,1.991,19,1.894,20,3.139,21,2.857,22,0.67,23,1.608,24,0.007,25,0.852,26,2.294,27,1.976,28,1.564,29,4.59,30,1.221,31,4.59,32,0.333,33,0.607,34,2.622,35,1.823,36,3.796,37,4.12,38,1.355,39,1.928,40,2.96,41,1.695,42,2.616,43,1.889,44,0.736,45,4.68,46,3.217,47,3.659,48,2.866,49,3.796,50,4.59,51,4.59,52,2.756,53,7.615,54,7.778,55,0.883,56,2.812,57,6.323,58,2.155,59,4.668,60,0.374,61,3.535,62,3.659,63,6.323,64,0.852,65,1.844,66,1.223,67,2.965,68,2.965,69,2.965,70,1.664,71,0.778,72,1.88,73,3.299,74,1.822,75,1.057,76,1.191,77,1.999,78,2.965,79,2.756,80,2.965,81,2.756,82,2.965,83,3.133,84,2.154,85,3.133,86,0.976,87,0.895,88,0.68,89,2.756,90,2.965,91,4.59,92,2.965,93,4.544,94,4.082,95,4.59,96,4.59,97,2.965,98,4.59,99,2.756,100,2.965,101,2.99,102,2.656,103,1.664,104,3.659,105,1.255,106,2.041,107,2.965,108,1.622,109,2.965,110,1.723,111,2.965,112,1.811,113,0.87,114,2.335,115,2.965,116,2.587,117,2.965,118,2.041,119,2.566,120,2.965,121,1.503,122,2.566,123,3.659,124,2.259,125,2.259,126,1.172,127,2.866,128,2.259,129,2.259,130,1.604,131,2.756,132,0.272,133,2.756,134,1.172,135,1.388,136,2.637,137,2.965,138,2.421,139,2.131,140,2.259,141,1.075,142,0.72,143,1.78,144,1.78,145,0.128,146,0.079,147,2.259,148,4.59,149,4.59,150,2.965,151,2.965,152,5.163,153,2.965,154,3.498,155,2.637,156,5.616,157,2.965,158,5.616,159,2.965,160,3.133,161,2.965,162,1.564,163,4.082,164,2.965,165,1.554,166,2.965,167,1.286,168,2.131,169,2.637,170,2.259,171,1.146,172,2.637,173,1.716,174,1.851,175,2.421,176,2.965,177,2.965,178,2.965,179,4.082,180,2.965,181,1.78,182,0.55,183,1.199,184,0.916,185,1.146,186,1.226,187,1.425,188,1.713,189,0.818,190,0.818,191,0.733,192,0.76,193,1.057,194,0.934,195,1.887,196,0.774,197,1.745,198,0.774,199,0.818,200,0.76,201,1.267,202,0.774,203,0.818,204,0.76,205,0.818,206,0.733,207,0.747,208,1.389,209,1.55,210,0.733,211,0.76,212,0.76,213,0.747,214,0.818,215,0.774,216,1.55,217,0.818,218,0.818,219,0.774,220,1.745,221,0.76,222,1.55,223,0.774,224,0.774,225,0.76,226,0.818,227,0.747,228,0.774,229,0.818,230,0.76,231,0.818,232,0.818,233,0.76,234,0.818,235,0.733,236,0.76,237,0.818,238,0.747,239,0.818,240,0.67,241,0.818,242,0.747,243,1.414,244,0.818,245,0.747,246,0.818,247,0.747,248,0.818,249,0.707,250,0.818,251,0.76,252,0.695,253,0.76,254,0.774,255,0.818,256,0.76,257,0.818,258,0.818,259,0.76,260,0.818,261,0.76,262,0.818,263,0.707,264,0.818,265,0.76,266,0.76,267,0.818,268,0.76,269,0.774,270,0.818,271,0.733,272,0.733,273,1.607,274,0.747,275,0.591,276,0.76,277,0.747,278,0.747,279,0.76,280,0.747,281,0.76,282,0.818,283,0.747,284,0.818,285,0.76,286,0.818,287,0.76,288,0.818,289,0.76,290,0.818,291,0.76,292,0.72,293,0.733,294,0.818,295,0.747,296,0.818,297,0.747,298,0.818,299,0.747,300,0.818,301,0.747,302,0.789,303,0.818,304,0.747,305,0.774,306,0.733,307,0.818,308,0.003,309,0.003]],["title/modules/AceModule.html",[310,1.021,311,3.486]],["body/modules/AceModule.html",[1,2.52,2,0.391,3,0.391,8,0.342,23,2.285,24,0.007,25,1.7,58,2.239,60,0.402,132,0.603,141,3.115,145,0.386,146,0.174,182,1.219,308,0.006,309,0.006,310,1.679,311,6.773,312,2.596,313,5.842,314,5.842,315,5.842,316,5.842,317,3.225,318,2.484,319,2.194,320,6.569,321,4.46,322,3.018,323,6.569]],["title/components/AdminEntryInputComponent.html",[0,0.244,191,1.2]],["body/components/AdminEntryInputComponent.html",[0,0.425,1,1.078,2,0.25,3,0.25,4,1.402,5,1.16,6,1.16,8,0.219,10,0.433,18,2.58,19,2.097,22,0.951,24,0.007,26,2.328,27,2.01,30,1.582,32,0.472,33,0.787,35,1.779,39,2.201,40,3.512,41,2.086,42,3.104,43,2.147,55,0.726,60,0.351,64,0.864,66,1.14,86,0.649,87,0.928,88,0.452,108,1.525,110,1.059,112,1.703,113,0.819,121,1.948,122,3.324,123,4.342,124,3.204,125,3.204,126,1.661,127,3.714,128,3.204,129,3.204,130,2.274,132,0.386,145,0.182,146,0.111,173,2.433,182,0.78,183,1.553,184,1.186,188,2.033,189,1.16,190,1.16,191,1.856,192,1.078,193,1.369,194,1.148,195,2.185,196,1.098,197,2.07,198,1.098,199,1.16,200,1.078,201,1.641,202,1.098,203,1.16,204,1.078,205,1.16,206,1.04,207,1.059,208,1.828,209,1.904,210,1.04,211,1.078,212,1.078,213,1.059,214,1.16,215,1.098,216,1.904,217,1.16,218,1.16,219,1.098,220,2.07,221,1.078,222,1.904,223,1.098,224,1.098,225,1.078,226,1.16,227,1.059,228,1.098,229,1.16,230,1.078,231,1.16,232,1.16,233,1.078,234,1.16,235,1.04,236,1.078,237,1.16,238,1.059,239,1.16,240,0.951,241,1.16,242,1.059,243,1.738,244,1.16,245,1.059,246,1.16,247,1.059,248,1.16,249,1.003,250,1.16,251,1.078,252,0.985,253,1.078,254,1.098,255,1.16,256,1.078,257,1.16,258,1.16,259,1.078,260,1.16,261,1.078,262,1.16,263,1.003,264,1.16,265,1.078,266,1.078,267,1.16,268,1.078,269,1.098,270,1.16,271,1.04,272,1.04,273,1.825,274,1.059,275,0.839,276,1.078,277,1.059,278,1.059,279,1.078,280,1.059,281,1.078,282,1.16,283,1.059,284,1.16,285,1.078,286,1.16,287,1.078,288,1.16,289,1.078,290,1.16,291,1.078,292,1.021,293,1.04,294,1.16,295,1.059,296,1.16,297,1.059,298,1.16,299,1.059,300,1.16,301,1.059,302,1.118,303,1.16,304,1.059,305,1.098,306,1.04,307,1.16,308,0.004,309,0.004,324,5.392,325,5.392,326,3.021,327,3.026,328,3.442,329,5.29,330,6.712,331,3.847,332,3.57,333,4.059,334,4.856,335,5.392,336,5.947,337,4.856,338,4.533,339,3.2,340,0.934,341,2.204,342,3.043,343,5.947,344,3.739,345,3.433,346,3.433,347,2.625,348,3.433,349,2.078,350,2.625,351,4.204,352,3.021,353,3.433,354,3.433,355,4.856,356,3.714]],["title/directives/AssetDirective.html",[184,0.968,293,1.2]],["body/directives/AssetDirective.html",[2,0.285,3,0.285,4,1.685,8,0.339,10,0.492,15,1.863,21,3.761,22,1.082,24,0.007,25,1.208,26,1.525,32,0.537,33,0.861,35,1.875,39,2.166,44,1.043,46,4.036,55,1.069,60,0.371,64,0.914,65,1.91,66,1.254,70,1.734,71,1.102,74,1.639,76,1.224,77,1.227,86,1.005,87,0.7,88,0.7,103,2.358,113,1.092,116,3.237,121,2.131,132,0.439,142,1.162,145,0.207,146,0.127,184,1.582,193,2.238,293,1.609,308,0.005,309,0.005,331,4.17,339,3.539,340,1.063,341,2.509,342,3.168,349,2.366,352,3.439,356,4.953,357,2.128,358,4.256,359,4.225,360,4.315,361,7.787,362,5.414,363,5.634,364,4.981,365,2.547,366,6.506,367,1.552,368,5.313,369,4.816,370,4.785,371,4.785,372,5.313,373,1.581,374,4.785,375,4.785,376,2.461,377,4.785,378,3.519,379,1.507,380,2.759,381,4.785,382,5.787,383,4.785,384,2.409,385,5.787,386,2.128,387,4.785,388,4.676,389,4.785,390,4.785,391,3.907,392,2.988,393,4.785,394,2.027,395,4.785,396,3.266,397,4.785,398,4.785,399,4.785,400,4.785,401,3.266,402,3.266,403,2.301,404,3.118,405,3.647,406,6.506,407,7.055,408,3.647,409,1.423,410,2.873,411,4.785,412,3.647,413,3.118,414,4.256,415,5.313,416,4.785,417,3.647,418,4.785,419,4.785]],["title/components/AssetListPopComponent.html",[0,0.244,192,1.244]],["body/components/AssetListPopComponent.html",[0,0.389,1,0.815,2,0.189,3,0.189,4,0.646,5,1.337,6,0.877,8,0.166,10,0.327,18,2.101,19,0.772,22,0.719,24,0.007,25,0.899,26,2.302,27,1.988,28,1.651,30,1.288,32,0.357,33,0.641,34,1.756,35,1.628,38,1.052,39,2.02,43,1.532,44,1.052,55,0.908,60,0.382,64,0.845,65,1.057,66,1.196,71,0.539,74,1.778,76,1.064,77,1.811,84,1.001,86,1.013,87,0.911,88,0.705,108,1.242,110,0.801,112,2.283,113,1.024,123,4.476,132,0.292,145,0.137,146,0.084,171,1.872,182,0.59,183,1.265,184,0.966,188,1.777,189,0.877,190,0.877,191,0.786,192,1.682,193,1.918,194,1.563,195,1.948,196,0.83,197,1.81,198,0.83,199,0.877,200,0.815,201,1.337,202,0.83,203,0.877,204,0.815,205,0.877,206,0.786,207,0.801,208,1.85,209,1.619,210,0.786,211,0.815,212,0.815,213,0.801,214,0.877,215,0.83,216,1.619,217,0.877,218,0.877,219,0.83,220,1.81,221,0.815,222,1.619,223,0.83,224,0.83,225,0.815,226,0.877,227,0.801,228,0.83,229,0.877,230,0.815,231,0.877,232,0.877,233,0.815,234,0.877,235,0.786,236,0.815,237,0.877,238,0.801,239,0.877,240,0.719,241,0.877,242,0.801,243,1.478,244,0.877,245,0.801,246,0.877,247,0.801,248,0.877,249,0.759,250,0.877,251,0.815,252,0.745,253,0.815,254,0.83,255,0.877,256,0.815,257,0.877,258,0.877,259,0.815,260,0.877,261,0.815,262,0.877,263,0.759,264,0.877,265,0.815,266,0.815,267,0.877,268,0.815,269,0.83,270,0.877,271,2.095,272,0.786,273,1.652,274,0.801,275,0.634,276,0.815,277,0.801,278,0.801,279,0.815,280,0.801,281,0.815,282,0.877,283,0.801,284,0.877,285,0.815,286,0.877,287,0.815,288,0.877,289,0.815,290,0.877,291,0.815,292,2.086,293,0.786,294,0.877,295,0.801,296,0.877,297,0.801,298,0.877,299,0.801,300,0.877,301,0.801,302,0.846,303,0.877,304,0.801,305,0.83,306,1.451,307,0.877,308,0.003,309,0.003,339,3.007,340,1.303,342,2.754,350,3.024,365,2.106,367,1.156,373,1.807,376,1.832,379,2.436,380,2.455,384,2.951,392,3.024,401,2.17,402,2.17,409,0.945,420,7.265,421,6.67,422,2.596,423,4.509,424,3.691,425,3.955,426,3.955,427,2.464,428,2.101,429,4.096,430,1.719,431,3.276,432,3.481,433,4.308,434,4.308,435,3.955,436,3.955,437,5.381,438,2.947,439,4.844,440,3.592,441,4.645,442,5.074,443,2.127,444,3.677,445,3.9,446,4.6,447,2.828,448,4.846,449,4.239,450,3.667,451,4.308,452,2.051,453,4.308,454,2.62,455,4.844,456,3.18,457,4.239,458,3.18,459,3.18,460,1.909,461,2.423,462,3.18,463,3.18,464,3.306,465,2.729,466,3.18,467,4.844,468,3.18,469,2.707,470,4.844,471,3.18,472,4.844,473,3.18,474,2.707,475,2.464,476,3.18,477,2.828,478,3.18,479,2.596,480,2.828,481,2.267,482,3.18,483,2.596,484,1.618,485,2.596,486,2.828,487,1.572,488,2.285,489,1.618,490,2.596,491,2.596,492,3.18,493,2.423,494,2.596,495,1.041,496,3.18,497,3.822,498,2.828,499,2.828,500,3.18,501,3.18,502,2.285,503,3.18,504,3.18,505,3.18,506,3.955,507,4.844]],["title/injectables/AuthGuard.html",[367,1.157,508,3.486]],["body/injectables/AuthGuard.html",[2,0.345,3,0.345,8,0.302,10,0.597,15,1.662,24,0.007,25,1.077,32,0.652,33,0.977,34,2.677,38,0.93,44,1.184,55,1.044,56,3.284,60,0.413,64,0.799,66,1.097,71,1.252,73,5.309,76,1.163,86,0.896,87,0.624,88,0.624,113,0.799,126,2.919,132,0.532,145,0.251,146,0.154,252,1.731,308,0.005,309,0.005,339,3.458,340,1.289,341,3.042,342,3.343,345,4.738,365,2.372,367,1.939,394,2.457,444,3.652,495,1.9,508,5.309,509,7.608,510,5.161,511,7.387,512,3.873,513,5.63,514,4.435,515,3.654,516,4.938,517,4.627,518,4.612,519,3.652,520,7.079,521,9.03,522,3.804,523,4.113,524,7.387,525,5.803,526,5.342,527,5.192,528,3.758,529,6.032,530,4.813,531,2.076,532,3.244,533,4.422,534,3.484,535,1.863,536,5.803,537,4.422,538,5.161,539,5.803,540,5.803,541,7.387,542,5.803,543,5.803,544,5.161,545,5.803,546,5.803,547,5.803]],["title/modules/AuthModule.html",[310,1.021,548,3.486]],["body/modules/AuthModule.html",[0,0.376,2,0.352,3,0.352,8,0.308,10,0.609,23,2.348,24,0.007,58,2.017,60,0.446,76,0.847,132,0.543,134,2.339,141,2.972,145,0.384,146,0.157,182,1.098,249,2.288,268,2.459,269,1.546,308,0.005,309,0.005,310,1.814,312,2.339,317,3.023,318,2.238,319,1.977,322,2.829,359,2.567,449,4.923,450,5.073,452,3.167,508,6.523,548,7.022,549,5.263,550,5.263,551,5.263,552,5.263,553,5.263,554,5.449,555,4.832,556,3.411,557,3.411,558,2.631,559,6.652,560,5.597,561,6.652,562,5.263,563,5.263,564,4.832,565,4.832,566,5.918,567,5.918,568,5.918,569,4.832,570,2.631,571,6.107,572,5.918,573,5.918,574,5.918]],["title/injectables/AuthService.html",[367,1.157,450,2.711]],["body/injectables/AuthService.html",[2,0.348,3,0.188,8,0.165,10,0.325,23,2.335,24,0.007,25,1.085,27,0.979,32,0.355,37,3.141,38,1.048,39,1.968,44,1.419,45,2.895,55,0.906,60,0.347,64,0.73,65,2.054,66,1.172,70,1.146,72,1.434,74,1.647,75,1.832,76,1.394,79,2.895,86,1.306,87,0.91,88,0.967,103,1.146,113,1.062,116,2.473,121,1.579,132,0.29,142,1.42,145,0.137,146,0.084,252,1.65,269,2.016,273,1.298,275,0.962,308,0.006,309,0.003,318,1.824,331,4.48,333,4.806,337,6.06,339,2.363,340,0.702,342,2.747,367,1.56,369,3.808,384,1.785,386,3.538,403,1.52,404,2.059,412,5.883,430,2.635,443,2.37,449,1.898,450,2.695,495,1.579,513,2.895,526,3.011,535,1.015,556,3.52,570,1.405,575,2.811,576,3.675,577,3.465,578,6.305,579,3.937,580,4.201,581,4.201,582,5.199,583,3.937,584,5.656,585,3.675,586,3.465,587,2.908,588,5.34,589,2.695,590,3.937,591,4.288,592,4.288,593,4.822,594,4.288,595,4.822,596,4.822,597,4.288,598,6.54,599,6.54,600,4.822,601,4.822,602,7.042,603,3.161,604,4.148,605,3.161,606,4.288,607,4.822,608,3.161,609,5.547,610,5.149,611,4.288,612,3.161,613,4.822,614,3.161,615,1.548,616,4.984,617,4.822,618,5.565,619,3.429,620,3.161,621,4.822,622,3.161,623,4.261,624,2.811,625,3.161,626,4.777,627,6.601,628,4.822,629,3.161,630,3.161,631,4.822,632,3.161,633,4.822,634,3.161,635,2.79,636,3.161,637,3.161,638,2.581,639,2.581,640,2.059,641,1.829,642,2.272,643,1.974,644,3.161,645,6.54,646,6.54,647,4.822,648,4.822,649,4.822,650,5.817,651,4.822,652,3.161,653,4.822,654,3.161,655,5.846,656,5.846,657,3.161,658,3.161,659,4.288,660,3.161,661,2.811,662,2.811,663,3.161,664,1.898,665,3.161,666,3.161,667,3.161,668,3.161,669,3.161,670,3.161,671,3.161,672,4.822,673,3.161,674,4.822,675,3.161,676,2.895,677,3.161,678,2.695,679,3.011,680,3.161,681,4.822,682,4.822,683,3.161,684,3.161,685,3.161,686,3.465,687,4.822,688,3.161,689,4.822,690,3.675,691,4.822,692,4.822,693,3.675,694,4.822,695,4.822,696,4.288,697,4.822,698,3.161,699,4.822,700,3.161,701,3.161,702,3.161,703,3.161,704,3.161,705,3.161,706,3.161,707,3.161,708,2.272,709,2.811,710,1.829,711,3.161]],["title/classes/Collection.html",[146,0.128,712,2.543]],["body/classes/Collection.html",[2,0.204,3,0.204,7,3.37,8,0.178,10,0.353,24,0.007,25,1.717,32,0.819,33,0.678,34,2.956,38,1.307,39,1.893,43,2.543,44,0.821,60,0.239,64,0.876,66,1.191,71,1.236,74,1.716,75,2.068,76,1.329,77,1.574,84,1.614,86,1.288,87,0.897,88,0.927,113,1.123,121,1.122,142,1.772,145,0.148,146,0.193,162,1.746,194,1.021,308,0.004,309,0.004,340,0.761,357,1.523,373,2.306,376,2.577,379,2.9,386,2.278,409,2.563,438,1.122,454,2.772,469,3.808,475,3.894,481,2.873,526,4.254,527,4.746,528,3.466,529,2.798,534,2.057,589,3.431,615,2.995,635,1.983,712,4.907,713,3.047,714,5.012,715,5.124,716,4.678,717,3.432,718,3.68,719,5.124,720,5.124,721,6.813,722,5.124,723,5.124,724,5.124,725,5.124,726,4.184,727,5.46,728,3.218,729,3.552,730,3.426,731,3.2,732,7.924,733,3.426,734,5.124,735,5.124,736,7.765,737,3.426,738,4.65,739,4.09,740,5.124,741,5.124,742,3.426,743,5.124,744,3.683,745,3.905,746,5.124,747,3.426,748,5.124,749,5.124,750,3.426,751,5.124,752,5.124,753,3.426,754,3.426,755,5.124,756,3.426,757,5.124,758,5.124,759,3.426,760,5.124,761,3.426,762,3.426,763,3.047,764,3.047,765,3.047,766,3.047,767,3.047,768,3.047,769,3.047,770,3.047,771,2.232,772,2.139,773,4.953,774,3.497,775,6.139,776,5.124,777,3.426,778,3.426,779,1.796,780,3.426,781,3.426,782,6.139,783,6.813,784,6.139,785,7.933,786,3.426,787,3.426,788,3.426,789,3.426,790,3.047,791,3.426]],["title/classes/Config.html",[146,0.128,443,1.758]],["body/classes/Config.html",[2,0.355,3,0.355,8,0.311,10,0.614,24,0.007,32,0.669,33,1.275,38,0.956,39,2.035,41,1.761,44,1.458,55,0.728,56,3.841,64,0.85,65,2.014,66,1.014,75,2.093,76,1.274,86,0.921,87,0.641,88,0.885,103,2.724,113,0.821,145,0.258,146,0.218,167,2.586,308,0.005,309,0.005,353,4.868,386,2.651,430,3.228,443,3.573,495,2.695,519,3.715,792,5.303,793,4.697,794,4.348,795,5.962,796,5.962,797,5.962,798,6.136,799,7.515,800,4.529,801,7.515,802,7.515,803,7.515,804,5.727,805,5.129,806,4.544,807,3.225,808,5.962,809,5.962,810,5.962,811,7.515,812,8.229,813,5.962]],["title/components/CrudComponent.html",[0,0.244,200,1.244]],["body/components/CrudComponent.html",[0,0.335,1,0.718,2,0.166,3,0.166,4,1.352,5,0.772,6,0.772,7,1.058,8,0.146,10,0.288,15,1.256,19,0.68,20,3.026,22,0.633,24,0.007,25,1.311,26,2.287,27,1.974,28,1.495,30,1.167,32,0.314,33,0.716,35,1.554,38,0.703,39,2.061,41,1.655,43,1.997,44,1.289,47,3.546,55,0.862,58,1.495,60,0.414,64,0.831,65,1.452,66,1.196,71,0.743,75,1.01,76,1.292,77,1.125,84,1.382,86,1.028,87,0.92,88,0.865,103,2.916,105,2.819,106,2.725,108,1.572,110,0.705,112,1.755,113,0.972,132,0.257,135,1.31,145,0.121,146,0.143,162,1.845,171,1.696,174,1.747,182,0.519,183,1.414,184,0.875,185,1.082,186,1.157,187,1.345,188,1.66,189,0.772,190,0.772,191,0.692,192,0.718,193,1.01,194,1.485,195,1.837,196,0.731,197,1.691,198,0.731,199,0.772,200,1.811,201,1.211,202,0.731,203,0.772,204,0.718,205,0.772,206,0.692,207,0.705,208,1.755,209,1.494,210,0.692,211,0.718,212,0.718,213,0.705,214,0.772,215,0.731,216,1.494,217,0.772,218,0.772,219,1.146,220,1.691,221,1.707,222,1.494,223,1.739,224,0.731,225,0.718,226,0.772,227,0.705,228,0.731,229,0.772,230,0.718,231,0.772,232,0.772,233,0.718,234,0.772,235,0.692,236,0.718,237,0.772,238,0.705,239,0.772,240,1.505,241,0.772,242,0.705,243,1.363,244,0.772,245,0.705,246,0.772,247,0.705,248,0.772,249,0.668,250,0.772,251,0.718,252,0.656,253,0.718,254,0.731,255,0.772,256,0.718,257,0.772,258,0.772,259,0.718,260,0.772,261,0.718,262,0.772,263,0.668,264,0.772,265,0.718,266,0.718,267,0.772,268,0.718,269,0.731,270,0.772,271,0.692,272,0.692,273,1.569,274,0.705,275,0.558,276,0.718,277,0.705,278,0.705,279,0.718,280,0.705,281,0.718,282,0.772,283,0.705,284,0.772,285,0.718,286,0.772,287,0.718,288,0.772,289,0.718,290,0.772,291,0.718,292,0.68,293,0.692,294,0.772,295,0.705,296,0.772,297,0.705,298,0.772,299,0.705,300,0.772,301,0.705,302,0.744,303,0.772,304,0.705,305,0.731,306,0.692,307,0.772,308,0.003,309,0.003,319,1.466,339,1.774,340,0.621,341,1.467,342,2.269,359,2.348,364,3.249,365,2.137,373,1.066,379,1.382,380,2.568,384,1.624,394,1.185,403,1.345,409,1.305,410,1.68,423,3.118,428,2.659,429,1.747,438,2.767,440,2.232,443,1.962,445,2.869,446,3.526,449,3.249,450,3.426,457,3.996,460,2.634,465,2.73,489,1.424,490,2.285,495,2.634,502,2.011,512,3.871,515,1.157,522,3.765,523,2.947,532,1.564,533,2.132,535,0.898,570,1.951,615,1.968,635,1.619,664,1.68,793,2.232,804,2.132,814,2.488,815,3.153,816,2.373,817,3.583,818,3.344,819,4.388,820,3.026,821,3.38,822,2.602,823,3.902,824,3.902,825,6.129,826,3.221,827,5.429,828,5.451,829,3.902,830,4.388,831,4.388,832,4.388,833,3.871,834,3.132,835,2.239,836,2.595,837,5.383,838,4.388,839,5.451,840,2.634,841,2.798,842,2.798,843,2.798,844,4.41,845,2.798,846,2.798,847,2.798,848,3.902,849,4.42,850,4.125,851,3.902,852,2.798,853,4.388,854,2.798,855,3.902,856,4.388,857,2.798,858,2.539,859,2.798,860,4.388,861,2.798,862,2.798,863,2.798,864,2.995,865,2.798,866,2.798,867,2.798,868,2.285,869,2.132,870,1.747,871,2.285,872,2.285,873,2.285,874,2.488,875,2.488,876,2.285,877,1.823,878,1.513,879,2.285,880,2.285,881,2.285,882,2.798,883,2.798,884,2.132,885,2.798,886,2.798,887,2.798,888,1.564,889,2.011,890,2.798,891,4.814,892,2.488,893,2.488,894,2.798,895,2.285,896,2.798,897,2.798,898,1.91,899,2.798,900,2.798,901,5.413,902,2.285,903,2.488,904,2.488,905,2.798,906,2.798,907,2.859,908,3.89,909,2.798,910,2.995,911,2.798,912,1.747,913,2.132,914,2.798,915,1.747,916,3.902,917,3.902]],["title/interfaces/CrudConfig.html",[457,2.912,918,1.47]],["body/interfaces/CrudConfig.html",[0,0.424,2,0.27,3,0.27,8,0.237,10,0.468,18,2.726,24,0.007,25,1.71,27,1.276,32,0.511,33,0.831,38,1.007,44,1.411,53,5.589,55,1.074,60,0.336,64,0.928,65,2.024,70,3.191,88,1.047,113,1.069,145,0.197,146,0.223,162,2.141,171,2.429,186,2.599,194,1.402,208,1.871,240,1.756,263,1.853,273,1.396,275,1.626,308,0.004,309,0.004,359,3.656,364,5.059,373,2.337,376,2.723,392,3.924,423,4.602,426,5.131,432,4.516,438,2.76,457,4.662,489,2.314,517,4.2,522,3.945,609,6.057,615,2.617,616,4.789,676,4.662,678,4.024,679,4.495,717,2.54,794,3.636,807,3.399,815,4.516,822,3.021,826,3.843,872,3.714,918,1.904,919,4.045,920,2.84,921,6.284,922,4.166,923,7.765,924,7.765,925,6.881,926,7.765,927,7.765,928,7.765,929,7.765,930,7.765,931,6.906,932,5.131,933,5.059,934,4.516,935,5.589,936,2.726,937,5.918,938,4.516,939,6.284,940,4.789,941,3.399,942,6.284,943,3.106,944,6.906,945,5.918,946,5.3,947,6.906,948,5.131,949,3.636,950,4.548,951,3.466]],["title/injectables/CrudService.html",[367,1.157,952,2.624]],["body/injectables/CrudService.html",[0,0.264,2,0.211,3,0.211,8,0.185,10,0.365,24,0.007,25,1.373,32,0.398,33,1.061,38,1.527,41,1.231,44,0.842,55,0.845,60,0.375,61,1.98,62,2.05,64,0.889,65,1.971,66,1.155,70,3.22,71,1.359,72,1.053,75,2.139,76,1.363,79,2.127,84,2.949,86,1.299,87,0.905,88,0.905,103,3.148,112,1.015,113,0.488,114,1.803,116,2.62,126,2.076,132,0.325,142,1.276,145,0.227,146,0.094,162,1.207,167,1.537,194,0.874,208,1.962,275,1.678,308,0.004,309,0.006,332,3.759,339,2.8,340,0.787,341,1.857,342,2.564,360,1.658,364,3.154,367,1.765,373,1.521,378,4.191,379,1.654,380,1.232,386,1.575,403,1.703,430,3.23,452,2.225,454,1.916,465,3.1,469,4.135,475,2.673,495,2.051,518,3.281,527,4.331,534,2.127,535,1.138,664,3.759,678,2.937,679,3.281,717,3.85,772,2.212,779,3.283,800,3.878,822,2.526,864,3.586,888,2.937,918,1.074,941,4.001,945,2.7,946,2.418,952,3.387,953,2.893,954,3.154,955,3.586,956,3.154,957,2.526,958,3.154,959,2.279,960,3.423,961,4.673,962,4.29,963,4.673,964,5.254,965,4.29,966,3.543,967,4.29,968,3.961,969,4.29,970,3.543,971,3.586,972,4.673,973,3.543,974,4.673,975,5.49,976,3.543,977,4.29,978,3.543,979,3.776,980,4.08,981,4.29,982,3.543,983,4.004,984,4.004,985,4.673,986,3.543,987,3.423,988,4.673,989,4.673,990,3.543,991,3.586,992,2.212,993,2.893,994,2.893,995,2.308,996,2.7,997,2.893,998,2.893,999,2.893,1000,2.893,1001,2.893,1002,2.893,1003,2.893,1004,2.893,1005,3.151,1006,3.151,1007,3.151,1008,5.569,1009,5.113,1010,2.893,1011,3.04,1012,2.893,1013,2.893,1014,3.151,1015,4.673,1016,4.29,1017,2.127,1018,3.151,1019,5.113,1020,2.893,1021,2.893,1022,2.893,1023,2.893,1024,5.113,1025,2.212,1026,2.893,1027,3.151,1028,2.893,1029,3.151,1030,3.151]],["title/modules/DataModule.html",[310,1.021,1031,3.31]],["body/modules/DataModule.html",[2,0.248,3,0.248,8,0.217,23,2.348,24,0.007,58,1.421,60,0.454,76,0.597,103,2.144,132,0.383,134,1.648,141,2.491,145,0.323,146,0.11,173,3.422,174,3.693,182,0.774,191,2.131,200,2.327,206,2.131,207,2.17,208,1.804,219,2.37,221,2.327,223,2.37,224,2.407,272,1.032,273,1.821,274,1.05,275,1.18,276,1.07,277,1.05,278,1.05,279,1.07,297,2.285,299,2.285,308,0.004,309,0.004,310,1.245,312,1.648,317,2.391,318,1.578,319,1.393,321,3.306,322,2.599,325,2.998,340,0.926,532,2.331,548,6.522,554,5.448,557,2.697,558,1.855,559,5.26,564,3.406,578,5.673,580,4.25,586,4.25,641,3.422,805,2.847,868,3.406,869,3.179,870,3.693,876,3.406,877,4.477,952,4.435,1031,6.758,1032,3.71,1033,3.71,1034,3.71,1035,3.71,1036,3.71,1037,6.522,1038,6.193,1039,5.912,1040,5.892,1041,5.341,1042,4.744,1043,4.171,1044,4.25,1045,5.26,1046,2.847,1047,3.406,1048,3.551,1049,4.171,1050,2.998,1051,3.71,1052,4.507,1053,2.718,1054,2.504,1055,3.406,1056,4.171,1057,4.171,1058,4.171,1059,4.171,1060,2.998,1061,4.25,1062,3.179,1063,3.71,1064,3.406,1065,3.71,1066,4.171,1067,3.406,1068,4.171]],["title/components/DatetimeComponent.html",[0,0.244,204,1.244]],["body/components/DatetimeComponent.html",[0,0.413,1,0.979,2,0.227,3,0.227,4,0.775,5,1.053,6,1.053,7,1.444,8,0.199,10,0.393,15,2.279,16,5.149,19,0.927,22,0.863,23,1.873,24,0.007,25,1.332,26,2.321,27,2.003,28,1.891,30,1.476,32,0.429,33,0.734,35,1.834,36,4.31,38,1.151,39,1.617,40,2.598,44,0.89,48,4.483,49,4.777,52,3.332,55,0.677,60,0.335,64,0.783,65,1.426,66,1.176,71,0.94,75,1.278,76,0.936,77,1.677,81,3.332,84,2.261,86,0.857,87,0.922,88,0.597,89,3.332,99,3.332,103,2.012,105,1.617,106,2.468,108,1.423,110,0.961,112,1.589,113,1.05,114,2.824,122,4.703,131,3.332,132,0.35,133,3.332,134,1.509,143,2.292,144,2.292,145,0.165,146,0.101,181,2.292,182,0.709,183,1.449,184,1.107,185,1.476,186,1.579,187,1.836,188,1.945,189,1.053,190,1.053,191,0.944,192,0.979,193,1.278,194,1.088,195,2.104,196,0.997,197,1.981,198,1.992,199,1.053,200,0.979,201,1.531,202,0.997,203,1.053,204,1.956,205,1.053,206,0.944,207,0.961,208,1.549,209,1.804,210,0.944,211,0.979,212,0.979,213,0.961,214,1.053,215,0.997,216,1.804,217,1.053,218,1.053,219,0.997,220,1.981,221,0.979,222,1.804,223,0.997,224,0.997,225,0.979,226,1.053,227,0.961,228,0.997,229,1.053,230,0.979,231,1.053,232,1.053,233,0.979,234,1.053,235,0.944,236,0.979,237,1.053,238,0.961,239,1.053,240,0.863,241,1.053,242,0.961,243,1.647,244,1.053,245,0.961,246,1.053,247,0.961,248,1.053,249,0.911,250,1.053,251,0.979,252,0.895,253,0.979,254,0.997,255,1.053,256,0.979,257,1.053,258,1.053,259,0.979,260,1.053,261,0.979,262,1.053,263,0.911,264,1.053,265,0.979,266,0.979,267,1.053,268,0.979,269,0.997,270,1.053,271,0.944,272,0.944,273,1.767,274,0.961,275,0.762,276,0.979,277,0.961,278,0.961,279,0.979,280,0.961,281,0.979,282,1.053,283,0.961,284,1.053,285,0.979,286,1.053,287,0.979,288,1.053,289,0.979,290,1.053,291,0.979,292,0.927,293,0.944,294,1.053,295,0.961,296,1.053,297,0.961,298,1.053,299,0.961,300,1.053,301,0.961,302,1.015,303,1.053,304,0.961,305,0.997,306,0.944,307,1.053,308,0.004,309,0.004,327,2.824,373,1.348,429,3.466,438,1.817,484,2.824,615,1.782,1069,3.395,1070,5.471,1071,5.55,1072,5.55,1073,5.55,1074,6.064,1075,7.179,1076,5.573,1077,6.539,1078,4.263,1079,2.602,1080,3.466,1081,4.936,1082,3.818,1083,3.818,1084,3.818,1085,5.55,1086,3.818,1087,3.818,1088,3.818,1089,3.818,1090,3.818,1091,3.818,1092,3.616,1093,3.818,1094,4.23,1095,5.55,1096,3.212,1097,2.292,1098,3.818,1099,3.818,1100,3.818]],["title/pipes/DatetimePipe.html",[1101,2.543,1102,3.486]],["body/pipes/DatetimePipe.html",[2,0.368,3,0.368,8,0.323,10,0.637,15,1.774,22,1.4,24,0.007,25,1.15,33,1.018,38,1.508,43,2.287,44,0.993,55,0.939,60,0.391,64,0.757,65,2.12,66,0.836,72,2.288,75,1.772,76,1.253,86,0.956,87,0.9,88,0.666,113,0.852,126,3.042,132,0.568,142,1.505,145,0.268,146,0.164,308,0.005,309,0.005,386,2.754,535,1.989,615,2.471,731,4.806,835,2.562,836,3.259,878,3.35,968,3.51,1070,5.866,1076,5.228,1096,4.454,1097,3.719,1101,4.39,1102,5.531,1103,5.509,1104,5.253,1105,5.866,1106,4.163,1107,5.509,1108,6.473,1109,7.355,1110,6.194,1111,6.845,1112,5.253,1113,6.194,1114,6.194,1115,6.194,1116,6.194,1117,6.194,1118,6.194]],["title/interfaces/Day.html",[918,1.47,1094,3.697]],["body/interfaces/Day.html",[0,0.26,2,0.206,3,0.206,8,0.18,10,0.356,15,0.991,20,2.886,21,2.627,24,0.007,25,1.426,26,0.811,27,0.703,28,1.179,30,0.921,32,0.956,33,0.683,34,1.871,35,1.76,39,1.527,47,2.003,56,1.539,60,0.342,64,0.892,65,1.885,71,1.241,74,1.724,75,1.768,76,1.288,77,1.756,84,2.506,88,0.555,119,1.934,121,2.788,132,0.318,142,1.779,145,0.223,146,0.164,162,1.76,165,3.238,261,0.888,275,1.03,308,0.004,309,0.004,349,1.711,365,1.983,373,2.148,376,2.77,380,2.547,409,1.535,428,2.97,430,1.229,431,1.466,438,2.679,444,1.711,465,1.338,474,4.449,481,2.891,497,4.461,527,4.094,534,2.078,615,1.983,716,3.935,717,2.087,738,3.524,745,2.638,816,1.872,835,1.432,836,2.186,878,1.872,918,2.075,932,2.826,1025,2.161,1074,4.707,1076,5.522,1079,1.871,1080,2.161,1081,7.571,1094,7.348,1096,4.734,1097,2.078,1119,3.078,1120,8.844,1121,7.325,1122,6.828,1123,6.066,1124,8.362,1125,3.711,1126,3.711,1127,7.079,1128,8.749,1129,5.521,1130,3.078,1131,3.461,1132,2.638,1133,3.461,1134,3.461,1135,5.218,1136,3.257,1137,3.461,1138,4.592,1139,3.078,1140,7.682,1141,3.461,1142,3.461,1143,3.461,1144,3.078,1145,3.461,1146,2.078,1147,3.461,1148,3.461,1149,6.176,1150,3.078,1151,3.461,1152,3.461,1153,5.163,1154,3.461,1155,3.461,1156,3.461,1157,3.461,1158,3.461,1159,3.461,1160,3.461,1161,3.461,1162,7.682,1163,5.163,1164,6.176,1165,5.163,1166,6.176,1167,5.163,1168,3.461,1169,3.461,1170,3.461,1171,3.461,1172,3.461,1173,7.325,1174,3.461,1175,3.461,1176,3.461,1177,3.461,1178,3.461,1179,6.847,1180,3.461,1181,5.163,1182,5.163,1183,4.438,1184,3.461,1185,3.461,1186,3.461,1187,3.461,1188,3.461,1189,5.163,1190,2.826,1191,3.461,1192,3.461,1193,3.461,1194,3.461,1195,3.461,1196,3.461,1197,5.163,1198,3.461,1199,3.461,1200,3.078,1201,3.461,1202,3.461,1203,3.461,1204,3.461,1205,3.461,1206,3.461,1207,3.461,1208,6.176,1209,3.461,1210,6.176,1211,3.461,1212,3.461,1213,3.461,1214,3.461,1215,5.163,1216,3.461,1217,3.461,1218,3.461,1219,3.461,1220,3.461,1221,2.003,1222,3.461,1223,3.078,1224,3.461,1225,5.163,1226,3.461,1227,3.461,1228,3.461,1229,3.461,1230,3.461,1231,3.461,1232,3.461,1233,3.461,1234,3.461,1235,3.461,1236,3.461,1237,3.461,1238,3.461,1239,3.461,1240,3.461,1241,3.461,1242,2.638,1243,3.461,1244,3.461,1245,3.461,1246,3.461]],["title/components/DefaultEntryInputComponent.html",[0,0.244,206,1.2]],["body/components/DefaultEntryInputComponent.html",[0,0.429,1,1.114,2,0.258,3,0.258,4,1.628,5,1.199,6,1.199,8,0.226,10,0.447,18,2.641,19,2.115,22,0.983,24,0.007,26,2.331,27,2.013,30,1.619,32,0.488,33,0.805,35,1.862,39,2.217,40,3.564,41,2.04,42,3.149,43,2.17,55,0.743,60,0.328,64,0.856,66,1.121,86,0.671,87,0.936,88,0.467,108,1.561,110,1.094,112,1.743,113,1.143,122,3.403,123,4.406,124,3.312,125,3.312,126,1.717,127,3.801,128,3.312,129,3.312,130,2.351,132,0.399,145,0.188,146,0.115,173,2.515,182,0.807,183,1.59,184,1.214,188,2.063,189,1.199,190,1.199,191,1.075,192,1.114,193,1.401,194,1.169,195,2.212,196,1.135,197,2.101,198,1.135,199,1.199,200,1.114,201,1.68,202,1.135,203,1.199,204,1.114,205,1.199,206,1.883,207,1.094,208,1.82,209,1.939,210,1.075,211,1.114,212,1.114,213,1.094,214,1.199,215,1.135,216,1.939,217,1.199,218,1.199,219,1.135,220,2.101,221,1.114,222,1.939,223,1.135,224,1.135,225,1.114,226,1.199,227,1.094,228,1.135,229,1.199,230,1.114,231,1.199,232,1.199,233,1.114,234,1.199,235,1.075,236,1.114,237,1.199,238,1.094,239,1.199,240,0.983,241,1.199,242,1.094,243,1.77,244,1.199,245,1.094,246,1.199,247,1.094,248,1.199,249,1.037,250,1.199,251,1.114,252,1.018,253,1.114,254,1.135,255,1.199,256,1.114,257,1.199,258,1.199,259,1.114,260,1.199,261,1.114,262,1.199,263,1.037,264,1.199,265,1.114,266,1.114,267,1.199,268,1.114,269,1.135,270,1.199,271,1.075,272,1.075,273,1.845,274,1.094,275,0.867,276,1.114,277,1.094,278,1.094,279,1.114,280,1.094,281,1.114,282,1.199,283,1.094,284,1.199,285,1.114,286,1.199,287,1.114,288,1.199,289,1.114,290,1.199,291,1.114,292,1.056,293,1.075,294,1.199,295,1.094,296,1.199,297,1.094,298,1.199,299,1.094,300,1.199,301,1.094,302,1.156,303,1.199,304,1.094,305,1.135,306,1.075,307,1.199,308,0.004,309,0.004,324,5.05,326,3.123,327,3.097,335,4.375,338,4.64,339,3.24,340,0.965,341,2.278,342,3.075,345,3.548,346,3.548,347,2.713,349,2.148,350,2.713,354,3.548,355,4.971,356,3.801,1048,4.218,1125,4.375,1247,4.346,1248,4.346]],["title/components/DefaultEntryOutputComponent.html",[0,0.244,207,1.222]],["body/components/DefaultEntryOutputComponent.html",[0,0.449,1,1.169,2,0.271,3,0.271,4,1.464,5,1.257,6,1.257,8,0.237,10,0.469,19,1.107,22,1.03,24,0.007,26,2.336,27,2.018,30,1.674,32,0.512,33,0.833,35,0.959,41,2.12,43,2.363,60,0.337,64,0.765,66,0.849,87,0.929,108,1.614,110,1.148,113,1.212,132,0.418,145,0.197,146,0.121,182,0.846,183,1.643,184,1.255,188,2.105,189,1.257,190,1.257,191,1.127,192,1.169,193,1.448,194,1.199,195,2.25,196,1.19,197,2.144,198,1.19,199,1.257,200,1.169,201,1.736,202,1.19,203,1.257,204,1.169,205,1.257,206,1.127,207,1.957,208,1.872,209,1.989,210,1.127,211,1.169,212,1.169,213,1.148,214,1.257,215,1.19,216,1.989,217,1.257,218,1.257,219,1.19,220,2.144,221,1.169,222,1.989,223,1.19,224,1.19,225,1.169,226,1.257,227,1.148,228,1.19,229,1.257,230,1.169,231,1.257,232,1.257,233,1.169,234,1.257,235,1.127,236,1.169,237,1.257,238,1.148,239,1.257,240,1.03,241,1.257,242,1.148,243,1.815,244,1.257,245,1.148,246,1.257,247,1.148,248,1.257,249,1.087,250,1.257,251,1.169,252,1.068,253,1.169,254,1.19,255,1.257,256,1.169,257,1.257,258,1.257,259,1.169,260,1.257,261,1.169,262,1.257,263,1.087,264,1.257,265,1.169,266,1.169,267,1.257,268,1.169,269,1.19,270,1.257,271,1.127,272,1.127,273,1.873,274,1.148,275,0.909,276,1.169,277,1.148,278,1.148,279,1.169,280,1.148,281,1.169,282,1.257,283,1.148,284,1.257,285,1.169,286,1.257,287,1.169,288,1.257,289,1.169,290,1.257,291,1.169,292,1.107,293,1.127,294,1.257,295,1.148,296,1.257,297,1.148,298,1.257,299,1.148,300,1.257,301,1.148,302,1.212,303,1.257,304,1.148,305,1.19,306,1.127,307,1.257,308,0.004,309,0.004,324,5.179,327,3.201,335,4.522,354,3.721,355,5.138,356,3.929,365,2.905,487,2.253,643,3.929,1048,4.326,1079,2.281,1125,4.522,1249,3.721,1250,5.596,1251,4.557,1252,4.557,1253,2.969,1254,5.596]],["title/components/DefaultInputComponent.html",[0,0.244,19,1.178]],["body/components/DefaultInputComponent.html",[0,0.431,1,1.137,2,0.264,3,0.264,4,1.442,5,1.224,6,1.224,8,0.231,10,0.456,19,1.866,22,1.003,24,0.007,26,2.332,27,2.014,30,1.642,32,0.498,33,0.817,35,1.7,39,2.269,40,3.913,41,2.15,42,3.458,43,2.35,55,0.938,60,0.359,64,0.823,66,1.037,87,0.923,88,0.664,108,1.583,110,1.117,112,2.2,113,1.057,122,4.293,126,2.44,127,4.796,130,3.34,132,0.407,134,1.752,145,0.192,146,0.117,182,0.823,183,1.612,184,1.232,188,2.081,189,1.224,190,1.224,191,1.097,192,1.137,193,1.421,194,1.182,195,2.228,196,1.158,197,2.119,198,1.158,199,1.224,200,1.137,201,1.704,202,1.158,203,1.224,204,1.137,205,1.224,206,1.097,207,1.117,208,1.64,209,1.96,210,1.097,211,1.137,212,1.137,213,1.117,214,1.224,215,1.158,216,1.96,217,1.224,218,1.224,219,1.158,220,2.119,221,1.137,222,1.96,223,1.158,224,1.158,225,1.137,226,1.224,227,1.117,228,1.158,229,1.224,230,1.137,231,1.224,232,1.224,233,1.137,234,1.224,235,1.097,236,1.137,237,1.224,238,1.117,239,1.224,240,1.003,241,1.224,242,1.117,243,1.789,244,1.224,245,1.117,246,1.224,247,1.117,248,1.224,249,1.058,250,1.224,251,1.137,252,1.039,253,1.137,254,1.158,255,1.224,256,1.137,257,1.224,258,1.224,259,1.137,260,1.224,261,1.137,262,1.224,263,1.058,264,1.224,265,1.137,266,1.137,267,1.224,268,1.137,269,1.158,270,1.224,271,1.097,272,1.097,273,1.857,274,1.117,275,0.885,276,1.137,277,1.117,278,1.117,279,1.137,280,1.117,281,1.137,282,1.224,283,1.117,284,1.224,285,1.137,286,1.224,287,1.137,288,1.224,289,1.137,290,1.224,291,1.137,292,1.077,293,1.097,294,1.224,295,1.117,296,1.224,297,1.117,298,1.224,299,1.117,300,1.224,301,1.117,302,1.179,303,1.224,304,1.117,305,1.158,306,1.097,307,1.224,308,0.004,309,0.004,326,3.187,327,3.141,338,4.705,344,3.944,347,5.042,1253,2.889,1255,6.594,1256,4.437,1257,4.434,1258,4.434,1259,4.434,1260,2.479]],["title/components/DefaultOutputComponent.html",[0,0.244,210,1.2]],["body/components/DefaultOutputComponent.html",[0,0.408,1,1.152,2,0.267,3,0.267,4,1.453,5,1.24,6,1.24,8,0.234,10,0.462,19,1.091,22,1.016,24,0.007,26,2.335,27,2.017,28,2.123,30,1.657,32,0.504,33,0.824,35,1.506,38,0.999,41,2.155,43,2.401,60,0.334,64,0.613,66,0.841,87,0.926,108,1.598,110,1.132,113,1.208,130,3.37,132,0.412,145,0.194,146,0.119,182,0.834,183,1.627,184,1.243,188,2.093,189,1.24,190,1.24,191,1.111,192,1.152,193,1.434,194,1.19,195,2.239,196,1.173,197,2.131,198,1.173,199,1.24,200,1.152,201,1.719,202,1.173,203,1.24,204,1.152,205,1.24,206,1.111,207,1.132,208,1.648,209,1.974,210,1.911,211,1.152,212,1.152,213,1.132,214,1.24,215,1.173,216,1.974,217,1.24,218,1.24,219,1.173,220,2.131,221,1.152,222,1.974,223,1.173,224,1.173,225,1.152,226,1.24,227,1.132,228,1.173,229,1.24,230,1.152,231,1.24,232,1.24,233,1.152,234,1.24,235,1.111,236,1.152,237,1.24,238,1.132,239,1.24,240,1.016,241,1.24,242,1.132,243,1.801,244,1.24,245,1.132,246,1.24,247,1.132,248,1.24,249,1.072,250,1.24,251,1.152,252,1.053,253,1.152,254,1.173,255,1.24,256,1.152,257,1.24,258,1.24,259,1.152,260,1.24,261,1.152,262,1.24,263,1.072,264,1.24,265,1.152,266,1.152,267,1.24,268,1.152,269,1.173,270,1.24,271,1.111,272,1.111,273,1.864,274,1.132,275,0.896,276,1.152,277,1.132,278,1.132,279,1.152,280,1.132,281,1.152,282,1.24,283,1.132,284,1.24,285,1.152,286,1.24,287,1.152,288,1.24,289,1.152,290,1.24,291,1.152,292,1.091,293,1.111,294,1.24,295,1.132,296,1.24,297,1.132,298,1.24,299,1.132,300,1.24,301,1.132,302,1.195,303,1.24,304,1.132,305,1.173,306,1.111,307,1.24,308,0.004,309,0.004,327,3.17,365,2.48,643,3.89,936,2.703,1079,2.258,1249,3.669,1250,5.541,1253,2.927,1254,8.445,1255,5.841,1260,2.511,1261,4.882,1262,5.541,1263,4.493,1264,4.493,1265,6.231,1266,4.493,1267,6.231,1268,3.74]],["title/directives/DropzoneDirective.html",[184,0.968,295,1.222]],["body/directives/DropzoneDirective.html",[2,0.323,3,0.323,8,0.471,10,0.56,22,1.23,24,0.007,25,1.607,26,1.66,32,0.611,35,1.757,38,0.872,60,0.254,64,0.775,66,1.22,71,0.922,76,1.195,86,0.84,87,0.585,88,0.585,104,4.831,108,2.141,113,0.749,132,0.499,145,0.235,146,0.209,184,1.727,295,1.784,306,1.753,308,0.005,309,0.005,340,1.208,365,2.681,373,1.914,379,2.847,380,2.904,409,2.725,425,5.786,434,6.302,444,4.748,465,3.227,495,1.781,506,7.634,535,1.747,1183,5.664,1269,4.838,1270,5.786,1271,7.086,1272,8.658,1273,5.378,1274,7.881,1275,7.881,1276,6.435,1277,8.349,1278,8.876,1279,4.838,1280,5.439,1281,5.786,1282,5.786,1283,5.439,1284,5.439,1285,5.439,1286,5.664,1287,5.439,1288,5.439,1289,6.765,1290,5.439,1291,5.439,1292,5.439,1293,5.439,1294,5.439,1295,5.439,1296,5.439,1297,7.881,1298,5.664,1299,7.7,1300,5.439,1301,5.439,1302,4.145,1303,5.439,1304,5.439,1305,5.439,1306,5.439]],["title/components/DynamicRackComponent.html",[0,0.244,211,1.244]],["body/components/DynamicRackComponent.html",[0,0.413,1,1.193,2,0.277,3,0.277,4,0.944,5,1.283,6,1.283,8,0.242,10,0.479,19,1.13,22,1.051,23,1.827,24,0.007,26,2.337,27,2.022,30,1.697,35,0.979,41,1.495,55,1.036,60,0.298,64,0.628,66,0.628,70,2.313,72,1.897,86,0.718,87,0.952,88,0.5,106,2.068,108,1.636,110,1.171,112,1.827,113,0.878,132,0.427,145,0.201,146,0.123,171,1.798,182,0.863,183,1.666,184,1.564,188,2.123,189,1.283,190,1.283,191,1.15,192,1.193,193,1.469,194,1.366,195,2.267,196,1.214,197,2.163,198,1.214,199,1.283,200,1.193,201,1.761,202,1.214,203,1.283,204,1.193,205,1.283,206,1.15,207,1.171,208,1.668,209,2.01,210,1.15,211,2.01,212,1.193,213,1.974,214,1.283,215,1.214,216,2.01,217,1.283,218,1.283,219,1.214,220,2.163,221,1.193,222,2.01,223,1.214,224,1.214,225,1.193,226,1.283,227,1.171,228,1.214,229,1.283,230,1.193,231,1.283,232,1.283,233,1.193,234,1.283,235,1.15,236,1.193,237,1.283,238,1.171,239,1.283,240,1.051,241,1.283,242,1.171,243,1.834,244,1.283,245,1.171,246,1.283,247,1.171,248,1.283,249,1.11,250,1.283,251,1.193,252,1.09,253,1.193,254,1.214,255,1.283,256,1.193,257,1.283,258,1.283,259,1.193,260,1.283,261,1.193,262,1.283,263,1.11,264,1.283,265,1.193,266,1.193,267,1.283,268,1.193,269,1.214,270,1.283,271,1.15,272,1.15,273,1.884,274,1.171,275,0.928,276,1.193,277,1.171,278,1.171,279,1.193,280,1.171,281,1.193,282,1.283,283,1.171,284,1.283,285,1.193,286,1.283,287,1.193,288,1.283,289,1.193,290,1.283,291,1.193,292,1.13,293,1.15,294,1.283,295,1.171,296,1.283,297,1.171,298,1.283,299,1.171,300,1.283,301,1.171,302,1.237,303,1.283,304,1.171,305,1.214,306,1.15,307,1.283,308,0.005,309,0.005,340,1.618,428,2.768,535,1.493,1079,2.313,1136,2.837,1307,5.21,1308,5.21,1309,4.136,1310,4.863,1311,6.38,1312,4.136,1313,7.546,1314,4.65,1315,5.21,1316,5.21,1317,5.675,1318,4.65,1319,4.65,1320,4.65]],["title/components/DynamicSlotComponent.html",[0,0.244,212,1.244]],["body/components/DynamicSlotComponent.html",[0,0.448,1,1.08,2,0.25,3,0.25,4,0.855,5,1.162,6,1.162,8,0.219,10,0.433,19,1.023,22,0.952,23,1.705,24,0.007,26,2.33,27,2.015,30,1.584,32,0.473,33,0.788,35,0.886,38,0.675,41,1.927,43,1.555,44,0.955,55,1.054,60,0.278,64,0.832,66,0.932,70,2.158,72,1.771,74,1.5,75,1.371,76,0.852,86,0.919,87,0.944,88,0.64,105,1.784,106,2.648,108,1.527,110,1.061,112,1.705,113,1.09,121,1.95,132,0.386,142,1.678,145,0.182,146,0.112,171,2.302,182,0.782,183,1.555,184,1.498,188,2.034,189,1.162,190,1.162,191,1.042,192,1.08,193,1.371,194,1.318,195,2.186,196,1.1,197,2.072,198,1.1,199,1.162,200,1.08,201,1.643,202,1.1,203,1.162,204,1.08,205,1.162,206,1.042,207,1.061,208,1.609,209,1.906,210,1.042,211,1.08,212,1.926,213,1.995,214,1.162,215,1.1,216,1.906,217,1.162,218,1.162,219,1.1,220,2.072,221,1.08,222,1.906,223,1.1,224,1.1,225,1.08,226,1.162,227,1.061,228,1.1,229,1.162,230,1.08,231,1.162,232,1.162,233,1.08,234,1.162,235,1.042,236,1.08,237,1.162,238,1.061,239,1.162,240,0.952,241,1.162,242,1.061,243,1.74,244,1.162,245,1.061,246,1.162,247,1.061,248,1.162,249,1.005,250,1.162,251,1.08,252,0.987,253,1.08,254,1.1,255,1.162,256,1.08,257,1.162,258,1.162,259,1.08,260,1.162,261,1.08,262,1.162,263,1.005,264,1.162,265,1.08,266,1.08,267,1.162,268,1.08,269,1.1,270,1.162,271,1.042,272,1.042,273,1.826,274,1.061,275,0.84,276,1.08,277,1.061,278,1.061,279,1.08,280,1.061,281,1.08,282,1.162,283,1.061,284,1.162,285,1.08,286,1.162,287,1.08,288,1.162,289,1.08,290,1.162,291,1.08,292,1.023,293,1.042,294,1.162,295,1.061,296,1.162,297,1.061,298,1.162,299,1.061,300,1.162,301,1.061,302,1.12,303,1.162,304,1.995,305,1.961,306,1.042,307,1.162,308,0.004,309,0.004,340,1.534,359,2.583,428,3.257,430,2.452,535,1.352,949,3.446,1079,2.158,1136,2.648,1307,6.131,1310,4.538,1312,3.746,1313,7.315,1315,5.641,1316,4.862,1317,5.296,1321,5.396,1322,3.746,1323,4.862,1324,6.715,1325,4.862,1326,5.955,1327,4.862,1328,3.61,1329,4.212,1330,6.469,1331,4.862,1332,3.746,1333,4.212,1334,4.212,1335,4.212,1336,4.212,1337,4.212,1338,4.212,1339,4.212]],["title/directives/EntriesDirective.html",[184,0.968,297,1.222]],["body/directives/EntriesDirective.html",[0,0.213,2,0.252,3,0.252,4,0.86,7,1.601,8,0.221,10,0.436,15,1.712,21,3.525,22,0.957,24,0.007,25,1.473,26,1.401,27,0.86,32,0.475,33,0.791,35,1.82,38,1.11,39,1.714,43,2.296,44,0.958,45,2.542,46,3.829,55,0.846,60,0.396,61,3.341,64,0.865,65,1.304,66,1.267,75,1.732,76,1.343,77,1.93,86,0.923,87,0.643,88,0.854,103,3.187,113,1.093,116,3.116,121,2.465,132,0.388,135,1.982,142,1.029,145,0.183,146,0.112,162,1.443,167,1.837,184,1.382,185,1.637,186,1.751,187,2.036,194,1.152,208,1.81,240,1.566,297,1.505,308,0.004,309,0.004,339,3.042,340,0.94,341,2.22,342,2.786,357,1.883,359,4.105,363,5.28,367,1.426,372,4.881,373,1.828,384,2.786,388,4.296,403,2.036,405,3.227,408,3.227,409,2.06,410,4.518,415,6.146,443,2.166,495,2.698,528,4.4,531,1.68,535,1.359,774,4.728,820,3.872,826,3.62,864,6.537,889,3.043,904,3.766,975,4.7,992,2.644,993,3.457,1340,3.766,1341,4.881,1342,6.146,1343,6.694,1344,6.694,1345,6.146,1346,5.977,1347,6.928,1348,5.977,1349,4.234,1350,3.732,1351,5.977,1352,4.234,1353,4.234,1354,4.234,1355,7.527,1356,4.234,1357,4.234,1358,4.555,1359,4.234,1360,4.234,1361,4.234,1362,4.234,1363,4.234,1364,4.234,1365,5.977,1366,4.234,1367,4.234,1368,4.234,1369,4.234,1370,4.234,1371,4.234,1372,6.928,1373,5.977,1374,3.457,1375,4.234,1376,4.234,1377,4.234,1378,3.457,1379,4.234,1380,6.928,1381,6.162,1382,7.527,1383,6.928,1384,4.234,1385,4.234,1386,4.234,1387,4.234,1388,4.234,1389,4.234,1390,4.234,1391,4.234]],["title/directives/EntryDirective.html",[184,0.968,299,1.222]],["body/directives/EntryDirective.html",[2,0.3,3,0.3,4,1.716,7,1.909,8,0.263,10,0.52,15,1.932,21,3.865,22,1.141,24,0.007,25,1.252,26,1.581,27,1.025,32,0.567,33,0.892,35,1.898,44,1.081,46,4.125,55,1.083,60,0.379,64,0.898,65,1.769,66,1.256,71,0.855,76,1.244,77,1.295,86,0.779,87,0.543,88,0.543,103,3.217,113,0.928,116,3.288,121,2.209,132,0.463,135,2.363,145,0.218,146,0.134,184,1.617,185,1.951,186,2.088,187,2.427,208,1.973,240,1.718,299,1.699,308,0.005,309,0.005,339,3.277,340,1.121,341,2.647,342,3.001,356,5.063,357,2.245,359,4.242,360,4.069,363,5.789,364,5.072,365,2.603,367,1.609,372,5.508,373,1.639,376,2.551,378,3.649,379,1.59,380,2.82,384,2.497,385,5.999,388,4.848,391,4.122,392,3.152,403,2.427,405,3.848,408,3.848,409,1.501,410,4.049,415,5.508,535,1.621,820,4.246,826,3.853,889,3.628,903,4.49,975,3.152,992,3.152,1028,4.122,1341,5.508,1342,6.203,1381,4.49,1392,4.49,1393,6.756,1394,6.745,1395,5.048,1396,5.048,1397,5.048,1398,5.048,1399,5.048,1400,5.048,1401,5.048,1402,5.048,1403,5.048,1404,5.048,1405,6.745,1406,5.048,1407,5.048,1408,5.048]],["title/components/EntryListComponent.html",[0,0.244,221,1.244]],["body/components/EntryListComponent.html",[0,0.346,1,0.77,2,0.178,3,0.178,4,0.61,5,0.828,6,0.828,7,1.135,8,0.156,10,0.309,18,2.761,19,0.729,22,0.679,24,0.007,25,0.557,26,2.296,27,1.979,28,1.579,30,1.233,32,0.337,33,0.962,34,1.68,35,1.53,38,1.215,39,1.702,41,1.327,43,0.784,44,1.02,46,2.358,55,0.566,60,0.401,64,0.862,65,1.501,66,1.225,70,1.088,71,0.509,72,1.893,74,0.756,75,1.303,76,1.195,77,1.865,84,2.166,86,0.983,87,0.912,88,0.864,103,3.027,105,1.963,108,1.189,110,0.756,113,0.779,116,2.141,123,5.024,130,1.624,132,0.275,142,1.126,145,0.13,146,0.08,167,2.01,182,0.557,183,1.21,184,0.924,185,1.16,186,1.242,187,1.443,188,1.724,189,0.828,190,0.828,191,0.742,192,0.77,193,1.067,194,1.537,195,1.898,196,0.784,197,1.756,198,0.784,199,0.828,200,0.77,201,1.279,202,0.784,203,0.828,204,0.77,205,0.828,206,0.742,207,0.756,208,1.78,209,1.562,210,0.742,211,0.77,212,0.77,213,0.756,214,0.828,215,0.784,216,1.562,217,0.828,218,0.828,219,0.784,220,1.756,221,1.865,222,1.562,223,0.784,224,0.784,225,0.77,226,0.828,227,0.756,228,0.784,229,0.828,230,0.77,231,0.828,232,0.828,233,0.77,234,0.828,235,1.4,236,0.77,237,0.828,238,0.756,239,0.828,240,1.048,241,0.828,242,0.756,243,1.426,244,0.828,245,0.756,246,0.828,247,0.756,248,0.828,249,0.716,250,0.828,251,0.77,252,0.703,253,0.77,254,0.784,255,0.828,256,0.77,257,0.828,258,0.828,259,0.77,260,0.828,261,0.77,262,0.828,263,0.716,264,0.828,265,0.77,266,0.77,267,0.828,268,0.77,269,0.784,270,0.828,271,0.742,272,0.742,273,1.822,274,0.756,275,0.599,276,0.77,277,2.26,278,0.756,279,0.77,280,0.756,281,0.77,282,0.828,283,0.756,284,0.828,285,0.77,286,0.828,287,0.77,288,0.828,289,0.77,290,0.828,291,0.77,292,0.729,293,0.742,294,0.828,295,0.756,296,0.828,297,0.756,298,0.828,299,0.756,300,0.828,301,0.756,302,0.798,303,0.828,304,0.756,305,0.784,306,0.742,307,0.828,308,0.003,309,0.003,324,5.447,331,2.65,339,2.573,340,1.257,342,2.356,350,2.894,357,1.335,359,2.984,365,1.488,373,0.729,379,0.945,380,1.044,384,1.716,386,1.335,392,1.874,403,1.443,424,2.288,427,1.527,438,0.983,443,2.837,452,1.271,465,1.16,469,1.678,475,1.527,489,1.527,494,2.451,512,4.378,517,3.062,523,3.061,528,1.527,532,1.678,533,2.288,556,2.581,570,1.335,587,1.335,604,3.845,619,1.574,626,1.802,641,1.737,710,1.737,716,5.965,717,2.573,822,3.061,826,2.581,833,3.812,834,3.684,835,2.633,836,2.696,837,5.965,864,4.345,869,5.776,870,1.874,873,2.451,878,1.624,888,1.678,889,4.944,915,3.535,922,4.386,951,2.288,952,3.443,968,2.581,975,3.535,992,1.874,1041,4.147,1046,2.049,1047,2.451,1054,1.802,1190,2.451,1242,2.288,1341,3.784,1409,2.67,1410,5.661,1411,4.635,1412,4.122,1413,4.635,1414,7.579,1415,6.366,1416,4.635,1417,6.467,1418,3.163,1419,3.002,1420,3.863,1421,4.234,1422,4.635,1423,4.122,1424,3.002,1425,4.122,1426,2.67,1427,2.67,1428,3.002,1429,3.002,1430,3.002,1431,3.002,1432,2.67,1433,3.002,1434,1.369,1435,3.002,1436,3.002,1437,3.002,1438,3.002,1439,3.002,1440,4.296,1441,2.67,1442,3.002,1443,2.049,1444,3.002,1445,3.002,1446,3.002,1447,3.002,1448,3.002,1449,3.002,1450,3.002,1451,3.163,1452,3.002,1453,3.002,1454,3.002,1455,3.002,1456,3.002,1457,1.874,1458,3.002,1459,1.802,1460,3.002,1461,3.002,1462,3.002,1463,3.002,1464,3.002,1465,3.002,1466,3.002,1467,3.002,1468,3.002,1469,3.002,1470,4.635,1471,4.635,1472,1.874,1473,3.002,1474,3.002,1475,2.67,1476,2.288,1477,3.002,1478,3.002,1479,3.002,1480,4.122]],["title/components/ErrorComponent.html",[0,0.244,225,1.244]],["body/components/ErrorComponent.html",[0,0.403,1,1.111,2,0.258,3,0.258,4,0.88,5,1.196,6,1.196,8,0.226,10,0.446,15,1.74,19,1.053,20,3.922,21,3.57,22,0.98,24,0.007,26,2.332,27,2.014,30,1.616,32,0.487,35,1.685,44,0.974,46,3.869,47,4.4,60,0.284,64,0.598,66,1.081,76,1.088,77,1.799,84,1.913,86,0.669,87,0.963,88,0.466,103,2.202,108,1.558,110,1.091,113,0.836,119,3.396,132,0.398,142,1.053,145,0.187,146,0.115,182,0.804,183,1.587,184,1.212,188,2.06,189,1.196,190,1.196,191,1.072,192,1.111,193,1.399,194,1.332,195,2.21,196,1.132,197,2.098,198,1.132,199,1.196,200,1.799,201,1.677,202,1.132,203,1.196,204,1.111,205,1.196,206,1.072,207,1.091,208,1.731,209,1.936,210,1.072,211,1.111,212,1.111,213,1.091,214,1.196,215,1.132,216,1.936,217,1.196,218,1.196,219,1.132,220,2.098,221,1.111,222,1.936,223,1.132,224,1.132,225,1.95,226,1.196,227,1.091,228,1.132,229,1.196,230,1.111,231,1.196,232,1.196,233,1.111,234,1.196,235,1.072,236,1.111,237,1.196,238,1.091,239,1.196,240,0.98,241,1.196,242,1.091,243,1.767,244,1.196,245,1.091,246,1.196,247,1.091,248,1.196,249,1.034,250,1.196,251,1.111,252,1.016,253,1.111,254,1.132,255,1.196,256,1.111,257,1.196,258,1.196,259,1.111,260,1.196,261,1.111,262,1.196,263,1.034,264,1.196,265,1.111,266,1.111,267,1.196,268,1.111,269,1.132,270,1.196,271,1.072,272,1.072,273,1.843,274,1.091,275,0.864,276,1.111,277,1.091,278,1.091,279,1.111,280,1.091,281,1.111,282,1.196,283,1.091,284,1.196,285,1.111,286,1.196,287,1.111,288,1.196,289,1.111,290,1.196,291,1.111,292,1.053,293,1.072,294,1.196,295,1.091,296,1.196,297,1.091,298,1.196,299,1.091,300,1.196,301,1.091,302,1.153,303,1.196,304,1.091,305,1.132,306,1.072,307,1.196,308,0.004,309,0.004,319,2.03,339,1.752,340,0.962,515,3.705,516,4.476,535,1.392,570,2.702,717,3.62,815,4.367,816,3.287,817,4.961,818,4.631,835,2.513,836,3.22,878,2.344,1079,2.543,1481,3.854,1482,6.076,1483,3.115,1484,6.076,1485,4.334,1486,4.334,1487,4.334,1488,4.334,1489,5.404,1490,4.334,1491,4.334,1492,4.334,1493,4.334,1494,4.334,1495,4.334,1496,4.334,1497,4.334,1498,4.334]],["title/classes/Field.html",[41,1.137,146,0.128]],["body/classes/Field.html",[0,0.373,2,0.212,3,0.212,7,1.995,8,0.186,15,1.51,24,0.007,25,1.166,32,0.592,33,1.205,34,1.291,35,1.804,38,1.497,41,2.204,42,2.598,43,1.64,44,1.244,55,0.948,56,3.296,60,0.166,64,0.935,65,2.111,66,1.283,71,0.603,75,1.214,76,1.061,86,0.55,87,0.887,88,1.038,112,2.547,113,1.135,118,3.087,142,1.281,145,0.154,146,0.227,171,3.189,194,1.402,308,0.004,309,0.004,328,4.492,340,0.791,357,1.584,360,3.634,365,2.38,373,2.238,376,2.376,384,1.318,396,3.6,409,2.308,423,2.683,430,2.23,431,1.508,432,3.79,438,1.727,443,3.152,445,3.25,454,2.853,570,3.087,577,3.79,587,2.793,726,4.307,800,2.765,858,3.052,895,2.908,936,3.719,943,1.761,968,3.909,1017,3.166,1078,4.611,1079,2.814,1105,4.02,1106,3.398,1125,2.56,1129,2.56,1136,3.668,1146,3.166,1434,1.624,1443,3.6,1472,3.293,1499,3.168,1500,4.649,1501,6.176,1502,5.292,1503,4.169,1504,5.058,1505,5.67,1506,4.847,1507,4.847,1508,6.944,1509,5.274,1510,3.561,1511,4.307,1512,3.561,1513,3.561,1514,3.561,1515,4.307,1516,3.79,1517,4.691,1518,3.561,1519,3.561,1520,4.691,1521,4.02,1522,3.561,1523,4.307,1524,5.274,1525,4.307,1526,3.561,1527,3.561,1528,3.561,1529,3.561,1530,4.691,1531,3.052,1532,3.561,1533,3.561,1534,3.561,1535,7.763,1536,3.561,1537,3.6,1538,3.561,1539,3.561,1540,3.561,1541,3.561,1542,3.561,1543,3.561,1544,4.691,1545,2.32,1546,2.908,1547,2.714,1548,2.948,1549,2.431,1550,3.168,1551,3.052,1552,2.061,1553,1.991,1554,2.908,1555,3.168,1556,3.168,1557,2.908,1558,1.867,1559,3.168,1560,2.908,1561,2.908,1562,4.02,1563,4.307,1564,1.991,1565,3.168,1566,4.02,1567,3.168,1568,3.168,1569,2.431,1570,3.168,1571,3.168,1572,2.908,1573,2.908,1574,3.168,1575,2.714,1576,2.56,1577,2.714,1578,2.32,1579,3.168,1580,2.714,1581,4.307,1582,3.561,1583,3.561,1584,3.168,1585,3.561,1586,3.168]],["title/interfaces/FieldConfig.html",[918,1.47,1587,2.912]],["body/interfaces/FieldConfig.html",[2,0.434,3,0.434,8,0.38,10,0.75,24,0.007,32,0.819,41,2.105,65,1.852,66,0.984,112,2.431,145,0.315,194,1.213,308,0.006,309,0.006,793,4.57,800,4.451,918,2.573,920,4.553,957,4.082,1500,5.353,1587,5.097,1588,7.551,1589,7.291]],["title/interfaces/FileOptions.html",[918,1.47,1590,3.31]],["body/interfaces/FileOptions.html",[0,0.195,2,0.231,3,0.231,8,0.44,10,0.399,24,0.007,25,1.225,32,0.436,33,0.743,39,1.979,41,0.909,43,2.284,55,0.937,60,0.414,64,0.847,65,1.879,70,2.035,71,1.482,72,1.154,75,0.893,76,1.345,79,2.329,84,2.278,87,0.604,88,0.998,103,1.406,112,1.89,116,2.736,118,2.497,126,1.533,132,0.356,142,2.005,145,0.285,146,0.103,162,1.914,167,2.436,171,2.796,193,2.202,194,1.203,208,1.34,273,1.466,275,0.774,292,2.124,308,0.004,309,0.004,332,3.962,339,2.27,342,2.079,360,1.816,362,5.238,367,1.575,373,2.092,378,2.099,379,1.222,380,2.515,394,2.378,401,4.937,402,2.648,403,1.865,409,1.154,417,2.957,452,1.643,454,2.099,465,2.171,475,1.974,481,2.628,495,2.161,518,2.423,535,1.246,556,3.009,604,3.689,615,1.803,640,2.528,641,3.249,678,3.689,686,2.788,717,2.668,807,3.037,822,1.865,888,2.169,898,2.648,918,2.326,934,2.788,936,2.436,952,2.099,954,2.329,955,2.648,956,2.329,957,1.865,958,2.329,959,1.683,960,2.528,968,1.769,991,2.648,995,2.528,1011,2.245,1042,3.249,1053,2.528,1054,2.329,1096,3.249,1097,2.329,1136,1.725,1260,2.169,1268,2.329,1302,4.28,1328,2.7,1350,2.423,1421,3.57,1434,1.769,1440,3.506,1457,2.423,1459,3.371,1506,2.423,1548,2.169,1590,4.504,1591,2.957,1592,5.513,1593,6.534,1594,5.513,1595,5.513,1596,5.513,1597,4.036,1598,3.506,1599,4.036,1600,3.506,1601,4.585,1602,4.585,1603,3.168,1604,3.168,1605,4.585,1606,3.168,1607,2.423,1608,3.168,1609,3.168,1610,2.099,1611,2.528,1612,2.648,1613,2.957,1614,3.168,1615,3.168,1616,3.168,1617,3.168,1618,2.648,1619,2.788,1620,2.423,1621,3.168,1622,6.267,1623,3.168,1624,3.168,1625,4.28,1626,5.389,1627,3.168,1628,4.585,1629,4.585,1630,4.585,1631,4.585,1632,4.585,1633,4.585,1634,4.585,1635,4.585,1636,4.585,1637,4.585,1638,5.03,1639,2.957,1640,3.168,1641,3.168,1642,3.168,1643,3.168,1644,4.585,1645,3.168,1646,4.585,1647,2.957,1648,3.168,1649,4.585,1650,3.168,1651,3.658,1652,3.168,1653,4.585,1654,3.168,1655,3.168,1656,2.957,1657,2.957,1658,2.788,1659,3.168,1660,3.168,1661,3.168,1662,3.168]],["title/injectables/FileService.html",[367,1.157,1607,3.029]],["body/injectables/FileService.html",[0,0.256,2,0.202,3,0.202,8,0.424,10,0.349,24,0.007,25,1.415,32,0.381,33,0.673,38,0.978,39,2.285,41,1.192,43,2.212,44,0.815,55,0.965,60,0.402,64,0.846,65,1.663,66,1.097,70,2.457,71,1.493,72,1.009,75,1.171,76,1.354,79,2.036,84,2.49,86,1.177,87,0.85,88,0.972,103,1.229,112,1.747,113,0.84,116,2.99,118,2.713,126,2.01,132,0.311,142,1.921,145,0.264,146,0.09,162,1.733,165,2.666,167,2.647,171,1.966,193,2.188,194,1.208,208,1.548,273,1.355,275,1.015,292,2.178,308,0.004,309,0.004,331,2.381,332,4.07,339,2.74,340,0.753,341,1.778,342,2.509,360,1.588,362,5.204,367,1.733,373,1.482,378,2.751,379,1.602,380,2.75,386,1.508,394,2.871,401,4.957,402,2.315,403,1.631,409,1.009,412,2.585,417,2.585,430,1.806,442,3.655,452,2.154,454,2.751,465,2.359,475,1.726,481,2.381,495,1.998,518,3.176,535,1.089,556,2.783,604,4.42,615,2.177,640,2.21,641,2.943,678,3.411,686,2.438,717,2.936,807,1.835,822,2.445,888,2.843,898,2.315,918,1.849,934,3.655,936,2.941,952,1.835,954,3.053,955,3.471,956,3.053,957,2.445,958,3.053,959,2.206,960,3.314,968,2.319,991,3.471,995,2.21,1011,2.943,1042,3.923,1053,2.21,1054,2.036,1096,2.943,1097,2.036,1136,2.261,1260,1.896,1268,3.053,1302,3.876,1328,2.934,1350,3.176,1421,4.277,1434,2.319,1440,3.176,1457,2.118,1459,2.036,1506,3.176,1548,1.896,1590,5.204,1591,2.585,1592,2.585,1593,4.153,1594,2.585,1595,2.585,1596,2.585,1597,2.438,1598,2.118,1599,2.438,1600,2.118,1601,2.77,1602,2.77,1603,2.77,1604,2.77,1605,4.153,1606,2.77,1607,3.176,1608,5.535,1609,4.153,1610,2.751,1611,3.314,1612,4.165,1613,3.876,1614,4.153,1615,2.77,1616,2.77,1617,2.77,1618,2.315,1619,2.438,1620,2.118,1621,2.77,1622,6.456,1623,4.153,1624,4.982,1625,3.876,1626,4.982,1627,2.77,1628,4.153,1629,4.153,1630,4.153,1631,4.153,1632,4.153,1633,4.153,1634,4.153,1635,4.153,1636,4.153,1637,4.153,1638,4.65,1639,2.585,1640,4.153,1641,2.77,1642,2.77,1643,2.77,1644,4.153,1645,2.77,1646,4.153,1647,2.585,1648,4.153,1649,4.153,1650,2.77,1651,3.314,1652,2.77,1653,4.153,1654,2.77,1655,2.77,1656,2.585,1657,2.585,1658,2.438,1659,2.77,1660,2.77,1661,2.77,1662,2.77,1663,5.086,1664,5.086,1665,5.086,1666,5.086,1667,5.086,1668,3.392,1669,3.392,1670,3.392,1671,3.392,1672,3.392,1673,3.392,1674,3.392,1675,3.392,1676,3.392]],["title/modules/FilesModule.html",[310,1.021,1037,3.486]],["body/modules/FilesModule.html",[2,0.32,3,0.32,8,0.28,23,2.244,24,0.007,58,1.833,60,0.45,132,0.493,134,2.125,141,2.841,145,0.359,146,0.142,182,0.998,185,2.079,192,2.426,193,1.619,194,1.17,196,2.495,291,2.45,293,2.34,295,2.382,301,2.382,308,0.005,309,0.005,310,1.48,312,2.125,317,2.843,318,2.034,319,1.796,321,3.931,322,2.66,421,4.391,491,4.391,554,5.312,557,3.207,558,2.391,564,4.391,877,3.504,1037,7.098,1038,6.039,1039,6.163,1044,5.055,1052,4.099,1055,4.391,1065,4.783,1607,5.525,1677,4.783,1678,4.783,1679,5.378,1680,4.783,1681,4.783,1682,5.378,1683,3.865,1684,3.504,1685,4.783,1686,5.378,1687,4.783,1688,5.378,1689,5.378]],["title/interfaces/FormConfig.html",[918,1.47,1690,3.697]],["body/interfaces/FormConfig.html",[2,0.438,3,0.438,8,0.384,10,0.758,18,3.706,24,0.007,60,0.344,145,0.318,308,0.006,309,0.006,424,6.511,489,3.749,918,2.589,920,4.602,1690,7.074,1691,6.554,1692,6.154,1693,6.018]],["title/modules/FormModule.html",[310,1.021,1694,3.31]],["body/modules/FormModule.html",[2,0.277,3,0.277,8,0.242,19,2.15,23,2.087,24,0.007,58,1.586,60,0.451,113,0.879,132,0.427,134,1.84,141,2.641,145,0.339,146,0.123,173,2.694,174,2.907,182,0.864,198,2.415,202,2.415,204,2.372,210,2.189,227,2.329,228,2.415,261,2.372,287,2.372,308,0.005,309,0.005,310,1.344,312,1.84,317,2.581,318,1.761,319,1.555,321,3.569,322,2.415,347,2.907,445,2.179,557,2.912,558,2.07,560,4.974,1050,3.345,1102,6.647,1261,3.177,1694,6.78,1695,4.14,1696,4.14,1697,4.14,1698,4.14,1699,4.14,1700,6.647,1701,6.647,1702,6.312,1703,6.026,1704,5.3,1705,5.793,1706,5.53,1707,6.1,1708,4.655,1709,3.801,1710,4.655,1711,4.655,1712,4.14,1713,4.655,1714,4.655,1715,4.655,1716,4.655,1717,4.655,1718,4.14,1719,3.548,1720,4.14,1721,4.655,1722,3.801,1723,4.655,1724,4.655]],["title/injectables/FormService.html",[367,1.157,1707,3.486]],["body/injectables/FormService.html",[2,0.308,3,0.308,8,0.27,10,0.532,14,4.032,24,0.007,32,0.581,39,2.165,40,4.098,41,2.281,42,3.694,44,1.099,55,0.939,60,0.383,64,0.805,66,1.105,71,1.443,72,2.039,75,1.885,76,1.337,77,1.327,86,1.264,87,0.881,88,0.881,112,2.782,119,3.833,122,2.892,127,5.113,132,0.475,134,2.045,142,2.127,145,0.224,146,0.204,167,2.245,171,2,308,0.005,309,0.005,367,1.835,409,1.538,427,3.488,452,2.904,485,5.599,515,3.181,570,3.049,587,2.301,619,3.595,717,2.092,718,3.297,779,3.595,918,2.078,1253,3.371,1507,5.833,1707,4.928,1725,4.602,1726,4.281,1727,6.857,1728,6.857,1729,6.857,1730,6.857,1731,6.857,1732,5.174,1733,6.857,1734,5.174,1735,6.857,1736,5.174,1737,6.857,1738,6.84,1739,6.857,1740,5.174,1741,8.188,1742,7.69,1743,4.602,1744,6.857,1745,5.174,1746,4.602,1747,5.174,1748,6.857,1749,5.174,1750,6.857,1751,5.174,1752,5.174,1753,5.174,1754,5.174,1755,5.174,1756,5.174,1757,5.174,1758,5.174,1759,5.174,1760,5.174]],["title/injectables/GeocodeService.html",[367,1.157,1761,3.16]],["body/injectables/GeocodeService.html",[2,0.298,3,0.298,8,0.261,10,0.515,11,4.188,24,0.007,32,0.562,35,1.701,39,2.255,44,1.075,60,0.394,64,0.829,66,1.137,71,1.369,75,1.996,76,1.339,86,1.301,87,0.906,88,0.906,108,2.072,116,3.056,132,0.459,141,2.431,142,1.838,145,0.216,146,0.133,188,1.356,243,2.296,308,0.006,309,0.005,331,3.139,340,1.112,367,1.805,376,2.537,427,3.413,469,4.71,495,1.639,535,1.607,772,3.126,779,2.624,794,3.881,807,4.371,971,3.417,1106,3.628,1270,5.477,1281,5.477,1443,4.578,1761,4.37,1762,4.088,1763,5.807,1764,7.564,1765,6.707,1766,6.707,1767,6.707,1768,6.707,1769,5.006,1770,8.081,1771,7.878,1772,5.006,1773,6.707,1774,6.707,1775,5.006,1776,6.88,1777,5.477,1778,6.707,1779,5.006,1780,5.477,1781,7.494,1782,5.477,1783,6.707,1784,5.006,1785,6.707,1786,6.707,1787,5.006,1788,4.088,1789,5.006,1790,5.006,1791,5.006,1792,5.006,1793,4.452,1794,5.006,1795,5.006,1796,5.006,1797,5.006,1798,4.188,1799,5.006,1800,5.006,1801,6.707,1802,4.088,1803,5.966,1804,5.006,1805,5.966,1806,5.006,1807,5.006,1808,5.006,1809,5.006,1810,5.006,1811,5.006,1812,4.088,1813,5.006,1814,5.006,1815,5.966,1816,5.006,1817,5.006,1818,5.006,1819,5.006,1820,5.006,1821,5.006,1822,5.006,1823,5.006,1824,5.006,1825,5.006]],["title/pipes/GroupPipe.html",[1101,2.543,1104,3.31]],["body/pipes/GroupPipe.html",[2,0.393,3,0.393,8,0.345,10,0.681,15,1.894,22,1.495,24,0.007,33,1.234,38,1.526,42,3.314,43,2.465,44,1.06,55,0.978,60,0.374,64,0.651,65,1.88,66,0.893,72,2.382,75,1.844,76,1.282,86,1.021,87,0.927,88,0.711,126,3.167,132,0.607,145,0.286,146,0.175,308,0.006,309,0.006,487,3.27,615,2.946,731,5.003,968,3.654,1101,4.519,1104,6.115,1105,6.107,1106,3.578,1112,5.469,1826,5.883,1827,8.013,1828,6.614,1829,6.614,1830,6.614]],["title/injectables/HistoryService.html",[367,1.157,1040,3.486]],["body/injectables/HistoryService.html",[2,0.251,3,0.411,8,0.22,10,0.435,24,0.007,32,0.474,33,0.789,38,1.271,39,2.25,44,1.109,60,0.404,64,0.914,65,1.885,66,1.202,71,0.716,72,2.235,75,1.948,76,1.236,77,1.083,84,2.367,86,1.161,87,0.808,88,0.808,103,2.162,113,1.091,116,2.999,121,1.954,132,0.387,135,1.976,142,1.681,145,0.182,146,0.112,165,3.128,208,1.212,273,1.952,275,1.38,308,0.004,309,0.004,330,6.909,340,1.325,348,3.448,359,3.261,367,1.651,379,1.879,394,1.788,409,1.774,413,2.751,414,3.756,441,4.694,444,2.949,514,2.535,515,2.468,523,3.958,532,2.36,556,4.236,586,5.403,678,2.36,679,2.637,708,4.288,710,3.452,717,3.601,794,4.35,800,4.768,827,5.925,833,4.768,834,4.589,907,2.751,975,5.283,992,2.637,1040,5.403,1221,3.452,1328,3.615,1421,4.919,1457,2.637,1610,3.227,1638,4.547,1831,3.756,1832,4.547,1833,8.461,1834,5.966,1835,5.966,1836,3.756,1837,5.966,1838,5.966,1839,4.223,1840,4.072,1841,5.306,1842,8.231,1843,5.966,1844,8.461,1845,4.223,1846,3.716,1847,5.403,1848,5.966,1849,4.223,1850,4.871,1851,5.306,1852,4.223,1853,4.223,1854,4.223,1855,6.686,1856,4.223,1857,4.223,1858,4.223,1859,4.223,1860,4.223,1861,8.461,1862,4.223,1863,4.223,1864,4.223,1865,5.966,1866,6.918,1867,4.547,1868,4.223,1869,4.223,1870,5.966,1871,4.223,1872,4.223,1873,5.966,1874,5.966,1875,4.223,1876,4.223]],["title/components/IconComponent.html",[0,0.244,230,1.244]],["body/components/IconComponent.html",[0,0.421,1,1.042,2,0.242,3,0.242,4,0.825,5,1.122,6,1.122,8,0.212,10,0.418,15,1.663,19,0.987,20,3.786,22,0.919,24,0.007,26,2.327,27,2.011,30,1.544,32,0.456,33,0.768,34,2.105,35,1.645,44,0.931,47,4.276,55,0.902,60,0.365,64,0.666,65,1.267,66,0.997,73,4.173,74,1.462,75,0.936,76,0.582,77,1.042,86,0.628,87,1.013,88,0.437,108,1.489,110,1.024,113,0.932,118,3.286,121,2.559,132,0.373,139,5.311,145,0.293,146,0.179,182,0.754,183,1.516,184,1.158,188,2.002,189,1.122,190,1.122,191,1.005,192,1.042,193,1.337,194,1.127,195,2.157,196,1.062,197,2.039,198,1.062,199,1.122,200,1.042,201,1.602,202,1.062,203,1.122,204,1.042,205,1.122,206,1.005,207,1.024,208,1.587,209,1.869,210,1.005,211,1.042,212,1.042,213,1.024,214,1.122,215,1.062,216,1.869,217,1.122,218,1.122,219,1.062,220,2.039,221,1.042,222,1.869,223,1.062,224,1.062,225,1.042,226,1.122,227,1.024,228,1.062,229,1.122,230,1.895,231,1.122,232,1.122,233,1.042,234,1.122,235,1.005,236,1.042,237,1.122,238,1.024,239,1.122,240,0.919,241,1.122,242,1.024,243,1.706,244,1.122,245,1.024,246,1.122,247,1.024,248,1.122,249,0.97,250,1.122,251,1.042,252,0.953,253,1.042,254,1.062,255,1.122,256,1.042,257,1.122,258,1.122,259,1.042,260,1.122,261,1.042,262,1.122,263,0.97,264,1.122,265,1.042,266,1.042,267,1.122,268,1.042,269,1.062,270,1.122,271,1.005,272,1.005,273,1.805,274,1.024,275,0.811,276,1.042,277,1.024,278,1.024,279,1.042,280,1.024,281,1.042,282,1.122,283,1.024,284,1.122,285,1.042,286,1.122,287,1.042,288,1.122,289,1.042,290,1.122,291,1.042,292,0.987,293,1.005,294,1.122,295,1.024,296,1.122,297,1.024,298,1.122,299,1.024,300,1.122,301,1.024,302,1.081,303,1.122,304,1.024,305,1.062,306,1.005,307,1.122,308,0.004,309,0.005,340,0.903,349,2.87,357,1.807,514,4.067,517,3.141,530,2.648,535,1.305,585,3.098,835,3.057,1079,2.455,1221,2.352,1451,4.623,1472,2.538,1504,6.348,1877,3.615,1878,6.637,1879,4.614,1880,5.806,1881,4.065,1882,5.979,1883,5.806,1884,4.065,1885,4.065,1886,5.806,1887,4.741,1888,3.615,1889,3.319,1890,4.425,1891,5.164,1892,5.164,1893,3.615,1894,3.615,1895,3.615,1896,3.615,1897,5.806,1898,4.065,1899,4.065,1900,4.065,1901,2.774,1902,4.065,1903,5.806]],["title/modules/IconModule.html",[310,1.021,1704,3.029]],["body/modules/IconModule.html",[2,0.406,3,0.406,8,0.356,23,2.503,24,0.007,58,2.328,60,0.433,132,0.627,141,3.168,145,0.391,146,0.181,182,1.268,230,2.504,308,0.006,309,0.006,310,1.72,312,2.7,317,3.303,318,2.584,319,2.282,322,3.09,557,3.726,558,3.038,1704,6.019,1882,6.123,1895,6.076,1904,6.076,1905,6.076,1906,6.076,1907,6.076,1908,6.832,1909,6.832]],["title/injectables/IconService.html",[367,1.157,1882,3.16]],["body/injectables/IconService.html",[2,0.393,3,0.393,8,0.345,10,0.681,18,2.869,24,0.007,27,1.864,32,0.743,33,1.06,38,1.06,39,2.132,55,0.978,60,0.419,64,0.651,66,0.893,74,2.349,83,6.115,113,1.186,118,3.563,121,2.624,132,0.607,145,0.286,146,0.175,308,0.006,309,0.006,328,4.637,367,2.057,452,3.794,835,3.706,836,3.393,1504,6.358,1600,5.003,1878,6.828,1882,5.22,1896,5.883,1910,5.883,1911,7.039,1912,6.614,1913,5.883]],["title/directives/ImageDirective.html",[184,0.968,301,1.222]],["body/directives/ImageDirective.html",[2,0.278,3,0.278,4,1.302,8,0.244,10,0.482,15,1.836,18,2.031,21,3.719,22,1.059,24,0.007,25,1.19,26,1.502,32,0.526,33,0.848,35,1.866,38,0.751,39,1.944,44,1.028,46,4,55,1.005,60,0.397,64,0.895,65,2.02,66,1.228,71,0.793,76,1.301,77,1.644,86,1.214,87,0.845,88,0.845,104,5.038,108,1.644,113,0.644,118,3.495,132,0.43,145,0.202,146,0.124,184,1.568,193,2.094,293,1.586,301,1.614,302,2.091,308,0.005,309,0.005,339,3.328,340,1.04,341,2.455,342,3.148,349,2.315,357,2.082,359,4.016,360,3.854,362,5.365,363,4.885,369,3.051,373,1.557,382,5.701,384,2.373,386,2.082,401,5.62,402,3.196,403,2.251,404,3.051,405,3.568,407,5.701,408,3.568,409,2.173,410,2.811,495,1.533,610,2.811,898,3.196,948,5.234,1011,2.709,1017,3.848,1613,6.635,1651,3.051,1687,4.164,1914,4.164,1915,7.342,1916,6.41,1917,5.234,1918,6.318,1919,5.991,1920,8.992,1921,6.41,1922,5.141,1923,6.723,1924,6.41,1925,4.682,1926,6.419,1927,5.701,1928,4.682,1929,5.701,1930,4.682,1931,4.682,1932,6.41,1933,6.41,1934,4.682,1935,6.41,1936,4.682,1937,6.41,1938,4.682,1939,4.682,1940,4.682,1941,4.682,1942,4.682,1943,7.31,1944,4.682,1945,4.682,1946,4.682,1947,5.701,1948,4.682,1949,4.682,1950,5.234,1951,4.682,1952,6.41,1953,4.682,1954,4.682,1955,4.682,1956,6.41,1957,4.682]],["title/components/InputComponent.html",[0,0.244,110,1.222]],["body/components/InputComponent.html",[0,0.46,1,0.808,2,0.187,3,0.187,4,1.185,5,0.87,6,0.87,8,0.164,10,0.324,13,2.603,15,1.378,16,3.504,18,2.087,19,1.418,21,2.969,22,0.713,23,1.671,24,0.007,25,0.893,26,2.301,27,1.988,30,1.28,32,0.354,33,1.078,35,1.904,36,3.921,38,1.188,40,3.722,41,2.074,42,3.289,43,2.239,44,0.771,46,3.323,48,3.005,49,3.921,52,2.889,55,0.941,60,0.36,64,0.878,65,1.05,66,1.204,71,0.534,72,1.942,74,0.794,75,0.726,76,1.061,77,1.675,81,2.889,83,3.284,84,2.732,85,3.284,86,0.901,87,0.943,88,0.628,89,2.889,99,2.889,101,3.135,102,2.785,103,1.744,105,1.335,106,1.402,108,1.234,110,1.942,112,2.511,113,1.094,114,2.448,121,1.032,122,3.262,123,2.785,127,3.644,131,2.889,132,0.289,133,2.889,134,1.246,139,3.458,142,1.169,143,1.893,144,1.893,145,0.136,146,0.083,167,1.368,171,1.219,173,1.824,181,1.893,182,0.585,183,1.257,184,1.303,188,1.769,189,0.87,190,0.87,191,0.78,192,0.808,193,1.108,194,1.17,195,1.941,196,0.823,197,1.802,198,0.823,199,0.87,200,0.808,201,1.328,202,0.823,203,0.87,204,0.808,205,0.87,206,0.78,207,0.794,208,1.428,209,1.61,210,0.78,211,0.808,212,1.901,213,1.645,214,0.87,215,0.823,216,1.61,217,0.87,218,0.87,219,0.823,220,1.802,221,0.808,222,1.61,223,0.823,224,0.823,225,0.808,226,0.87,227,0.794,228,0.823,229,0.87,230,0.808,231,0.87,232,0.87,233,0.808,234,0.87,235,0.78,236,0.808,237,0.87,238,0.794,239,0.87,240,0.713,241,0.87,242,0.794,243,1.47,244,0.87,245,0.794,246,0.87,247,0.794,248,0.87,249,0.752,250,0.87,251,0.808,252,0.739,253,0.808,254,0.823,255,0.87,256,0.808,257,0.87,258,0.87,259,0.808,260,0.87,261,0.808,262,0.87,263,0.752,264,0.87,265,0.808,266,0.808,267,0.87,268,0.808,269,0.823,270,0.87,271,0.78,272,0.78,273,1.646,274,0.794,275,0.629,276,0.808,277,0.794,278,0.794,279,0.808,280,0.794,281,0.808,282,0.87,283,0.794,284,0.87,285,0.808,286,0.87,287,0.808,288,0.87,289,0.808,290,0.87,291,0.808,292,0.766,293,0.78,294,0.87,295,0.794,296,0.87,297,0.794,298,0.87,299,0.794,300,0.87,301,0.794,302,0.838,303,0.87,304,1.47,305,0.823,306,0.78,307,0.87,308,0.003,309,0.003,327,2.448,328,2.785,347,1.968,359,1.368,365,2.097,379,1.838,380,2.03,428,2.532,429,3.005,430,1.708,465,2.524,481,2.252,484,2.448,519,2.379,570,1.402,774,3.284,779,1.653,949,1.824,954,2.889,1048,1.893,1079,1.744,1253,2.054,1260,1.762,1310,3.667,1321,4.194,1323,3.929,1324,5.333,1325,3.929,1327,2.574,1328,3.14,1330,4.765,1331,2.574,1451,3.284,1553,2.69,1586,2.804,1651,2.054,1743,2.804,1846,2.379,1950,2.574,1958,2.804,1959,6.531,1960,6.255,1961,3.152,1962,6.594,1963,3.152,1964,4.28,1965,3.152,1966,3.152,1967,3.152,1968,3.152,1969,3.152,1970,4.812,1971,4.812,1972,3.152,1973,3.152,1974,3.152,1975,3.152,1976,3.152,1977,2.804,1978,3.152,1979,3.135,1980,4.28,1981,3.929,1982,4.812,1983,3.284,1984,4.812,1985,4.812,1986,3.152,1987,2.804,1988,2.574,1989,5.809,1990,3.152,1991,4.812,1992,3.152,1993,3.152,1994,3.152,1995,3.152,1996,4.812,1997,3.152,1998,3.152,1999,3.152,2000,2.804,2001,3.152,2002,3.152,2003,3.152,2004,3.152,2005,3.152,2006,3.152,2007,3.152,2008,3.152,2009,3.152]],["title/components/InputErrorsComponent.html",[0,0.244,233,1.244]],["body/components/InputErrorsComponent.html",[0,0.425,1,1.083,2,0.251,3,0.251,4,1.405,5,1.165,6,1.165,8,0.22,10,0.435,19,1.026,22,0.955,24,0.007,26,2.33,27,2.012,28,2.033,30,1.587,32,0.474,33,0.789,35,1.896,39,1.476,40,4.113,44,1.205,55,0.728,60,0.37,64,0.681,66,1.015,76,0.99,86,0.652,87,0.929,88,0.454,108,1.53,110,1.063,112,2.357,113,0.821,122,3.867,126,2.358,132,0.387,134,1.669,145,0.182,146,0.112,171,1.632,182,0.784,183,1.558,184,1.19,188,2.037,189,1.165,190,1.165,191,1.044,192,1.083,193,1.373,194,1.151,195,2.188,196,1.103,197,2.074,198,1.103,199,1.165,200,1.083,201,1.646,202,1.103,203,1.165,204,1.083,205,1.165,206,1.044,207,1.063,208,1.61,209,1.909,210,1.044,211,1.083,212,1.083,213,1.063,214,1.165,215,1.103,216,1.909,217,1.165,218,1.165,219,1.103,220,2.074,221,1.083,222,1.909,223,1.103,224,1.103,225,1.083,226,1.165,227,1.063,228,1.103,229,1.165,230,1.083,231,1.165,232,1.165,233,1.928,234,1.165,235,1.044,236,1.083,237,1.165,238,1.063,239,1.165,240,0.955,241,1.165,242,1.063,243,1.742,244,1.165,245,1.063,246,1.165,247,1.063,248,1.165,249,1.007,250,1.165,251,1.083,252,0.99,253,1.083,254,1.103,255,1.165,256,1.083,257,1.165,258,1.165,259,1.083,260,1.165,261,1.083,262,1.165,263,1.007,264,1.165,265,1.083,266,1.083,267,1.165,268,1.083,269,1.103,270,1.165,271,1.044,272,1.044,273,1.828,274,1.063,275,0.842,276,1.083,277,1.063,278,1.063,279,1.083,280,1.063,281,1.083,282,1.165,283,1.063,284,1.165,285,1.083,286,1.165,287,1.083,288,1.165,289,1.083,290,1.165,291,1.083,292,1.026,293,1.044,294,1.165,295,1.063,296,1.165,297,1.063,298,1.165,299,1.063,300,1.165,301,1.063,302,1.123,303,1.165,304,1.063,305,1.103,306,1.044,307,1.165,308,0.004,309,0.004,340,0.938,349,2.087,430,2.118,495,2.265,515,3.635,516,4.601,626,3.582,800,4.157,835,3.28,836,3.486,910,2.882,1079,2.162,1221,3.452,1483,3.035,1832,5.729,1913,3.756,2010,7.053,2011,6.475,2012,3.756,2013,5.306,2014,5.966,2015,5.966,2016,5.966,2017,7.518,2018,5.966,2019,4.223,2020,4.871,2021,4.288,2022,4.223,2023,4.223,2024,5.966,2025,4.223,2026,4.223,2027,4.223,2028,5.966]],["title/modules/IoModule.html",[310,1.021,1702,3.31]],["body/modules/IoModule.html",[2,0.339,3,0.339,8,0.297,19,1.957,23,2.091,24,0.007,35,1.2,58,1.942,60,0.446,110,2.423,132,0.523,134,2.252,141,2.921,145,0.367,146,0.151,173,3.298,182,1.058,210,1.993,211,2.446,212,2.446,213,1.839,233,2.468,265,2.468,304,2.402,305,1.488,308,0.005,309,0.005,310,1.537,312,2.252,317,2.952,318,2.155,319,1.904,321,4.082,322,2.762,347,3.559,557,3.33,558,2.534,560,5.499,1048,4.384,1050,4.096,1261,3.89,1308,4.653,1321,4.096,1332,5.069,1702,6.696,1988,4.653,2011,4.653,2029,5.069,2030,5.069,2031,5.069,2032,5.699,2033,5.699,2034,5.699,2035,5.699,2036,5.699]],["title/interfaces/ItemConfig.html",[918,1.47,1692,3.16]],["body/interfaces/ItemConfig.html",[2,0.316,3,0.316,8,0.276,10,0.546,24,0.007,32,0.596,33,1.232,34,2.527,38,1.248,41,2.137,43,2.525,55,1.113,56,3.92,60,0.364,64,0.942,65,2.059,72,2.073,74,1.756,85,4.758,88,1.04,116,2.007,118,3.92,126,2.755,145,0.229,167,2.302,171,2.695,308,0.005,309,0.005,394,3.734,430,2.764,438,2.283,443,2.822,489,2.7,530,4.542,570,3.92,732,6.201,771,5.744,806,5.313,858,4.034,918,2.113,920,3.313,936,3.587,941,4.212,1079,2.997,1108,5.01,1126,5.01,1459,4.185,1500,3.071,1546,5.693,1551,3.071,1554,5.693,1579,6.201,1580,4.044,1587,4.964,1610,4.932,1692,5.388,1777,5.693,1983,4.758,2037,4.719,2038,6.201,2039,6.201,2040,6.752,2041,6.752,2042,6.925,2043,5.693,2044,6.972,2045,6.972,2046,6.201,2047,5.01,2048,6.972,2049,5.01,2050,6.201,2051,3.814]],["title/components/ListComponent.html",[0,0.244,235,1.2]],["body/components/ListComponent.html",[0,0.365,1,0.767,2,0.178,3,0.178,4,0.938,5,0.825,6,0.825,7,2.136,8,0.156,10,0.308,15,1.323,19,0.726,21,2.873,22,0.676,24,0.007,25,1.179,26,2.295,27,1.977,28,1.575,30,1.229,32,0.878,33,0.611,34,1.675,35,1.806,38,0.905,41,0.701,42,1.237,43,2.403,44,0.741,46,2.351,55,0.775,59,2.041,60,0.297,64,0.821,66,1.193,70,1.084,71,1.359,72,1.679,75,1.462,76,1.173,77,1.629,84,2.383,86,0.872,87,0.942,88,0.683,108,1.185,110,0.753,113,0.777,121,1.513,132,0.274,145,0.129,146,0.079,162,1.925,171,1.786,182,0.555,183,1.207,184,0.922,185,1.786,186,1.911,187,2.222,188,1.721,189,0.825,190,0.825,191,0.74,192,0.767,193,1.064,194,1.547,195,1.895,196,0.781,197,1.753,198,0.781,199,0.825,200,0.767,201,1.275,202,0.781,203,0.825,204,0.767,205,0.825,206,0.74,207,0.753,208,1.395,209,1.558,210,0.74,211,0.767,212,0.767,213,0.753,214,0.825,215,0.781,216,1.558,217,0.825,218,0.825,219,0.781,220,1.753,221,0.767,222,1.558,223,0.781,224,0.781,225,0.767,226,0.825,227,0.753,228,0.781,229,0.825,230,0.767,231,0.825,232,0.825,233,0.767,234,0.825,235,1.796,236,0.767,237,0.825,238,0.753,239,0.825,240,0.676,241,0.825,242,0.753,243,1.422,244,0.825,245,0.753,246,0.825,247,0.753,248,0.825,249,0.714,250,0.825,251,0.767,252,0.701,253,0.767,254,0.781,255,0.825,256,0.767,257,0.825,258,0.825,259,0.767,260,0.825,261,0.767,262,0.825,263,0.714,264,0.825,265,0.767,266,0.767,267,0.825,268,0.767,269,0.781,270,0.825,271,0.74,272,0.74,273,1.612,274,0.753,275,0.597,276,0.767,277,0.753,278,0.753,279,0.767,280,0.753,281,0.767,282,0.825,283,0.753,284,0.825,285,0.767,286,0.825,287,0.767,288,0.825,289,0.767,290,0.825,291,0.767,292,0.726,293,0.74,294,0.825,295,0.753,296,0.825,297,0.753,298,0.825,299,0.753,300,0.825,301,0.753,302,0.795,303,0.825,304,0.753,305,0.781,306,0.74,307,0.825,308,0.003,309,0.003,357,1.33,365,2.205,373,1.123,376,2.136,379,2.286,380,2.632,386,2.055,409,0.889,430,1.062,438,3.073,443,2.971,445,2.973,446,4.474,464,4.336,474,1.672,481,1.4,487,1.478,489,1.522,497,4.474,502,2.149,528,3.494,610,1.795,615,1.813,712,4.497,774,2.041,816,2.5,844,2.885,913,2.279,915,3.526,922,4.38,936,2.45,1079,2.047,1146,2.774,1190,3.773,1256,4.059,1260,1.672,1286,3.321,1328,1.438,1412,4.11,1418,3.854,1434,2.575,1476,2.279,1480,4.11,1531,2.674,1547,3.522,1549,2.041,2051,2.149,2052,2.66,2053,4.621,2054,4.621,2055,4.621,2056,3.522,2057,3.522,2058,4.621,2059,4.621,2060,6.353,2061,6.353,2062,6.353,2063,5.336,2064,2.991,2065,2.991,2066,2.991,2067,2.991,2068,2.991,2069,2.991,2070,2.991,2071,2.991,2072,2.991,2073,4.11,2074,2.991,2075,4.11,2076,4.336,2077,4.621,2078,4.621,2079,4.621,2080,2.991,2081,6.353,2082,4.621,2083,2.991,2084,2.991,2085,2.991,2086,3.321,2087,2.991,2088,4.11,2089,2.991,2090,2.041,2091,2.66,2092,2.442,2093,2.442,2094,2.442,2095,5.608,2096,5.608,2097,2.442,2098,2.041,2099,2.442,2100,2.442,2101,2.66,2102,3.522,2103,2.66,2104,3.773,2105,2.66,2106,2.279,2107,2.991,2108,2.66,2109,2.66,2110,2.991,2111,2.991,2112,2.991,2113,5.187,2114,2.991,2115,2.991,2116,2.991,2117,4.11,2118,2.991,2119,2.991,2120,2.66,2121,2.442,2122,2.442,2123,2.991,2124,2.991,2125,2.991,2126,2.991,2127,4.621,2128,2.991,2129,2.991,2130,4.621,2131,4.621,2132,4.621,2133,4.621,2134,6.353]],["title/interfaces/ListConfig.html",[918,1.47,922,2.807]],["body/interfaces/ListConfig.html",[2,0.289,3,0.289,8,0.253,10,0.5,18,2.854,24,0.007,25,1.66,32,0.546,33,1.138,38,1.054,43,2.086,60,0.227,64,0.943,65,2.017,74,2.011,84,2.071,87,0.707,88,1.052,113,1.099,121,2.154,145,0.21,146,0.174,194,1.568,308,0.005,309,0.006,365,2.112,373,2.301,376,3.565,394,3.642,409,1.956,431,3.382,438,2.615,444,3.948,445,3.079,446,4.286,454,3.558,489,2.474,517,3.558,531,2.514,615,2.112,676,3.949,793,3.347,794,4.621,800,3.449,844,4.107,918,1.993,920,3.037,922,3.806,968,4.078,1146,5.163,1270,5.371,1418,5.869,1537,4.49,1547,6.086,1564,5.122,1598,4.107,1692,4.857,1693,3.971,1922,5.584,2049,4.727,2098,4.49,2135,4.325,2136,7.986,2137,7.103,2138,6.521,2139,7.986,2140,7.103,2141,8.599,2142,7.648,2143,7.986,2144,5.851,2145,5.851,2146,4.727,2147,5.013,2148,6.578,2149,6.578]],["title/components/ListHeaderComponent.html",[0,0.244,236,1.244]],["body/components/ListHeaderComponent.html",[0,0.413,1,0.979,2,0.227,3,0.227,4,0.775,5,1.053,6,1.053,8,0.199,10,0.393,19,0.927,22,0.863,23,1.589,24,0.007,26,2.321,27,2.003,28,1.891,30,1.476,32,0.429,33,0.95,34,2.012,35,1.675,38,1.151,39,2.207,40,3.061,41,1.787,44,0.89,60,0.372,64,0.75,66,1.135,72,2.135,75,1.652,76,1.138,77,1.677,86,1.108,87,0.969,88,0.856,105,2.35,106,2.468,108,1.423,110,0.961,112,1.589,113,0.764,121,1.817,132,0.35,145,0.165,146,0.101,182,0.709,183,1.449,184,1.107,188,1.945,189,1.053,190,1.053,191,0.944,192,0.979,193,1.278,194,1.566,195,2.104,196,0.997,197,1.981,198,0.997,199,1.053,200,0.979,201,1.531,202,0.997,203,1.053,204,0.979,205,1.053,206,0.944,207,0.961,208,1.549,209,1.804,210,0.944,211,0.979,212,0.979,213,0.961,214,1.053,215,0.997,216,1.804,217,1.053,218,1.053,219,0.997,220,1.981,221,0.979,222,1.804,223,0.997,224,0.997,225,0.979,226,1.053,227,1.921,228,0.997,229,1.053,230,0.979,231,1.053,232,1.053,233,0.979,234,1.053,235,0.944,236,1.841,237,1.053,238,0.961,239,1.053,240,0.863,241,1.053,242,0.961,243,1.647,244,1.053,245,0.961,246,1.053,247,0.961,248,1.053,249,0.911,250,1.053,251,0.979,252,0.895,253,0.979,254,0.997,255,1.053,256,0.979,257,1.053,258,1.053,259,0.979,260,1.053,261,0.979,262,1.053,263,0.911,264,1.053,265,0.979,266,0.979,267,1.053,268,0.979,269,0.997,270,1.053,271,1.373,272,0.944,273,1.767,274,0.961,275,0.762,276,0.979,277,0.961,278,0.961,279,0.979,280,0.961,281,0.979,282,1.053,283,0.961,284,1.053,285,0.979,286,1.053,287,0.979,288,1.053,289,0.979,290,1.053,291,0.979,292,0.927,293,0.944,294,1.053,295,0.961,296,1.053,297,0.961,298,1.053,299,0.961,300,1.053,301,0.961,302,1.015,303,1.053,304,0.961,305,0.997,306,0.944,307,1.053,308,0.004,309,0.004,327,2.824,409,1.135,423,4.364,438,2.755,445,2.598,484,1.942,487,1.887,816,3.002,871,3.117,933,3.616,951,2.91,956,3.332,968,4.07,1146,4.31,1840,3.788,2146,3.989,2150,7.004,2151,7.004,2152,3.395,2153,5.55,2154,5.55,2155,5.55,2156,5.55,2157,5.55,2158,5.55,2159,3.818,2160,3.818,2161,5.55,2162,3.818,2163,5.55,2164,5.55,2165,3.818,2166,4.936,2167,7.179,2168,3.818,2169,5.55,2170,3.818,2171,3.818,2172,3.788,2173,5.862,2174,4.936,2175,3.818,2176,4.936,2177,3.395,2178,3.818,2179,3.818,2180,3.818,2181,3.818,2182,3.818,2183,3.818,2184,3.818,2185,3.818,2186,5.55,2187,3.818]],["title/components/ListItemsComponent.html",[0,0.244,238,1.222]],["body/components/ListItemsComponent.html",[0,0.385,1,0.992,2,0.23,3,0.23,4,0.785,5,1.067,6,1.067,8,0.201,10,0.398,15,1.604,19,0.939,21,3.351,22,0.874,23,1.604,24,0.007,25,1.04,26,2.322,27,2.004,28,1.909,30,1.49,32,0.434,35,1.777,40,2.622,43,2.485,44,0.898,46,3.674,55,0.882,60,0.337,64,0.786,66,1.113,71,0.655,72,2.147,75,1.289,76,0.802,77,1.437,86,0.597,87,0.908,88,0.824,108,1.437,110,0.974,113,0.771,132,0.355,145,0.167,146,0.102,165,3.453,182,0.718,183,1.463,184,1.117,188,1.956,189,1.067,190,1.067,191,0.956,192,0.992,193,1.289,194,1.587,195,2.115,196,1.01,197,1.993,198,1.01,199,1.067,200,0.992,201,1.546,202,1.01,203,1.067,204,0.992,205,1.067,206,0.956,207,0.974,208,1.557,209,1.818,210,0.956,211,0.992,212,0.992,213,0.974,214,1.067,215,1.01,216,1.818,217,1.067,218,1.067,219,1.01,220,1.993,221,0.992,222,1.818,223,1.01,224,1.01,225,0.992,226,1.067,227,0.974,228,1.01,229,1.067,230,0.992,231,1.067,232,1.067,233,0.992,234,1.067,235,1.386,236,0.992,237,1.067,238,2.013,239,1.067,240,0.874,241,1.067,242,0.974,243,1.659,244,1.067,245,0.974,246,1.067,247,0.974,248,1.067,249,0.923,250,1.067,251,0.992,252,0.906,253,0.992,254,1.01,255,1.067,256,0.992,257,1.067,258,1.067,259,0.992,260,1.067,261,0.992,262,1.067,263,0.923,264,1.067,265,0.992,266,0.992,267,1.067,268,0.992,269,1.01,270,1.067,271,0.956,272,0.956,273,1.775,274,0.974,275,0.771,276,0.992,277,0.974,278,0.974,279,0.992,280,0.974,281,0.992,282,1.067,283,0.974,284,1.067,285,0.992,286,1.067,287,0.992,288,1.067,289,0.992,290,1.067,291,0.992,292,0.939,293,0.956,294,1.067,295,0.974,296,1.067,297,0.974,298,1.067,299,0.974,300,1.067,301,0.974,302,1.029,303,1.067,304,0.974,305,1.01,306,1.896,307,1.067,308,0.004,309,0.004,365,2.319,373,1.361,379,2.517,380,2.512,438,2.93,441,3.498,445,2.622,446,4.994,464,3.823,487,1.912,497,2.52,502,2.779,517,3.03,526,3.498,528,2.85,615,2.319,771,3.65,774,3.823,844,4.51,870,2.415,913,2.947,943,2.769,1079,2.618,1092,3.65,1146,3.363,1298,2.779,1418,4.496,1434,2.555,1516,4.026,2073,4.982,2113,4.574,2120,3.439,2121,3.158,2122,3.158,2146,4.026,2150,6.894,2188,6.894,2189,3.439,2190,5.602,2191,5.602,2192,3.242,2193,5.602,2194,5.602,2195,5.602,2196,4.574,2197,5.602,2198,3.867,2199,3.867,2200,3.867,2201,3.867,2202,3.867,2203,3.867,2204,3.867,2205,3.439,2206,3.867,2207,3.439]],["title/modules/ListModule.html",[310,1.021,2208,3.31]],["body/modules/ListModule.html",[2,0.343,3,0.343,8,0.3,23,2.107,24,0.007,58,1.966,60,0.446,132,0.529,141,2.937,145,0.369,146,0.153,182,1.071,194,1.224,235,2.363,236,2.45,238,2.406,266,2.45,308,0.005,309,0.005,310,1.549,312,2.279,317,2.974,318,2.181,319,1.927,322,2.783,557,3.356,558,2.564,870,3.601,1104,6.521,1694,6.521,1704,5.63,1706,5.874,1719,4.396,1722,4.71,2151,4.71,2188,4.71,2208,6.737,2209,5.13,2210,5.13,2211,5.768,2212,5.13,2213,5.768,2214,5.768,2215,5.768,2216,5.768,2217,5.768,2218,5.13]],["title/components/LoaderComponent.html",[0,0.244,240,1.097]],["body/components/LoaderComponent.html",[0,0.398,1,0.875,2,0.203,3,0.203,4,1.243,5,0.941,6,0.941,7,1.29,8,0.178,10,0.351,19,0.829,22,0.771,24,0.007,25,0.633,26,2.31,27,1.994,28,1.741,30,1.359,32,0.383,33,0.676,35,0.718,38,0.819,44,1.225,55,1.017,59,3.486,60,0.286,61,2.855,62,2.956,64,0.602,66,1.069,71,0.865,74,1.712,75,1.676,76,0.973,77,1.31,86,0.789,87,0.896,88,0.549,102,3.934,104,3.934,108,1.743,110,0.859,113,1.002,116,3.462,118,2.722,121,1.673,126,2.687,130,1.845,132,0.313,135,1.597,142,0.829,145,0.221,146,0.162,170,2.6,182,0.633,183,1.334,184,1.221,185,1.319,186,1.411,187,1.64,188,1.842,189,0.941,190,0.941,191,0.844,192,0.875,193,1.176,194,1.019,195,2.009,196,0.891,197,1.876,198,0.891,199,0.941,200,0.875,201,1.409,202,0.891,203,0.941,204,0.875,205,0.941,206,0.844,207,0.859,208,1.478,209,1.689,210,0.844,211,0.875,212,0.875,213,0.859,214,0.941,215,0.891,216,1.689,217,0.941,218,0.941,219,0.891,220,1.876,221,0.875,222,1.689,223,0.891,224,0.891,225,0.875,226,0.941,227,0.859,228,0.891,229,0.941,230,0.875,231,0.941,232,0.941,233,0.875,234,0.941,235,0.844,236,0.875,237,0.941,238,0.859,239,0.941,240,1.791,241,0.941,242,0.859,243,1.542,244,0.941,245,0.859,246,0.941,247,0.859,248,0.941,249,0.814,250,0.941,251,0.875,252,0.799,253,0.875,254,0.891,255,0.941,256,0.875,257,0.941,258,0.941,259,0.875,260,0.941,261,0.875,262,0.941,263,0.814,264,0.941,265,0.875,266,0.875,267,0.941,268,0.875,269,0.891,270,0.941,271,0.844,272,0.844,273,1.697,274,0.859,275,0.68,276,0.875,277,0.859,278,0.859,279,0.875,280,0.859,281,0.875,282,0.941,283,0.859,284,0.941,285,0.875,286,0.941,287,0.875,288,0.941,289,0.875,290,0.941,291,0.875,292,0.829,293,0.844,294,0.941,295,0.859,296,0.941,297,0.859,298,0.941,299,0.859,300,0.941,301,0.859,302,0.907,303,0.941,304,0.859,305,0.891,306,2.06,307,0.941,308,0.004,309,0.004,319,1.139,340,0.758,357,1.517,359,3.613,367,1.219,373,0.829,384,1.263,409,1.821,413,2.223,427,1.736,431,3.592,440,3.888,444,3.027,445,3.97,452,1.445,460,2.048,475,2.599,479,4.171,484,3.115,495,2.939,514,2.048,515,2.113,531,0.959,535,1.64,587,1.517,610,2.048,659,4.543,712,4.006,718,1.64,739,3.066,826,4.306,833,3.564,938,2.452,943,1.686,957,2.456,958,2.048,960,3.328,1123,3.893,1273,2.328,1503,2.048,1537,3.486,1545,2.223,1548,2.855,1558,1.788,1576,2.452,1597,2.452,1600,3.189,1798,3.189,1812,4.999,1815,4.543,1846,1.686,2076,4.179,2219,3.034,2220,5.108,2221,5.108,2222,4.171,2223,5.108,2224,5.108,2225,5.108,2226,6.189,2227,8.482,2228,6.239,2229,3.411,2230,5.108,2231,3.411,2232,3.411,2233,4.543,2234,3.411,2235,5.108,2236,4.543,2237,3.411,2238,3.411,2239,5.108,2240,2.13,2241,4.64,2242,3.989,2243,3.034,2244,2.048,2245,3.034,2246,3.034,2247,4.543,2248,3.034,2249,5.446,2250,3.034,2251,4.543,2252,5.446,2253,5.446,2254,3.034,2255,3.034,2256,2.786,2257,3.034,2258,3.034,2259,3.034,2260,3.034,2261,3.034,2262,3.034,2263,3.034,2264,3.411,2265,3.411,2266,3.411,2267,3.034,2268,3.034,2269,5.108,2270,3.411,2271,3.034,2272,3.411]],["title/modules/LoaderModule.html",[310,1.021,1705,3.31]],["body/modules/LoaderModule.html",[2,0.403,3,0.403,8,0.353,23,2.494,24,0.007,58,2.308,60,0.432,132,0.621,141,3.157,145,0.39,146,0.179,182,1.257,240,2.205,308,0.006,309,0.006,310,1.711,312,2.677,317,3.286,318,2.562,319,2.263,322,3.074,557,3.707,558,3.012,833,4.917,1705,6.57,2273,6.025,2274,6.025,2275,6.025,2276,6.025,2277,6.774,2278,5.531,2279,6.774]],["title/injectables/LoaderService.html",[367,1.157,833,2.543]],["body/injectables/LoaderService.html",[2,0.36,3,0.36,8,0.315,10,0.623,24,0.007,32,0.68,33,1.004,38,0.97,44,1.216,55,1.114,60,0.354,64,0.815,66,1.118,74,2.188,75,2.132,76,1.243,77,1.552,83,5.178,86,1.171,87,0.816,88,0.816,113,0.833,116,3.599,132,0.555,145,0.262,146,0.16,240,2.151,308,0.005,309,0.005,329,6.747,367,1.977,410,4.974,452,3.213,826,4.516,833,3.977,943,3.75,1374,4.942,1537,5.178,1846,3.75,1979,4.943,2076,5.655,2228,7.453,2233,6.747,2241,6.23,2278,4.942,2280,5.383,2281,7.586,2282,6.053,2283,6.053,2284,6.053,2285,6.053]],["title/components/LocationMapComponent.html",[0,0.244,242,1.222]],["body/components/LocationMapComponent.html",[0,0.422,1,1.05,2,0.244,3,0.244,4,0.832,5,1.13,6,1.13,8,0.213,10,0.422,19,0.995,22,0.926,24,0.007,25,1.084,26,2.327,27,2.009,28,1.99,30,1.553,32,0.46,35,1.836,38,1.45,44,0.936,60,0.191,64,0.802,66,1.1,71,0.694,74,1.868,76,0.973,77,1.497,84,2.82,86,0.901,87,0.938,88,0.628,108,1.497,110,1.032,112,1.672,113,0.936,132,0.376,142,0.995,145,0.177,146,0.108,160,2.796,182,0.76,183,1.525,184,1.165,188,2.009,189,1.13,190,1.13,191,1.013,192,1.05,193,1.344,194,1.132,195,2.163,196,1.07,197,2.046,198,1.07,199,1.13,200,1.05,201,1.611,202,1.07,203,1.13,204,1.05,205,1.13,206,1.013,207,1.032,208,1.592,209,1.877,210,1.013,211,1.05,212,1.05,213,1.032,214,1.13,215,1.07,216,1.877,217,1.13,218,1.13,219,1.07,220,2.046,221,1.05,222,1.877,223,1.07,224,1.07,225,1.05,226,1.13,227,1.032,228,1.07,229,1.13,230,1.05,231,1.13,232,1.13,233,1.05,234,1.13,235,1.013,236,1.05,237,1.13,238,1.032,239,1.13,240,0.926,241,1.13,242,1.868,243,2.197,244,1.13,245,1.032,246,1.13,247,1.032,248,1.13,249,0.977,250,1.13,251,1.05,252,0.96,253,1.05,254,1.07,255,1.13,256,1.05,257,1.13,258,1.13,259,1.05,260,1.13,261,1.05,262,1.13,263,0.977,264,1.13,265,1.05,266,1.05,267,1.13,268,1.05,269,1.07,270,1.13,271,1.013,272,1.013,273,1.81,274,1.032,275,0.817,276,1.05,277,1.032,278,1.032,279,1.05,280,1.032,281,1.05,282,1.13,283,1.032,284,1.13,285,1.05,286,1.13,287,1.05,288,1.13,289,1.05,290,1.13,291,1.05,292,0.995,293,1.013,294,1.13,295,1.032,296,1.13,297,1.032,298,1.13,299,1.032,300,1.13,301,1.032,302,1.089,303,1.13,304,1.032,305,1.07,306,1.013,307,1.13,308,0.004,309,0.004,365,2.381,373,1.418,376,2.208,379,1.29,380,2.579,431,2.472,465,2.257,498,3.643,794,3.378,807,4.638,1763,4.196,1802,5.555,1803,6.972,1805,6.972,2047,4.889,2286,6.392,2287,3.643,2288,5.838,2289,5.838,2290,5.838,2291,5.193,2292,7.459,2293,5.838,2294,5.838,2295,5.838,2296,4.096,2297,8.149,2298,4.096,2299,4.096,2300,4.096,2301,5.838,2302,4.096,2303,5.838,2304,5.193,2305,4.096,2306,5.838,2307,4.096,2308,4.096,2309,4.096,2310,4.096,2311,4.096,2312,4.096]],["title/modules/LocationModule.html",[310,1.021,2313,3.697]],["body/modules/LocationModule.html",[0,0.413,2,0.353,3,0.353,8,0.309,10,0.611,23,2.351,24,0.007,58,2.022,60,0.446,132,0.544,134,2.345,135,2.777,141,2.976,142,1.441,145,0.373,146,0.157,182,1.101,242,2.403,243,2.068,245,2.403,247,2.403,308,0.005,309,0.005,310,1.872,312,2.345,317,3.028,318,2.244,319,1.982,321,4.187,322,2.833,327,3.811,452,3.172,554,5.452,556,3.416,557,3.416,558,2.638,560,5.113,1761,5.917,1788,4.844,1798,3.704,2313,7.432,2314,5.276,2315,5.276,2316,5.933,2317,5.276,2318,5.276,2319,4.844,2320,7.491,2321,7.261,2322,5.933,2323,4.844,2324,5.276,2325,5.933,2326,5.276,2327,5.933,2328,5.933,2329,5.933,2330,5.933,2331,5.933]],["title/components/LocationPickerComponent.html",[0,0.244,245,1.222]],["body/components/LocationPickerComponent.html",[0,0.415,1,0.845,2,0.196,3,0.196,4,0.669,5,0.909,6,0.909,8,0.172,10,0.339,13,2.692,15,1.913,16,4.306,18,2.159,19,1.958,22,0.745,23,1.717,24,0.007,25,1.4,26,2.306,27,1.988,28,1.696,30,1.324,32,0.37,33,0.659,35,1.892,36,4.011,38,1.404,39,2.113,40,3.53,41,1.768,42,2.764,43,1.97,44,0.798,48,3.108,49,4.011,52,2.988,55,0.608,60,0.352,64,0.852,65,1.086,66,1.222,74,1.254,76,1.079,77,1.84,81,2.988,84,2.104,86,1.032,87,0.919,88,0.719,89,2.988,99,2.988,101,3.243,102,2.88,103,1.804,105,2.108,106,2.667,108,1.277,110,1.806,112,2.16,113,0.92,114,2.532,122,4.506,123,3.866,124,2.512,125,2.512,126,1.303,127,3.108,128,2.512,129,2.512,130,1.783,131,2.988,132,0.302,133,2.988,134,1.303,135,1.543,142,0.801,143,1.979,144,1.979,145,0.142,146,0.087,175,2.691,181,1.979,182,0.612,183,1.3,184,0.993,188,1.81,189,0.909,190,0.909,191,0.815,192,0.845,193,1.146,194,0.998,195,1.979,196,0.861,197,1.844,198,0.861,199,0.909,200,0.845,201,1.373,202,0.861,203,0.909,204,0.845,205,0.909,206,0.815,207,0.83,208,1.457,209,1.655,210,0.815,211,0.845,212,0.845,213,0.83,214,0.909,215,0.861,216,1.655,217,0.909,218,0.909,219,0.861,220,1.844,221,0.845,222,1.655,223,0.861,224,0.861,225,0.845,226,0.909,227,0.83,228,0.861,229,0.909,230,0.845,231,0.909,232,0.909,233,0.845,234,0.909,235,0.815,236,0.845,237,0.909,238,0.83,239,0.909,240,0.745,241,0.909,242,1.972,243,2.28,244,0.909,245,1.806,246,0.909,247,1.972,248,0.909,249,0.786,250,0.909,251,0.845,252,0.772,253,0.845,254,0.861,255,0.909,256,0.845,257,0.909,258,0.909,259,0.845,260,0.909,261,0.845,262,0.909,263,0.786,264,0.909,265,0.845,266,0.845,267,0.909,268,0.845,269,0.861,270,0.909,271,0.815,272,0.815,273,1.675,274,0.83,275,0.657,276,0.845,277,0.83,278,0.83,279,0.845,280,0.83,281,0.845,282,0.909,283,0.83,284,0.909,285,0.845,286,0.909,287,0.845,288,0.909,289,0.845,290,0.909,291,0.845,292,0.801,293,0.815,294,0.909,295,0.83,296,0.909,297,0.83,298,0.909,299,0.83,300,0.909,301,0.83,302,0.877,303,0.909,304,0.83,305,0.861,306,0.815,307,0.909,308,0.004,309,0.004,327,2.532,340,1.105,350,2.058,373,1.457,386,1.466,445,2.33,453,4.427,643,3.108,717,2.012,807,4.361,949,3.866,1092,3.243,1109,4.064,1515,5.456,1761,5.566,1776,4.064,1780,4.064,1781,4.427,1782,4.064,2286,6.741,2291,4.427,2304,4.427,2323,2.691,2324,2.932,2326,2.932,2332,2.932,2333,4.977,2334,4.977,2335,4.977,2336,6.682,2337,5.997,2338,2.932,2339,4.977,2340,3.296,2341,3.296,2342,3.296,2343,3.296,2344,6.682,2345,3.296,2346,3.296,2347,4.977,2348,3.296,2349,3.296,2350,3.296,2351,3.296,2352,3.296,2353,3.296,2354,3.296,2355,3.296,2356,4.977,2357,4.977,2358,3.296,2359,3.296,2360,3.296,2361,5.997,2362,3.296,2363,3.296,2364,3.296,2365,3.296,2366,4.977]],["title/components/LocationSearchComponent.html",[0,0.244,247,1.222]],["body/components/LocationSearchComponent.html",[0,0.396,1,1.065,2,0.247,3,0.247,4,0.843,5,1.146,6,1.146,8,0.216,10,0.427,15,1.688,19,1.009,22,0.939,24,0.007,26,2.328,27,2.011,30,1.568,32,0.466,33,0.78,35,1.924,38,1.099,44,0.945,55,0.72,60,0.32,64,0.674,66,1.105,71,0.704,76,0.844,77,1.512,84,2.652,86,0.641,87,0.925,88,0.447,104,4.318,105,1.759,106,2.622,108,1.914,110,1.046,113,0.943,132,0.381,145,0.179,146,0.11,182,0.771,183,1.54,184,1.176,188,2.021,189,1.146,190,1.146,191,1.027,192,1.065,193,1.357,194,1.14,195,2.175,196,1.085,197,2.059,198,1.085,199,1.146,200,1.065,201,1.627,202,1.085,203,1.146,204,1.065,205,1.146,206,1.027,207,1.046,208,1.6,209,1.892,210,1.027,211,1.065,212,1.065,213,1.046,214,1.146,215,1.085,216,1.892,217,1.146,218,1.146,219,1.085,220,2.059,221,1.065,222,1.892,223,1.085,224,1.085,225,1.065,226,1.146,227,1.046,228,1.085,229,1.146,230,1.065,231,1.146,232,1.146,233,1.065,234,1.146,235,1.027,236,1.065,237,1.146,238,1.046,239,1.146,240,0.939,241,1.146,242,1.046,243,2.262,244,1.146,245,1.046,246,1.146,247,1.879,248,1.146,249,0.991,250,1.146,251,1.065,252,0.973,253,1.065,254,1.085,255,1.146,256,1.065,257,1.146,258,1.146,259,1.065,260,1.146,261,1.065,262,1.146,263,0.991,264,1.146,265,1.065,266,1.065,267,1.146,268,1.065,269,1.085,270,1.146,271,1.027,272,1.027,273,1.818,274,1.046,275,0.828,276,1.065,277,1.046,278,1.046,279,1.065,280,1.046,281,1.065,282,1.146,283,1.046,284,1.146,285,1.065,286,1.146,287,1.065,288,1.146,289,1.065,290,1.146,291,1.065,292,1.009,293,1.027,294,1.146,295,1.046,296,1.146,297,1.046,298,1.146,299,1.046,300,1.146,301,1.046,302,1.105,303,1.146,304,1.046,305,1.085,306,1.027,307,1.146,308,0.004,309,0.005,340,1.309,365,2.396,379,1.308,380,2.595,438,1.931,465,2.279,495,1.931,807,3.189,888,3.832,1025,5.112,1078,4.405,1515,6.685,1761,5.606,1763,4.237,1771,7.489,1776,4.814,1777,6.093,1802,5.597,2286,6.417,2323,3.391,2338,3.694,2367,3.694,2368,5.597,2369,5.896,2370,7.462,2371,6.093,2372,5.896,2373,4.153,2374,4.153,2375,4.153,2376,4.153,2377,4.153,2378,4.153,2379,4.153,2380,4.153,2381,4.153,2382,4.153]],["title/components/LoginComponent.html",[0,0.244,249,1.157]],["body/components/LoginComponent.html",[0,0.381,1,0.964,2,0.223,3,0.223,4,0.763,5,1.037,6,1.037,7,1.421,8,0.196,10,0.387,15,1.571,19,0.913,22,0.85,24,0.007,25,0.697,26,2.319,27,2.001,30,1.459,32,0.422,33,0.726,35,1.595,38,0.602,39,2.072,44,0.879,55,0.87,60,0.391,64,0.824,66,1.153,71,0.637,72,1.631,76,0.538,77,0.964,86,0.847,87,0.919,88,0.766,93,3.943,105,1.591,106,2.439,108,1.407,110,0.946,113,1.043,126,2.168,132,0.345,135,1.759,142,0.913,145,0.162,146,0.1,182,0.697,183,1.433,184,1.094,185,1.452,186,1.554,187,1.807,188,1.93,189,1.037,190,1.037,191,0.929,192,0.964,193,1.263,194,1.078,195,2.091,196,0.981,197,1.966,198,0.981,199,1.037,200,0.964,201,1.514,202,0.981,203,1.037,204,0.964,205,1.037,206,0.929,207,0.946,208,1.539,209,1.788,210,0.929,211,0.964,212,0.964,213,0.946,214,1.037,215,0.981,216,1.788,217,1.037,218,1.037,219,0.981,220,1.966,221,0.964,222,1.788,223,0.981,224,0.981,225,0.964,226,1.037,227,0.946,228,0.981,229,1.037,230,0.964,231,1.037,232,1.037,233,0.964,234,1.037,235,0.929,236,0.964,237,1.037,238,0.946,239,1.037,240,1.24,241,1.037,242,0.946,243,1.632,244,1.037,245,0.946,246,1.037,247,0.946,248,1.037,249,1.7,250,1.037,251,1.662,252,2.123,253,0.964,254,0.981,255,1.037,256,0.964,257,1.037,258,1.037,259,0.964,260,1.037,261,0.964,262,1.037,263,0.897,264,1.037,265,0.964,266,0.964,267,1.037,268,0.964,269,1.692,270,1.037,271,0.929,272,0.929,273,1.757,274,0.946,275,0.75,276,0.964,277,0.946,278,0.946,279,0.964,280,0.946,281,0.964,282,1.037,283,0.946,284,1.037,285,0.964,286,1.037,287,0.964,288,1.037,289,0.964,290,1.037,291,0.964,292,0.913,293,0.929,294,1.037,295,0.946,296,1.037,297,0.946,298,1.037,299,0.946,300,1.037,301,0.946,302,0.999,303,1.037,304,0.946,305,0.981,306,0.929,307,1.037,308,0.004,309,0.004,331,3.033,340,0.835,349,1.858,352,2.701,365,2.288,369,4.937,379,1.183,380,2.478,394,2.323,404,2.448,427,2.791,431,2.323,440,2.791,449,4.549,450,4.853,515,2.947,519,2.712,520,4.181,522,4.24,523,3.805,527,4.423,528,3.625,530,3.574,531,1.542,569,3.068,623,3.574,624,3.342,635,2.174,638,3.068,639,3.068,820,3.622,821,4.046,826,3.82,834,4.579,835,3.273,836,3.351,878,2.033,879,3.068,880,3.068,881,3.068,884,2.864,907,3.574,908,4.657,912,2.346,1472,3.426,1600,3.426,2383,3.342,2384,5.486,2385,5.341,2386,5.486,2387,4.48,2388,3.342,2389,5.486,2390,5.486,2391,3.758,2392,3.758,2393,3.758,2394,4.48,2395,3.758,2396,3.758,2397,3.758,2398,3.758,2399,3.758,2400,3.342,2401,3.758,2402,3.758,2403,3.342,2404,3.758,2405,3.342,2406,3.342]],["title/components/LoginFormComponent.html",[0,0.244,251,1.244]],["body/components/LoginFormComponent.html",[0,0.405,1,0.774,2,0.18,3,0.18,4,0.613,5,0.833,6,0.833,7,1.142,8,0.157,10,0.311,15,1.333,18,1.31,19,0.733,20,3.175,22,0.683,24,0.007,25,1.41,26,2.296,27,1.978,28,1.586,30,1.238,32,0.339,33,0.616,34,1.687,35,1.786,38,1.257,39,1.802,41,1.926,42,1.925,44,1.023,47,3.695,60,0.34,64,0.771,65,1.239,66,1.219,71,0.789,75,1.071,76,1.043,77,1.194,86,0.877,87,0.884,88,0.611,108,1.194,110,0.76,112,2.627,113,1.151,119,2.602,126,2.523,127,3.987,132,0.277,134,1.193,142,0.733,145,0.13,146,0.15,165,3.347,182,0.56,183,1.216,184,0.929,185,1.167,186,1.249,187,1.452,188,1.73,189,0.833,190,0.833,191,0.747,192,0.774,193,1.071,194,0.945,195,1.903,196,0.788,197,1.762,198,0.788,199,0.833,200,0.774,201,1.284,202,0.788,203,0.833,204,0.774,205,0.833,206,0.747,207,0.76,208,1.401,209,1.568,210,0.747,211,0.774,212,0.774,213,0.76,214,0.833,215,0.788,216,1.568,217,0.833,218,0.833,219,0.788,220,1.762,221,0.774,222,1.568,223,0.788,224,0.788,225,0.774,226,0.833,227,0.76,228,0.788,229,0.833,230,0.774,231,0.833,232,0.833,233,0.774,234,0.833,235,0.747,236,0.774,237,0.833,238,0.76,239,0.833,240,1.444,241,0.833,242,0.76,243,1.431,244,0.833,245,0.76,246,0.833,247,0.76,248,0.833,249,0.72,250,0.833,251,1.637,252,2.167,253,0.774,254,0.788,255,0.833,256,0.774,257,0.833,258,0.833,259,0.774,260,0.833,261,0.774,262,0.833,263,0.72,264,0.833,265,0.774,266,0.774,267,0.833,268,0.774,269,2.146,270,0.833,271,0.747,272,0.747,273,1.618,274,0.76,275,0.929,276,0.774,277,0.76,278,0.76,279,0.774,280,0.76,281,0.774,282,0.833,283,0.76,284,0.833,285,0.774,286,0.833,287,0.774,288,0.833,289,0.774,290,0.833,291,0.774,292,0.733,293,0.747,294,0.833,295,0.76,296,0.833,297,0.76,298,0.833,299,0.76,300,0.833,301,0.76,302,0.803,303,0.833,304,0.76,305,0.788,306,0.747,307,0.833,308,0.003,309,0.003,318,1.761,331,2.659,340,0.67,357,1.342,365,2.215,367,1.111,373,1.38,378,2.518,379,2.587,380,2.641,384,2.698,410,1.812,431,1.971,432,3.345,465,2.817,469,1.688,495,1.86,515,3.459,516,2.602,517,2.518,522,3.766,535,0.969,623,3.701,661,2.685,772,1.885,820,3.175,826,3.145,840,1.812,910,2.06,936,3.402,937,4.866,940,3.548,1025,2.907,1078,3.569,1289,3.548,1507,3.987,1846,2.301,2385,4.141,2394,4.639,2406,2.685,2407,8.081,2408,7.419,2409,2.685,2410,6.385,2411,7.73,2412,4.655,2413,4.655,2414,4.655,2415,7.287,2416,5.679,2417,6.385,2418,5.681,2419,6.897,2420,6.897,2421,5.681,2422,5.681,2423,5.681,2424,5.681,2425,3.019,2426,7.287,2427,4.655,2428,4.655,2429,1.586,2430,3.019,2431,3.019,2432,6.974,2433,3.019,2434,4.14,2435,3.019,2436,4.655,2437,3.019,2438,6.481,2439,3.019,2440,3.019,2441,4.655,2442,3.019,2443,3.019,2444,4.655,2445,3.019,2446,4.655,2447,3.019,2448,4.14,2449,4.655,2450,3.019,2451,3.019,2452,4.655,2453,3.019,2454,3.019,2455,3.019,2456,4.655,2457,3.801,2458,3.019,2459,2.465,2460,3.019,2461,3.019,2462,3.019,2463,3.019,2464,3.019,2465,3.019,2466,4.655,2467,3.019,2468,2.465,2469,4.655,2470,3.019,2471,3.019,2472,3.019,2473,3.019,2474,3.019,2475,3.019,2476,3.019,2477,3.019,2478,3.019,2479,3.019,2480,3.019]],["title/pipes/MaxItemsPipe.html",[1101,2.543,1700,3.486]],["body/pipes/MaxItemsPipe.html",[2,0.406,3,0.406,8,0.355,10,0.702,15,1.954,22,1.542,24,0.007,38,1.094,43,2.132,44,1.094,60,0.319,64,0.671,66,0.921,76,1.168,86,1.053,87,0.939,88,0.734,113,0.939,132,0.626,145,0.295,146,0.181,308,0.006,309,0.006,376,3.553,481,3.821,615,3.016,1080,5.455,1101,4.852,1106,3.69,1112,5.571,1505,7.671,1700,5.867,2481,7.26,2482,6.068,2483,7.26,2484,8.163,2485,8.163,2486,6.822,2487,6.822]],["title/components/MediumEditorComponent.html",[0,0.244,253,1.244]],["body/components/MediumEditorComponent.html",[0,0.402,1,0.898,2,0.208,3,0.208,4,0.711,5,0.966,6,0.966,7,1.324,8,0.182,10,0.36,11,3.252,13,4.996,15,1.491,16,3.733,19,0.851,20,3.476,22,0.792,23,1.781,24,0.007,25,0.967,26,2.312,27,1.994,28,1.775,30,1.385,32,0.393,33,0.689,34,2.796,35,1.682,36,4.134,37,5.027,38,1.389,39,1.538,44,0.835,45,3.127,47,3.985,48,3.252,49,4.134,52,3.127,60,0.291,64,0.825,65,1.136,66,1.207,71,0.882,72,1.549,76,1.053,77,1.979,81,3.127,84,2.169,86,0.804,87,0.902,88,0.859,89,3.127,99,3.127,101,3.393,102,3.014,103,2.896,104,3.985,105,1.483,106,2.316,108,1.766,110,0.882,112,1.491,113,0.856,114,2.65,116,2.784,121,1.705,131,3.127,132,0.321,133,3.127,134,1.384,143,2.102,144,2.102,145,0.151,146,0.093,147,2.669,152,2.859,154,2.669,155,3.114,160,3.555,163,3.114,181,2.102,182,0.65,183,1.36,184,1.039,185,1.353,186,1.448,187,1.683,188,1.866,189,0.966,190,0.966,191,0.866,192,0.898,193,1.199,194,1.034,195,2.031,196,0.914,197,1.9,198,0.914,199,0.966,200,0.898,201,1.437,202,0.914,203,0.966,204,0.898,205,0.966,206,0.866,207,0.882,208,1.495,209,1.716,210,0.866,211,0.898,212,0.898,213,0.882,214,0.966,215,0.914,216,1.716,217,0.966,218,0.966,219,0.914,220,1.9,221,0.898,222,1.716,223,0.914,224,0.914,225,0.898,226,0.966,227,0.882,228,0.914,229,0.966,230,0.898,231,0.966,232,0.966,233,0.898,234,0.966,235,0.866,236,0.898,237,0.966,238,0.882,239,0.966,240,0.792,241,0.966,242,0.882,243,1.566,244,0.966,245,0.882,246,0.966,247,0.882,248,0.966,249,0.835,250,0.966,251,0.898,252,0.821,253,1.888,254,2.23,255,0.966,256,0.898,257,0.966,258,0.966,259,0.898,260,0.966,261,0.898,262,0.966,263,0.835,264,0.966,265,0.898,266,0.898,267,0.966,268,0.898,269,0.914,270,0.966,271,0.866,272,0.866,273,1.713,274,0.882,275,0.698,276,0.898,277,0.882,278,0.882,279,0.898,280,0.882,281,0.898,282,0.966,283,0.882,284,0.966,285,0.898,286,0.966,287,0.898,288,0.966,289,0.898,290,0.966,291,0.898,292,0.851,293,0.866,294,0.966,295,0.882,296,0.966,297,0.882,298,0.966,299,0.882,300,0.966,301,0.882,302,0.931,303,0.966,304,0.882,305,0.914,306,0.866,307,0.966,308,0.004,309,0.004,365,2.211,379,1.103,380,2.395,454,2.817,464,3.555,495,2.036,889,2.516,1078,4.114,1328,2.504,1378,2.859,1584,3.114,2056,3.969,2057,3.969,2106,2.669,2488,6.872,2489,8.02,2490,3.114,2491,5.208,2492,5.208,2493,5.531,2494,5.208,2495,5.208,2496,6.125,2497,6.218,2498,3.501,2499,7.715,2500,3.501,2501,3.501,2502,3.501,2503,3.501,2504,4.632,2505,3.501,2506,3.501,2507,3.501,2508,3.501,2509,3.501,2510,3.501,2511,3.501,2512,3.501,2513,3.501,2514,3.501,2515,3.501,2516,3.501,2517,3.501,2518,3.501,2519,3.501,2520,3.501,2521,3.501,2522,2.669,2523,3.501,2524,3.114]],["title/modules/MediumModule.html",[310,1.021,2525,3.486]],["body/modules/MediumModule.html",[2,0.389,3,0.389,8,0.341,23,2.279,24,0.007,25,1.698,58,2.229,60,0.417,132,0.6,141,3.109,145,0.386,146,0.173,182,1.214,253,2.507,254,1.709,308,0.006,309,0.006,310,1.675,312,2.585,317,3.217,318,2.474,319,2.185,322,3.01,557,3.63,558,2.909,2488,4.986,2525,6.767,2526,5.818,2527,5.818,2528,6.542,2529,5.818,2530,6.542,2531,6.542]],["title/components/MenuComponent.html",[0,0.244,256,1.244]],["body/components/MenuComponent.html",[0,0.341,1,0.747,2,0.173,3,0.173,4,0.591,5,0.804,6,0.804,8,0.152,10,0.3,14,3.284,15,1.296,19,0.707,21,2.825,22,0.658,24,0.007,25,1.333,26,2.292,27,1.974,28,1.543,30,1.204,32,0.327,33,0.599,35,1.744,38,1.201,39,1.374,43,2.372,44,0.726,46,3.187,55,0.877,60,0.259,64,0.737,65,1.635,66,1.226,75,1.442,76,1.352,77,1.606,84,1.426,86,1.229,87,0.946,88,0.856,108,1.161,110,0.733,113,1.095,119,1.628,121,2.538,132,0.267,142,0.707,145,0.126,146,0.077,162,0.992,167,1.263,182,0.541,183,1.182,184,0.903,188,1.697,189,0.804,190,0.804,191,0.72,192,0.747,193,1.042,194,0.924,195,1.872,196,0.761,197,1.728,198,0.761,199,0.804,200,0.747,201,1.249,202,0.761,203,0.804,204,0.747,205,0.804,206,0.72,207,0.733,208,1.378,209,1.532,210,0.72,211,0.747,212,0.747,213,0.733,214,0.804,215,0.761,216,1.532,217,0.804,218,0.804,219,0.761,220,1.728,221,0.747,222,1.532,223,0.761,224,0.761,225,0.747,226,0.804,227,0.733,228,0.761,229,0.804,230,0.747,231,0.804,232,0.804,233,0.747,234,0.804,235,0.72,236,0.747,237,0.804,238,0.733,239,0.804,240,0.658,241,0.804,242,0.733,243,1.399,244,0.804,245,0.733,246,0.804,247,0.733,248,0.804,249,0.695,250,0.804,251,0.747,252,0.682,253,0.747,254,0.761,255,0.804,256,1.842,257,1.532,258,0.804,259,0.747,260,0.804,261,0.747,262,0.804,263,0.695,264,0.804,265,0.747,266,0.747,267,0.804,268,0.747,269,0.761,270,0.804,271,0.72,272,0.72,273,1.595,274,0.733,275,0.903,276,0.747,277,0.733,278,0.733,279,0.747,280,0.733,281,0.747,282,0.804,283,0.733,284,0.804,285,0.747,286,0.804,287,0.747,288,0.804,289,0.747,290,0.804,291,0.747,292,0.707,293,0.72,294,0.804,295,0.733,296,0.804,297,0.733,298,0.804,299,0.733,300,0.804,301,0.733,302,0.775,303,0.804,304,0.733,305,0.761,306,0.72,307,0.804,308,0.003,309,0.003,319,1.512,340,0.647,364,4.5,367,1.08,373,1.349,376,2.369,394,3.174,427,2.303,437,5.473,438,1.482,444,3.55,481,3.175,495,1.818,512,4.877,517,2.449,532,1.628,535,0.935,615,1.454,717,1.83,731,2.827,771,5.049,807,2.449,816,2.449,827,5.301,949,4.156,1135,6.066,1459,5.052,1503,2.718,1553,3.501,2244,2.718,2532,2.59,2533,7.673,2534,4.527,2535,4.527,2536,8.136,2537,8.136,2538,6.263,2539,4.527,2540,4.527,2541,4.527,2542,4.527,2543,4.527,2544,4.527,2545,6.263,2546,4.026,2547,4.527,2548,6.784,2549,6.784,2550,2.59,2551,4.527,2552,4.527,2553,6.263,2554,4.527,2555,4.527,2556,4.527,2557,2.912,2558,4.527,2559,3.45,2560,2.912,2561,2.912,2562,2.912,2563,2.912,2564,2.912,2565,4.527,2566,4.026,2567,2.912,2568,2.912,2569,4.527,2570,4.527,2571,2.912,2572,4.527,2573,2.912,2574,4.527,2575,2.912,2576,4.527,2577,4.527,2578,2.912,2579,4.026,2580,4.527,2581,2.912,2582,4.026,2583,4.527,2584,2.912,2585,2.912,2586,4.527,2587,2.912,2588,4.527,2589,2.912,2590,2.912,2591,2.912,2592,4.026,2593,2.912,2594,4.527,2595,2.912,2596,2.912,2597,2.912,2598,2.912,2599,5.553,2600,2.912,2601,4.527,2602,2.912,2603,2.912,2604,7.181,2605,2.912,2606,2.912,2607,2.912,2608,2.912,2609,2.912,2610,2.912,2611,5.553,2612,3.45,2613,2.912,2614,2.912,2615,2.912,2616,6.784,2617,2.912,2618,6.263]],["title/components/MockupComponent.html",[0,0.244,259,1.244]],["body/components/MockupComponent.html",[0,0.404,1,0.915,2,0.374,3,0.212,4,0.724,5,0.984,6,0.984,8,0.186,10,0.367,19,0.866,22,0.806,24,0.006,26,2.314,27,1.996,28,1.799,30,1.404,35,0.751,43,1.379,60,0.167,87,0.864,108,1.354,110,0.898,113,0.727,132,0.327,145,0.154,146,0.166,162,3.365,171,2.041,182,0.662,183,1.379,184,1.053,188,1.882,189,0.984,190,0.984,191,0.882,192,0.915,193,1.215,194,1.046,195,2.047,196,0.932,197,1.917,198,0.932,199,0.984,200,0.915,201,1.457,202,0.932,203,0.984,204,0.915,205,0.984,206,0.882,207,0.898,208,1.506,209,1.735,210,0.882,211,0.915,212,0.915,213,0.898,214,0.984,215,0.932,216,1.735,217,0.984,218,0.984,219,0.932,220,1.917,221,0.915,222,1.735,223,0.932,224,0.932,225,0.915,226,0.984,227,0.898,228,0.932,229,0.984,230,0.915,231,0.984,232,0.984,233,0.915,234,0.984,235,0.882,236,0.915,237,0.984,238,0.898,239,0.984,240,0.806,241,0.984,242,0.898,243,1.583,244,0.984,245,0.898,246,0.984,247,0.898,248,0.984,249,0.851,250,0.984,251,0.915,252,0.836,253,0.915,254,0.932,255,0.984,256,0.915,257,0.984,258,0.984,259,1.782,260,0.984,261,0.915,262,0.984,263,0.851,264,0.984,265,0.915,266,0.915,267,0.984,268,0.915,269,0.932,270,0.984,271,0.882,272,0.882,273,1.725,274,0.898,275,1.925,276,0.915,277,0.898,278,0.898,279,0.915,280,0.898,281,0.915,282,0.984,283,0.898,284,0.984,285,0.915,286,0.984,287,0.915,288,0.984,289,0.915,290,0.984,291,0.915,292,0.866,293,0.882,294,0.984,295,0.898,296,0.984,297,0.898,298,0.984,299,0.898,300,0.984,301,0.898,302,0.949,303,0.984,304,0.898,305,0.932,306,0.882,307,0.984,308,0.004,309,0.004,327,2.686,438,1.729,515,2.184,936,4.284,1273,3.604,2385,3.17,2619,3.172,2620,3.44,2621,5.28,2622,5.28,2623,5.28,2624,5.28,2625,6.949,2626,5.28,2627,9.637,2628,9.751,2629,9.751,2630,9.606,2631,9.606,2632,4.696,2633,5.28,2634,5.28]],["title/interfaces/ModelConfig.html",[918,1.47,1420,3.31]],["body/interfaces/ModelConfig.html",[2,0.42,3,0.42,8,0.368,10,0.727,24,0.007,32,0.793,33,1.103,41,2.219,60,0.33,64,0.695,74,2.099,88,0.896,145,0.305,308,0.006,309,0.006,430,2.959,487,3.492,615,2.676,793,4.24,918,2.775,920,4.411,957,4.007,959,3.615,1046,4.821,1420,5.688,1500,5.13,1587,5.497,2635,5.077,2636,6.805,2637,5.204]],["title/injectables/ModelConfigService.html",[367,1.157,1041,3.16]],["body/injectables/ModelConfigService.html",[2,0.183,3,0.183,7,2.442,8,0.161,10,0.317,18,1.338,24,0.007,25,1.56,32,0.346,33,1.227,34,1.715,38,1.178,41,2.124,42,1.957,43,1.503,44,1.035,55,0.85,60,0.403,64,0.892,65,1.988,66,1.093,70,1.715,74,1.851,75,2.061,76,1.331,77,0.791,86,1.219,87,0.948,88,0.889,103,3.221,112,1.849,113,1.137,114,2.929,116,2.442,132,0.283,142,1.568,145,0.133,146,0.152,162,1.612,167,1.338,169,4.208,308,0.003,309,0.004,328,1.784,333,2.104,339,2.327,340,0.685,342,2.721,350,1.925,360,3.022,367,1.661,373,0.749,386,2.104,394,2.949,403,1.482,409,2.275,443,3.394,457,4.74,460,2.84,481,1.443,488,2.216,489,2.929,495,2.28,514,2.84,519,2.339,526,2.954,535,0.99,556,2.625,615,2.236,626,4.74,641,1.784,728,1.616,773,2.954,779,3.384,793,3.285,805,3.229,822,2.275,835,2.381,836,2.734,878,1.668,898,2.104,902,2.518,922,1.784,936,3.425,951,2.35,952,3.975,954,2.84,975,1.925,979,4.64,980,4.537,992,1.925,1017,2.84,1041,3.082,1042,3.736,1046,5.64,1047,2.518,1079,2.34,1096,2.738,1097,1.851,1108,2.216,1109,4.7,1136,2.104,1200,4.208,1260,1.723,1268,2.84,1441,2.742,1443,3.229,1451,5.016,1475,2.742,1500,1.784,1503,3.876,1506,2.954,1580,2.35,1587,5.523,1598,1.925,1610,1.668,1611,2.009,1612,3.929,1618,2.104,1917,3.863,2040,2.518,2041,2.518,2047,2.216,2090,3.229,2241,4.753,2242,4.788,2635,5.939,2636,6.001,2637,2.954,2638,2.35,2639,4.731,2640,7.2,2641,4.208,2642,7.349,2643,4.731,2644,4.731,2645,4.731,2646,4.731,2647,4.731,2648,3.083,2649,3.083,2650,4.731,2651,3.083,2652,4.731,2653,3.083,2654,4.731,2655,3.083,2656,4.731,2657,4.208,2658,3.863,2659,4.731,2660,3.083,2661,4.208,2662,3.083,2663,3.929,2664,4.731,2665,2.742,2666,4.731,2667,3.083,2668,4.731,2669,4.731,2670,4.731,2671,3.083,2672,3.083,2673,3.083,2674,3.083,2675,4.731,2676,3.083,2677,3.083,2678,4.208,2679,3.083,2680,4.731,2681,3.083,2682,3.083,2683,3.083,2684,3.083,2685,2.742,2686,2.742,2687,4.731,2688,4.208,2689,4.208,2690,4.731,2691,3.083,2692,3.083,2693,3.083,2694,3.083,2695,3.083,2696,5.12,2697,4.731,2698,3.083,2699,3.083,2700,4.731,2701,3.083,2702,3.083,2703,4.731,2704,4.731,2705,3.083,2706,3.083,2707,3.083,2708,3.083,2709,4.731,2710,6.456,2711,3.083,2712,3.083,2713,3.083,2714,4.731,2715,3.083,2716,3.083,2717,3.083,2718,3.083,2719,3.083,2720,3.083,2721,3.083,2722,3.083,2723,3.083,2724,3.083,2725,2.518,2726,2.518,2727,2.742,2728,2.35,2729,3.083,2730,4.731,2731,3.083,2732,3.083]],["title/interfaces/ModelConfiguration.html",[918,1.47,2733,3.961]],["body/interfaces/ModelConfiguration.html",[2,0.42,3,0.42,8,0.368,10,0.727,24,0.007,32,0.793,33,1.103,41,2.219,60,0.33,64,0.695,74,2.099,88,0.896,145,0.305,308,0.006,309,0.006,430,2.959,487,3.492,615,2.676,793,4.24,918,2.775,957,4.007,959,3.615,1046,4.821,1500,5.13,1587,5.497,2635,5.077,2636,6.805,2637,5.204,2733,6.805,2734,6.283]],["title/classes/Notification.html",[146,0.128,522,2.27]],["body/classes/Notification.html",[2,0.447,3,0.294,8,0.258,10,0.774,24,0.007,25,1.235,27,1.352,32,0.556,33,0.881,38,1.067,55,0.812,60,0.231,64,0.947,65,1.984,66,1.268,74,2.315,75,1.99,86,0.764,87,0.532,88,1.041,121,2.18,126,2.63,145,0.214,146,0.176,263,2.062,306,2.138,308,0.005,309,0.005,328,3.852,340,1.67,373,1.827,376,2.844,386,2.959,394,3.802,428,3.489,440,4.092,444,4.273,445,3.115,483,5.435,484,4.092,513,3.996,515,3.982,516,4.831,517,3.6,519,3.29,522,4.577,615,2.583,635,5.002,834,3.852,912,5.022,1079,3.133,1126,4.783,1350,5.397,1434,3.035,1503,3.996,1578,4.337,1581,4.041,1964,5.92,2166,5.92,2172,4.543,2385,3.996,2735,4.402,2736,6.656,2737,6.656,2738,6.656,2739,4.829,2740,4.949,2741,4.949,2742,4.949,2743,4.783,2744,4.949,2745,4.949,2746,6.656,2747,5.073,2748,4.949,2749,5.435,2750,6.656,2751,4.949,2752,4.949,2753,6.656,2754,4.949,2755,4.402,2756,4.949,2757,4.949]],["title/components/NotificationsComponent.html",[0,0.244,263,1.157]],["body/components/NotificationsComponent.html",[0,0.42,1,0.886,2,0.205,3,0.205,4,1.047,5,1.702,6,0.953,7,1.95,8,0.18,10,0.355,15,1.476,19,0.839,22,0.781,24,0.007,25,0.641,26,2.311,27,1.994,28,1.757,30,1.371,32,0.388,33,0.816,35,1.54,38,0.554,39,1.275,55,0.835,56,1.535,60,0.32,64,0.755,66,0.832,71,1.045,72,1.027,74,1.843,75,1.187,76,0.882,86,0.533,87,0.879,88,0.554,108,1.322,110,0.87,113,1.056,121,1.688,132,0.317,140,2.632,145,0.296,146,0.203,182,0.641,183,1.346,184,1.028,185,1.335,186,1.428,187,1.66,188,1.853,189,0.953,190,0.953,191,0.854,192,0.886,193,1.187,194,1.026,195,2.019,196,0.902,197,1.887,198,0.902,199,0.953,200,0.886,201,1.422,202,0.902,203,0.953,204,0.886,205,0.953,206,0.854,207,0.87,208,1.486,209,1.702,210,0.854,211,0.886,212,0.886,213,0.87,214,0.953,215,0.902,216,1.702,217,0.953,218,0.953,219,0.902,220,1.887,221,0.886,222,1.702,223,0.902,224,0.902,225,0.886,226,0.953,227,0.87,228,0.902,229,0.953,230,0.886,231,0.953,232,0.953,233,0.886,234,0.953,235,0.854,236,0.886,237,0.953,238,0.87,239,0.953,240,0.781,241,0.953,242,0.87,243,1.553,244,0.953,245,0.87,246,0.953,247,0.87,248,0.953,249,0.824,250,0.953,251,0.886,252,0.809,253,0.886,254,0.902,255,0.953,256,0.886,257,0.953,258,0.953,259,0.886,260,0.953,261,0.886,262,0.953,263,1.746,264,0.953,265,0.886,266,0.886,267,0.953,268,0.886,269,0.902,270,0.953,271,0.854,272,0.854,273,1.705,274,0.87,275,0.689,276,0.886,277,0.87,278,0.87,279,0.886,280,0.87,281,0.886,282,0.953,283,0.87,284,0.953,285,0.886,286,0.953,287,0.886,288,0.953,289,0.886,290,0.953,291,0.886,292,0.839,293,0.854,294,0.953,295,0.87,296,0.953,297,0.87,298,0.953,299,0.87,300,0.953,301,0.87,302,0.919,303,0.953,304,0.87,305,0.902,306,1.899,307,0.953,308,0.004,309,0.004,310,0.727,340,1.145,357,1.535,376,1.95,394,3.251,427,1.757,428,2.236,430,1.226,431,2.183,440,4.16,445,3.201,452,1.462,465,1.993,474,1.93,481,1.616,484,4.047,515,3.382,516,3.447,519,2.548,522,4.535,523,3.931,535,1.98,537,4.7,587,1.535,615,1.109,635,3.569,664,2.073,676,2.073,708,2.482,712,4.024,739,2.073,821,3.219,834,4.235,858,1.998,907,3.358,908,4.432,910,2.357,912,3.851,918,1.046,940,2.632,943,1.707,957,2.478,959,1.498,1079,2.235,1221,1.998,1350,2.156,1434,1.575,1503,2.073,1511,4.209,1548,1.93,1558,3.233,1598,3.851,1611,3.358,1798,3.219,1836,3.071,1846,2.548,1867,2.632,1887,2.82,2086,3.705,2147,2.632,2196,4.209,2226,3.705,2240,3.219,2244,3.095,2263,3.071,2385,3.095,2457,2.82,2612,2.632,2663,2.357,2739,2.073,2758,3.071,2759,6.083,2760,5.155,2761,5.155,2762,5.155,2763,5.155,2764,5.155,2765,3.453,2766,3.071,2767,3.071,2768,2.357,2769,4.585,2770,3.071,2771,5.485,2772,5.036,2773,4.209,2774,2.82,2775,3.071,2776,3.071,2777,3.071,2778,2.82,2779,3.071,2780,3.071,2781,3.071,2782,3.071,2783,3.071,2784,2.482,2785,2.82,2786,2.82,2787,3.071,2788,3.071,2789,4.585,2790,3.071,2791,3.071,2792,4.585,2793,3.071,2794,3.071,2795,3.071,2796,2.482,2797,2.482,2798,3.071,2799,3.071,2800,6.168,2801,3.453,2802,3.453,2803,3.453,2804,3.453,2805,6.168,2806,5.485,2807,3.453,2808,3.453,2809,3.453,2810,3.453,2811,3.453,2812,3.453,2813,5.155,2814,3.453,2815,3.071,2816,4.585,2817,3.071,2818,3.453]],["title/modules/NotificationsModule.html",[310,1.021,2819,3.486]],["body/modules/NotificationsModule.html",[2,0.373,3,0.373,8,0.327,23,2.52,24,0.007,58,2.139,60,0.444,132,0.576,141,3.053,145,0.38,146,0.166,182,1.165,225,2.478,263,2.305,308,0.006,309,0.006,310,1.633,312,2.48,317,3.136,318,2.373,319,2.096,322,2.934,409,1.866,523,4.428,557,3.538,558,2.79,580,4.51,1703,6.001,1704,5.751,1709,5.124,1719,4.783,2755,5.581,2799,5.581,2819,7.03,2820,5.581,2821,5.581,2822,6.275,2823,5.581,2824,5.581,2825,6.275,2826,6.275,2827,5.581]],["title/injectables/NotificationsService.html",[367,1.157,523,2.332]],["body/injectables/NotificationsService.html",[0,0.318,2,0.273,3,0.273,8,0.239,10,0.473,23,2.42,24,0.007,25,1.447,27,1.285,32,0.516,33,0.837,38,1.16,39,2.091,44,1.014,55,0.772,60,0.364,64,0.804,66,1.169,70,1.664,71,1.432,72,1.881,74,1.822,76,1.262,77,1.178,86,1.117,87,0.778,88,0.778,93,4.546,113,1.192,116,2.392,132,0.421,138,3.75,141,1.664,142,1.758,145,0.198,146,0.122,185,1.775,186,1.9,306,1.928,308,0.005,309,0.005,310,1.331,335,4.546,340,1.607,367,2.017,373,1.758,376,2.392,378,3.422,386,2.042,431,3.302,452,2.679,464,6.185,465,3.267,469,4.725,484,3.218,495,2.553,513,2.757,516,2.567,517,3.422,522,4.601,523,3.041,527,4.932,528,3.218,534,2.757,579,5.165,580,4.546,609,6.074,643,2.867,693,3.5,738,4.317,772,2.867,773,2.867,912,2.867,925,5.165,943,2.27,1136,2.812,1551,2.657,1598,2.867,2090,4.317,2612,3.5,2658,5.165,2797,4.546,2806,4.084,2815,4.084,2816,5.626,2817,4.084,2827,7.517,2828,3.75,2829,6.325,2830,9.294,2831,7.797,2832,6.325,2833,7.797,2834,4.592,2835,6.325,2836,6.325,2837,4.592,2838,7.797,2839,6.935,2840,8.452,2841,6.325,2842,4.592,2843,6.325,2844,4.592,2845,6.325,2846,4.592,2847,6.325,2848,4.592,2849,5.515,2850,4.084,2851,4.592,2852,4.592,2853,4.592,2854,4.592,2855,4.592,2856,4.592,2857,4.592,2858,4.084,2859,4.592,2860,4.592,2861,4.592,2862,4.592,2863,4.592,2864,4.592,2865,4.592,2866,4.592]],["title/components/OutputComponent.html",[0,0.244,265,1.244]],["body/components/OutputComponent.html",[0,0.456,1,1.06,2,0.246,3,0.246,4,1.389,5,1.141,6,1.141,8,0.215,10,0.426,15,1.683,18,2.55,19,1.004,21,3.479,22,0.935,24,0.007,26,2.328,27,2.01,28,2.003,30,1.563,32,0.464,33,0.985,35,1.721,38,0.663,41,2.193,43,2.403,44,0.942,46,3.789,55,0.835,60,0.368,64,0.804,66,1.062,72,1.748,74,1.722,75,1.811,76,0.841,77,1.06,86,0.638,87,0.924,88,0.445,105,1.751,106,1.839,108,1.507,110,1.041,113,1.025,121,1.354,123,3.401,132,0.379,145,0.179,146,0.11,171,1.598,182,0.767,183,1.535,184,1.172,188,2.017,189,1.141,190,1.141,191,1.023,192,1.06,193,1.353,194,1.138,195,2.171,196,1.08,197,2.055,198,1.08,199,1.141,200,1.06,201,1.622,202,1.08,203,1.141,204,1.06,205,1.141,206,1.023,207,1.041,208,1.598,209,1.887,210,1.946,211,1.06,212,2.097,213,2.059,214,1.141,215,1.08,216,1.887,217,1.141,218,1.141,219,1.08,220,2.055,221,1.06,222,1.887,223,1.08,224,1.08,225,1.06,226,1.141,227,1.041,228,1.08,229,1.141,230,1.06,231,1.141,232,1.141,233,1.06,234,1.141,235,1.023,236,1.06,237,1.141,238,1.041,239,1.141,240,0.935,241,1.141,242,1.041,243,1.722,244,1.141,245,1.041,246,1.141,247,1.041,248,1.141,249,0.987,250,1.141,251,1.06,252,0.969,253,1.06,254,1.08,255,1.141,256,1.06,257,1.141,258,1.141,259,1.06,260,1.141,261,1.06,262,1.141,263,0.987,264,1.141,265,1.91,266,1.06,267,1.141,268,1.06,269,1.08,270,1.141,271,1.023,272,1.023,273,1.816,274,1.041,275,0.825,276,1.06,277,1.041,278,1.041,279,1.06,280,1.041,281,1.06,282,1.141,283,1.041,284,1.141,285,1.06,286,1.141,287,1.06,288,1.141,289,1.06,290,1.141,291,1.06,292,1.004,293,1.023,294,1.141,295,1.041,296,1.141,297,1.041,298,1.141,299,1.041,300,1.141,301,1.041,302,1.1,303,1.141,304,1.722,305,1.08,306,1.023,307,1.141,308,0.004,309,0.004,356,3.67,359,2.967,365,2.625,388,4.224,428,1.794,430,2.087,774,4.012,816,4.028,949,2.393,1048,2.482,1050,2.972,1253,2.694,1260,2.311,1261,2.822,1262,5.228,1321,4.915,1323,4.8,1324,6.081,1325,4.8,1327,3.376,1328,2.826,1330,3.376,1331,3.376,1962,5.228,1977,3.678,1987,3.678,1988,3.376,1989,5.228,2867,3.678,2868,4.135,2869,4.135,2870,4.135,2871,4.135]],["title/classes/Pagination.html",[146,0.128,2192,2.807]],["body/classes/Pagination.html",[2,0.349,3,0.189,7,1.205,8,0.166,10,0.328,23,1.389,24,0.007,25,1.437,32,0.358,33,0.642,38,0.778,39,1.841,40,2.271,43,2.083,44,0.778,45,2.912,55,0.717,60,0.274,64,0.834,66,1.242,71,1.197,72,1.442,74,1.222,75,1.714,76,1.368,77,2.23,84,2.815,86,1.195,87,0.832,88,0.879,113,0.904,121,2.814,142,0.774,145,0.138,146,0.174,162,2.964,308,0.003,309,0.003,332,2.912,340,0.708,357,1.417,359,3.812,373,1.808,376,3.634,378,2.624,384,1.179,386,2.612,410,4.647,413,4.604,430,1.722,438,2.15,443,3.263,444,2.398,469,4.161,474,4.737,481,1.491,489,1.621,495,1.924,515,2.716,519,2.398,527,3.95,528,4.241,531,2.745,534,1.913,615,2.759,690,3.697,716,6.229,717,1.961,772,1.989,804,3.697,915,1.989,922,4.824,943,1.575,944,4.315,956,3.942,957,2.332,1123,6.549,1221,1.844,1328,2.332,1343,5.841,1344,5.841,1345,5.362,1434,2.995,1476,4.477,1531,2.807,1537,2.175,1553,1.781,1558,1.67,1832,4.477,1922,5.291,2020,3.961,2021,4.222,2086,3.486,2137,2.834,2192,5.299,2483,5.841,2546,4.315,2559,3.697,2637,3.029,2661,5.841,2839,6.621,2872,2.834,2873,8.938,2874,7.978,2875,5.841,2876,6.567,2877,4.315,2878,4.315,2879,4.851,2880,6.567,2881,3.186,2882,4.851,2883,3.186,2884,3.186,2885,3.186,2886,4.315,2887,3.186,2888,3.186,2889,3.186,2890,4.851,2891,3.186,2892,3.186,2893,3.186,2894,3.186,2895,4.851,2896,3.186,2897,3.186,2898,3.186,2899,3.186,2900,4.851,2901,3.186,2902,4.851,2903,3.186,2904,4.851,2905,5.874,2906,4.851,2907,3.186,2908,4.315,2909,4.851,2910,3.186,2911,2.428,2912,2.834,2913,2.834,2914,2.834,2915,2.834,2916,3.186,2917,3.186,2918,3.186,2919,3.186,2920,2.602,2921,7.74,2922,3.186,2923,3.186,2924,8.474,2925,5.841,2926,7.067,2927,3.186,2928,3.186,2929,5.874,2930,3.186,2931,3.186,2932,3.186,2933,3.186,2934,3.186,2935,3.186,2936,5.874,2937,3.186]],["title/components/PaginationComponent.html",[0,0.244,266,1.244]],["body/components/PaginationComponent.html",[0,0.398,1,0.876,2,0.203,3,0.203,4,0.693,5,0.942,6,0.942,8,0.178,10,0.351,15,1.464,19,0.829,20,3.424,21,3.116,22,0.772,24,0.007,26,2.31,27,1.992,28,1.742,30,1.359,32,0.383,33,0.676,34,3.227,35,1.609,37,3.991,38,0.547,44,0.819,45,3.677,46,3.46,47,3.935,55,0.83,60,0.318,64,0.752,65,1.115,66,1.162,71,0.866,72,2.022,75,1.176,76,1.192,77,1.868,84,2.142,86,0.789,87,0.896,88,0.55,104,4.585,105,2.594,106,2.724,108,1.744,110,0.86,113,0.703,121,2.006,132,0.313,142,1.488,145,0.148,146,0.162,147,2.602,162,2.891,167,1.481,182,0.634,183,1.335,184,1.019,188,1.842,189,0.942,190,0.942,191,0.844,192,0.876,193,1.176,194,1.019,195,2.009,196,0.892,197,1.877,198,0.892,199,0.942,200,0.876,201,1.41,202,0.892,203,0.942,204,0.876,205,0.942,206,0.844,207,0.86,208,1.479,209,1.69,210,0.844,211,0.876,212,0.876,213,0.86,214,0.942,215,0.892,216,1.69,217,0.942,218,0.942,219,0.892,220,1.877,221,0.876,222,1.69,223,0.892,224,0.892,225,0.876,226,0.942,227,0.86,228,0.892,229,0.942,230,0.876,231,0.942,232,0.942,233,0.876,234,0.942,235,0.844,236,0.876,237,0.942,238,0.86,239,0.942,240,0.772,241,0.942,242,0.86,243,1.543,244,0.942,245,0.86,246,0.942,247,0.86,248,0.942,249,0.815,250,0.942,251,0.876,252,0.8,253,0.876,254,0.892,255,0.942,256,0.876,257,0.942,258,0.942,259,0.876,260,0.942,261,0.876,262,0.942,263,0.815,264,0.942,265,0.876,266,1.744,267,0.942,268,0.876,269,0.892,270,0.942,271,0.844,272,0.844,273,1.697,274,0.86,275,0.681,276,0.876,277,0.86,278,0.86,279,0.876,280,0.86,281,0.876,282,0.942,283,0.86,284,0.942,285,0.876,286,0.942,287,0.876,288,0.942,289,0.876,290,0.942,291,0.876,292,0.829,293,0.844,294,0.942,295,0.86,296,0.942,297,0.86,298,0.942,299,0.86,300,0.942,301,0.86,302,0.908,303,0.942,304,0.86,305,0.892,306,0.844,307,0.942,308,0.004,309,0.004,356,3.191,357,1.518,373,0.829,379,1.609,388,3.673,443,2.953,445,2.392,474,2.857,487,1.688,489,1.737,495,2.728,531,2.599,728,2.679,816,2.764,835,3.609,888,2.857,915,3.191,1126,4.887,1136,2.272,1434,2.331,1720,3.036,1922,3.191,2063,4.181,2173,5.553,2174,4.545,2192,5.298,2205,3.036,2368,5.002,2371,5.553,2877,4.545,2925,3.036,2938,3.036,2939,5.111,2940,5.111,2941,6.801,2942,5.111,2943,6.801,2944,3.414,2945,3.414,2946,5.111,2947,3.414,2948,3.414,2949,7.546,2950,3.414,2951,3.414,2952,3.414,2953,4.545,2954,3.414,2955,3.414,2956,3.414,2957,5.111,2958,3.414,2959,5.111,2960,3.414,2961,4.545,2962,5.111,2963,3.414,2964,3.414,2965,5.111,2966,3.414,2967,3.414,2968,5.111,2969,3.414,2970,3.414,2971,6.125,2972,3.414,2973,6.125,2974,3.414,2975,6.125,2976,3.414,2977,3.414,2978,3.414,2979,3.414,2980,3.414,2981,3.414,2982,3.414,2983,3.414,2984,5.111,2985,5.111,2986,5.111,2987,5.111,2988,5.111,2989,5.111,2990,5.111,2991,5.111,2992,5.111,2993,5.111,2994,5.111,2995,5.111]],["title/classes/PaginationConfig.html",[146,0.128,2063,3.31]],["body/classes/PaginationConfig.html",[0,0.385,2,0.365,3,0.365,8,0.32,10,0.632,24,0.007,32,0.689,33,1.013,38,0.984,40,3.582,60,0.287,64,0.859,66,1.178,86,0.948,87,0.66,88,0.66,113,1.148,121,2.506,145,0.265,146,0.203,162,2.608,308,0.005,309,0.005,340,1.852,373,2.225,376,3.302,440,4.442,443,3.164,445,3.582,474,4.278,531,2.68,728,4.577,729,4.429,793,3.894,836,2.6,840,4.594,878,3.32,920,3.833,1017,4.594,1079,2.774,1123,5.833,1553,4.278,1581,5.012,2063,6.131,2192,4.429,2878,6.807,2996,7.99,2997,8.73,2998,8.73,2999,8.353,3000,7.653,3001,6.138,3002,6.249,3003,6.138,3004,6.807,3005,7.653,3006,7.653,3007,7.653]],["title/components/PasswordResetComponent.html",[0,0.244,268,1.244]],["body/components/PasswordResetComponent.html",[0,0.38,1,0.96,2,0.223,3,0.223,4,0.76,5,1.033,6,1.033,8,0.195,10,0.385,15,1.567,19,0.909,22,0.846,24,0.007,25,1.2,26,2.319,27,2.001,30,1.455,32,0.42,33,0.724,35,1.663,38,0.6,39,1.871,41,1.282,44,0.877,55,0.868,60,0.332,64,0.823,65,1.41,66,1.171,71,0.634,72,1.627,76,0.536,77,0.96,86,0.578,87,0.9,88,0.695,105,1.585,106,2.432,108,1.403,110,0.943,112,2.037,113,0.89,132,0.343,135,1.752,142,0.909,145,0.162,146,0.099,165,2.868,171,2.115,182,0.695,183,1.429,184,1.091,188,1.927,189,1.033,190,1.033,191,0.926,192,0.96,193,1.259,194,1.076,195,2.088,196,0.978,197,1.962,198,0.978,199,1.033,200,0.96,201,1.51,202,0.978,203,1.033,204,0.96,205,1.033,206,0.926,207,0.943,208,1.536,209,1.784,210,0.926,211,0.96,212,0.96,213,0.943,214,1.033,215,0.978,216,1.784,217,1.033,218,1.033,219,0.978,220,1.962,221,0.96,222,1.784,223,0.978,224,0.978,225,0.96,226,1.033,227,0.943,228,0.978,229,1.033,230,0.96,231,1.033,232,1.033,233,0.96,234,1.033,235,0.926,236,0.96,237,1.033,238,0.943,239,1.033,240,1.237,241,1.033,242,0.943,243,1.628,244,1.033,245,0.943,246,1.033,247,0.943,248,1.033,249,0.893,250,1.033,251,0.96,252,0.877,253,0.96,254,0.978,255,1.033,256,0.96,257,1.033,258,1.033,259,0.96,260,1.033,261,0.96,262,1.033,263,0.893,264,1.033,265,0.96,266,0.96,267,1.033,268,1.824,269,2.185,270,1.033,271,0.926,272,0.926,273,1.755,274,0.943,275,0.747,276,0.96,277,0.943,278,0.943,279,0.96,280,0.943,281,0.96,282,1.033,283,0.943,284,1.033,285,0.96,286,1.033,287,0.96,288,1.033,289,0.96,290,1.033,291,0.96,292,0.909,293,0.926,294,1.033,295,0.943,296,1.033,297,0.943,298,1.033,299,0.943,300,1.033,301,0.943,302,0.996,303,1.033,304,0.943,305,0.978,306,0.926,307,1.033,308,0.004,309,0.004,318,3.28,331,3.541,340,0.831,349,1.85,352,2.69,365,2.284,368,4.467,369,4.212,373,1.571,379,2.036,380,2.473,394,2.317,404,2.439,431,2.317,449,4.542,450,4.677,513,4.27,515,2.263,516,2.092,522,3.916,523,3.799,537,4.169,544,3.329,565,7.178,569,3.056,623,5.451,820,3.614,826,3.816,884,2.853,912,3.416,1078,4.229,1434,2.495,1847,3.932,1926,7.082,2385,4.744,2388,3.329,2403,3.329,2405,3.329,2432,6.325,2434,4.865,2438,5.75,2778,3.056,3008,7.818,3009,3.329,3010,7.028,3011,5.471,3012,7.112,3013,5.471,3014,3.743,3015,3.743,3016,3.743,3017,3.743,3018,5.471,3019,3.743,3020,3.743,3021,5.471,3022,4.865,3023,4.865,3024,3.743,3025,3.743,3026,3.743,3027,3.743,3028,3.329,3029,3.743,3030,3.743,3031,3.743,3032,3.743,3033,3.743,3034,3.743,3035,3.743,3036,6.465,3037,3.743]],["title/components/PopComponent.html",[0,0.244,271,1.2]],["body/components/PopComponent.html",[0,0.376,1,0.932,2,0.216,3,0.216,4,0.738,5,1.754,6,1.003,7,1.375,8,0.189,10,0.374,19,0.883,22,0.822,24,0.007,25,1.452,26,2.316,27,2.004,28,1.825,30,1.424,32,0.408,33,0.708,34,2.542,35,1.646,38,1.124,39,2.095,44,0.858,55,0.654,56,2.381,60,0.25,64,0.769,66,1.12,71,0.616,74,2.169,76,1.003,77,1.63,84,1.686,86,0.827,87,0.911,88,0.576,108,1.373,110,0.915,113,1.113,132,0.333,145,0.157,146,0.142,182,0.675,183,1.398,184,1.068,185,1.405,186,1.503,187,1.748,188,1.9,189,1.003,190,1.003,191,0.899,192,0.932,193,1.232,194,1.057,195,2.063,196,0.949,197,1.935,198,0.949,199,1.003,200,0.932,201,1.477,202,0.949,203,1.003,204,0.932,205,1.003,206,0.899,207,0.915,208,1.518,209,1.754,210,0.899,211,0.932,212,0.932,213,0.915,214,1.003,215,0.949,216,1.754,217,1.003,218,1.003,219,0.949,220,1.935,221,0.932,222,1.754,223,0.949,224,0.949,225,0.932,226,1.003,227,0.915,228,0.949,229,1.003,230,0.932,231,1.003,232,1.003,233,0.932,234,1.003,235,0.899,236,0.932,237,1.003,238,0.915,239,1.003,240,0.822,241,1.003,242,0.915,243,1.601,244,1.003,245,0.915,246,1.003,247,0.915,248,1.003,249,0.867,250,1.003,251,0.932,252,0.852,253,0.932,254,0.949,255,1.003,256,0.932,257,1.003,258,1.003,259,0.932,260,1.003,261,0.932,262,1.003,263,0.867,264,1.003,265,0.932,266,0.932,267,1.003,268,0.932,269,0.949,270,1.003,271,1.735,272,0.899,273,1.737,274,0.915,275,0.725,276,0.932,277,0.915,278,0.915,279,0.932,280,0.915,281,0.932,282,1.003,283,0.915,284,1.003,285,0.932,286,1.003,287,0.932,288,1.003,289,0.932,290,1.003,291,0.932,292,0.883,293,0.899,294,1.003,295,0.915,296,1.003,297,0.915,298,1.003,299,0.915,300,1.003,301,0.915,302,0.967,303,1.003,304,0.915,305,0.949,306,0.899,307,1.003,308,0.004,309,0.004,340,0.807,357,1.616,365,2.252,373,2.093,376,2.025,379,1.145,380,2.439,409,2.085,423,4.701,431,3.587,435,4.372,436,4.372,437,6.324,440,4.222,441,4.883,444,4.318,445,4.381,447,3.233,448,5.095,460,3.214,461,4.08,465,3.023,474,3.92,475,3.568,477,4.762,479,5.726,481,3.282,483,4.372,484,2.724,485,4.372,494,2.968,528,1.849,531,1.022,959,1.577,1299,4.762,1423,4.762,1521,2.77,1523,2.968,1551,2.103,1558,1.905,1840,2.481,1879,3.969,2051,2.612,2108,3.233,2109,3.233,2244,2.182,2267,3.233,2271,3.233,2612,4.08,2620,2.368,2739,2.182,3038,3.233,3039,4.762,3040,7.013,3041,5.354,3042,5.354,3043,5.354,3044,3.635,3045,3.635,3046,3.635,3047,3.635,3048,3.635,3049,3.635,3050,3.233,3051,3.233,3052,2.968,3053,3.233,3054,3.233,3055,3.233,3056,3.635,3057,3.635,3058,3.635,3059,3.635,3060,6.356,3061,3.635]],["title/modules/PopModule.html",[310,1.021,1703,3.16]],["body/modules/PopModule.html",[2,0.403,3,0.403,8,0.353,23,2.494,24,0.007,58,2.308,60,0.432,132,0.621,141,3.157,145,0.39,146,0.179,182,1.257,271,2.413,308,0.006,309,0.006,310,1.711,312,2.677,317,3.286,318,2.562,319,2.263,322,3.074,448,6.111,557,3.707,558,3.012,877,4.413,1703,6.271,3055,6.025,3062,6.025,3063,6.025,3064,6.025,3065,6.025,3066,6.774]],["title/injectables/PopService.html",[367,1.157,448,3.16]],["body/injectables/PopService.html",[2,0.376,3,0.376,8,0.329,10,0.651,24,0.007,32,0.71,33,1.032,38,1.014,60,0.395,64,0.622,66,1.052,71,1.321,113,0.871,121,2.553,132,0.58,142,1.537,145,0.273,146,0.168,162,2.156,271,1.565,308,0.006,309,0.006,327,3.967,340,1.877,367,2.017,379,2.662,423,4.874,440,3.967,448,5.08,475,3.967,487,3.127,712,4.838,800,4.087,877,4.121,933,6.012,1840,5.321,2226,6.885,2759,7.847,3067,5.626,3068,9.062,3069,7.797,3070,8.823,3071,7.797,3072,6.325,3073,6.325,3074,6.325,3075,6.325,3076,6.325,3077,6.325,3078,6.325,3079,6.325,3080,6.325]],["title/injectables/ResourceConfig.html",[367,1.157,604,2.711]],["body/injectables/ResourceConfig.html",[2,0.128,3,0.128,4,0.721,8,0.274,10,0.365,24,0.007,25,1.77,27,0.721,32,0.241,34,0.779,35,0.747,38,1.393,39,1.121,41,2.092,42,2.592,44,0.843,55,0.433,60,0.31,64,0.707,65,2.019,66,0.999,70,3.149,71,0.364,74,0.541,75,0.817,76,1.34,86,0.899,87,0.886,88,0.626,94,1.912,103,1.286,112,2.331,113,0.724,114,1.094,118,2.015,130,1.163,132,0.197,145,0.093,146,0.057,167,0.932,172,1.912,173,2.053,191,0.878,193,1.443,194,1.492,206,0.878,208,0.92,273,1.473,275,1.049,308,0.003,309,0.003,325,1.545,328,2.053,333,3.59,334,1.755,340,0.477,362,4.731,367,1.081,373,1.918,376,0.813,394,3.135,396,5.477,409,2.785,442,2.55,443,3.079,457,4.161,481,2.462,488,1.545,489,1.094,495,0.704,513,1.29,514,1.29,535,0.69,556,2.399,581,1.545,584,2.704,604,1.983,609,4.765,615,1.455,623,2.952,640,4.944,641,1.244,643,4.14,678,2.94,679,3.913,710,1.244,779,1.127,793,1.094,794,1.244,800,1.127,805,1.467,807,1.919,835,2.408,836,2.808,878,1.163,936,4.185,956,1.29,968,3.906,979,6.05,1011,2.053,1042,3.044,1048,1.29,1053,1.4,1076,2.829,1079,3.021,1135,1.638,1136,4.236,1434,0.98,1440,1.342,1483,1.545,1502,1.638,1506,5.204,1562,2.704,1576,2.55,1599,1.545,1610,4.508,1612,3.093,1618,2.422,1619,1.545,1620,1.342,1639,1.638,1647,1.638,1915,3.7,1923,3.7,1947,4.03,2040,6.645,2042,5.574,2047,3.78,2240,1.342,2242,2.312,2638,1.638,2665,1.912,2685,4.03,2688,3.156,2689,3.156,2725,5.118,2726,1.755,2727,1.912,2728,5.283,2768,2.422,3081,5.18,3082,5.26,3083,7.185,3084,3.548,3085,3.548,3086,6.931,3087,2.149,3088,2.149,3089,6.267,3090,3.548,3091,3.548,3092,1.912,3093,2.149,3094,3.548,3095,2.149,3096,2.149,3097,2.149,3098,6.044,3099,3.548,3100,2.149,3101,3.548,3102,2.149,3103,2.149,3104,1.912,3105,2.149,3106,2.149,3107,2.149,3108,1.638,3109,1.638,3110,3.548,3111,2.149,3112,2.149,3113,2.149,3114,1.912,3115,2.149,3116,2.149,3117,2.149,3118,3.548,3119,2.149,3120,2.149,3121,2.149,3122,8.024,3123,4.531,3124,2.149,3125,2.149,3126,4.531,3127,2.149,3128,3.548,3129,5.26,3130,2.149,3131,2.149,3132,2.149,3133,2.149,3134,1.755,3135,2.149,3136,8.138,3137,8.138,3138,2.149,3139,2.149,3140,2.149,3141,2.149,3142,2.149,3143,2.149,3144,2.149,3145,2.149,3146,2.149,3147,2.149,3148,5.26,3149,2.149,3150,2.149,3151,1.912,3152,4.531,3153,3.548,3154,3.548,3155,2.149,3156,3.548,3157,3.548,3158,2.149,3159,2.149,3160,2.149,3161,2.149,3162,2.149,3163,2.149,3164,2.149,3165,2.149,3166,2.149,3167,2.149,3168,2.149,3169,2.149,3170,1.912,3171,2.149,3172,2.149,3173,2.149,3174,2.149,3175,2.149,3176,1.638,3177,2.149,3178,2.149,3179,2.149,3180,2.149,3181,2.149,3182,2.149,3183,2.149,3184,2.149,3185,2.149,3186,2.149,3187,2.149,3188,2.149,3189,4.531,3190,5.26,3191,3.548,3192,4.531,3193,3.548,3194,3.548,3195,2.149,3196,3.156,3197,2.149,3198,2.149,3199,2.149,3200,2.149,3201,2.149,3202,2.149,3203,2.149,3204,2.149,3205,2.149,3206,2.149,3207,2.149,3208,2.149,3209,2.149,3210,2.149,3211,3.548,3212,2.149,3213,2.149,3214,2.149,3215,2.149,3216,2.149,3217,2.149,3218,2.149,3219,2.149,3220,2.149,3221,2.149,3222,2.149,3223,2.149,3224,2.149,3225,2.149,3226,2.149,3227,2.149,3228,2.149,3229,2.149,3230,2.149,3231,2.149,3232,3.548,3233,2.149,3234,2.149,3235,1.912,3236,1.638,3237,2.149,3238,2.149,3239,2.149,3240,2.149,3241,2.149,3242,3.548,3243,2.149,3244,3.548,3245,2.149,3246,3.548,3247,2.149,3248,2.149,3249,2.149]],["title/components/ResourceCrudComponent.html",[0,0.244,272,1.2]],["body/components/ResourceCrudComponent.html",[0,0.34,1,0.741,2,0.172,3,0.172,4,1.372,5,0.797,6,0.797,8,0.15,10,0.297,15,1.288,19,0.701,20,3.087,22,0.653,24,0.007,25,0.835,26,2.291,27,1.978,28,1.533,30,1.196,32,0.324,33,0.595,35,1.627,38,0.463,39,1.964,43,1.174,44,1.346,47,3.608,55,0.943,60,0.41,64,0.847,65,1.474,66,1.211,70,2.801,71,0.936,75,1.435,76,1.245,77,1.599,84,1.416,86,0.853,87,0.926,88,0.831,105,2.861,106,2.772,108,1.599,110,0.727,113,1.028,132,0.265,135,1.352,145,0.125,146,0.146,162,0.984,167,1.253,171,1.738,174,1.803,182,0.536,183,1.442,184,0.897,188,1.689,189,0.797,190,0.797,191,0.714,192,0.741,193,1.035,194,1.472,195,1.864,196,0.754,197,1.72,198,0.754,199,0.797,200,0.741,201,1.241,202,0.754,203,0.797,204,0.741,205,0.797,206,0.714,207,0.727,208,1.372,209,1.524,210,0.714,211,0.741,212,0.741,213,0.727,214,0.797,215,0.754,216,1.524,217,0.797,218,0.797,219,0.754,220,1.72,221,0.741,222,1.524,223,0.754,224,0.754,225,0.741,226,0.797,227,0.727,228,0.754,229,0.797,230,0.741,231,0.797,232,0.797,233,0.741,234,0.797,235,0.714,236,0.741,237,0.797,238,0.727,239,0.797,240,1.528,241,0.797,242,0.727,243,1.391,244,0.797,245,0.727,246,0.797,247,0.727,248,0.797,249,0.689,250,0.797,251,0.741,252,0.677,253,0.741,254,0.754,255,0.797,256,0.741,257,0.797,258,0.797,259,0.741,260,0.797,261,0.741,262,0.797,263,0.689,264,0.797,265,0.741,266,0.741,267,0.797,268,0.741,269,0.754,270,0.797,271,0.714,272,1.77,273,2.034,274,0.727,275,0.576,276,1.153,277,1.882,278,1.702,279,0.741,280,0.727,281,0.741,282,0.797,283,0.727,284,0.797,285,0.741,286,0.797,287,0.741,288,0.797,289,0.741,290,0.797,291,0.741,292,0.701,293,0.714,294,0.797,295,0.727,296,0.797,297,0.727,298,0.797,299,0.727,300,0.797,301,0.727,302,0.768,303,0.797,304,0.727,305,0.754,306,0.714,307,0.797,308,0.003,309,0.003,319,1.502,331,3.617,339,2.233,340,0.641,341,1.514,342,2.308,359,1.951,365,2.481,373,0.701,379,1.739,380,2.823,384,1.665,403,1.388,423,4.129,428,2.705,438,2.849,443,2.002,446,4.402,449,3.316,450,3.485,457,4.056,460,2.7,465,2.41,488,2.075,489,1.469,490,2.358,495,1.809,502,2.075,512,3.752,523,2.998,526,1.803,528,2.288,532,1.614,533,2.201,535,0.927,556,3.081,570,2,587,2,615,2.002,619,2.896,626,2.7,642,2.075,804,2.201,815,3.232,816,2.433,817,3.672,818,3.427,820,3.087,822,2.162,823,4,824,4,826,3.263,827,5.471,828,5.545,829,4,833,3.917,834,3.196,837,5.454,839,4,840,2.7,844,2.808,848,4,849,3.672,850,3.427,851,4,870,1.803,871,2.358,872,2.358,873,2.358,874,2.568,875,2.568,877,1.881,884,2.201,891,4.912,892,2.568,893,2.568,913,2.201,915,1.803,916,4,917,4,933,2.93,937,4.752,1054,1.734,1060,2.075,1061,2.075,1062,6.877,1417,4,1425,6.009,1426,4,1427,4,1432,4,2043,3.672,2637,2.808,2747,2.201,3081,6.159,3236,2.201,3250,2.568,3251,6.235,3252,5.523,3253,4.497,3254,2.888,3255,2.888,3256,2.888,3257,2.888,3258,2.888,3259,6.235,3260,2.888,3261,2.888,3262,2.888,3263,2.888,3264,2.888,3265,2.888,3266,4,3267,2.888,3268,2.888,3269,2.888,3270,2.888,3271,2.888,3272,2.888,3273,2.888,3274,2.888,3275,2.888,3276,2.568,3277,2.888,3278,2.888,3279,2.888,3280,2.888,3281,2.888,3282,2.888,3283,2.568,3284,2.888]],["title/components/ResourceDeletePopComponent.html",[0,0.244,274,1.222]],["body/components/ResourceDeletePopComponent.html",[0,0.401,1,0.894,2,0.207,3,0.207,4,0.708,5,0.962,6,0.962,8,0.182,10,0.359,19,0.847,20,1.949,22,0.788,24,0.007,26,2.312,27,1.994,28,1.769,30,1.381,32,0.391,33,0.687,35,1.621,38,0.832,39,2.028,44,1.235,55,0.634,60,0.343,64,0.851,65,1.132,66,1.151,71,0.591,74,1.731,75,1.691,76,0.887,77,1.331,86,0.958,87,0.917,88,0.667,105,1.476,106,2.308,108,1.331,110,0.878,113,0.946,132,0.32,135,1.632,142,0.847,145,0.151,146,0.092,182,0.647,183,1.62,184,1.035,188,1.861,189,0.962,190,0.962,191,0.862,192,0.894,193,1.195,194,1.032,195,2.027,196,0.91,197,1.896,198,0.91,199,0.962,200,0.894,201,1.432,202,0.91,203,0.962,204,0.894,205,0.962,206,0.862,207,0.878,208,1.492,209,1.711,210,0.862,211,0.894,212,0.894,213,0.878,214,0.962,215,0.91,216,1.711,217,0.962,218,0.962,219,0.91,220,1.896,221,0.894,222,1.711,223,0.91,224,0.91,225,0.894,226,0.962,227,0.878,228,0.91,229,0.962,230,0.894,231,0.962,232,0.962,233,0.894,234,0.962,235,0.862,236,0.894,237,0.962,238,0.878,239,0.962,240,0.788,241,0.962,242,0.878,243,1.562,244,0.962,245,0.878,246,0.962,247,0.878,248,0.962,249,0.832,250,0.962,251,0.894,252,0.817,253,0.894,254,0.91,255,0.962,256,0.894,257,0.962,258,0.962,259,0.894,260,0.962,261,0.894,262,0.962,263,0.832,264,0.962,265,0.894,266,0.894,267,0.962,268,0.894,269,0.91,270,0.962,271,1.817,272,0.862,273,2.153,274,1.731,275,1.946,276,0.894,277,0.878,278,0.878,279,0.894,280,0.878,281,0.894,282,0.962,283,0.878,284,0.962,285,0.894,286,0.962,287,0.894,288,0.962,289,0.894,290,0.962,291,0.894,292,0.847,293,0.862,294,0.962,295,0.878,296,0.962,297,0.878,298,0.962,299,0.878,300,0.962,301,0.878,302,0.927,303,0.962,304,0.878,305,0.91,306,0.862,307,0.962,308,0.004,309,0.004,340,0.774,349,1.723,365,2.473,367,1.239,379,1.098,380,2.39,384,1.922,392,3.241,394,2.198,422,2.847,423,4.458,428,2.252,431,2.198,435,4.239,436,4.239,451,3.101,480,3.101,495,1.142,515,1.442,523,3.703,556,3.35,686,2.505,826,3.513,833,4.298,834,4.457,835,3.58,836,3.472,878,1.886,907,3.382,962,4.239,995,3.382,1061,6.22,1136,2.308,1421,4.316,1457,2.177,1483,2.505,1846,2.566,1867,2.657,2240,3.241,2385,3.723,3081,5.907,3108,2.657,3285,8.198,3286,5.191,3287,5.191,3288,3.486,3289,3.486,3290,5.191,3291,3.486,3292,7.703,3293,5.191,3294,3.486,3295,3.486,3296,3.486,3297,2.847,3298,2.847,3299,3.486,3300,3.486,3301,2.847,3302,3.486,3303,3.486,3304,3.486,3305,3.101,3306,5.191,3307,5.191,3308,5.191]],["title/classes/ResourceForm.html",[146,0.128,3109,3.697]],["body/classes/ResourceForm.html",[2,0.302,3,0.302,8,0.265,10,0.523,18,2.939,24,0.007,32,0.57,33,1.176,38,1.425,39,2.334,41,2.143,43,1.327,44,1.086,60,0.396,64,0.909,65,2.032,66,1.247,70,1.842,71,1.291,72,1.511,75,1.949,76,1.272,86,1.307,87,0.956,88,0.911,112,2.728,116,2.562,123,4.9,145,0.22,146,0.179,273,1.974,308,0.005,309,0.005,331,4.227,339,2.738,340,1.128,352,3.651,391,4.149,424,3.872,430,2.705,443,3.315,487,2.512,556,4.119,615,1.631,619,4.735,642,3.651,718,2.443,726,6.223,793,2.585,915,3.172,941,4.397,971,3.468,984,5.163,1017,4.067,1060,6.259,1260,2.84,1421,5.073,1457,3.172,1500,3.92,1551,2.94,1552,3.92,1553,3.786,1578,3.31,1690,6.637,1692,3.31,2240,4.23,3081,5.944,3108,3.872,3109,5.163,3276,4.519,3309,4.519,3310,6.774,3311,6.774,3312,6.774,3313,6.774,3314,5.081,3315,5.081,3316,5.081,3317,5.081,3318,5.081,3319,5.081,3320,5.081,3321,6.774,3322,5.081,3323,6.774,3324,5.081,3325,5.081,3326,5.081,3327,5.081,3328,5.081,3329,5.081,3330,5.081,3331,5.081,3332,5.081,3333,5.081,3334,5.081]],["title/modules/ResourceModule.html",[310,1.021,1038,3.31]],["body/modules/ResourceModule.html",[2,0.314,3,0.314,8,0.275,23,2.224,24,0.007,58,1.798,60,0.449,132,0.484,134,2.086,135,2.47,141,2.815,145,0.357,146,0.14,174,3.295,182,0.979,185,2.04,272,2.333,273,2.023,274,2.376,275,1.386,276,2.419,277,2.4,278,2.376,279,2.419,308,0.005,309,0.005,310,1.462,312,2.086,317,2.808,318,1.996,319,1.763,321,3.883,322,2.627,554,5.663,557,3.168,558,2.346,604,4.92,640,3.438,641,3.054,870,3.295,877,4.526,1038,6.74,1039,6.146,1044,4.992,1052,4.022,1054,3.168,1055,4.309,1060,3.792,1061,4.992,1062,4.022,1063,4.693,1064,4.309,1421,4.762,1457,3.295,1683,3.792,1684,3.438,3335,4.693,3336,4.693,3337,5.277,3338,4.693,3339,4.693,3340,5.277]],["title/injectables/ResourceService.html",[367,1.157,1421,2.624]],["body/injectables/ResourceService.html",[0,0.25,2,0.196,3,0.196,8,0.172,10,0.339,24,0.007,25,1.531,32,0.37,33,1.036,38,1.523,39,1.866,41,1.166,43,1.873,44,0.798,55,0.816,56,1.466,60,0.393,64,0.884,65,1.961,66,1.153,70,3.096,71,1.327,72,0.98,75,2.118,76,1.353,79,1.979,84,2.923,86,1.274,87,0.887,88,0.887,112,0.944,113,0.685,114,1.677,116,2.853,126,1.967,132,0.302,142,1.457,145,0.215,146,0.087,162,1.123,194,0.998,208,1.357,273,2.139,275,1.677,308,0.004,309,0.006,331,3.665,332,3.6,339,2.701,340,0.732,341,1.728,342,2.473,360,1.543,367,1.711,373,1.457,378,4.08,379,1.567,380,1.146,386,1.466,403,1.585,409,1.987,430,3.191,443,2.734,452,2.108,454,1.783,465,3.027,469,4.009,475,2.532,487,1.629,518,3.108,527,4.216,534,1.979,535,1.058,556,3.994,604,4.216,619,4.105,641,1.907,642,2.369,664,3.6,678,2.782,679,3.108,717,3.832,772,2.058,779,3.503,800,3.76,822,2.393,888,2.782,902,2.691,918,0.999,941,3.88,945,2.512,946,2.25,952,1.783,954,2.988,955,3.397,956,2.988,957,2.393,958,2.988,959,2.159,960,3.243,961,4.427,962,4.064,963,4.427,965,4.064,967,4.064,968,3.896,969,4.064,971,3.397,977,4.064,979,3.577,980,3.907,981,4.064,983,3.793,984,3.793,987,3.243,991,3.397,994,2.691,995,2.147,996,2.512,997,2.691,998,2.691,999,2.691,1000,2.691,1001,2.691,1002,2.691,1003,2.691,1009,4.897,1010,2.691,1011,2.88,1012,2.691,1013,2.691,1016,4.064,1017,1.979,1019,4.897,1020,2.691,1021,2.691,1022,2.691,1023,2.691,1024,5.857,1025,2.058,1026,2.691,1054,1.979,1393,2.932,1421,2.692,1440,3.108,1525,2.691,1610,2.692,3081,5.909,3108,2.512,3341,2.932,3342,4.977,3343,3.296,3344,6.682,3345,6.682,3346,3.296,3347,4.977,3348,3.296,3349,4.977,3350,3.296,3351,3.296,3352,3.296,3353,4.977,3354,3.296,3355,4.977,3356,4.977,3357,3.296,3358,3.296,3359,3.296,3360,3.296,3361,3.296,3362,3.296,3363,3.296,3364,3.296,3365,3.296,3366,5.997,3367,3.296,3368,4.977,3369,3.296,3370,3.296,3371,3.296,3372,3.296]],["title/pipes/SafeHtmlPipe.html",[1101,2.543,3373,3.486]],["body/pipes/SafeHtmlPipe.html",[2,0.405,3,0.405,8,0.355,10,0.701,15,1.951,22,1.54,24,0.007,38,1.399,44,1.092,55,0.996,60,0.381,66,0.919,76,1.167,86,1.052,87,0.939,88,0.733,132,0.625,145,0.294,146,0.18,183,2.363,185,2.633,308,0.006,309,0.006,367,1.625,535,2.187,1101,4.577,1106,4.722,1107,7.254,1112,5.567,1684,4.438,3373,5.862,3374,7.254,3375,6.059,3376,8.156,3377,6.66,3378,7.254,3379,8.156,3380,8.156,3381,6.813,3382,8.73,3383,6.813,3384,6.813]],["title/modules/SdkModule.html",[310,1.021,1039,3.16]],["body/modules/SdkModule.html",[2,0.416,3,0.416,8,0.365,23,2.529,24,0.007,58,2.386,60,0.427,132,0.642,141,3.005,145,0.382,146,0.185,182,1.3,185,2.707,308,0.006,309,0.006,310,1.745,312,2.767,317,3.351,318,2.648,319,2.339,321,3.914,322,3.136,342,3.498,1039,6.157,1683,5.032,1684,4.562,3385,6.228,3386,6.228,3387,7.002,3388,7.002]],["title/injectables/SdkService.html",[342,1.796,367,1.157]],["body/injectables/SdkService.html",[2,0.357,3,0.196,8,0.172,10,0.34,23,2.161,24,0.007,25,1.454,32,0.371,33,0.659,34,1.806,37,4.917,38,1.256,39,2.339,44,1.072,45,4.53,55,1.027,60,0.377,64,0.862,65,1.566,66,1.236,70,1.806,71,1.279,72,2.674,73,3.581,74,2.031,75,1.539,76,1.333,77,1.278,86,1.21,87,0.843,88,0.942,103,2.601,105,1.398,113,1.136,116,3.232,118,2.215,119,1.845,121,2.897,132,0.303,145,0.143,146,0.087,154,3.797,179,2.936,193,1.147,308,0.004,309,0.004,330,2.695,331,4.438,333,5.979,340,0.733,342,2.475,348,2.695,353,6.586,356,3.111,360,2.809,367,1.712,369,5.378,373,1.458,384,2.657,404,2.15,409,0.981,413,4.356,430,1.769,449,2.991,495,1.965,513,4.955,515,2.061,556,3.049,576,3.797,577,3.581,578,6.697,579,4.069,580,3.581,581,5.158,582,4.432,583,4.069,584,5.096,585,3.797,586,3.581,587,2.973,588,5.46,589,2.785,590,4.069,591,4.432,592,4.432,594,4.432,597,2.936,606,4.432,610,2.991,611,4.432,619,3.505,638,5.46,639,2.695,642,2.372,643,2.061,650,5.947,662,2.936,664,1.981,693,2.515,710,5.119,712,2.612,779,1.73,794,2.883,798,4.069,858,2.883,1126,3.581,1289,3.797,1553,2.785,1578,3.246,1926,4.069,2222,4.069,2400,2.936,2640,5.947,2728,3.797,3104,2.936,3170,4.432,3389,2.936,3390,6.686,3391,6.686,3392,8.412,3393,4.983,3394,4.983,3395,6.002,3396,3.301,3397,4.983,3398,3.301,3399,6.002,3400,4.983,3401,3.301,3402,4.983,3403,8.065,3404,4.983,3405,3.301,3406,7.177,3407,4.983,3408,3.301,3409,4.983,3410,3.301,3411,4.432,3412,3.301,3413,3.301,3414,3.301,3415,3.401,3416,3.301,3417,3.301,3418,4.983,3419,3.301,3420,3.301,3421,3.301,3422,3.301,3423,3.301,3424,3.301,3425,3.301,3426,3.301,3427,3.301,3428,3.301,3429,3.301,3430,3.301,3431,3.301,3432,3.301,3433,6.002,3434,3.301,3435,3.301,3436,4.983,3437,3.301,3438,3.301,3439,3.301,3440,6.002,3441,2.936,3442,3.301,3443,3.301,3444,3.301,3445,4.983,3446,3.301,3447,3.301,3448,3.301,3449,3.301,3450,3.301,3451,4.983,3452,3.301,3453,3.301,3454,3.301,3455,3.301,3456,3.301,3457,3.301,3458,6.686,3459,3.301,3460,6.002,3461,3.301,3462,3.301,3463,3.301]],["title/components/SelectComponent.html",[0,0.244,280,1.222]],["body/components/SelectComponent.html",[0,0.33,1,0.695,2,0.161,3,0.161,4,0.55,5,0.748,6,0.748,7,1.025,8,0.141,10,0.279,15,1.226,16,3.183,19,0.658,20,2.964,21,2.698,22,0.613,23,1.519,24,0.007,25,1.118,26,2.283,27,1.965,28,1.458,30,1.138,32,0.304,33,0.566,35,1.765,36,3.615,38,1.432,39,1.724,43,2.359,44,0.686,46,3.064,47,3.485,48,2.672,49,3.615,52,2.569,55,0.891,60,0.306,64,0.825,65,0.934,66,1.24,70,2.183,71,1.111,72,1.577,75,1.604,76,1.251,77,2.178,81,2.569,84,2.56,86,1.202,87,0.932,88,0.837,89,2.569,99,2.569,103,1.551,105,1.148,106,1.903,108,1.098,110,0.683,113,0.902,114,2.177,119,2.392,131,2.569,132,0.249,133,2.569,134,1.071,142,0.658,143,1.627,144,1.627,145,0.117,146,0.072,160,3.619,165,3.653,181,1.627,182,0.503,183,1.118,184,0.854,185,1.048,186,1.121,187,1.303,188,1.631,189,0.748,190,0.748,191,0.67,192,0.695,193,0.985,194,1.477,195,1.809,196,0.708,197,1.662,198,0.708,199,0.748,200,0.695,201,1.181,202,0.708,203,0.748,204,0.695,205,0.748,206,0.67,207,0.683,208,1.331,209,1.463,210,0.67,211,0.695,212,0.695,213,0.683,214,0.748,215,0.708,216,1.463,217,0.748,218,0.748,219,0.708,220,1.662,221,0.695,222,1.463,223,0.708,224,0.708,225,0.695,226,0.748,227,0.683,228,0.708,229,0.748,230,0.695,231,0.748,232,0.748,233,0.695,234,0.748,235,0.67,236,0.695,237,0.748,238,0.683,239,0.748,240,0.613,241,0.748,242,0.683,243,1.335,244,0.748,245,0.683,246,0.748,247,0.683,248,0.748,249,0.647,250,0.748,251,0.695,252,0.635,253,0.695,254,0.708,255,0.748,256,0.695,257,0.748,258,0.748,259,0.695,260,0.748,261,0.695,262,0.748,263,0.647,264,0.748,265,0.695,266,0.695,267,0.748,268,0.695,269,0.708,270,0.748,271,1.622,272,0.67,273,1.548,274,0.683,275,0.541,276,0.695,277,0.683,278,0.683,279,0.695,280,1.837,281,0.695,282,0.748,283,0.683,284,0.748,285,0.695,286,0.748,287,0.695,288,0.748,289,0.695,290,0.748,291,0.695,292,0.658,293,0.67,294,0.748,295,0.683,296,0.748,297,0.683,298,0.748,299,0.683,300,0.748,301,0.683,302,0.721,303,0.748,304,0.683,305,0.708,306,0.67,307,0.748,308,0.003,309,0.003,357,1.205,365,2.105,373,1.04,378,2.315,379,2.603,380,2.537,384,2.58,386,1.205,409,0.806,423,3.848,428,1.856,430,1.519,438,3.103,440,2.177,441,4.351,443,2.821,445,2.003,464,4.11,475,2.177,484,1.379,487,1.34,495,1.736,497,3.455,499,2.411,615,2.105,676,2.569,712,3.157,717,1.096,793,2.177,805,1.85,816,2.315,844,4.351,915,4.86,922,4.032,1078,3.665,1183,1.948,1260,1.515,1276,4.33,1286,1.948,1298,1.948,1418,5.312,1476,4.041,1520,3.806,1846,1.34,2056,3.262,2057,3.262,2075,3.806,2076,2.921,2106,2.066,2113,4.918,2117,2.411,2121,2.213,2122,3.494,2176,5.356,2177,2.411,2448,2.411,3266,3.806,3283,4.716,3297,2.213,3301,3.494,3464,2.411,3465,4.28,3466,4.28,3467,4.28,3468,6.022,3469,4.28,3470,6.022,3471,4.28,3472,4.28,3473,5.303,3474,4.28,3475,2.711,3476,2.711,3477,2.711,3478,2.711,3479,2.711,3480,2.711,3481,2.711,3482,2.711,3483,2.711,3484,2.711,3485,2.711,3486,2.711,3487,4.28,3488,2.711,3489,4.28,3490,4.28,3491,2.711,3492,2.711,3493,2.711,3494,2.711,3495,2.711,3496,2.711,3497,4.28,3498,2.711,3499,2.711,3500,4.28,3501,2.711,3502,4.28,3503,2.711,3504,4.28,3505,2.711,3506,2.711,3507,2.711,3508,2.711,3509,2.411,3510,2.711,3511,2.711,3512,5.303,3513,2.711,3514,4.28,3515,2.711,3516,2.711,3517,2.711,3518,2.711,3519,2.711,3520,2.711,3521,4.28,3522,2.711,3523,2.711,3524,2.711,3525,2.711,3526,2.711,3527,2.711,3528,2.711,3529,2.711,3530,2.711,3531,4.28,3532,2.711]],["title/modules/SelectModule.html",[310,1.021,3533,3.486]],["body/modules/SelectModule.html",[2,0.377,3,0.377,8,0.33,23,2.236,24,0.007,25,1.683,58,2.161,60,0.431,132,0.582,141,3.067,145,0.382,146,0.168,182,1.177,280,2.453,308,0.006,309,0.006,310,1.644,312,2.506,317,3.157,318,2.399,319,2.118,322,2.954,557,3.561,558,2.82,1052,4.833,2208,6.603,3533,6.887,3534,5.641,3535,5.641,3536,6.342,3537,6.342,3538,5.641,3539,6.342,3540,5.641]],["title/directives/SlotHostDirective.html",[184,0.968,304,1.222]],["body/directives/SlotHostDirective.html",[0,0.469,2,0.393,3,0.393,8,0.344,10,0.68,22,1.493,24,0.007,26,1.876,27,1.626,32,0.742,33,1.059,34,2.902,39,1.98,41,1.876,55,0.977,60,0.309,64,0.788,66,1.08,86,1.02,87,0.71,88,0.71,102,4.633,132,0.606,145,0.285,146,0.175,184,1.718,304,2.016,305,2.091,306,2.215,308,0.006,309,0.006,340,1.913,349,3.265,359,3.885,428,3.473,576,6.102,587,3.56,826,3.651,1136,3.56,1315,7.909,1358,6.102,3541,7.662,3542,5.875,3543,8.006,3544,6.605,3545,6.605,3546,8.006,3547,6.605]],["title/classes/Sorter.html",[146,0.128,3548,3.486]],["body/classes/Sorter.html",[2,0.278,3,0.278,7,1.766,8,0.243,10,0.658,24,0.007,25,1.187,32,0.819,33,1.27,34,2.846,38,1.17,43,2.461,44,1.259,55,0.57,60,0.218,64,0.894,65,1.983,66,0.985,71,0.791,75,2.002,76,1.348,86,0.988,87,0.688,88,0.935,113,0.643,118,2.844,142,1.773,145,0.339,146,0.193,162,2.487,308,0.006,309,0.005,332,2.803,357,2.076,373,2.064,376,3.111,386,3.245,427,3.255,430,2.92,460,2.803,495,2.39,514,2.803,570,3.491,576,3.558,587,2.076,615,3.01,690,6.629,738,4.366,790,4.152,806,3.558,858,4.223,971,3.186,1067,7.423,1282,3.812,1358,3.558,1374,5.96,1443,4.366,1548,2.61,1558,2.447,1564,5.391,1651,3.042,1693,3.812,1780,5.224,1879,3.995,2049,3.355,2138,6.716,2144,5.69,2240,3.995,2875,6.983,2911,4.876,3548,6.105,3549,3.558,3550,6.397,3551,7.851,3552,6.397,3553,5.224,3554,5.224,3555,5.224,3556,4.668,3557,6.397,3558,4.668,3559,8.225,3560,6.397,3561,4.668,3562,3.355,3563,5.224,3564,3.812,3565,4.152,3566,4.152,3567,4.152,3568,3.186,3569,4.152,3570,4.668,3571,4.152,3572,4.152,3573,4.668,3574,6.397,3575,4.668,3576,4.668,3577,4.668,3578,4.668,3579,4.668,3580,6.397,3581,4.668,3582,4.668,3583,4.668,3584,4.668,3585,4.668,3586,4.668,3587,4.668,3588,4.668]],["title/interfaces/Symbol.html",[835,2.006,918,1.47]],["body/interfaces/Symbol.html",[2,0.41,3,0.41,8,0.359,10,0.709,24,0.007,32,0.774,33,1.087,56,3.651,64,0.808,65,2.076,74,2.068,87,1.038,88,0.943,93,4.952,139,5.902,145,0.298,308,0.006,309,0.006,736,6.129,835,3.936,918,2.489,1268,4.93,1507,5.128,1851,7.304,1879,5.942,1983,5.605,3589,6.129,3590,8.212,3591,7.304,3592,8.212]],["title/modules/SymbolModule.html",[310,1.021,1706,3.16]],["body/modules/SymbolModule.html",[2,0.417,3,0.417,8,0.365,23,2.531,24,0.007,58,2.39,60,0.436,132,0.643,141,3.008,145,0.382,146,0.186,182,1.302,308,0.006,309,0.006,310,1.747,312,2.771,317,3.354,318,2.652,319,2.342,322,3.138,557,3.784,558,3.118,836,4.003,1706,6.159,3593,6.237,3594,6.237,3595,7.013,3596,5.726,3597,6.736,3598,7.013]],["title/injectables/SymbolPipe.html",[367,1.157,3597,3.697]],["body/injectables/SymbolPipe.html",[2,0.505,3,0.38,8,0.333,10,0.657,15,1.828,24,0.007,32,0.717,44,1.257,58,2.176,60,0.397,64,0.628,65,1.982,66,0.862,75,1.805,76,1.214,86,0.986,87,1.017,88,0.687,132,0.586,145,0.276,146,0.169,183,1.667,308,0.006,309,0.006,340,1.418,367,2.025,384,2.903,430,2.266,535,2.05,587,3.487,589,4.383,835,3.988,836,3.848,1004,6.403,1101,4.64,1106,4.242,1112,5.352,1879,4.896,2949,6.974,3596,5.213,3597,5.976,3599,5.678,3600,7.842,3601,6.385,3602,7.842,3603,5.678,3604,6.385]],["title/injectables/SymbolService.html",[367,1.157,836,2.054]],["body/injectables/SymbolService.html",[2,0.29,3,0.29,8,0.254,10,0.502,24,0.007,32,0.838,33,0.872,38,1.056,39,2.128,44,1.056,55,1.119,60,0.373,64,0.892,65,2.057,66,1.207,71,0.826,74,2.405,75,1.981,76,1.28,77,1.914,83,5.455,86,1.289,87,1.002,88,0.898,93,4.734,113,1.1,118,3.826,121,2.617,132,0.447,142,1.6,145,0.211,146,0.129,162,1.661,168,4.734,308,0.005,309,0.005,340,1.657,367,1.78,413,3.175,452,3.385,635,3.812,779,2.555,794,3.812,800,4.511,835,4.073,836,2.79,987,3.175,1599,4.734,1878,7.102,1879,4.113,2242,4.292,2641,5.859,2749,5.379,3603,4.334,3605,4.334,3606,8.605,3607,6.587,3608,4.873,3609,6.587,3610,4.873,3611,6.587,3612,4.873,3613,6.587,3614,4.873,3615,6.587,3616,5.859,3617,6.587,3618,4.873,3619,6.587,3620,4.873,3621,4.873,3622,7.993,3623,4.873,3624,6.587,3625,4.873,3626,4.873,3627,4.873,3628,4.873,3629,4.873,3630,4.873,3631,4.873,3632,4.873,3633,4.873,3634,4.873,3635,4.873,3636,4.873,3637,4.873]],["title/components/TabComponent.html",[0,0.244,281,1.244]],["body/components/TabComponent.html",[0,0.39,1,1.022,2,0.237,3,0.237,4,0.81,5,1.1,6,1.1,8,0.208,10,0.41,19,0.968,22,0.901,24,0.007,25,1.244,26,2.325,27,2.007,28,1.951,30,1.523,32,0.448,33,0.758,35,1.751,39,1.416,44,0.918,60,0.268,64,0.837,65,1.598,66,1.187,71,0.97,74,1.845,75,1.318,76,0.819,77,1.469,86,0.616,87,0.915,88,0.429,104,4.673,108,1.469,110,1.004,113,0.788,126,2.263,132,0.366,145,0.172,146,0.106,182,0.74,183,1.496,184,1.142,188,1.984,189,1.1,190,1.1,191,0.986,192,1.022,193,1.318,194,1.115,195,2.141,196,1.041,197,2.021,198,1.041,199,1.1,200,1.022,201,1.58,202,1.041,203,1.1,204,1.022,205,1.1,206,0.986,207,1.004,208,1.575,209,1.849,210,0.986,211,1.022,212,1.022,213,1.004,214,1.1,215,1.041,216,1.849,217,1.1,218,1.1,219,1.041,220,2.021,221,1.022,222,1.849,223,1.041,224,1.041,225,1.022,226,1.1,227,1.004,228,1.041,229,1.1,230,1.022,231,1.1,232,1.1,233,1.022,234,1.1,235,0.986,236,1.022,237,1.1,238,1.004,239,1.1,240,0.901,241,1.1,242,1.004,243,1.688,244,1.1,245,1.004,246,1.1,247,1.004,248,1.1,249,0.951,250,1.1,251,1.022,252,0.934,253,1.022,254,1.041,255,1.1,256,1.022,257,1.1,258,1.1,259,1.022,260,1.1,261,1.022,262,1.1,263,0.951,264,1.1,265,1.022,266,1.022,267,1.1,268,1.022,269,1.041,270,1.1,271,0.986,272,0.986,273,1.794,274,1.004,275,0.795,276,1.022,277,1.004,278,1.004,279,1.022,280,1.004,281,1.878,282,1.1,283,2.243,284,1.1,285,1.022,286,1.1,287,1.022,288,1.1,289,1.022,290,1.1,291,1.022,292,0.968,293,0.986,294,1.1,295,1.004,296,1.1,297,1.004,298,1.1,299,1.004,300,1.1,301,1.004,302,1.06,303,1.1,304,1.004,305,1.041,306,0.986,307,1.1,308,0.004,309,0.004,340,1.488,349,1.971,365,2.783,373,1.391,379,1.803,380,2.893,409,1.185,428,2.484,438,2.839,444,4.553,465,2.831,497,3.731,512,4.067,528,3.727,718,2.753,771,5.546,936,3.365,1080,3.576,1242,4.364,1279,3.546,1281,6.334,1511,4.676,1798,3.576,3638,3.546,3639,7.13,3640,5.726,3641,5.726,3642,8.669,3643,5.726,3644,5.726,3645,3.987,3646,3.987,3647,3.987,3648,3.987,3649,3.987,3650,3.987,3651,3.987,3652,5.726,3653,3.987,3654,3.546,3655,3.987,3656,3.987]],["title/components/TabsComponent.html",[0,0.244,283,1.222]],["body/components/TabsComponent.html",[0,0.415,1,0.992,2,0.23,3,0.23,4,1.138,5,1.067,6,1.067,7,1.463,8,0.201,10,0.398,15,1.604,19,0.939,22,0.874,24,0.007,26,2.322,27,2.004,28,1.909,30,1.49,32,0.434,33,0.741,35,1.613,44,0.898,55,0.472,56,2.491,60,0.308,64,0.754,65,1.437,66,1.113,72,1.666,73,4.026,74,1.411,75,1.662,76,1.097,77,1.852,86,1.017,87,0.94,88,0.708,105,1.638,108,1.437,110,0.974,113,0.771,119,3.131,132,0.355,142,1.361,145,0.167,146,0.102,162,1.318,167,1.678,182,0.718,183,1.463,184,1.117,185,1.495,186,1.6,187,1.859,188,1.956,189,1.067,190,1.067,191,0.956,192,0.992,193,1.289,194,1.096,195,2.115,196,1.01,197,1.993,198,1.01,199,1.067,200,0.992,201,1.546,202,1.01,203,1.067,204,0.992,205,1.067,206,0.956,207,0.974,208,1.557,209,1.818,210,0.956,211,0.992,212,0.992,213,0.974,214,1.067,215,1.01,216,1.818,217,1.067,218,1.067,219,1.01,220,1.993,221,0.992,222,1.818,223,1.01,224,1.01,225,0.992,226,1.067,227,0.974,228,1.01,229,1.067,230,0.992,231,1.067,232,1.067,233,0.992,234,1.067,235,0.956,236,0.992,237,1.067,238,0.974,239,1.067,240,0.874,241,1.067,242,0.974,243,1.659,244,1.067,245,0.974,246,1.067,247,0.974,248,1.067,249,0.923,250,1.067,251,0.992,252,0.906,253,0.992,254,1.01,255,1.067,256,0.992,257,1.067,258,1.067,259,0.992,260,1.067,261,0.992,262,1.067,263,0.923,264,1.067,265,0.992,266,0.992,267,1.067,268,0.992,269,1.01,270,1.067,271,0.956,272,0.956,273,1.775,274,0.974,275,0.771,276,0.992,277,0.974,278,0.974,279,0.992,280,0.974,281,2.27,282,1.067,283,2.013,284,1.067,285,0.992,286,1.067,287,0.992,288,1.067,289,0.992,290,1.067,291,0.992,292,0.939,293,0.956,294,1.067,295,0.974,296,1.067,297,0.974,298,1.067,299,0.974,300,1.067,301,0.974,302,1.029,303,1.067,304,0.974,305,1.463,306,0.956,307,1.067,308,0.004,309,0.005,327,2.85,340,0.859,357,1.719,379,1.218,438,2.898,461,2.947,495,1.266,497,3.65,512,4.019,519,2.769,532,2.162,535,1.242,618,3.823,779,2.027,827,5.207,837,5.504,949,3.242,1146,2.322,1459,2.322,1525,4.574,1846,2.769,1918,4.929,1950,3.158,2173,5.897,2550,3.439,2592,3.439,3639,7.133,3657,3.439,3658,4.574,3659,5.602,3660,6.587,3661,5.602,3662,5.602,3663,7.222,3664,7.222,3665,5.602,3666,5.602,3667,3.867,3668,3.867,3669,5.602,3670,3.867,3671,5.602,3672,3.867,3673,5.602,3674,3.867,3675,5.602,3676,3.439,3677,3.867,3678,3.867,3679,3.867,3680,3.867,3681,3.867,3682,3.867,3683,5.602,3684,3.867,3685,3.867,3686,3.867,3687,3.867,3688,3.867,3689,3.867,3690,3.867,3691,3.867,3692,3.867,3693,3.867,3694,3.867,3695,3.867,3696,5.602]],["title/components/TinymceComponent.html",[0,0.244,285,1.244]],["body/components/TinymceComponent.html",[0,0.356,1,0.821,2,0.19,3,0.19,4,0.651,5,0.884,6,0.884,7,1.211,8,0.167,10,0.33,11,3.041,13,4.904,15,1.395,16,3.538,19,0.778,22,0.724,23,1.688,24,0.007,25,0.904,26,2.303,27,1.985,28,1.66,30,1.296,32,0.36,33,0.644,34,2.704,35,1.682,36,3.953,37,4.29,38,1.462,39,1.845,40,2.28,44,0.781,48,3.041,49,3.953,52,2.924,60,0.428,64,0.805,65,1.063,66,1.198,71,0.999,72,1.448,74,2.013,76,1.109,77,1.817,79,1.923,81,2.924,84,2.742,86,0.91,87,0.898,88,0.634,89,2.924,99,2.924,101,3.173,102,2.819,103,1.765,104,3.81,105,1.357,106,2.166,108,1.249,110,0.807,113,1.127,114,2.478,116,2.679,118,2.166,119,3.681,121,2.156,130,1.733,131,2.924,132,0.294,133,2.924,134,1.266,143,1.923,144,1.923,145,0.138,146,0.085,147,2.441,152,4.812,154,3.712,160,3.324,165,1.679,181,1.923,182,0.595,183,1.272,184,0.972,185,1.238,186,1.325,187,1.54,188,1.784,189,0.884,190,0.884,191,0.792,192,0.821,193,1.121,194,0.98,195,1.955,196,0.837,197,1.817,198,0.837,199,0.884,200,0.821,201,1.344,202,0.837,203,0.884,204,0.821,205,0.884,206,0.792,207,0.807,208,1.439,209,1.626,210,0.792,211,0.821,212,0.821,213,0.807,214,0.884,215,0.837,216,1.626,217,0.884,218,0.884,219,0.837,220,1.817,221,0.821,222,1.626,223,0.837,224,0.837,225,0.821,226,0.884,227,0.807,228,0.837,229,0.884,230,0.821,231,0.884,232,0.884,233,0.821,234,0.884,235,0.792,236,0.821,237,0.884,238,0.807,239,0.884,240,0.724,241,0.884,242,0.807,243,1.484,244,0.884,245,0.807,246,0.884,247,0.807,248,0.884,249,0.764,250,0.884,251,0.821,252,0.751,253,0.821,254,0.837,255,0.884,256,0.821,257,0.884,258,0.884,259,0.821,260,0.884,261,0.821,262,0.884,263,0.764,264,0.884,265,0.821,266,0.821,267,0.884,268,0.821,269,0.837,270,0.884,271,0.792,272,0.792,273,1.657,274,0.807,275,0.639,276,0.821,277,0.807,278,0.807,279,0.821,280,0.807,281,0.821,282,0.884,283,0.807,284,0.884,285,1.817,286,0.884,287,0.821,288,0.884,289,0.821,290,0.884,291,0.821,292,0.778,293,0.792,294,0.884,295,0.807,296,0.884,297,0.807,298,0.884,299,0.807,300,0.884,301,0.807,302,1.296,303,0.884,304,0.807,305,0.837,306,0.792,307,0.884,308,0.003,309,0.003,340,0.711,365,2.395,379,1.009,380,2.29,384,1.803,465,1.883,484,2.478,513,2.924,527,4.467,528,2.478,534,1.923,535,1.029,693,2.441,717,2.662,805,4.022,816,2.635,888,2.723,1092,3.173,1130,2.849,1489,2.849,1927,4.332,1960,6.3,2000,2.849,2056,3.712,2057,3.712,2106,2.441,2368,4.812,2371,5.377,2493,5.242,2496,5.857,2504,4.332,2522,2.441,2524,2.849,2768,3.324,3697,2.849,3698,5.882,3699,4.871,3700,4.871,3701,4.871,3702,3.203,3703,6.585,3704,4.871,3705,3.977,3706,4.871,3707,3.977,3708,4.871,3709,3.203,3710,3.203,3711,3.203,3712,3.203,3713,3.203,3714,3.203,3715,3.203,3716,3.203,3717,3.203,3718,3.203,3719,3.203,3720,3.203,3721,3.203,3722,3.203,3723,3.203,3724,3.203,3725,3.203,3726,3.203,3727,3.203,3728,3.203,3729,3.203,3730,3.203,3731,3.203,3732,3.203,3733,3.203,3734,3.203,3735,3.203,3736,3.977,3737,3.203,3738,3.203,3739,3.203,3740,3.203,3741,3.203,3742,3.203,3743,3.203,3744,3.203,3745,3.203,3746,3.203,3747,3.203,3748,3.203,3749,3.203,3750,3.203,3751,3.203,3752,3.203,3753,3.203,3754,3.203,3755,4.871,3756,3.203]],["title/modules/TinymceModule.html",[310,1.021,3757,3.486]],["body/modules/TinymceModule.html",[2,0.42,3,0.42,8,0.368,23,2.023,24,0.007,58,2.407,60,0.389,132,0.648,141,3.213,145,0.396,146,0.187,182,1.311,285,2.514,308,0.006,309,0.006,310,1.754,312,2.792,317,3.369,318,2.672,319,2.36,322,3.152,3757,6.872,3758,6.283,3759,6.283,3760,6.283,3761,7.064,3762,7.064]],["title/components/ToggleComponent.html",[0,0.244,287,1.244]],["body/components/ToggleComponent.html",[0,0.42,1,1.039,2,0.241,3,0.241,4,1.373,5,1.118,6,1.118,8,0.211,10,0.417,15,1.659,16,4.059,19,0.984,22,0.916,23,1.936,24,0.007,25,1.075,26,2.326,27,2.008,28,1.974,30,1.541,32,0.455,33,0.766,35,1.759,36,4.429,38,1.459,44,0.928,48,3.617,49,4.429,52,3.477,55,0.901,60,0.271,64,0.665,65,1.264,66,1.128,76,1.056,77,1.892,81,3.477,83,5.036,84,2.129,85,3.953,86,0.894,87,0.936,88,0.623,89,3.477,99,3.477,101,3.774,108,1.485,110,1.02,113,1.15,114,2.947,121,2.416,131,3.477,132,0.372,133,3.477,134,1.601,143,2.432,144,2.432,145,0.175,146,0.107,160,4.615,181,2.432,182,0.752,183,1.513,184,1.155,188,1.999,189,1.118,190,1.118,191,1.002,192,1.039,193,1.333,194,1.125,195,2.154,196,1.058,197,2.036,198,1.058,199,1.118,200,1.039,201,1.598,202,1.058,203,1.118,204,1.039,205,1.118,206,1.002,207,1.02,208,1.585,209,1.866,210,1.002,211,1.039,212,1.039,213,1.02,214,1.118,215,1.058,216,1.866,217,1.118,218,1.118,219,1.058,220,2.036,221,1.039,222,1.866,223,1.058,224,1.058,225,1.039,226,1.118,227,1.02,228,1.058,229,1.118,230,1.039,231,1.118,232,1.118,233,1.039,234,1.118,235,1.002,236,1.039,237,1.118,238,1.02,239,1.118,240,0.916,241,1.118,242,1.02,243,1.703,244,1.118,245,1.02,246,1.118,247,1.02,248,1.118,249,0.966,250,1.118,251,1.039,252,0.949,253,1.039,254,1.058,255,1.118,256,1.039,257,1.118,258,1.118,259,1.039,260,1.118,261,1.039,262,1.118,263,0.966,264,1.118,265,1.039,266,1.039,267,1.118,268,1.039,269,1.058,270,1.118,271,1.002,272,1.002,273,1.803,274,1.02,275,0.808,276,1.039,277,1.02,278,1.02,279,1.039,280,1.02,281,1.039,282,1.118,283,1.02,284,1.118,285,1.039,286,1.118,287,2.002,288,1.118,289,1.039,290,1.118,291,1.039,292,0.984,293,1.002,294,1.118,295,1.02,296,1.118,297,1.02,298,1.118,299,1.02,300,1.118,301,1.02,302,1.077,303,1.118,304,1.02,305,1.058,306,1.002,307,1.118,308,0.004,309,0.004,373,2.077,441,5.727,1078,4.363,1092,2.639,1136,2.575,2146,4.163,2256,4.73,2522,3.087,2620,3.774,3377,4.73,3763,3.603,3764,5.792,3765,5.792,3766,5.792,3767,4.051,3768,4.051,3769,4.051,3770,5.792,3771,4.051,3772,4.051,3773,4.051,3774,4.051]],["title/components/ToolbarComponent.html",[0,0.244,289,1.244]],["body/components/ToolbarComponent.html",[0,0.402,1,1.105,2,0.256,3,0.256,4,0.875,5,1.189,6,1.189,8,0.225,10,0.444,13,4.323,19,1.047,22,0.975,24,0.007,26,2.332,27,2.014,28,2.063,30,1.61,32,0.484,34,2.194,35,1.682,40,2.833,44,0.97,60,0.283,64,0.595,66,1.024,76,1.085,86,0.666,87,0.934,88,0.464,108,1.552,110,1.086,113,0.833,132,0.395,145,0.186,146,0.114,165,2.26,182,0.8,183,1.581,184,1.207,188,2.055,189,1.189,190,1.189,191,1.066,192,1.105,193,1.393,194,1.164,195,2.205,196,1.126,197,2.093,198,1.126,199,1.189,200,1.105,201,1.67,202,1.126,203,1.189,204,1.105,205,1.189,206,1.066,207,1.086,208,1.623,209,1.93,210,1.066,211,1.105,212,1.105,213,1.086,214,1.189,215,1.981,216,2.205,217,1.189,218,1.189,219,1.126,220,2.093,221,1.105,222,1.93,223,1.126,224,1.126,225,1.105,226,1.189,227,1.086,228,1.126,229,1.189,230,1.105,231,1.189,232,1.189,233,1.105,234,1.189,235,1.066,236,1.105,237,1.189,238,1.086,239,1.189,240,0.975,241,1.189,242,1.086,243,1.762,244,1.189,245,1.086,246,1.189,247,1.086,248,1.189,249,1.028,250,1.189,251,1.105,252,1.01,253,1.105,254,1.126,255,1.189,256,1.105,257,1.189,258,1.189,259,1.105,260,1.189,261,1.105,262,1.189,263,1.028,264,1.189,265,1.105,266,1.105,267,1.189,268,1.105,269,1.126,270,1.189,271,1.066,272,1.066,273,1.84,274,1.086,275,0.86,276,1.105,277,1.086,278,1.086,279,1.105,280,1.086,281,1.105,282,1.189,283,1.086,284,1.189,285,1.105,286,1.189,287,1.105,288,1.189,289,1.946,290,1.189,291,1.105,292,1.047,293,1.066,294,1.189,295,1.086,296,1.189,297,1.086,298,1.189,299,1.086,300,1.189,301,1.086,302,1.146,303,1.189,304,1.086,305,1.126,306,1.73,307,1.189,308,0.004,309,0.004,319,2.022,373,1.047,379,2.78,409,1.282,429,3.78,844,5.424,1092,2.808,1183,3.098,1276,5.712,1286,4.35,1298,3.098,2207,3.834,3377,3.52,3775,3.834,3776,6.053,3777,6.747,3778,5.383,3779,6.053,3780,6.053,3781,6.053,3782,4.31,3783,6.996,3784,4.31,3785,6.053,3786,4.31,3787,7.107,3788,5.383,3789,4.31,3790,3.834,3791,4.31,3792,4.31,3793,6.053,3794,4.31,3795,6.053,3796,7.586,3797,6.053,3798,6.053]],["title/injectables/TypeConfigService.html",[367,1.157,1042,2.807]],["body/injectables/TypeConfigService.html",[2,0.173,3,0.173,4,0.917,8,0.151,10,0.299,19,1.097,24,0.007,25,1.741,27,1.812,32,0.326,33,1.113,35,1.864,38,1.541,41,1.058,42,1.868,44,1.002,55,0.551,56,2.008,60,0.393,64,0.909,65,1.773,66,1.097,71,0.765,74,1.137,75,1.439,76,1.311,77,0.745,84,1.422,86,0.965,87,0.672,88,0.672,113,1.03,132,0.266,142,1.097,145,0.125,146,0.077,173,3.207,191,1.675,193,1.782,194,0.751,206,2.108,207,2.003,208,1.853,210,1.774,243,1.137,308,0.003,309,0.003,325,2.087,327,2.298,333,4.268,334,3.688,340,0.645,346,3.688,347,1.813,360,2.114,365,2.736,367,1.322,373,1.097,376,2.365,396,4.268,409,1.343,438,1.479,443,3.089,457,3.754,484,3.649,488,2.087,489,2.298,495,2.349,535,0.932,570,3.189,623,2.942,643,3.905,793,2.82,822,2.171,835,2.967,836,2.648,878,1.57,931,4.017,936,1.959,949,2.613,957,3.006,968,4.007,975,1.813,987,1.892,992,1.813,1017,2.711,1042,2.613,1048,2.711,1050,3.246,1053,5.181,1070,3.442,1076,4.479,1078,2.524,1079,3.335,1096,2.613,1097,1.743,1105,5.466,1111,2.582,1122,2.371,1136,4.075,1261,1.982,1268,2.711,1483,2.087,1500,4.15,1501,7.23,1502,6.697,1506,5.076,1507,2.82,1531,2.613,1545,2.942,1580,2.213,1587,4.306,1612,3.082,1846,2.233,1918,3.082,1922,2.82,2039,4.017,2632,4.017,2635,5.715,2637,2.82,2638,2.213,2678,4.017,2696,2.582,2920,5.106,3092,2.582,3098,6.321,3235,4.017,3236,6.697,3298,2.371,3568,4.268,3616,2.582,3799,4.516,3800,4.516,3801,7.742,3802,6.253,3803,4.516,3804,6.253,3805,2.903,3806,2.903,3807,4.516,3808,2.903,3809,4.516,3810,4.516,3811,4.516,3812,4.516,3813,2.903,3814,2.903,3815,4.516,3816,4.516,3817,2.903,3818,4.017,3819,2.903,3820,4.516,3821,4.516,3822,4.516,3823,6.253,3824,6.253,3825,6.253,3826,4.017,3827,4.516,3828,4.516,3829,4.017,3830,4.516,3831,4.516,3832,4.516,3833,4.516,3834,6.774,3835,6.253,3836,4.516,3837,4.516,3838,4.516,3839,4.516,3840,4.516,3841,2.903,3842,2.903,3843,2.903,3844,2.903,3845,2.903,3846,2.903,3847,2.903,3848,2.903,3849,2.903]],["title/modules/UiModule.html",[310,1.021,554,2.912]],["body/modules/UiModule.html",[2,0.329,3,0.329,8,0.288,23,1.583,24,0.007,58,1.884,60,0.448,132,0.507,134,2.184,141,2.003,145,0.363,146,0.146,182,1.026,308,0.005,309,0.005,310,1.507,312,2.184,317,2.894,318,2.091,319,1.846,322,2.708,554,5.939,557,3.265,558,2.458,560,5.42,1044,5.707,1694,6.482,1703,6.188,1704,5.93,1705,6.482,1706,6.188,1709,4.513,1718,4.916,1719,4.213,1722,4.513,2208,6.482,2218,4.916,2819,6.825,3533,6.825,3540,4.916,3850,4.916,3851,4.916,3852,4.916,3853,6.825,3854,5.527,3855,5.527,3856,5.527,3857,5.527]],["title/interfaces/Update.html",[717,1.961,918,1.47]],["body/interfaces/Update.html",[0,0.212,2,0.251,3,0.251,8,0.22,10,0.435,24,0.007,25,1.284,32,0.474,33,1.049,38,1.489,41,0.99,55,0.728,60,0.395,61,2.36,62,2.444,64,0.902,65,1.965,70,2.984,71,1.274,72,1.774,75,2.05,76,1.354,79,2.535,84,2.805,88,0.885,103,3.229,112,1.209,114,2.148,116,2.256,126,1.669,132,0.387,142,1.449,145,0.258,146,0.112,162,1.439,167,1.832,194,1.369,208,1.958,275,1.724,308,0.004,309,0.005,332,4.153,339,2.412,342,2.209,360,1.976,364,3.582,367,1.651,373,1.026,378,3.742,379,1.33,380,2.075,403,2.03,430,2.922,452,1.788,454,2.284,465,3.065,469,3.867,475,2.148,495,1.383,518,2.637,527,3.867,534,2.535,535,1.356,664,4.153,678,4.202,679,4.694,717,3.81,772,2.637,779,3.128,800,3.627,822,2.03,864,5.131,888,2.36,918,1.808,941,3.227,945,3.218,946,2.882,952,3.742,953,3.448,954,2.535,955,2.882,956,2.535,957,2.03,958,2.535,959,1.832,960,2.751,965,3.448,967,3.448,968,3.754,969,3.448,971,2.882,972,3.756,974,3.756,975,5.396,977,3.448,979,3.035,980,3.887,981,3.448,983,3.218,984,3.218,985,3.756,987,2.751,988,3.756,989,3.756,991,2.882,992,2.637,993,3.448,994,3.448,995,3.887,996,4.547,997,3.448,998,3.448,999,3.448,1000,3.448,1001,3.448,1002,3.448,1003,3.448,1004,3.448,1005,3.756,1006,3.756,1007,3.756,1008,6.153,1009,5.649,1010,3.448,1011,3.452,1012,3.448,1013,3.448,1014,3.756,1015,5.306,1016,4.871,1017,2.535,1018,3.756,1019,5.649,1020,3.448,1021,3.448,1022,3.448,1023,3.448,1024,5.649,1025,2.637,1026,3.448,1027,3.756,1028,3.448,1029,3.756,1030,3.756]],["title/interfaces/Upload.html",[292,1.178,918,1.47]],["body/interfaces/Upload.html",[0,0.196,2,0.231,3,0.231,8,0.417,10,0.401,24,0.007,25,1.227,32,0.437,33,0.745,39,1.981,41,0.912,43,2.456,55,0.884,60,0.414,64,0.848,65,1.677,70,2.04,71,1.46,72,1.674,75,0.896,76,1.345,79,2.337,84,2.42,87,0.419,88,0.987,103,1.411,112,1.612,116,2.74,118,2.503,126,1.538,132,0.357,142,2.007,145,0.286,146,0.103,162,1.918,167,2.442,171,2.176,193,2.23,194,1.407,208,1.343,273,1.468,275,0.776,292,2.214,308,0.004,309,0.004,332,4.614,339,2.275,342,2.084,360,1.822,362,4.944,367,1.577,373,1.606,378,2.105,379,1.226,380,2.673,394,2.384,401,5.773,402,2.657,403,1.871,409,1.157,417,2.966,452,1.648,454,2.105,465,2.556,475,1.98,481,2.634,495,2.165,518,2.43,535,1.25,556,3.015,604,3.696,615,2.326,640,2.536,641,3.257,678,3.696,686,2.797,717,2.928,807,2.105,822,1.871,888,2.176,898,2.657,918,2.195,934,2.797,936,2.442,952,3.045,954,2.337,955,2.657,956,2.337,957,1.871,958,2.337,959,1.688,960,2.536,968,1.775,991,2.657,995,3.667,1011,2.252,1042,3.257,1053,2.536,1054,2.337,1096,3.257,1097,2.337,1136,1.731,1260,2.176,1268,2.337,1302,4.29,1328,2.706,1350,2.43,1421,3.576,1434,1.775,1440,4.523,1457,2.43,1459,2.337,1506,2.43,1548,3.146,1590,3.841,1591,2.966,1592,2.966,1593,4.596,1594,2.966,1595,2.966,1596,2.966,1597,2.797,1598,2.43,1599,2.797,1600,2.43,1601,3.178,1602,3.178,1603,3.178,1604,3.178,1605,4.596,1606,3.178,1607,2.43,1608,3.178,1609,3.178,1610,2.105,1611,2.536,1612,2.657,1613,2.966,1614,3.178,1615,3.178,1616,3.178,1617,3.178,1618,2.657,1619,2.797,1620,2.43,1621,3.178,1622,6.275,1623,3.178,1624,3.178,1625,4.29,1626,5.399,1627,3.178,1628,4.596,1629,4.596,1630,4.596,1631,4.596,1632,4.596,1633,4.596,1634,4.596,1635,4.596,1636,4.596,1637,4.596,1638,5.039,1639,2.966,1640,3.178,1641,3.178,1642,3.178,1643,3.178,1644,4.596,1645,3.178,1646,4.596,1647,2.966,1648,3.178,1649,4.596,1650,3.178,1651,3.667,1652,3.178,1653,4.596,1654,3.178,1655,3.178,1656,2.966,1657,2.966,1658,2.797,1659,3.178,1660,3.178,1661,3.178,1662,3.178]],["title/components/UploadComponent.html",[0,0.244,291,1.244]],["body/components/UploadComponent.html",[0,0.377,1,0.749,2,0.174,3,0.174,4,0.593,5,0.806,6,0.806,8,0.445,10,0.301,15,1.299,19,0.71,22,0.66,24,0.007,25,1.393,26,2.292,27,1.974,30,1.207,32,0.328,33,0.6,35,1.931,38,1.006,39,1.376,41,1.063,42,2.595,44,0.727,55,0.947,60,0.38,64,0.865,65,1.569,66,1.238,71,0.943,76,1.186,77,1.164,84,1.752,86,0.859,87,0.876,88,0.876,104,3.63,105,1.922,106,2.474,108,1.742,110,0.736,113,1.068,116,2.104,121,1.486,132,0.268,135,1.367,142,0.71,145,0.126,146,0.077,165,3.289,171,2.626,182,0.542,183,1.185,184,0.905,188,1.7,189,0.806,190,0.806,191,0.723,192,0.749,193,1.938,194,0.926,195,1.875,196,0.763,197,1.731,198,0.763,199,0.806,200,0.749,201,1.252,202,0.763,203,0.806,204,0.749,205,0.806,206,0.723,207,0.736,208,1.38,209,1.535,210,0.723,211,0.749,212,0.749,213,0.736,214,0.806,215,0.763,216,1.535,217,0.806,218,0.806,219,0.763,220,1.731,221,0.749,222,1.535,223,0.763,224,0.763,225,0.749,226,0.806,227,0.736,228,0.763,229,0.806,230,0.749,231,0.806,232,0.806,233,0.749,234,0.806,235,0.723,236,0.749,237,0.806,238,0.736,239,0.806,240,1.418,241,0.806,242,0.736,243,1.401,244,0.806,245,0.736,246,0.806,247,0.736,248,0.806,249,0.697,250,0.806,251,0.749,252,0.685,253,0.749,254,0.763,255,0.806,256,0.749,257,0.806,258,0.806,259,0.749,260,0.806,261,0.749,262,0.806,263,0.697,264,0.806,265,0.749,266,0.749,267,0.806,268,0.749,269,0.763,270,0.806,271,1.68,272,0.723,273,1.597,274,0.736,275,0.905,276,0.749,277,0.736,278,0.736,279,0.749,280,0.736,281,0.749,282,0.806,283,0.736,284,0.806,285,0.749,286,0.806,287,0.749,288,0.806,289,0.749,290,0.806,291,1.609,292,2.285,293,0.723,294,0.806,295,0.736,296,0.806,297,0.736,298,0.806,299,0.736,300,0.806,301,0.736,302,0.777,303,0.806,304,0.736,305,0.763,306,0.723,307,0.806,308,0.003,309,0.003,331,3.994,339,1.834,340,0.649,341,1.531,342,2.322,365,2.014,368,3.705,369,3.625,373,1.102,379,2.363,380,2.182,394,1.922,403,1.404,404,1.903,409,1.349,410,1.754,412,4.781,423,3.947,427,2.309,438,1.486,440,2.309,442,5.168,465,1.754,486,2.598,491,3.705,495,2.054,514,1.754,515,2.302,522,3.942,523,3.016,535,0.938,664,1.754,710,2.626,731,1.824,738,3.097,816,2.454,820,3.11,821,3.474,826,3.422,833,3.934,834,3.22,835,3.295,836,2.657,878,1.58,879,2.385,880,2.385,881,2.385,907,2.956,908,3.999,910,1.994,912,1.824,933,2.956,980,2.956,1011,3.63,1025,4.686,1078,3.797,1183,2.099,1298,2.099,1350,1.824,1378,2.385,1521,3.458,1553,2.536,1590,3.797,1592,3.458,1594,3.458,1595,3.458,1596,3.458,1607,4.686,1625,3.458,1979,2.956,2051,3.261,2076,5.557,2385,3.766,2582,4.036,2849,3.458,3196,4.949,3297,2.385,3298,2.385,3301,2.385,3305,2.598,3858,2.598,3859,4.538,3860,6.274,3861,6.274,3862,6.274,3863,4.538,3864,2.921,3865,4.036,3866,2.921,3867,2.921,3868,2.921,3869,2.921,3870,2.921,3871,2.921,3872,4.036,3873,2.921,3874,4.538,3875,2.921,3876,2.921,3877,2.921,3878,4.538,3879,2.921,3880,2.921,3881,2.921,3882,4.538,3883,2.921,3884,2.921,3885,2.921,3886,2.921,3887,4.538,3888,2.921,3889,2.921,3890,2.921,3891,2.921,3892,2.921,3893,2.921,3894,2.921,3895,2.921,3896,2.921,3897,2.598,3898,2.921,3899,2.921,3900,5.564,3901,2.921,3902,2.921,3903,2.921,3904,2.921,3905,2.921,3906,2.921,3907,2.921,3908,2.921,3909,2.921,3910,2.921,3911,4.538,3912,4.538,3913,4.538,3914,4.538]],["title/modules/UtilityModule.html",[310,1.021,3853,3.486]],["body/modules/UtilityModule.html",[2,0.347,3,0.347,8,0.304,23,2.122,24,0.007,58,1.987,60,0.447,132,0.535,134,2.304,141,2.952,145,0.37,146,0.154,174,3.641,182,1.082,251,2.454,252,1.366,256,2.454,259,2.454,281,2.454,283,2.41,308,0.005,309,0.005,310,1.56,312,2.304,317,2.995,318,2.205,319,1.948,321,3.259,322,2.802,532,3.259,557,3.379,558,2.593,560,5.559,1044,5.853,1045,7.244,1702,6.531,1712,5.186,2408,4.761,3654,5.186,3676,5.186,3853,7.064,3915,5.186,3916,5.186,3917,5.831,3918,5.186,3919,5.831,3920,5.831,3921,5.831]],["title/modules/VcModule.html",[310,1.021,3922,3.697]],["body/modules/VcModule.html",[2,0.379,3,0.379,8,0.332,23,2.244,24,0.007,58,2.173,60,0.438,132,0.585,141,3.074,145,0.382,146,0.169,182,1.183,185,2.465,215,2.546,289,2.5,308,0.006,309,0.006,310,1.649,312,2.52,317,3.167,318,2.411,319,2.13,321,4.38,322,2.963,557,3.573,558,2.835,1683,4.582,1684,4.154,3373,6.958,3378,5.671,3790,5.671,3922,7.405,3923,5.671,3924,5.671,3925,5.671,3926,6.376,3927,6.376,3928,6.376]],["title/pipes/VisibleFieldsPipe.html",[1101,2.543,1701,3.486]],["body/pipes/VisibleFieldsPipe.html",[2,0.397,3,0.397,8,0.348,10,0.687,15,1.913,22,1.51,24,0.007,41,2.191,44,1.071,60,0.377,64,0.657,66,0.901,74,2.03,76,1.239,86,1.031,87,0.931,88,0.718,112,2.574,132,0.613,145,0.289,146,0.177,308,0.006,309,0.006,319,2.692,409,2.574,615,2.954,946,5.501,968,4.099,983,6.143,1079,2.921,1101,4.538,1106,3.613,1112,5.501,1253,4.352,1434,3.676,1701,6.46,1746,5.94,3929,7.168,3930,5.94,3931,8.06,3932,8.06,3933,6.679,3934,8.06,3935,6.679]],["title/interfaces/WithLoader.html",[820,2.711,918,1.47]],["body/interfaces/WithLoader.html",[0,0.421,2,0.423,3,0.423,8,0.371,10,0.732,24,0.007,32,0.799,33,1.108,55,1.12,60,0.333,64,0.7,145,0.308,240,2.075,308,0.006,309,0.006,359,3.631,820,4.679,826,4.398,918,2.782,1443,5.713,2240,5.227,2278,5.811,3936,6.33,3937,6.33,3938,7.445]],["title/interfaces/WithNotifications.html",[821,3.029,918,1.47]],["body/interfaces/WithNotifications.html",[0,0.41,2,0.404,3,0.404,8,0.354,10,0.7,24,0.007,25,1.513,32,0.764,33,1.078,55,1.104,56,3.623,60,0.318,64,0.802,88,0.973,145,0.294,308,0.006,309,0.006,373,2.119,465,3.15,515,3.371,522,4.604,821,5.089,918,2.741,1316,7.385,1503,4.892,1850,7.385,1855,7.248,1983,5.562,3939,6.05,3940,6.05,3941,8.044]],["title/changelog.html",[1080,2.546,2743,2.93,3942,3.626]],["body/changelog.html",[0,0.382,4,0.77,15,1.085,18,1.644,24,0.005,25,0.704,27,1.957,33,0.862,35,1.802,37,2.47,38,0.885,39,0.938,41,2.006,42,1.568,43,0.99,44,1.147,55,1.098,59,2.587,60,0.355,61,2.119,64,0.373,70,2.001,71,1.345,72,1.127,74,1.64,76,0.542,84,2.807,88,0.818,101,2.47,102,2.193,103,2.001,112,2.049,113,1.047,116,2.088,118,1.685,119,3.086,146,0.146,171,2.134,174,2.367,184,1.427,186,3.389,193,1.933,194,1.265,208,1.739,213,0.955,227,0.955,235,0.938,238,0.955,249,0.904,252,1.782,269,0.99,272,0.938,273,1.901,275,1.427,277,0.955,278,0.955,292,0.921,306,0.938,308,0.004,309,0.004,310,1.162,318,1.434,331,1.774,339,1.532,342,2.044,360,3.559,361,3.371,364,2.276,365,2.091,379,1.739,396,4.445,409,1.127,423,3.313,427,1.928,429,2.367,431,2.338,433,4.91,438,2.946,441,4.467,442,2.724,443,3.195,444,3.537,445,3.048,446,4.243,449,2.276,450,2.119,452,1.605,454,2.05,465,1.465,475,4.169,512,2.894,517,2.05,519,2.729,556,2.518,577,5.465,581,2.724,587,1.685,589,3.999,609,2.724,616,2.889,626,3.315,627,3.371,635,3.768,678,2.119,679,2.367,718,1.822,731,2.367,739,5.648,793,1.928,822,2.655,826,1.729,836,1.605,849,5.842,850,2.889,870,3.448,934,2.724,935,3.371,936,3.443,943,1.874,949,3.195,954,3.315,958,2.276,968,1.729,980,2.47,996,2.889,1011,2.193,1031,2.587,1070,4.208,1074,2.889,1076,2.367,1078,2.119,1136,3.529,1150,3.371,1256,2.724,1273,3.768,1342,4.508,1434,1.729,1440,2.367,1472,2.367,1502,2.889,1504,4.661,1505,3.095,1506,2.367,1516,2.724,1517,3.371,1530,3.371,1531,3.195,1548,2.119,1549,2.587,1558,1.987,1564,3.64,1577,2.889,1578,3.597,1598,2.367,1658,4.68,1726,2.367,1846,1.874,1847,2.724,1917,3.095,1919,2.889,1979,2.47,2047,2.724,2051,6.034,2063,3.768,2092,3.095,2138,3.095,2140,3.371,2142,6.363,2146,2.724,2147,2.889,2192,3.195,2241,2.587,2242,2.47,2411,4.91,2429,1.292,2620,4.954,2637,2.367,2747,5.453,2749,3.095,2784,4.68,2797,3.968,2858,3.371,2999,3.371,3134,3.095,3236,2.889,3415,6.567,3562,2.724,3596,3.095,3818,3.371,3865,3.371,3872,4.91,3942,3.371,3943,3.79,3944,3.79,3945,8.699,3946,3.79,3947,3.79,3948,3.371,3949,8.397,3950,3.79,3951,3.79,3952,3.371,3953,3.371,3954,3.79,3955,3.79,3956,3.79,3957,3.79,3958,3.79,3959,4.91,3960,3.79,3961,3.79,3962,3.371,3963,3.79,3964,3.371,3965,3.79,3966,3.79,3967,3.79,3968,3.79,3969,3.79,3970,3.79,3971,3.371,3972,3.79,3973,3.79,3974,3.79,3975,3.79,3976,3.371,3977,3.79,3978,3.79,3979,3.79,3980,3.79,3981,3.79,3982,5.521,3983,3.79,3984,3.79,3985,3.79,3986,3.79,3987,3.371,3988,3.79,3989,3.79,3990,3.79,3991,4.91,3992,4.91,3993,5.521,3994,2.889,3995,2.119,3996,3.79,3997,3.79,3998,3.79,3999,3.79,4000,3.79,4001,3.79,4002,3.79,4003,3.371,4004,3.371,4005,3.79,4006,3.79,4007,3.79,4008,3.79,4009,3.79,4010,3.79,4011,3.79,4012,3.79,4013,6.512,4014,3.79,4015,2.587,4016,2.587,4017,2.47,4018,3.79,4019,3.79,4020,3.79,4021,3.371,4022,3.79,4023,3.79,4024,3.79,4025,3.79,4026,3.79,4027,3.79,4028,3.371,4029,3.79,4030,3.79,4031,3.371,4032,3.79,4033,3.79,4034,3.79,4035,2.889,4036,3.79,4037,6.512,4038,3.79,4039,3.79,4040,3.371,4041,2.724,4042,3.79,4043,3.371,4044,5.521,4045,3.79,4046,5.521,4047,3.79,4048,3.79]],["title/coverage.html",[4049,5.84]],["body/coverage.html",[0,0.491,1,0.802,8,0.163,9,3.904,12,2.133,19,0.759,24,0.007,41,0.732,43,0.816,64,0.307,71,0.53,110,0.787,112,0.895,146,0.232,184,1.474,191,0.773,192,0.802,194,0.966,196,0.816,198,0.816,200,0.802,202,0.816,204,0.802,206,0.773,207,0.787,208,1.179,210,0.773,211,0.802,212,0.802,215,0.816,219,0.816,221,0.802,223,0.816,224,0.816,225,0.802,227,0.787,228,0.816,230,0.802,233,0.802,235,0.773,236,0.802,238,0.787,240,0.707,242,0.787,245,0.787,247,0.787,249,0.746,251,0.802,253,0.802,256,0.802,259,0.802,261,0.802,263,0.746,265,0.802,266,0.802,268,0.802,271,0.773,272,0.773,274,0.787,275,0.954,276,0.802,277,0.787,278,0.787,279,0.802,280,0.787,281,0.802,283,0.787,285,0.802,287,0.802,289,0.802,291,0.802,292,0.759,293,0.773,295,0.787,297,0.787,299,0.787,301,0.787,304,0.787,308,0.003,309,0.003,324,5.699,325,2.246,326,4.172,342,1.157,347,1.952,358,2.78,367,2.167,420,4.252,421,2.552,422,5.309,438,1.024,443,1.733,448,2.036,450,1.747,457,1.876,508,2.246,509,2.78,510,2.78,515,1.293,522,1.463,523,1.503,555,2.552,565,2.552,570,2.891,571,2.552,575,2.78,604,1.747,618,5.974,640,2.036,712,1.639,713,2.78,717,1.932,792,2.78,814,2.78,820,1.747,821,1.952,833,1.639,835,1.293,836,1.324,864,2.133,868,2.552,869,3.643,876,2.552,918,2.699,919,2.78,920,4.801,922,1.809,952,1.691,953,3.904,1040,2.246,1041,2.036,1042,1.809,1046,3.962,1048,2.87,1051,2.78,1053,2.036,1054,2.87,1060,3.436,1061,3.436,1062,2.382,1064,2.552,1069,2.78,1094,2.382,1101,3.673,1102,2.246,1103,2.78,1104,2.133,1119,4.252,1132,2.382,1249,3.904,1255,3.904,1261,2.133,1269,2.78,1307,3.904,1308,2.552,1309,2.78,1321,2.246,1322,2.78,1340,2.78,1392,2.78,1409,4.252,1420,2.133,1421,1.691,1440,1.952,1481,2.78,1499,2.78,1500,1.809,1587,1.876,1588,4.252,1590,2.133,1591,4.424,1607,1.952,1610,1.691,1620,1.952,1685,2.78,1690,2.382,1691,2.78,1692,2.036,1700,2.246,1701,2.246,1707,2.246,1725,2.78,1761,2.036,1762,3.904,1763,2.246,1826,2.78,1831,2.78,1877,2.78,1882,2.036,1890,2.382,1910,2.78,1911,2.552,1914,2.78,1958,2.78,2010,2.78,2011,2.552,2012,2.78,2037,2.78,2052,2.78,2063,2.133,2135,2.78,2150,3.904,2151,2.552,2152,2.78,2188,2.552,2189,2.78,2192,1.809,2219,2.78,2280,2.78,2286,4.424,2287,2.78,2319,2.552,2321,2.552,2332,2.78,2367,2.78,2383,2.78,2407,2.78,2408,2.552,2409,5.163,2459,2.552,2468,2.552,2481,2.78,2482,2.78,2488,2.382,2489,2.78,2490,2.78,2532,2.78,2619,2.78,2635,4.673,2638,4.424,2733,2.552,2734,2.78,2735,2.78,2758,2.78,2828,3.904,2849,2.382,2867,2.78,2872,2.78,2920,8.042,2938,2.78,2996,2.78,3008,2.78,3009,2.78,3038,2.78,3067,2.78,3081,5.757,3109,2.382,3250,2.78,3309,2.78,3341,4.252,3373,2.246,3374,2.78,3375,2.78,3389,2.78,3464,2.78,3541,2.78,3542,2.78,3548,2.246,3549,5.34,3553,2.552,3554,2.552,3555,2.552,3564,2.552,3589,2.78,3597,3.643,3599,4.252,3605,2.78,3638,2.78,3657,2.78,3697,2.78,3736,2.552,3763,2.78,3775,2.78,3858,2.78,3929,2.78,3930,2.78,3936,2.78,3937,2.78,3939,2.78,3940,2.78,3952,6.232,3953,4.252,3962,2.78,3964,2.78,4049,2.78,4050,3.643,4051,3.126,4052,5.805,4053,3.126,4054,9.351,4055,3.126,4056,7.389,4057,3.126,4058,3.126,4059,3.126,4060,3.126,4061,3.126,4062,4.781,4063,3.126,4064,5.805,4065,3.126,4066,4.781,4067,3.126,4068,3.126,4069,4.781,4070,3.126,4071,3.126,4072,6.502,4073,4.781,4074,3.126,4075,3.126,4076,3.126,4077,2.78,4078,2.78,4079,4.252,4080,2.78,4081,3.126,4082,3.126,4083,6.502,4084,5.805,4085,3.126,4086,3.126,4087,4.781,4088,7.007,4089,7.007,4090,3.126,4091,4.781,4092,4.781,4093,4.781,4094,3.126,4095,3.126,4096,3.126,4097,3.126,4098,4.781,4099,7.007,4100,3.126,4101,3.126,4102,5.805,4103,4.781,4104,3.126,4105,4.781,4106,3.126,4107,3.126,4108,3.126,4109,3.126,4110,4.781,4111,4.781,4112,5.805,4113,6.502,4114,4.781,4115,3.126,4116,7.007,4117,3.126,4118,7.007,4119,3.126,4120,4.781,4121,3.126,4122,3.126,4123,3.126,4124,3.126,4125,3.126,4126,3.126,4127,3.126,4128,3.126,4129,3.126,4130,3.126,4131,4.781,4132,4.781,4133,3.126,4134,3.126,4135,3.126,4136,3.126,4137,3.126,4138,2.78,4139,2.78,4140,3.126,4141,3.126,4142,3.126,4143,3.126,4144,3.126,4145,3.126,4146,3.126,4147,3.126,4148,3.126,4149,3.126,4150,3.126,4151,3.126,4152,3.126,4153,3.126,4154,2.78,4155,4.252,4156,2.78,4157,4.781,4158,3.126,4159,5.805,4160,4.781,4161,4.781,4162,5.805,4163,3.126,4164,3.126,4165,3.126,4166,3.126,4167,3.126,4168,2.78,4169,2.78,4170,2.78,4171,2.78,4172,4.252,4173,3.126,4174,3.126]],["title/dependencies.html",[58,1.983,3995,2.279]],["body/dependencies.html",[12,4.676,13,3.706,24,0.007,58,2.335,132,0.629,134,2.708,185,3.164,213,1.726,308,0.006,309,0.006,493,5.222,532,3.83,562,6.094,563,6.094,577,4.924,619,3.592,1096,3.965,1097,4.113,1684,5.332,1788,5.595,1841,6.094,3698,4.924,3976,6.094,3994,5.222,4028,6.094,4031,7.279,4043,6.094,4175,6.094,4176,9.505,4177,6.094,4178,6.852,4179,6.094,4180,6.094,4181,6.852,4182,4.924,4183,6.852,4184,6.852,4185,6.852,4186,7.279,4187,6.852,4188,6.094,4189,6.852,4190,6.852,4191,6.094,4192,6.852,4193,6.852,4194,6.852,4195,6.852,4196,6.852,4197,6.852]],["title/miscellaneous/functions.html",[570,2.587,4198,3.107]],["body/miscellaneous/functions.html",[24,0.007,32,0.799,65,1.553,86,1.373,87,0.956,88,0.956,308,0.006,309,0.006,359,3.087,373,1.729,376,2.692,555,5.811,561,6.33,570,3.164,571,7.261,690,7.228,1564,4.971,3549,5.424,3553,6.835,3554,6.835,3555,6.835,3563,5.811,3569,6.33,3571,6.33,3572,6.33,4198,5.424,4199,7.117,4200,7.909]],["title/index.html",[32,0.458,1080,2.546,2743,2.93]],["body/index.html",[0,0.433,3,0.392,8,0.435,14,4.512,18,2.116,24,0.007,32,0.74,34,2.898,55,1.051,56,2.169,58,1.662,60,0.424,61,4.811,62,4.627,64,0.48,66,0.658,71,1.117,84,1.536,87,0.525,135,2.283,145,0.211,146,0.129,168,3.506,243,1.66,275,1.315,308,0.005,309,0.005,310,1.758,312,2.951,319,2.202,357,2.169,384,2.44,428,3.239,438,1.597,487,2.411,493,3.718,515,3.088,519,3.953,526,3.046,529,3.983,530,4.295,578,3.506,587,2.169,589,3.685,610,3.957,619,4.192,626,4.8,676,2.929,708,3.506,710,4.32,714,3.983,717,1.972,731,4.116,773,4.662,840,4.8,855,4.339,925,6.096,932,6.096,959,2.116,987,3.178,1080,4.116,1144,7.112,1242,5.69,1328,3.169,1459,3.957,1472,3.046,1516,3.506,1549,4.499,1552,5.457,1553,3.685,1578,4.295,1600,4.662,1658,3.506,1726,5.374,1798,3.046,1850,3.983,1980,6.64,2046,4.339,2090,5.095,2226,3.506,2620,3.178,2657,4.339,2743,3.506,2747,3.718,2768,4.499,3002,3.983,3176,3.718,3441,4.339,3562,6.324,3658,6.096,3897,4.339,3994,3.718,3995,5.124,4015,5.095,4035,3.718,4041,5.365,4050,5.024,4182,6.324,4186,4.339,4191,4.339,4201,4.878,4202,4.878,4203,7.466,4204,4.878,4205,4.878,4206,4.339,4207,4.878,4208,6.64,4209,4.878,4210,7.112,4211,4.878,4212,4.878,4213,4.878,4214,5.863,4215,4.116,4216,5.382,4217,4.878,4218,6.82,4219,6.592,4220,4.878,4221,4.878,4222,4.878,4223,4.878,4224,4.878,4225,4.339,4226,4.339,4227,4.878,4228,4.878,4229,4.878,4230,4.878,4231,4.878,4232,4.878,4233,6.82,4234,5.69,4235,4.339,4236,4.339,4237,4.878,4238,3.718,4239,4.878,4240,4.878,4241,4.878,4242,4.878,4243,4.878,4244,4.878,4245,4.878,4246,4.878,4247,6.592,4248,6.592,4249,4.878,4250,4.878,4251,4.878,4252,4.878,4253,4.878,4254,4.878,4255,4.878,4256,4.878,4257,4.878,4258,4.878,4259,4.878,4260,4.878,4261,4.339,4262,6.592,4263,4.878,4264,4.878,4265,4.878,4266,4.878,4267,4.878,4268,4.878,4269,4.878,4270,4.878,4271,5.863,4272,6.592,4273,4.878,4274,4.878,4275,4.878,4276,4.339,4277,4.878,4278,4.878]],["title/modules.html",[310,1.382]],["body/modules.html",[24,0.006,185,3.829,186,4.098,308,0.006,309,0.006,310,1.39,311,4.747,548,4.747,554,3.965,1031,4.508,1037,4.747,1038,4.508,1039,4.303,1694,4.508,1702,4.508,1703,4.303,1704,4.124,1705,4.508,1706,4.303,2208,4.508,2313,5.034,2525,4.747,2819,4.747,3533,4.747,3757,4.747,3853,4.747,3922,5.034,4279,9.907,4280,9.907]],["title/overview.html",[4281,5.004]],["body/overview.html",[0,0.122,1,1.924,19,1.197,23,0.695,24,0.007,25,1.393,58,0.827,110,1.758,141,0.88,145,0.105,146,0.064,182,0.45,184,0.484,191,1.219,192,1.791,196,1.823,198,1.823,200,1.791,202,1.823,204,1.791,206,1.219,207,1.241,210,1.219,211,1.791,212,1.791,215,1.823,219,1.823,221,1.791,223,1.823,224,1.823,225,1.791,227,1.758,228,1.823,230,1.791,233,1.791,235,1.727,236,1.791,238,1.758,240,1.579,242,1.758,245,1.758,247,1.758,249,1.666,251,1.791,253,1.924,256,1.791,259,1.791,261,1.791,263,1.666,265,1.791,266,1.791,268,1.791,271,1.727,272,1.727,274,1.758,276,1.791,277,1.758,278,1.758,279,1.791,280,1.89,281,1.791,283,1.758,285,1.791,287,1.791,289,1.791,291,1.791,293,1.727,295,1.758,297,1.758,299,1.758,301,1.758,304,1.758,308,0.003,309,0.003,310,0.825,311,4.46,312,0.959,313,2.158,314,2.158,315,2.158,316,2.158,317,1.584,318,0.918,319,0.811,342,1.824,367,0.579,448,3.21,450,2.754,508,3.541,523,2.369,548,6.34,549,2.158,550,2.158,551,2.158,552,2.158,553,2.158,554,5.65,604,2.754,744,1.744,833,2.583,836,2.087,918,0.735,952,2.665,1031,6.534,1032,2.158,1033,2.158,1034,2.158,1035,2.158,1036,2.158,1037,6.676,1038,6.371,1039,5.46,1040,3.541,1041,3.21,1042,2.851,1101,1.272,1102,5.018,1104,4.765,1421,2.665,1569,1.656,1607,3.076,1677,2.158,1678,2.158,1680,2.158,1681,2.158,1694,6.573,1695,2.158,1696,2.158,1697,2.158,1698,2.158,1699,2.158,1700,5.018,1701,5.018,1702,6.226,1703,5.52,1704,5.233,1705,5.569,1706,5.133,1707,3.541,1761,3.21,1882,3.21,1904,2.158,1905,2.158,1906,2.158,1907,2.158,2029,2.158,2030,2.158,2031,2.158,2208,6.307,2209,2.158,2210,2.158,2212,2.158,2273,2.158,2274,2.158,2275,2.158,2276,2.158,2313,6.387,2314,2.158,2315,2.158,2317,2.158,2318,2.158,2525,4.46,2526,2.158,2527,2.158,2529,2.158,2819,6.253,2820,2.158,2821,2.158,2823,2.158,2824,2.158,3062,2.158,3063,2.158,3064,2.158,3065,2.158,3335,2.158,3336,2.158,3338,2.158,3339,2.158,3373,5.018,3385,2.158,3386,2.158,3533,5.865,3534,2.158,3535,2.158,3538,2.158,3593,2.158,3594,2.158,3757,4.46,3758,2.158,3759,2.158,3760,2.158,3850,2.158,3851,2.158,3852,2.158,3853,6.477,3915,2.158,3916,2.158,3918,2.158,3922,6.004,3923,2.158,3924,2.158,3925,2.158,4281,1.85,4282,2.427,4283,2.427,4284,2.427,4285,2.427,4286,2.427]],["title/miscellaneous/variables.html",[618,3.972,4198,3.107]],["body/miscellaneous/variables.html",[0,0.075,4,0.699,8,0.288,9,1.21,12,2.815,13,1.399,24,0.007,25,0.766,26,1.297,27,0.301,32,0.166,34,1.248,35,0.545,38,1.171,40,0.694,41,0.347,42,0.613,54,1.318,55,0.571,60,0.069,64,0.705,65,0.323,71,0.793,74,0.652,76,0.59,87,1.077,102,0.858,108,0.664,113,0.913,122,0.829,126,0.586,130,0.802,138,2.113,139,1.065,140,1.13,141,0.938,142,1.249,146,0.163,162,1.595,165,0.777,167,1.122,168,1.859,170,1.13,183,0.387,184,0.296,194,0.686,242,0.373,243,1.478,245,0.373,247,0.373,252,0.347,275,0.296,292,0.629,302,1.097,308,0.002,309,0.002,310,0.545,317,1.046,319,0.495,328,0.858,335,1.065,350,2.15,360,1.211,364,0.89,376,0.979,384,0.549,394,3.201,396,1.012,409,1.226,425,1.21,427,0.754,428,1.493,429,1.616,430,1.826,431,1.096,437,1.13,438,0.847,440,0.754,441,0.926,443,0.537,444,1.279,481,0.694,506,1.21,513,1.553,515,2.127,516,1.446,522,0.694,526,2.923,528,1.316,538,2.301,570,1.531,589,1.446,590,1.21,615,0.476,618,1.012,623,3.605,676,1.553,696,3.062,718,1.983,728,3.227,744,1.065,773,0.926,779,0.777,794,1.497,800,2.454,807,1.399,818,2.624,835,1.706,850,5.92,918,1.043,933,2.243,936,0.643,937,2.624,938,2.964,941,1.399,943,0.733,946,1.766,947,1.318,948,1.21,959,2.4,968,1.18,1025,0.926,1074,3.919,1076,0.926,1108,1.065,1122,2.113,1127,1.318,1132,3.143,1135,3.143,1136,2.081,1138,2.301,1139,1.318,1268,3.847,1273,1.012,1289,3.919,1328,1.983,1345,1.21,1504,3.049,1507,1.616,1551,1.497,1557,1.21,1564,0.829,1611,0.966,1618,2.815,1619,1.065,1620,1.616,1656,1.13,1657,1.13,1738,2.301,1762,1.21,1763,3.364,1793,1.318,1840,4.004,1847,1.065,1879,4.908,1890,2.624,1911,2.811,1915,2.113,1918,1.012,1922,0.926,1923,2.811,1929,4.921,2086,1.065,2102,3.143,2172,1.012,2196,1.21,2236,1.318,2268,1.318,2292,3.668,2319,1.21,2321,2.811,2416,1.318,2459,2.811,2468,2.811,2566,1.318,2579,2.301,2658,3.822,2725,1.21,2726,2.811,2772,2.811,2773,1.21,2774,1.21,2828,1.21,2849,3.919,2850,1.318,2953,2.301,2961,1.318,3002,4.199,3004,4.921,3010,2.301,3022,2.301,3028,1.318,3039,2.301,3114,1.318,3134,6.26,3151,1.318,3549,1.13,3563,1.21,3564,2.811,3565,1.318,3566,1.318,3567,1.318,3568,1.012,3591,3.668,3658,1.21,3698,1.065,3736,2.811,3777,1.318,3778,3.062,3787,4.574,3788,2.301,3826,2.301,3829,2.301,3938,1.318,3941,1.318,3987,5.218,3991,2.301,3992,2.301,4016,1.012,4021,1.318,4035,1.972,4050,3.567,4077,1.318,4078,2.301,4079,1.318,4080,3.062,4138,1.318,4139,2.301,4154,1.318,4155,3.668,4156,1.318,4168,1.318,4169,3.668,4170,1.318,4171,2.301,4172,1.318,4182,1.065,4198,1.13,4200,1.318,4238,3.143,4271,1.318,4287,1.482,4288,2.587,4289,1.482,4290,1.482,4291,1.482,4292,1.482,4293,1.482,4294,1.482,4295,1.482,4296,1.482,4297,1.482,4298,1.482,4299,1.482,4300,1.482,4301,1.482,4302,2.587,4303,1.482,4304,1.482,4305,1.482,4306,1.482,4307,2.587,4308,1.482,4309,1.482,4310,5.533,4311,3.443,4312,2.587,4313,6.409,4314,1.482,4315,2.587,4316,1.482,4317,1.482,4318,4.124,4319,6.829,4320,5.533,4321,1.482,4322,1.482,4323,4.124,4324,3.443,4325,1.482,4326,1.482,4327,1.482,4328,1.482,4329,1.482,4330,2.587,4331,4.124,4332,3.443,4333,6.156,4334,5.143,4335,4.124,4336,1.482,4337,2.587,4338,3.443,4339,1.482,4340,2.587,4341,1.482,4342,1.482,4343,2.587,4344,2.587,4345,3.443,4346,4.68,4347,1.482,4348,4.124,4349,1.482,4350,1.482,4351,2.587,4352,1.482,4353,5.533,4354,5.143,4355,5.533,4356,2.587,4357,2.587,4358,2.587,4359,2.587,4360,2.587,4361,2.587,4362,2.587,4363,1.482,4364,5.143,4365,1.482,4366,1.482,4367,2.587,4368,1.482,4369,1.482,4370,1.482,4371,1.482,4372,1.482,4373,1.482,4374,2.587,4375,4.124,4376,1.482,4377,1.482,4378,2.587,4379,1.482,4380,1.482,4381,1.482,4382,1.482,4383,1.482,4384,2.587,4385,2.587,4386,1.482,4387,1.482,4388,1.482,4389,2.587,4390,2.587,4391,2.587,4392,1.482,4393,1.482,4394,1.482,4395,2.587,4396,1.482,4397,2.587,4398,1.482,4399,1.482,4400,1.482,4401,1.482,4402,2.587,4403,2.587,4404,1.482,4405,1.482,4406,1.482,4407,1.482,4408,1.482,4409,3.443,4410,1.482,4411,1.482,4412,1.482,4413,1.482,4414,1.482,4415,4.68,4416,1.482,4417,1.482,4418,1.482,4419,1.482,4420,1.482,4421,4.124,4422,1.482,4423,1.482,4424,1.482,4425,3.443,4426,1.482,4427,1.482,4428,1.318,4429,1.482,4430,1.482,4431,1.482,4432,1.482,4433,2.587,4434,1.482,4435,1.482,4436,1.482,4437,1.482,4438,3.443,4439,2.587,4440,1.482,4441,1.482,4442,2.587,4443,1.482,4444,2.587,4445,4.124,4446,2.587,4447,3.443,4448,1.482,4449,1.482,4450,4.124,4451,1.482,4452,1.482,4453,1.482,4454,2.587,4455,1.482,4456,2.587,4457,4.68,4458,4.68,4459,1.482,4460,1.482,4461,1.482,4462,1.482,4463,1.482,4464,1.482,4465,1.482,4466,1.482,4467,1.482,4468,1.482,4469,1.482,4470,1.482,4471,1.482,4472,1.482,4473,2.587,4474,4.124,4475,1.482,4476,1.482,4477,2.587,4478,1.482,4479,1.482,4480,1.482,4481,1.482,4482,2.587,4483,2.587,4484,2.587,4485,1.482,4486,2.587,4487,1.482,4488,1.482,4489,1.482,4490,1.482,4491,1.482,4492,1.482,4493,1.482,4494,1.482,4495,4.124,4496,1.482,4497,1.482,4498,1.482,4499,1.482,4500,1.482,4501,1.318,4502,1.482,4503,1.482,4504,1.482,4505,6.631,4506,1.482,4507,3.443,4508,2.587,4509,1.482,4510,1.482,4511,1.482,4512,1.482,4513,2.587,4514,1.482,4515,1.482,4516,1.482,4517,1.482,4518,1.482,4519,1.482,4520,1.482,4521,1.482,4522,1.482,4523,1.482,4524,1.482,4525,1.482,4526,1.482,4527,1.482,4528,2.587,4529,1.482,4530,2.587,4531,1.482,4532,1.482,4533,1.482,4534,1.482,4535,1.482,4536,1.482,4537,1.482,4538,1.482,4539,1.482,4540,1.482,4541,2.587,4542,1.482,4543,1.482,4544,1.482,4545,1.482,4546,1.482,4547,1.482,4548,1.482,4549,1.482,4550,1.482,4551,1.482,4552,1.482,4553,1.482,4554,1.482,4555,1.482,4556,1.482,4557,3.443,4558,1.482,4559,1.482,4560,1.482,4561,1.482,4562,1.482,4563,1.482,4564,1.482,4565,1.482,4566,1.482,4567,1.482,4568,2.587,4569,3.443,4570,1.482,4571,1.482,4572,1.482,4573,2.587,4574,2.587,4575,1.482,4576,2.587,4577,2.587,4578,2.587,4579,1.482,4580,4.124,4581,1.482,4582,1.482,4583,1.318,4584,2.587,4585,1.482,4586,1.482,4587,1.482,4588,2.587,4589,4.124,4590,2.587,4591,2.587,4592,2.587,4593,1.482,4594,1.482,4595,1.482,4596,1.482,4597,1.482,4598,1.482,4599,1.482,4600,2.587,4601,2.587,4602,2.587,4603,1.482,4604,4.124,4605,1.482,4606,1.482,4607,2.587,4608,1.482,4609,1.482,4610,1.482,4611,1.482,4612,1.482,4613,1.482,4614,1.482,4615,1.482,4616,1.482,4617,1.482,4618,1.482,4619,1.482,4620,1.482,4621,1.482,4622,1.482,4623,1.482,4624,1.482,4625,3.443,4626,1.482,4627,1.482,4628,1.482,4629,1.482,4630,1.482,4631,1.482,4632,1.482,4633,1.482,4634,1.482,4635,1.482,4636,1.482,4637,1.482,4638,1.482]],["title/additional-documentation/project-setup-tutorial.html",[531,0.869,2429,1.053,4015,2.11,4016,2.11,4017,2.014]],["body/additional-documentation/project-setup-tutorial.html",[0,0.38,2,0.298,8,0.261,14,2.624,23,1.921,24,0.007,25,1.245,27,1.711,34,1.814,44,1.075,55,1.028,56,2.226,58,1.706,60,0.437,62,2.897,71,1.428,74,1.689,85,3.417,87,0.538,88,0.538,102,2.897,103,1.814,113,0.689,132,0.459,134,1.978,141,1.814,142,1.629,145,0.327,146,0.133,162,1.706,168,3.598,185,2.593,213,1.261,308,0.005,309,0.005,310,1.054,312,1.978,322,1.893,337,5.477,409,1.488,428,2.172,429,3.126,431,2.12,452,2.12,493,5.765,512,3.516,516,2.798,522,3.139,532,2.798,556,2.283,558,2.226,578,6.802,581,4.82,583,5.477,584,6.158,586,5.436,588,5.477,589,4.228,610,3.005,619,2.624,626,3.005,635,2.897,709,6.728,710,4.377,718,4.429,728,2.624,729,2.897,738,4.578,744,3.598,745,3.815,773,3.126,835,2.071,840,4.027,858,2.897,941,2.708,959,2.91,987,3.262,1031,5.515,1079,1.814,1080,4.188,1328,3.225,1531,2.897,1551,2.897,1552,4.676,1577,3.815,1620,3.126,1683,3.598,1684,4.37,1726,4.188,1782,4.088,1847,3.598,1901,4.578,1918,3.417,2098,3.417,2172,3.417,2241,4.578,2244,4.027,2620,5.489,2663,3.417,2728,5.112,2739,4.027,2768,3.417,3023,4.452,3176,5.765,3415,3.417,3994,3.815,3995,4.228,4004,4.452,4015,6.144,4016,3.417,4017,4.928,4175,5.966,4177,4.452,4182,3.598,4208,5.966,4215,4.188,4216,4.088,4233,6.158,4234,3.815,4235,7.187,4236,4.452,4276,4.452,4639,5.006,4640,5.515,4641,4.452,4642,5.006,4643,6.707,4644,6.707,4645,5.006,4646,9.291,4647,5.006,4648,5.006,4649,6.707,4650,5.006,4651,5.006,4652,4.452,4653,6.707,4654,5.006,4655,4.088,4656,5.006,4657,5.006,4658,5.006,4659,5.006,4660,5.006,4661,5.006,4662,5.006,4663,7.564,4664,5.006,4665,5.006,4666,7.564,4667,6.707,4668,5.006,4669,5.006,4670,5.006,4671,5.006,4672,5.006,4673,6.707,4674,5.006,4675,5.006,4676,4.82,4677,5.006,4678,5.006,4679,6.707,4680,4.452,4681,5.006,4682,3.815,4683,5.006,4684,5.006,4685,5.006,4686,5.006,4687,5.006,4688,5.006,4689,5.006,4690,5.006,4691,5.006,4692,5.006]],["title/additional-documentation/project-setup-tutorial/routes.html",[512,2.137,531,1.146,2429,1.389]],["body/additional-documentation/project-setup-tutorial/routes.html",[0,0.469,4,1.426,24,0.007,60,0.328,70,3.01,71,1.407,142,1.706,162,2.393,308,0.006,309,0.006,384,2.6,512,5.007,626,5.309,718,3.377,728,3.682,729,4.064,739,4.216,822,3.377,1459,4.986,1552,4.064,1901,4.793,1979,4.576,1983,4.793,2663,5.668,3411,6.246,3415,4.793,3959,6.246,4017,5.411,4233,5.352,4693,7.023,4694,7.023,4695,7.023,4696,7.023,4697,7.023,4698,7.023,4699,7.387,4700,7.023,4701,7.023]],["title/additional-documentation/project-setup-tutorial/authorization.html",[531,1.146,2429,1.389,4682,3.107]],["body/additional-documentation/project-setup-tutorial/authorization.html",[0,0.36,4,1.706,24,0.007,55,0.874,61,4.002,62,4.143,70,3.045,71,1.213,74,1.803,162,2.44,249,1.708,252,2.089,308,0.006,309,0.006,349,3.539,384,2.65,431,3.032,512,4.821,520,6.402,718,4.039,728,3.753,729,4.143,827,5.473,959,3.106,1552,4.143,1726,4.471,1901,4.887,1979,4.665,2387,5.846,4015,4.887,4016,4.887,4017,5.808,4682,6.402,4702,6.368,4703,6.368,4704,6.368,4705,6.368]],["title/additional-documentation/project-setup-tutorial/custom-fields.html",[41,0.824,171,1.359,531,0.988,2429,1.198]],["body/additional-documentation/project-setup-tutorial/custom-fields.html",[0,0.469,4,1.201,11,2.604,14,2.187,15,1.694,16,4.125,18,3.657,19,1.437,23,1.968,24,0.007,25,1.098,26,1.386,27,1.395,28,2.015,30,1.573,33,0.989,34,1.512,35,1.988,36,3.551,38,1.508,40,3.216,41,2.144,42,3.093,44,0.669,49,2.504,52,2.504,55,1.07,56,2.63,58,1.421,60,0.383,61,3.306,62,2.414,64,0.41,66,0.563,70,1.512,71,0.707,74,1.49,76,1.173,81,2.504,84,2.354,87,0.804,88,0.449,89,2.504,99,2.504,103,2.491,110,2.123,112,2.62,114,2.122,121,1.366,122,3.306,131,3.551,132,0.543,133,3.551,134,1.648,135,3.216,141,1.512,143,2.504,144,2.504,145,0.341,146,0.209,162,1.421,171,3.622,173,2.414,175,3.406,181,2.504,194,1.143,208,0.847,213,1.05,308,0.004,309,0.004,310,0.878,321,3.841,322,1.578,326,2.998,328,3.422,338,4.507,359,1.809,360,1.952,365,1.899,376,2.237,384,1.544,392,2.604,409,1.24,428,2.981,431,1.766,432,4.25,440,2.122,443,2.491,460,2.504,517,2.256,518,2.604,519,2.062,530,2.718,535,1.339,570,1.855,587,1.855,589,3.306,618,2.847,676,2.504,717,1.686,718,3.942,728,2.187,729,2.414,739,2.504,771,2.718,793,3.496,822,2.005,844,2.604,933,4.477,936,3.801,938,2.998,941,2.256,943,3.397,949,2.414,980,2.718,1041,3.853,1079,1.512,1092,2.718,1096,2.414,1106,2.256,1108,2.998,1129,2.998,1132,3.179,1136,3.324,1146,3.551,1268,2.504,1310,3.179,1420,2.847,1507,4.291,1531,3.976,1552,2.414,1564,2.331,1569,4.036,1572,4.829,1573,3.406,1651,2.718,1918,4.036,1981,3.406,1983,4.036,2013,3.71,2021,2.998,2050,3.71,2088,5.26,2145,3.71,2172,4.036,2222,3.406,2242,2.718,2522,3.179,2559,4.507,2637,2.604,2663,2.847,2686,3.71,2785,3.406,2786,3.406,2796,5.673,3052,3.406,3415,5.879,3568,4.036,3705,3.406,4003,3.71,4233,3.179,4234,3.179,4261,3.71,4428,3.71,4501,3.71,4641,3.71,4655,3.406,4676,2.998,4699,3.71,4706,4.171,4707,5.914,4708,4.171,4709,4.171,4710,4.171,4711,4.171,4712,4.171,4713,4.171,4714,4.171,4715,4.171,4716,5.26,4717,4.171,4718,4.171,4719,4.171,4720,4.171,4721,4.171,4722,4.171,4723,4.171,4724,8.198,4725,4.171,4726,4.171,4727,4.171,4728,5.914,4729,4.171,4730,4.171,4731,4.171,4732,4.171,4733,4.171,4734,4.171,4735,4.171,4736,5.914,4737,4.171,4738,3.71,4739,4.171,4740,4.171,4741,3.71,4742,4.171,4743,4.171,4744,4.171,4745,4.171]],["title/additional-documentation/project-setup-tutorial/adding-new-packages.html",[71,0.524,531,0.869,739,1.856,2429,1.053,3995,1.728]],["body/additional-documentation/project-setup-tutorial/adding-new-packages.html",[8,0.333,13,4.242,14,3.347,24,0.006,45,4.708,55,0.779,56,3.487,58,2.892,61,4.744,62,4.911,70,3.208,71,1.438,87,0.913,162,2.176,275,1.564,308,0.006,309,0.006,310,1.344,350,3.987,474,4.383,484,3.99,718,4.612,728,3.347,729,3.694,739,3.833,744,4.588,745,4.866,773,3.987,959,3.402,1076,4.896,1221,3.694,1516,4.588,1544,5.678,1552,3.694,1553,3.569,1569,4.357,1620,3.987,1726,4.896,1901,4.357,1919,5.976,2090,5.352,2098,4.357,2488,5.976,2796,4.588,2886,5.678,2908,5.678,3176,4.866,3707,6.403,3995,5.413,4035,6.746,4041,4.588,4206,5.678,4210,6.974,4214,5.678,4215,5.527,4216,6.93,4218,7.228,4225,5.678,4226,5.678,4238,4.866,4652,5.678,4655,5.213,4680,6.974,4746,6.385,4747,6.385,4748,6.385,4749,6.385,4750,6.385,4751,6.385,4752,6.385,4753,6.385,4754,6.385,4755,6.385]],["title/additional-documentation/project-setup-tutorial/publishing.html",[531,1.146,2429,1.389,4218,3.329]],["body/additional-documentation/project-setup-tutorial/publishing.html",[0,0.36,4,1.706,24,0.007,55,0.874,61,4.002,62,4.143,70,3.045,71,1.213,74,1.803,162,2.44,249,1.708,252,2.089,308,0.006,309,0.006,349,3.539,384,2.65,431,3.032,512,4.821,520,6.402,718,4.039,728,3.753,729,4.143,827,5.473,959,3.106,1552,4.143,1726,4.471,1901,4.887,1979,4.665,2387,5.846,4015,4.887,4016,4.887,4017,5.808,4682,6.402,4702,6.368,4703,6.368,4704,6.368,4705,6.368]],["title/additional-documentation/ui.html",[531,1.146,840,2.448,2429,1.389]],["body/additional-documentation/ui.html",[0,0.484,14,3.693,24,0.006,34,2.553,41,1.95,112,2.383,123,4.076,126,2.784,146,0.187,171,3.216,194,1.172,252,1.651,308,0.006,309,0.006,331,3.894,423,3.584,428,3.055,438,2.306,522,3.297,556,3.212,619,3.693,710,4.076,826,3.212,840,5.604,1106,3.81,1129,5.062,1256,5.062,1472,4.398,2533,6.265,2739,4.228,3415,4.807,3568,4.807,3639,5.368,3705,5.751,3971,6.265,3995,3.937,4215,4.398,4281,5.368,4583,6.265,4640,4.807,4738,6.265,4756,7.044,4757,7.044,4758,6.265,4759,7.044,4760,7.044,4761,7.044,4762,7.044,4763,6.265]],["title/additional-documentation/ui/icons.html",[531,1.146,1504,2.656,2429,1.389]],["body/additional-documentation/ui/icons.html",[24,0.007,27,1.426,55,1.079,60,0.388,74,2.092,75,1.617,113,0.967,121,2.3,145,0.359,146,0.22,308,0.006,309,0.006,349,4.106,530,4.576,585,5.352,1079,2.545,1221,4.064,1451,6.036,1472,4.385,1504,6.382,1878,6.33,1882,5.955,1888,6.246,1889,5.734,1890,6.33,1891,7.387,1892,7.387,1893,6.246,1894,6.246]],["title/additional-documentation/ui/notificationscomponent.html",[263,0.973,531,1.146,2429,1.389]],["body/additional-documentation/ui/notificationscomponent.html",[0,0.367,4,1.157,7,2.155,15,2.091,24,0.007,25,1.058,27,1.157,33,0.754,39,1.806,55,1.037,56,2.534,64,0.793,71,0.966,72,1.694,75,1.681,76,0.815,88,0.613,113,0.784,140,4.343,145,0.348,146,0.233,263,1.36,306,1.993,308,0.005,309,0.005,310,1.2,340,1.266,394,3.72,427,2.899,430,2.023,440,4.709,452,2.413,465,2.203,474,3.186,515,3.828,516,4.082,519,3.61,522,4.546,523,4.086,535,2.345,537,6.141,587,2.534,615,1.83,635,4.663,664,3.421,676,3.421,708,4.096,739,3.421,821,4.56,834,3.298,858,3.298,907,4.757,908,5.791,910,3.89,912,4.56,918,1.727,940,4.343,959,2.472,1079,2.066,1221,3.298,1350,3.559,1434,2.599,1503,3.421,1548,3.186,1558,4.224,1611,4.757,1798,4.56,1846,3.61,1867,4.343,1887,4.653,2086,5.248,2147,4.343,2244,4.384,2385,4.384,2457,4.653,2663,3.89,2739,3.421,2766,5.069,2767,5.069,2768,3.89,2769,6.494,2770,5.069,2771,7.167,2772,6.579,2773,5.962,2774,4.653,2775,5.069,2776,5.069,2777,5.069,2778,4.653,2779,5.069,2780,5.069,2781,5.069,2782,5.069,2783,5.069,2784,4.096,2785,4.653,2786,4.653,2787,5.069,2788,5.069,2789,6.494,2790,5.069,2791,5.069,2792,6.494,2793,5.069,2794,5.069,2795,5.069,2796,4.096,2797,4.096,2798,5.069]],["title/additional-documentation/ui/loadercomponent.html",[240,0.922,531,1.146,2429,1.389]],["body/additional-documentation/ui/loadercomponent.html",[4,1.586,24,0.007,55,1.107,59,5.33,60,0.296,74,1.967,75,1.46,113,0.873,116,2.954,118,2.82,130,3.431,135,2.968,145,0.274,146,0.207,170,4.833,184,1.265,240,1.913,308,0.006,309,0.006,319,2.118,359,3.671,373,1.541,384,2.348,413,4.132,427,3.227,444,3.135,452,2.686,460,3.807,484,3.227,514,3.807,531,1.783,535,2.036,587,2.82,610,3.807,826,4.412,833,4.63,938,4.558,943,3.135,957,3.755,958,3.807,1273,4.329,1503,3.807,1545,4.132,1548,4.365,1558,3.325,1576,4.558,1597,4.558,1798,4.876,1812,6.91,1846,3.135,2076,4.329,2226,5.613,2228,6.377,2240,3.96,2241,6.027,2242,5.513,2243,5.641,2244,3.807,2245,5.641,2246,5.641,2247,6.946,2248,5.641,2249,7.526,2250,5.641,2251,6.946,2252,7.526,2253,7.526,2254,5.641,2255,5.641,2256,5.179,2257,5.641,2258,5.641,2259,5.641,2260,5.641,2261,5.641,2262,5.641]],["title/additional-documentation/ui/listcomponent.html",[235,1.008,531,1.146,2429,1.389]],["body/additional-documentation/ui/listcomponent.html",[0,0.337,4,1.362,24,0.007,25,1.5,38,1.295,41,1.572,42,2.774,59,4.578,70,2.431,71,1.369,72,1.994,87,0.991,88,0.721,194,1.532,308,0.006,309,0.006,386,2.982,409,1.994,430,2.381,474,3.749,610,4.027,615,2.154,712,3.516,922,3.881,936,3.762,1079,3.143,1256,4.82,1286,5.807,1328,3.225,1434,3.059,1531,4.676,1549,4.578,2090,4.578,2091,5.965,2092,5.477,2093,5.477,2094,5.477,2095,7.522,2096,7.522,2097,5.477,2098,4.578,2099,5.477,2100,5.477,2101,5.965,2102,6.158,2103,5.965,2104,6.598,2105,5.965]],["title/additional-documentation/ui/formcomponent.html",[227,1.027,531,1.146,2429,1.389]],["body/additional-documentation/ui/formcomponent.html",[24,0.006,112,2.209,308,0.006,309,0.006,4763,6.861]],["title/additional-documentation/ui/logincomponent.html",[249,0.973,531,1.146,2429,1.389]],["body/additional-documentation/ui/logincomponent.html",[0,0.437,18,3.299,24,0.006,112,2.491,126,3.005,252,2.038,308,0.006,309,0.006,331,3.559,840,4.565,2394,6.209]],["title/additional-documentation/ui/popcomponent.html",[271,1.008,531,1.146,2429,1.389]],["body/additional-documentation/ui/popcomponent.html",[24,0.006,113,1.027,146,0.198,308,0.006,309,0.006,423,4.741,431,3.16,531,2.097,959,3.237,1521,5.687,1523,6.093,1551,4.318,1558,3.912,1840,5.093,1879,4.659,2244,4.48,2620,4.861,2739,4.48,3050,6.636,3051,6.636,3052,6.093,3053,6.636,3054,6.636]],["title/additional-documentation/ui/tabscomponent.html",[283,1.027,531,1.146,2429,1.389]],["body/additional-documentation/ui/tabscomponent.html",[4,1.549,24,0.006,55,0.931,167,3.309,305,1.992,308,0.006,309,0.006,461,5.814,1146,4.58,3639,6.972]],["title/additional-documentation/ui/selectcomponent.html",[280,1.027,531,1.146,2429,1.389]],["body/additional-documentation/ui/selectcomponent.html",[24,0.007,38,1.219,43,1.986,55,0.928,72,2.261,308,0.006,309,0.006,438,2.848,615,2.442,717,3.074,1846,3.759,3509,6.763]],["title/additional-documentation/data.html",[531,1.146,1328,1.96,2429,1.389]],["body/additional-documentation/data.html",[0,0.378,24,0.006,41,1.762,74,1.894,112,2.154,171,2.907,194,1.251,208,1.847,308,0.006,309,0.006,342,2.784,438,2.463,822,3.616,959,3.262,1328,3.616,1420,5.133,4040,6.689,4041,5.405,4281,5.732]],["title/additional-documentation/medium.html",[254,1.065,531,1.146,2429,1.389]],["body/additional-documentation/medium.html",[11,4.566,13,5.008,14,3.834,24,0.007,55,0.893,60,0.397,145,0.316,146,0.194,184,1.459,254,1.91,308,0.006,309,0.006,310,1.539,322,2.766,718,3.516,941,3.956,2525,6.112,3995,4.754,4179,7.999,4215,4.566,4640,6.138,4676,5.256]],["title/additional-documentation/tinymce.html",[531,1.146,2429,1.389,3698,2.93]],["body/additional-documentation/tinymce.html",[0,0.369,11,4.588,13,3.974,14,3.852,24,0.007,55,0.897,60,0.398,145,0.317,146,0.195,308,0.006,309,0.006,310,1.546,322,2.779,718,3.532,941,3.974,3698,5.28,3757,6.129,3995,4.767,4180,8.014,4215,4.588,4640,6.15,4676,5.28]],["title/additional-documentation/ace.html",[12,2.783,531,1.146,2429,1.389]],["body/additional-documentation/ace.html",[0,0.358,11,4.444,12,6.069,13,3.85,14,3.731,24,0.007,55,1.022,60,0.443,136,6.33,145,0.308,146,0.188,308,0.006,309,0.006,310,1.498,311,6.016,322,2.692,718,4.276,941,3.85,1889,5.811,1919,5.424,1981,5.811,2796,5.115,3707,5.811,3995,4.679,4182,5.115,4215,4.444,4640,6.069,4676,5.115,4764,8.893,4765,8.371,4766,7.117,4767,7.117,4768,7.117]],["title/additional-documentation/core-classes.html",[146,0.093,531,0.988,619,1.843,2429,1.198]],["body/additional-documentation/core-classes.html",[0,0.363,14,3.788,24,0.006,55,0.882,146,0.224,308,0.006,309,0.006,380,2.513,428,3.134,469,4.038,487,3.571,519,3.571,527,4.038,589,4.038,619,4.691,710,4.181,773,4.511,806,5.506,815,5.192,943,3.571,1575,5.506,1726,4.511,2172,4.931,2739,5.372,2797,5.192,3562,5.192,3568,4.931,3995,4.038,4017,5.502,4041,5.192,4188,6.426,4215,4.511,4234,5.506,4238,5.506,4640,4.931,4758,6.426,4769,7.225,4770,7.225,4771,7.225,4772,7.225,4773,7.225]],["title/additional-documentation/core-classes/field.html",[41,0.955,531,1.146,2429,1.389]],["body/additional-documentation/core-classes/field.html",[0,0.325,7,2.988,24,0.007,33,0.855,34,2.342,38,1.52,41,2.174,42,3.53,43,1.688,44,1.425,55,1.085,56,2.873,71,1.095,76,0.925,87,0.695,112,1.851,118,3.952,142,1.919,194,1.419,308,0.006,309,0.006,365,2.075,384,2.392,430,3.029,431,2.737,443,2.342,587,2.873,858,4.571,895,5.277,943,3.195,1079,2.863,1106,4.615,1125,4.644,1129,4.644,1434,2.947,1500,3.739,1545,4.21,1546,5.277,1547,4.925,1548,4.416,1549,4.411,1550,5.747,1551,4.571,1552,3.739,1553,3.612,1554,5.277,1555,5.747,1556,5.747,1557,5.277,1558,3.388,1559,5.747,1560,5.277,1561,5.277,1562,6.021,1563,6.451,1564,3.612,1565,5.747,1566,6.021,1567,5.747,1568,5.747,1569,4.411,1570,5.747,1571,5.747,1572,5.277,1573,5.277,1574,5.747,1575,4.925,1576,4.644,1577,4.925,1578,4.21]],["title/additional-documentation/core-classes/item.html",[43,1.065,531,1.146,2429,1.389]],["body/additional-documentation/core-classes/item.html",[24,0.007,38,1.468,41,2.046,42,2.539,43,2.473,55,1.066,71,1.522,74,1.927,85,4.189,87,0.897,118,2.729,142,2.182,146,0.163,165,3.218,308,0.005,309,0.005,384,3.087,392,3.833,394,3.241,430,2.717,443,3.023,570,2.729,587,3.708,728,3.218,936,3.617,957,2.951,959,3.32,1079,2.225,1106,3.32,1223,5.459,1551,5.052,1560,5.012,1561,5.012,1562,5.833,1563,6.249,1564,3.431,1566,6.654,1569,4.189,1575,4.678,1587,3.685,1610,4.14,1692,4.986,1846,3.034,2038,5.459,2041,5.012,2043,5.012,2049,5.5,2911,4.678,4741,5.459,4774,6.138,4775,6.138,4776,6.138,4777,6.138,4778,6.138,4779,6.138,4780,7.99,4781,6.138,4782,6.138,4783,6.138,4784,6.138,4785,6.138,4786,6.138,4787,6.138,4788,6.138,4789,6.138,4790,6.138,4791,6.138,4792,6.138,4793,7.653,4794,7.653,4795,6.138,4796,6.138,4797,6.138,4798,6.138,4799,6.138,4800,6.138,4801,6.138,4802,6.138,4803,6.138,4804,6.138]],["title/additional-documentation/core-classes/form.html",[112,1.168,531,1.146,2429,1.389]],["body/additional-documentation/core-classes/form.html",[24,0.007,33,0.956,38,1.158,41,2.097,43,1.887,45,5.07,71,1.431,87,0.908,112,2.563,142,2.051,308,0.006,309,0.006,426,5.899,443,3.061,570,3.212,798,5.899,943,3.571,1566,6.436,1600,4.511,2020,5.899,2021,5.192,3098,5.899,4780,7.959,4805,6.426,4806,8.445,4807,7.225,4808,7.225]],["title/additional-documentation/core-classes/collection.html",[531,1.146,712,2.137,2429,1.389]],["body/additional-documentation/core-classes/collection.html",[24,0.006,25,1.677,71,1.253,142,1.796,146,0.196,194,1.23,308,0.006,309,0.006,409,2.198,438,2.421,481,3.46,589,4.132,615,2.374,712,4.736,714,6.036,727,6.575,728,3.875,729,4.278,763,6.575,764,6.575,765,6.575,766,6.575,767,6.575,768,6.575,769,6.575,770,6.575,771,4.816]],["title/additional-documentation/core-classes/pagination.html",[531,1.146,2192,2.359,2429,1.389]],["body/additional-documentation/core-classes/pagination.html",[7,2.8,24,0.007,43,2.237,55,0.904,71,1.255,142,1.799,308,0.006,309,0.006,531,2.081,1221,4.284,1531,4.284,1537,5.053,1558,3.881,1832,5.643,1922,4.623,2021,5.321,2192,5.536,2559,5.643,2911,5.643,2912,6.585,2913,6.585,2914,6.585,2915,6.585]],["title/additional-documentation/core-classes/list.html",[194,0.678,531,1.146,2429,1.389]],["body/additional-documentation/core-classes/list.html",[4,1.285,7,2.392,14,3.316,24,0.007,25,1.682,33,0.837,35,1.331,38,1.414,41,1.981,42,3.225,43,2.036,44,1.014,55,0.772,65,1.38,71,1.072,72,1.881,74,1.593,87,1.006,186,3.225,194,1.535,308,0.006,309,0.006,328,4.512,360,2.961,365,2.031,373,1.537,376,2.392,409,1.881,443,2.293,519,3.127,615,2.031,712,3.316,729,3.66,936,3.382,957,3.749,968,2.885,1136,3.758,1507,3.95,1531,4.891,1545,4.121,1564,3.536,1610,4.217,1922,3.95,2093,5.165,2094,5.165,2095,7.399,2096,7.204,2097,5.165,2098,4.317,2099,5.165,2100,5.165,2102,5.942,2104,6.366,2192,3.66,2244,3.797,2739,3.797,2743,4.546,2784,5.603,3948,5.626,4050,4.821,4716,6.934,4805,6.934,4809,6.325,4810,7.797,4811,6.325,4812,6.325,4813,6.325,4814,6.325,4815,6.325,4816,6.325,4817,6.325,4818,6.325,4819,6.325,4820,6.325]],["title/additional-documentation/core-classes/selection.html",[438,1.335,531,1.146,2429,1.389]],["body/additional-documentation/core-classes/selection.html",[24,0.006,32,0.842,43,1.958,44,1.383,88,0.806,186,3.101,194,1.247,308,0.006,309,0.006,438,3.106,616,5.714,731,4.681,1418,5.117,1451,5.117,1545,4.884,1610,4.055,2784,5.388,4821,7.497]],["title/additional-documentation/core-classes/sorter.html",[531,1.146,2429,1.389,3548,2.93]],["body/additional-documentation/core-classes/sorter.html",[7,2.862,24,0.006,64,0.745,146,0.2,308,0.006,309,0.006,587,3.365,858,4.379,1067,6.18,1282,6.18,1358,5.768,1558,3.968,1564,4.23,2049,5.439,3548,6.234,3562,5.439]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["0",{"_index":481,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/collection.html":{}}}],["0.0.1",{"_index":4047,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":4043,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.1.0",{"_index":4036,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":4034,"title":{},"body":{"changelog.html":{}}}],["0.10.0",{"_index":3976,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.12.0",{"_index":3975,"title":{},"body":{"changelog.html":{}}}],["0.13.0",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["0.14.0",{"_index":3947,"title":{},"body":{"changelog.html":{}}}],["0.15.0",{"_index":3946,"title":{},"body":{"changelog.html":{}}}],["0.16.1",{"_index":4196,"title":{},"body":{"dependencies.html":{}}}],["0.17.0",{"_index":3943,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":4031,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.21.0",{"_index":4178,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":4028,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.3.1",{"_index":4024,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":4018,"title":{},"body":{"changelog.html":{}}}],["0.4.1",{"_index":4012,"title":{},"body":{"changelog.html":{}}}],["0.5.0",{"_index":4011,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":4008,"title":{},"body":{"changelog.html":{}}}],["0.5.2",{"_index":4005,"title":{},"body":{"changelog.html":{}}}],["0.5.3",{"_index":4001,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":3996,"title":{},"body":{"changelog.html":{}}}],["0.7.0",{"_index":3990,"title":{},"body":{"changelog.html":{}}}],["0.7.1",{"_index":4032,"title":{},"body":{"changelog.html":{}}}],["0.8.0",{"_index":3983,"title":{},"body":{"changelog.html":{}}}],["0.8.1",{"_index":3982,"title":{},"body":{"changelog.html":{}}}],["0.8.2",{"_index":3981,"title":{},"body":{"changelog.html":{}}}],["0.8.20",{"_index":4195,"title":{},"body":{"dependencies.html":{}}}],["0.8.5",{"_index":4019,"title":{},"body":{"changelog.html":{}}}],["0.8.6",{"_index":4010,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":3978,"title":{},"body":{"changelog.html":{}}}],["00b0ff",{"_index":4563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00dbf0",{"_index":2554,"title":{},"body":{"components/MenuComponent.html":{}}}],["05",{"_index":4044,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":4038,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":162,"title":{},"body":{"components/AceComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["1.0.0",{"_index":4186,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["1.2.9",{"_index":4183,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":4644,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["1/1",{"_index":4054,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1531,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["10/10",{"_index":4062,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":4167,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":2920,"title":{},"body":{"classes/Pagination.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["10004",{"_index":1266,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["101",{"_index":3954,"title":{},"body":{"changelog.html":{}}}],["10m",{"_index":2104,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["11",{"_index":4045,"title":{},"body":{"changelog.html":{}}}],["11/11",{"_index":4087,"title":{},"body":{"coverage.html":{}}}],["11/12",{"_index":4120,"title":{},"body":{"coverage.html":{}}}],["11/13",{"_index":4076,"title":{},"body":{"coverage.html":{}}}],["12/12",{"_index":4105,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":4109,"title":{},"body":{"coverage.html":{}}}],["12/15",{"_index":4137,"title":{},"body":{"coverage.html":{}}}],["12/18",{"_index":4090,"title":{},"body":{"coverage.html":{}}}],["13/16",{"_index":4141,"title":{},"body":{"coverage.html":{}}}],["13/18",{"_index":4134,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":4285,"title":{},"body":{"overview.html":{}}}],["14/14",{"_index":4055,"title":{},"body":{"coverage.html":{}}}],["14/17",{"_index":4158,"title":{},"body":{"coverage.html":{}}}],["15/15",{"_index":4066,"title":{},"body":{"coverage.html":{}}}],["15/16",{"_index":4106,"title":{},"body":{"coverage.html":{}}}],["15/17",{"_index":4130,"title":{},"body":{"coverage.html":{}}}],["15/19",{"_index":4086,"title":{},"body":{"coverage.html":{}}}],["15/20",{"_index":4121,"title":{},"body":{"coverage.html":{}}}],["15/21",{"_index":4097,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":4286,"title":{},"body":{"overview.html":{}}}],["16/20",{"_index":4117,"title":{},"body":{"coverage.html":{}}}],["17/17",{"_index":4163,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":4284,"title":{},"body":{"overview.html":{}}}],["19/21",{"_index":4053,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":728,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/collection.html":{}}}],["2.0.1",{"_index":4187,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":4648,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["2.5.3",{"_index":4185,"title":{},"body":{"dependencies.html":{}}}],["2.html",{"_index":4740,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["2/2",{"_index":4118,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":4159,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2100,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["20/20",{"_index":4166,"title":{},"body":{"coverage.html":{}}}],["20/27",{"_index":4165,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1927,"title":{},"body":{"directives/ImageDirective.html":{},"components/TinymceComponent.html":{}}}],["2000",{"_index":2253,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["2017",{"_index":4037,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":4282,"title":{},"body":{"overview.html":{}}}],["21/23",{"_index":4065,"title":{},"body":{"coverage.html":{}}}],["22/22",{"_index":4069,"title":{},"body":{"coverage.html":{}}}],["22/23",{"_index":4059,"title":{},"body":{"coverage.html":{}}}],["22/33",{"_index":4150,"title":{},"body":{"coverage.html":{}}}],["23",{"_index":4039,"title":{},"body":{"changelog.html":{}}}],["23/26",{"_index":4100,"title":{},"body":{"coverage.html":{}}}],["23/35",{"_index":4147,"title":{},"body":{"coverage.html":{}}}],["24/26",{"_index":4125,"title":{},"body":{"coverage.html":{}}}],["2460",{"_index":4299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":2880,"title":{},"body":{"classes/Pagination.html":{}}}],["25/27",{"_index":4101,"title":{},"body":{"coverage.html":{}}}],["26/28",{"_index":4061,"title":{},"body":{"coverage.html":{}}}],["26/41",{"_index":4149,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":3074,"title":{},"body":{"injectables/PopService.html":{}}}],["27.05.17",{"_index":2631,"title":{},"body":{"components/MockupComponent.html":{}}}],["27/28",{"_index":4153,"title":{},"body":{"coverage.html":{}}}],["29/32",{"_index":4123,"title":{},"body":{"coverage.html":{}}}],["29a9e1",{"_index":2553,"title":{},"body":{"components/MenuComponent.html":{}}}],["3",{"_index":729,"title":{},"body":{"classes/Collection.html":{},"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["3.0.0.min.css",{"_index":4553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3/3",{"_index":4056,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":4074,"title":{},"body":{"coverage.html":{}}}],["30/41",{"_index":4108,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":4548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35/35",{"_index":4068,"title":{},"body":{"coverage.html":{}}}],["35/36",{"_index":4096,"title":{},"body":{"coverage.html":{}}}],["35/38",{"_index":4122,"title":{},"body":{"coverage.html":{}}}],["36/36",{"_index":4058,"title":{},"body":{"coverage.html":{}}}],["37474f",{"_index":4560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38/46",{"_index":4104,"title":{},"body":{"coverage.html":{}}}],["39/49",{"_index":4127,"title":{},"body":{"coverage.html":{}}}],["39;muffin",{"_index":2673,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["4",{"_index":4655,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["4.3.6",{"_index":4646,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["4.7.6",{"_index":4190,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":4072,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":4157,"title":{},"body":{"coverage.html":{}}}],["40/40",{"_index":4071,"title":{},"body":{"coverage.html":{}}}],["40/43",{"_index":4124,"title":{},"body":{"coverage.html":{}}}],["40/52",{"_index":4144,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1220,"title":{},"body":{"interfaces/Day.html":{}}}],["45",{"_index":3966,"title":{},"body":{"changelog.html":{}}}],["48.8093253",{"_index":2294,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["4[0",{"_index":3117,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["4a5ea9",{"_index":2555,"title":{},"body":{"components/MenuComponent.html":{}}}],["5",{"_index":1569,"title":{},"body":{"classes/Field.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["5.0.0",{"_index":1753,"title":{},"body":{"injectables/FormService.html":{}}}],["5.2.2",{"_index":4176,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":4189,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":4088,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":4132,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":4094,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":4092,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2559,"title":{},"body":{"components/MenuComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["500",{"_index":2566,"title":{},"body":{"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":2845,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["54",{"_index":4128,"title":{},"body":{"coverage.html":{}}}],["56",{"_index":4283,"title":{},"body":{"overview.html":{}}}],["5identifi",{"_index":4791,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["5see",{"_index":2914,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["5the",{"_index":1571,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["6",{"_index":744,"title":{},"body":{"classes/Collection.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["6/10",{"_index":4082,"title":{},"body":{"coverage.html":{}}}],["6/11",{"_index":4129,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":4113,"title":{},"body":{"coverage.html":{}}}],["6/62",{"_index":4173,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":4136,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":4081,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":4091,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":4114,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":4146,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":4089,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":745,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["7/11",{"_index":4115,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":4133,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":4111,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":4161,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":4093,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":4083,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":4107,"title":{},"body":{"coverage.html":{}}}],["74",{"_index":4164,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":4073,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":4143,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":4160,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":4085,"title":{},"body":{"coverage.html":{}}}],["79",{"_index":4126,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2098,"title":{},"body":{"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["8.0.0",{"_index":4192,"title":{},"body":{"dependencies.html":{}}}],["8/10",{"_index":4119,"title":{},"body":{"coverage.html":{}}}],["8/11",{"_index":4084,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":4162,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":4112,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":4116,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":4550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81",{"_index":4140,"title":{},"body":{"coverage.html":{}}}],["82",{"_index":4103,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":4131,"title":{},"body":{"coverage.html":{}}}],["83cc6374",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["84",{"_index":4075,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":4135,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":4110,"title":{},"body":{"coverage.html":{}}}],["879195",{"_index":4561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88",{"_index":4099,"title":{},"body":{"coverage.html":{}}}],["89",{"_index":3950,"title":{},"body":{"changelog.html":{}}}],["89ab][0",{"_index":3119,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["9",{"_index":1620,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["9.159388100000001",{"_index":2295,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["9/9",{"_index":4151,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":4052,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":4064,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":3952,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["93",{"_index":3953,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["95",{"_index":3962,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["96",{"_index":3964,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["97",{"_index":4095,"title":{},"body":{"coverage.html":{}}}],["98",{"_index":3960,"title":{},"body":{"changelog.html":{}}}],["9]+))?.+v=)?([a",{"_index":4610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]+\\.)+[a",{"_index":4627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{1,3}\\.[0",{"_index":4625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{1,3}])|(([a",{"_index":4626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9_",{"_index":4611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9a",{"_index":2725,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["_",{"_index":114,"title":{},"body":{"components/AceComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["_]{22",{"_index":3121,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["_]{22}$/.test(asset.assetid",{"_index":1621,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["_]{7,14",{"_index":2727,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["_api",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["_api.login(email",{"_index":654,"title":{},"body":{"injectables/AuthService.html":{}}}],["_api.resetpassword(email",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{}}}],["_creat",{"_index":2686,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["_creator",{"_index":2693,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_entri",{"_index":1008,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["_entrytitl",{"_index":2714,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_item",{"_index":3577,"title":{},"body":{"classes/Sorter.html":{}}}],["_item.id",{"_index":1387,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["_items.indexof(item",{"_index":3578,"title":{},"body":{"classes/Sorter.html":{}}}],["_method",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{}}}],["_methods.filter(x",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["_modifi",{"_index":2691,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_moment",{"_index":1232,"title":{},"body":{"interfaces/Day.html":{}}}],["_resourc",{"_index":3366,"title":{},"body":{"injectables/ResourceService.html":{}}}],["_toggl",{"_index":3057,"title":{},"body":{"components/PopComponent.html":{}}}],["_upload",{"_index":3906,"title":{},"body":{"components/UploadComponent.html":{}}}],["a'default",{"_index":4779,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["a.then(r",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{}}}],["abov",{"_index":1572,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{}}}],["absatz",{"_index":4579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstract",{"_index":806,"title":{},"body":{"classes/Config.html":{},"interfaces/ItemConfig.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes.html":{}}}],["abstractcontrol",{"_index":1744,"title":{},"body":{"injectables/FormService.html":{}}}],["ac",{"_index":12,"title":{"additional-documentation/ace.html":{}},"body":{"components/AceComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/ace.html":{}}}],["acc:edit",{"_index":3154,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["acc:list",{"_index":3153,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["accept",{"_index":2858,"title":{},"body":{"injectables/NotificationsService.html":{},"changelog.html":{}}}],["access",{"_index":1983,"title":{},"body":{"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/Symbol.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["access=publ",{"_index":4224,"title":{},"body":{"index.html":{}}}],["access=publicse",{"_index":4754,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["accessor",{"_index":3104,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{}}}],["accord",{"_index":2908,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["account",{"_index":333,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{}}}],["account_not_found",{"_index":4300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accountid",{"_index":3152,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["accountresourc",{"_index":638,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/SdkService.html":{}}}],["accounts(environment.environ",{"_index":3447,"title":{},"body":{"injectables/SdkService.html":{}}}],["ace'},{'nam",{"_index":190,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ace.compon",{"_index":323,"title":{},"body":{"modules/AceModule.html":{}}}],["ace.component.html",{"_index":31,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.component.scss",{"_index":29,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.edit(this.container.nativeel",{"_index":153,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/mod",{"_index":95,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/them",{"_index":98,"title":{},"body":{"components/AceComponent.html":{}}}],["acecompon",{"_index":1,"title":{"components/AceComponent.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acemodul",{"_index":311,"title":{"modules/AceModule.html":{}},"body":{"modules/AceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/ace.html":{}}}],["act",{"_index":1282,"title":{},"body":{"directives/DropzoneDirective.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["action",{"_index":958,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["activ",{"_index":444,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"injectables/HistoryService.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/TabComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["activatedrout",{"_index":837,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{}}}],["active/vis",{"_index":3961,"title":{},"body":{"changelog.html":{}}}],["activi",{"_index":2261,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["actual",{"_index":2190,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["actual_compon",{"_index":307,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ad",{"_index":739,"title":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}},"body":{"classes/Collection.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["add",{"_index":718,"title":{},"body":{"classes/Collection.html":{},"injectables/FormService.html":{},"components/LoaderComponent.html":{},"classes/ResourceForm.html":{},"components/TabComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["add(item",{"_index":735,"title":{},"body":{"classes/Collection.html":{}}}],["addal",{"_index":719,"title":{},"body":{"classes/Collection.html":{}}}],["addall(item",{"_index":741,"title":{},"body":{"classes/Collection.html":{}}}],["addfield",{"_index":1727,"title":{},"body":{"injectables/FormService.html":{}}}],["addfield(field",{"_index":1731,"title":{},"body":{"injectables/FormService.html":{}}}],["addit",{"_index":2429,"title":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}},"body":{"components/LoginFormComponent.html":{},"changelog.html":{}}}],["addregist",{"_index":3237,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["address",{"_index":1781,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{}}}],["addsystempropertiestofieldconfig",{"_index":2643,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["addsystempropertiestofieldconfig(config",{"_index":2650,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["addunregist",{"_index":3239,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["adhes",{"_index":4516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":337,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["adminentryinputcompon",{"_index":191,"title":{"components/AdminEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminservic",{"_index":3985,"title":{},"body":{"changelog.html":{}}}],["adress",{"_index":2434,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{}}}],["advanc",{"_index":2779,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["advantag",{"_index":2257,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["aftercontentinit",{"_index":3660,"title":{},"body":{"components/TabsComponent.html":{}}}],["afterviewinit",{"_index":2368,"title":{},"body":{"components/LocationSearchComponent.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{}}}],["agm/cor",{"_index":1788,"title":{},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"dependencies.html":{}}}],["agmcoremodul",{"_index":2322,"title":{},"body":{"modules/LocationModule.html":{}}}],["agmcoremodule.forroot",{"_index":2327,"title":{},"body":{"modules/LocationModule.html":{}}}],["agnost",{"_index":4759,"title":{},"body":{"additional-documentation/ui.html":{}}}],["aizasyadgeue1yxo1f",{"_index":2329,"title":{},"body":{"modules/LocationModule.html":{}}}],["al",{"_index":4716,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["alarm",{"_index":4311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert",{"_index":4394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["algorithm",{"_index":3559,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.resolv",{"_index":3584,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.sort(properti",{"_index":3586,"title":{},"body":{"classes/Sorter.html":{}}}],["align",{"_index":4313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aligncent",{"_index":4590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alignjustifi",{"_index":4592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alignleft",{"_index":4588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alignright",{"_index":4591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"changelog.html":{},"additional-documentation/core-classes/selection.html":{}}}],["along",{"_index":4677,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["alreadi",{"_index":2839,"title":{},"body":{"injectables/NotificationsService.html":{},"classes/Pagination.html":{}}}],["alt",{"_index":4447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alter(valu",{"_index":1243,"title":{},"body":{"interfaces/Day.html":{}}}],["altern",{"_index":2256,"title":{},"body":{"components/LoaderComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["alway",{"_index":932,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"index.html":{}}}],["alwaysloadentri",{"_index":923,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["alwaysshowhead",{"_index":2136,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["amaz",{"_index":4713,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["amazement_factor",{"_index":4712,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["amount",{"_index":483,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Notification.html":{},"components/PopComponent.html":{}}}],["android",{"_index":4489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angezeigt",{"_index":542,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["angl",{"_index":4317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":14,"title":{},"body":{"components/AceComponent.html":{},"injectables/FormService.html":{},"components/MenuComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/list.html":{}}}],["angular+datamanag",{"_index":4202,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":4645,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/cli",{"_index":4643,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/clith",{"_index":4642,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/common",{"_index":558,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/compil",{"_index":4175,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/cor",{"_index":132,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["angular/core/src/metadata/lifecycle_hook",{"_index":2205,"title":{},"body":{"components/ListItemsComponent.html":{},"components/PaginationComponent.html":{}}}],["angular/form",{"_index":134,"title":{},"body":{"components/AceComponent.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultInputComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/ResourceModule.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["angular/http",{"_index":4177,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/languag",{"_index":4647,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/platform",{"_index":1684,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"modules/VcModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/rout",{"_index":532,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["anoth",{"_index":530,"title":{},"body":{"injectables/AuthGuard.html":{},"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoginComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{}}}],["antwort",{"_index":4586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anweisungen",{"_index":3031,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["anywher",{"_index":1523,"title":{},"body":{"classes/Field.html":{},"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["aot",{"_index":4025,"title":{},"body":{"changelog.html":{}}}],["api",{"_index":331,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["api(api",{"_index":3438,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.asset(this.assetid",{"_index":416,"title":{},"body":{"directives/AssetDirective.html":{}}}],["api.checkpermission(permiss",{"_index":668,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.create(rel",{"_index":3370,"title":{},"body":{"injectables/ResourceService.html":{}}}],["api.createdmassets(assetgroupid",{"_index":1627,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["api.getschema(model",{"_index":3461,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.logout",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.me().then((account",{"_index":662,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["api.resourcelist",{"_index":1432,"title":{},"body":{"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["api.signup",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{}}}],["apikey",{"_index":2328,"title":{},"body":{"modules/LocationModule.html":{}}}],["apiresolv",{"_index":3390,"title":{},"body":{"injectables/SdkService.html":{}}}],["app",{"_index":2768,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/ResourceConfig.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["app.compon",{"_index":4692,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["app.modul",{"_index":4766,"title":{},"body":{"additional-documentation/ace.html":{}}}],["app::delet",{"_index":3179,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["app::edit",{"_index":3180,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["appcompon",{"_index":4673,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["appear",{"_index":1521,"title":{},"body":{"classes/Field.html":{},"components/PopComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["append",{"_index":1350,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["appid",{"_index":3178,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["appl",{"_index":4490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appletre",{"_index":2094,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["appli",{"_index":2163,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["applic",{"_index":3705,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{}}}],["applicationref",{"_index":3703,"title":{},"body":{"components/TinymceComponent.html":{}}}],["applyfilt",{"_index":2155,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["applyfilter(properti",{"_index":2161,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["appmodul",{"_index":4676,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["appoint",{"_index":4523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodul",{"_index":4674,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["arbitrari",{"_index":2911,"title":{},"body":{"classes/Pagination.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["area",{"_index":3039,"title":{},"body":{"components/PopComponent.html":{},"miscellaneous/variables.html":{}}}],["argument",{"_index":1286,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/ListComponent.html":{},"components/SelectComponent.html":{},"components/ToolbarComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["around",{"_index":2962,"title":{},"body":{"components/PaginationComponent.html":{}}}],["arrang",{"_index":4318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["array(42",{"_index":1203,"title":{},"body":{"interfaces/Day.html":{}}}],["array(math.ceil(this.tot",{"_index":2930,"title":{},"body":{"classes/Pagination.html":{}}}],["array.from(new",{"_index":2917,"title":{},"body":{"classes/Pagination.html":{}}}],["array.isarray(asset",{"_index":1615,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["array.isarray(pattern",{"_index":1116,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["array.isarray(valu",{"_index":3522,"title":{},"body":{"components/SelectComponent.html":{}}}],["array.slice(start",{"_index":2487,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["arrow",{"_index":4319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artboard",{"_index":4321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["articl",{"_index":4527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifact",{"_index":4241,"title":{},"body":{"index.html":{}}}],["asc",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["ask",{"_index":2838,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["asobserv",{"_index":3737,"title":{},"body":{"components/TinymceComponent.html":{}}}],["asset",{"_index":193,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["asset.getfilevariant(this.s",{"_index":1951,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimagethumburl(this.s",{"_index":1953,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimageurl(200",{"_index":3191,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.getimageurl(this.s",{"_index":1954,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.id",{"_index":1949,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.length",{"_index":1616,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["asset.thumbnail",{"_index":3212,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.thumbnails.length",{"_index":3213,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.thumbnails[0].url",{"_index":3214,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.typ",{"_index":1947,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{}}}],["asset/asset",{"_index":4030,"title":{},"body":{"changelog.html":{}}}],["asset/asset.direct",{"_index":1687,"title":{},"body":{"modules/FilesModule.html":{},"directives/ImageDirective.html":{}}}],["assetdirect",{"_index":293,"title":{"directives/AssetDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetgroup",{"_index":3196,"title":{},"body":{"injectables/ResourceConfig.html":{},"components/UploadComponent.html":{}}}],["assetgroup#definitions/condit",{"_index":3208,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["assetgroupid",{"_index":442,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["assetid",{"_index":362,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{}}}],["assetid'",{"_index":4007,"title":{},"body":{"changelog.html":{}}}],["assetinput",{"_index":4029,"title":{},"body":{"changelog.html":{}}}],["assetlist.getallitem",{"_index":1630,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetlistpopcompon",{"_index":192,"title":{"components/AssetListPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assets.map((asset",{"_index":1660,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assets.map(asset",{"_index":1634,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assets.reduce((id",{"_index":1650,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assets[0",{"_index":1631,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetselectcompon",{"_index":196,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assign",{"_index":1017,"title":{},"body":{"injectables/CrudService.html":{},"classes/Field.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{}}}],["associ",{"_index":1525,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceService.html":{},"components/TabsComponent.html":{}}}],["assum",{"_index":4687,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["asterisk",{"_index":4322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attempt",{"_index":2795,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["auth",{"_index":449,"title":{},"body":{"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"changelog.html":{}}}],["auth.servic",{"_index":569,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["auth/auth.modul",{"_index":1057,"title":{},"body":{"modules/DataModule.html":{}}}],["auth/auth.servic",{"_index":490,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["authent",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["authguard",{"_index":508,"title":{"injectables/AuthGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["authmodul",{"_index":548,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":4682,"title":{"additional-documentation/project-setup-tutorial/authorization.html":{}},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["authservic",{"_index":450,"title":{"injectables/AuthService.html":{}},"body":{"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":1917,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"changelog.html":{}}}],["autocomplet",{"_index":1776,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["autocomplete.addlistener('place_chang",{"_index":1796,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocomplete.getplac",{"_index":1799,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress",{"_index":1765,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress(el",{"_index":1774,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autolink",{"_index":4543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoload",{"_index":363,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["autoload=fals",{"_index":385,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{}}}],["automat",{"_index":1578,"title":{},"body":{"classes/Field.html":{},"classes/Notification.html":{},"classes/ResourceForm.html":{},"injectables/SdkService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/core-classes/field.html":{}}}],["automatisch",{"_index":4620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autores",{"_index":4540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoresize_max_height",{"_index":4549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoresize_min_height",{"_index":4547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avail",{"_index":676,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"components/SelectComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["availab",{"_index":63,"title":{},"body":{"components/AceComponent.html":{}}}],["available.validator.t",{"_index":4078,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["availables",{"_index":2137,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Pagination.html":{}}}],["avoid",{"_index":1458,"title":{},"body":{"components/EntryListComponent.html":{}}}],["ayq",{"_index":4794,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["b",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{},"classes/Pagination.html":{},"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["b(r",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{}}}],["b.resolv",{"_index":3585,"title":{},"body":{"classes/Sorter.html":{}}}],["b.sort(properti",{"_index":3587,"title":{},"body":{"classes/Sorter.html":{}}}],["back",{"_index":946,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":1656,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["backenderrorcod",{"_index":4080,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bag",{"_index":4446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bake",{"_index":2789,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["baken",{"_index":2791,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["bakery:bakeryservic",{"_index":2788,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["ball",{"_index":2780,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["bank",{"_index":4324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":4506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["barcod",{"_index":4327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base",{"_index":3568,"title":{},"body":{"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["base64",{"_index":3090,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["base64uuid",{"_index":3082,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["baseurl",{"_index":4266,"title":{},"body":{"index.html":{}}}],["basi",{"_index":1235,"title":{},"body":{"interfaces/Day.html":{}}}],["basic",{"_index":1256,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/ListComponent.html":{},"changelog.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["basket",{"_index":4448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["be",{"_index":2886,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["befor",{"_index":1553,"title":{},"body":{"classes/Field.html":{},"components/InputComponent.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"classes/ResourceForm.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes/field.html":{}}}],["began",{"_index":4027,"title":{},"body":{"changelog.html":{}}}],["begin",{"_index":1200,"title":{},"body":{"interfaces/Day.html":{},"injectables/ModelConfigService.html":{}}}],["begin.clone().add(index",{"_index":1206,"title":{},"body":{"interfaces/Day.html":{}}}],["behaviour",{"_index":2637,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["beim",{"_index":3035,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["belong",{"_index":1962,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["below",{"_index":2746,"title":{},"body":{"classes/Notification.html":{}}}],["beneath",{"_index":2014,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["berschrift",{"_index":4577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beschreibung",{"_index":2775,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["beta.2",{"_index":4197,"title":{},"body":{"dependencies.html":{}}}],["beta.4",{"_index":4193,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":2260,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["between",{"_index":485,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/FormService.html":{},"components/PopComponent.html":{}}}],["big",{"_index":4434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bigger",{"_index":4529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bild/datei",{"_index":4619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bilder",{"_index":4708,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["bind",{"_index":433,"title":{},"body":{"components/AssetListPopComponent.html":{},"changelog.html":{}}}],["binocular",{"_index":4329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["birch",{"_index":2099,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["bitcoin",{"_index":4330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["block",{"_index":3787,"title":{},"body":{"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["blockevent(",{"_index":3792,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["blood",{"_index":4383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bluetooth",{"_index":4468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blur",{"_index":1752,"title":{},"body":{"injectables/FormService.html":{}}}],["bobbi",{"_index":1566,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{}}}],["bobby.display('nam",{"_index":4788,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bobby.group('nam",{"_index":4789,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bobby.resolve('nam",{"_index":4787,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bobby.sort('nam",{"_index":4790,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bodi",{"_index":1551,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"classes/ResourceForm.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["body+1",{"_index":4802,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["body.value.nam",{"_index":1560,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["bold",{"_index":4528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["book",{"_index":4362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bookmark",{"_index":4332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":373,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["bootstrap",{"_index":312,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["bootstrap/publish",{"_index":4752,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["border",{"_index":4333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["both",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{},"changelog.html":{}}}],["bottl",{"_index":4522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bottom",{"_index":3992,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["bound",{"_index":434,"title":{},"body":{"components/AssetListPopComponent.html":{},"directives/DropzoneDirective.html":{}}}],["box",{"_index":818,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{},"miscellaneous/variables.html":{}}}],["bracket",{"_index":4316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brand",{"_index":4535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":3945,"title":{},"body":{"changelog.html":{}}}],["breit",{"_index":4621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["briefcas",{"_index":4336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bright",{"_index":4347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bring",{"_index":4792,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["broken",{"_index":4400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brows",{"_index":4280,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":185,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"modules/FilesModule.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"modules/ResourceModule.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/VcModule.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["browsermodul",{"_index":1683,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/VcModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["brush",{"_index":4416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["btn",{"_index":4569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bu",{"_index":4337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bubbl",{"_index":4354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buchstaben",{"_index":1563,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["bucket",{"_index":4417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bug",{"_index":1657,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":4182,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ace.html":{}}}],["builds/blob/master/src/ext",{"_index":149,"title":{},"body":{"components/AceComponent.html":{}}}],["builds/src",{"_index":136,"title":{},"body":{"components/AceComponent.html":{},"additional-documentation/ace.html":{}}}],["bullet",{"_index":4401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bullist",{"_index":4595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["busi",{"_index":4496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button",{"_index":937,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoginFormComponent.html":{},"components/ResourceCrudComponent.html":{},"miscellaneous/variables.html":{}}}],["buttonclass",{"_index":2418,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["buttonlabel",{"_index":2419,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["bypasssecuritytrusthtml",{"_index":3379,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["c",{"_index":4720,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["c9c8d4",{"_index":2556,"title":{},"body":{"components/MenuComponent.html":{}}}],["cach",{"_index":3402,"title":{},"body":{"injectables/SdkService.html":{}}}],["calcul",{"_index":4343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calculc",{"_index":2904,"title":{},"body":{"classes/Pagination.html":{}}}],["calendar",{"_index":1074,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["calendar'},{'nam",{"_index":199,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["calendar.compon",{"_index":1098,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["calendarcompon",{"_index":198,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calendarish",{"_index":1131,"title":{},"body":{"interfaces/Day.html":{}}}],["call",{"_index":384,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"injectables/SymbolPipe.html":{},"components/TinymceComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["callback",{"_index":85,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/core-classes/item.html":{}}}],["callbackurl",{"_index":3225,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["camera",{"_index":4346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactiv",{"_index":521,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["canalter(valu",{"_index":1238,"title":{},"body":{"interfaces/Day.html":{}}}],["cancel",{"_index":2569,"title":{},"body":{"components/MenuComponent.html":{}}}],["canceltimeout",{"_index":2538,"title":{},"body":{"components/MenuComponent.html":{}}}],["cand",{"_index":2306,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["cap",{"_index":4315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabl",{"_index":4002,"title":{},"body":{"changelog.html":{}}}],["caption",{"_index":3216,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["car",{"_index":4349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":4387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["caret",{"_index":4526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cart",{"_index":4449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":2786,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["catch",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{},"components/LoaderComponent.html":{}}}],["catch((err",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["catch((error",{"_index":2403,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["catch(err",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch(error",{"_index":1867,"title":{},"body":{"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{},"components/ResourceDeletePopComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["caution",{"_index":4246,"title":{},"body":{"index.html":{}}}],["ccc",{"_index":1142,"title":{},"body":{"interfaces/Day.html":{}}}],["cd",{"_index":4652,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["cdn",{"_index":4765,"title":{},"body":{"additional-documentation/ace.html":{}}}],["cell",{"_index":1129,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes/field.html":{}}}],["center",{"_index":2292,"title":{},"body":{"components/LocationMapComponent.html":{},"miscellaneous/variables.html":{}}}],["certain",{"_index":2039,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/TypeConfigService.html":{}}}],["chang",{"_index":84,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["change(",{"_index":3874,"title":{},"body":{"components/UploadComponent.html":{}}}],["change(filt",{"_index":965,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["change)=\"updatesize($event.target.valu",{"_index":2993,"title":{},"body":{"components/PaginationComponent.html":{}}}],["change.color",{"_index":1196,"title":{},"body":{"interfaces/Day.html":{}}}],["change.d",{"_index":1193,"title":{},"body":{"interfaces/Day.html":{}}}],["change.select",{"_index":1191,"title":{},"body":{"interfaces/Day.html":{}}}],["change.timespan",{"_index":1195,"title":{},"body":{"interfaces/Day.html":{}}}],["change[key",{"_index":999,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["changelog",{"_index":3942,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changespan",{"_index":1152,"title":{},"body":{"interfaces/Day.html":{}}}],["chat",{"_index":4353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":526,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/ListItemsComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["checkbox",{"_index":2146,"title":{},"body":{"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["checklist",{"_index":4584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkmark",{"_index":4530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkpermiss",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkpermission(permiss",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["chevron",{"_index":4486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["child",{"_index":2582,"title":{},"body":{"components/MenuComponent.html":{},"components/UploadComponent.html":{}}}],["children",{"_index":3959,"title":{},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["cinnamon",{"_index":4809,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["circl",{"_index":4310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":146,"title":{"classes/Collection.html":{},"classes/Config.html":{},"classes/Field.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"classes/ResourceForm.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["class.i",{"_index":1275,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["class=\"input",{"_index":2994,"title":{},"body":{"components/PaginationComponent.html":{}}}],["clean",{"_index":961,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{}}}],["clean(valu",{"_index":969,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["clear",{"_index":1025,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["clearselect",{"_index":1234,"title":{},"body":{"interfaces/Day.html":{}}}],["cleartimeout(this.timeout",{"_index":2614,"title":{},"body":{"components/MenuComponent.html":{}}}],["cli",{"_index":4208,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["click",{"_index":844,"title":{},"body":{"components/CrudComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SelectComponent.html":{},"components/ToolbarComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["click(",{"_index":3783,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["clickabl",{"_index":3958,"title":{},"body":{"changelog.html":{}}}],["clickedoutside($ev",{"_index":3511,"title":{},"body":{"components/SelectComponent.html":{}}}],["clickinsid",{"_index":3468,"title":{},"body":{"components/SelectComponent.html":{}}}],["clickinside(",{"_index":3487,"title":{},"body":{"components/SelectComponent.html":{}}}],["clickitem",{"_index":3469,"title":{},"body":{"components/SelectComponent.html":{}}}],["clickitem(item",{"_index":3490,"title":{},"body":{"components/SelectComponent.html":{}}}],["client",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["clientid",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["clip",{"_index":4478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clock",{"_index":4312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clone",{"_index":2724,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["close",{"_index":1840,"title":{},"body":{"injectables/HistoryService.html":{},"components/ListHeaderComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["cloud",{"_index":4355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clubapp",{"_index":4722,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["cluster_acemodul",{"_index":313,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_acecomponent_provid",{"_index":315,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_declar",{"_index":314,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_export",{"_index":316,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":549,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":550,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_export",{"_index":552,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":551,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_provid",{"_index":553,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_datamodul",{"_index":1032,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_declar",{"_index":1033,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_export",{"_index":1035,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_import",{"_index":1034,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_provid",{"_index":1036,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_filesmodul",{"_index":1677,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_declar",{"_index":1678,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_export",{"_index":1680,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_import",{"_index":1679,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_filesmodule_provid",{"_index":1681,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_formmodul",{"_index":1695,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_declar",{"_index":1696,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_export",{"_index":1698,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_import",{"_index":1697,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_provid",{"_index":1699,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_iconmodul",{"_index":1904,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_declar",{"_index":1905,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_export",{"_index":1906,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_provid",{"_index":1907,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iomodul",{"_index":2029,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_declar",{"_index":2030,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_export",{"_index":2031,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_listmodul",{"_index":2209,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_declar",{"_index":2210,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_export",{"_index":2212,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_import",{"_index":2211,"title":{},"body":{"modules/ListModule.html":{}}}],["cluster_loadermodul",{"_index":2273,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_declar",{"_index":2274,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_export",{"_index":2275,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_provid",{"_index":2276,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_locationmodul",{"_index":2314,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_declar",{"_index":2315,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_export",{"_index":2317,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_import",{"_index":2316,"title":{},"body":{"modules/LocationModule.html":{}}}],["cluster_locationmodule_provid",{"_index":2318,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_mediummodul",{"_index":2526,"title":{},"body":{"modules/MediumModule.html":{},"overview.html":{}}}],["cluster_mediummodule_declar",{"_index":2527,"title":{},"body":{"modules/MediumModule.html":{},"overview.html":{}}}],["cluster_mediummodule_export",{"_index":2529,"title":{},"body":{"modules/MediumModule.html":{},"overview.html":{}}}],["cluster_mediummodule_mediumeditorcomponent_provid",{"_index":2528,"title":{},"body":{"modules/MediumModule.html":{}}}],["cluster_notificationsmodul",{"_index":2820,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_declar",{"_index":2821,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_export",{"_index":2823,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_import",{"_index":2822,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["cluster_notificationsmodule_provid",{"_index":2824,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_popmodul",{"_index":3062,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_declar",{"_index":3063,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_export",{"_index":3064,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_provid",{"_index":3065,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_resourcemodul",{"_index":3335,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_declar",{"_index":3336,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_export",{"_index":3338,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_import",{"_index":3337,"title":{},"body":{"modules/ResourceModule.html":{}}}],["cluster_resourcemodule_provid",{"_index":3339,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_sdkmodul",{"_index":3385,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_sdkmodule_provid",{"_index":3386,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_selectmodul",{"_index":3534,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_declar",{"_index":3535,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_export",{"_index":3538,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_import",{"_index":3537,"title":{},"body":{"modules/SelectModule.html":{}}}],["cluster_selectmodule_selectcomponent_provid",{"_index":3536,"title":{},"body":{"modules/SelectModule.html":{}}}],["cluster_symbolmodul",{"_index":3593,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_provid",{"_index":3594,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_tinymcemodul",{"_index":3758,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_declar",{"_index":3759,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_export",{"_index":3760,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_uimodul",{"_index":3850,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_export",{"_index":3852,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_import",{"_index":3851,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_utilitymodul",{"_index":3915,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_declar",{"_index":3916,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_export",{"_index":3918,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_import",{"_index":3917,"title":{},"body":{"modules/UtilityModule.html":{}}}],["cluster_vcmodul",{"_index":3923,"title":{},"body":{"modules/VcModule.html":{},"overview.html":{}}}],["cluster_vcmodule_declar",{"_index":3924,"title":{},"body":{"modules/VcModule.html":{},"overview.html":{}}}],["cluster_vcmodule_export",{"_index":3925,"title":{},"body":{"modules/VcModule.html":{},"overview.html":{}}}],["cmd+click",{"_index":4725,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["code",{"_index":4238,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes.html":{}}}],["codesourc",{"_index":3241,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["codesourceid",{"_index":3242,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["codesourcetyp",{"_index":3243,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["coin",{"_index":4331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collat",{"_index":3564,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["collator.compare(a",{"_index":3570,"title":{},"body":{"classes/Sorter.html":{}}}],["collect",{"_index":712,"title":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}},"body":{"classes/Collection.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"coverage.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["collection([1",{"_index":727,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.add(4",{"_index":765,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.addall([10,11,12",{"_index":768,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.has(1",{"_index":763,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.has(4",{"_index":764,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.hasall([1,10,11",{"_index":769,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.index(1",{"_index":767,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.remove(4",{"_index":766,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.removeall();it",{"_index":770,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["color",{"_index":1135,"title":{},"body":{"interfaces/Day.html":{},"components/MenuComponent.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["colorpick",{"_index":4546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":1547,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"additional-documentation/core-classes/field.html":{}}}],["columnclick",{"_index":446,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{}}}],["columnclick(item",{"_index":2073,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["com",{"_index":3949,"title":{},"body":{"changelog.html":{}}}],["combin",{"_index":2766,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["come",{"_index":335,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["command",{"_index":4452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comment",{"_index":2259,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["commonmodul",{"_index":557,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{}}}],["commun",{"_index":2394,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["compani",{"_index":4488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compat",{"_index":4026,"title":{},"body":{"changelog.html":{}}}],["compil",{"_index":4257,"title":{},"body":{"index.html":{}}}],["compileropt",{"_index":4263,"title":{},"body":{"index.html":{}}}],["complain",{"_index":2850,"title":{},"body":{"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["complet",{"_index":3872,"title":{},"body":{"components/UploadComponent.html":{},"changelog.html":{}}}],["compon",{"_index":0,"title":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{}}}],["component_templ",{"_index":189,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["componentfactori",{"_index":1334,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["componentfactoryresolv",{"_index":1313,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["componentinst",{"_index":1959,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref",{"_index":1330,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["componentref.inst",{"_index":1997,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref.instance.control",{"_index":1998,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref.instance.control.valuechang",{"_index":1999,"title":{},"body":{"components/InputComponent.html":{}}}],["components/class",{"_index":4228,"title":{},"body":{"index.html":{}}}],["comput",{"_index":4360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["concat(this.config.availables",{"_index":2919,"title":{},"body":{"classes/Pagination.html":{}}}],["concat(this.timespan",{"_index":1168,"title":{},"body":{"interfaces/Day.html":{}}}],["concept",{"_index":1575,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["condit",{"_index":3206,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config",{"_index":443,"title":{"classes/Config.html":{}},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["config.input",{"_index":3843,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.interfac",{"_index":489,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListComponent.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{}}}],["config.interface.t",{"_index":920,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FieldConfig.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"classes/PaginationConfig.html":{},"coverage.html":{}}}],["config.interface.ts:11",{"_index":3000,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:4",{"_index":1589,"title":{},"body":{"interfaces/FieldConfig.html":{}}}],["config.interface.ts:7",{"_index":3003,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:9",{"_index":3001,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.output",{"_index":3844,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.popclass",{"_index":848,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["config.servic",{"_index":641,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{}}}],["config.service.t",{"_index":2638,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["config.service.ts:11",{"_index":3087,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:113",{"_index":2667,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:130",{"_index":2655,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:137",{"_index":3805,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:141",{"_index":3813,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:15",{"_index":3095,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:157",{"_index":3817,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:166",{"_index":3808,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:172",{"_index":3806,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:177",{"_index":3814,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:179",{"_index":2653,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:18",{"_index":3819,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:21",{"_index":2676,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:25",{"_index":3092,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{}}}],["config.service.ts:27",{"_index":2649,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:37",{"_index":3097,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:43",{"_index":2660,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:45",{"_index":3102,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:54",{"_index":3100,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:58",{"_index":2671,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:63",{"_index":2665,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["config.service.ts:67",{"_index":3103,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:68",{"_index":2651,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:71",{"_index":3088,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:76",{"_index":3106,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.view",{"_index":3842,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config/field",{"_index":1579,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{}}}],["config/model",{"_index":1046,"title":{},"body":{"modules/DataModule.html":{},"components/EntryListComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["config/resourc",{"_index":640,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["config/resource.servic",{"_index":1457,"title":{},"body":{"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{}}}],["config/resource.service.t",{"_index":3341,"title":{},"body":{"injectables/ResourceService.html":{},"coverage.html":{}}}],["config/resource.service.ts:113",{"_index":3348,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:124",{"_index":3350,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:34",{"_index":3342,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:37",{"_index":3358,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:41",{"_index":3352,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:47",{"_index":3343,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:56",{"_index":3354,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:74",{"_index":3357,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:89",{"_index":3351,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:95",{"_index":3346,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/typ",{"_index":1053,"title":{},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["config?.createlabel",{"_index":917,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["config[properti",{"_index":2698,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["configinput",{"_index":2111,"title":{},"body":{"components/ListComponent.html":{}}}],["configur",{"_index":793,"title":{},"body":{"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/FieldConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"classes/ResourceForm.html":{},"components/SelectComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["configuration.interface.t",{"_index":2734,"title":{},"body":{"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["configure(key",{"_index":796,"title":{},"body":{"classes/Config.html":{}}}],["configure?(key",{"_index":810,"title":{},"body":{"classes/Config.html":{}}}],["confirm",{"_index":3285,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["confirm(resourc",{"_index":3290,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["connector",{"_index":1425,"title":{},"body":{"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["consist",{"_index":1223,"title":{},"body":{"interfaces/Day.html":{},"additional-documentation/core-classes/item.html":{}}}],["console.error('cannot",{"_index":3298,"title":{},"body":{"components/ResourceDeletePopComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["console.error('miss",{"_index":3841,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["console.error('model",{"_index":2716,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["console.error(`${relationnam",{"_index":3111,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["console.error(err",{"_index":3907,"title":{},"body":{"components/UploadComponent.html":{}}}],["console.log('could",{"_index":2405,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["console.log('cr",{"_index":1029,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["console.log('error",{"_index":909,"title":{},"body":{"components/CrudComponent.html":{}}}],["console.log('raw",{"_index":1113,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["console.log('receiv",{"_index":4737,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["console.log('select",{"_index":504,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["console.warn('cannot",{"_index":1374,"title":{},"body":{"directives/EntriesDirective.html":{},"injectables/LoaderService.html":{},"classes/Sorter.html":{}}}],["console.warn('ec",{"_index":3513,"title":{},"body":{"components/SelectComponent.html":{}}}],["console.warn('ha",{"_index":780,"title":{},"body":{"classes/Collection.html":{}}}],["console.warn('no",{"_index":498,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/LocationMapComponent.html":{}}}],["console.warn('notification.tim",{"_index":2817,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["console.warn('pag",{"_index":2970,"title":{},"body":{"components/PaginationComponent.html":{}}}],["console.warn('thi",{"_index":2862,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["console.warn('tri",{"_index":2807,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["console.warn(`icon",{"_index":1899,"title":{},"body":{"components/IconComponent.html":{}}}],["console.warn(`rel",{"_index":675,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":142,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/PopService.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["construct",{"_index":726,"title":{},"body":{"classes/Collection.html":{},"classes/Field.html":{},"classes/ResourceForm.html":{}}}],["constructor",{"_index":340,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputErrorsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["constructor(@inject('environ",{"_index":3442,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(@inject('usedesktopnotif",{"_index":2851,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(app",{"_index":3702,"title":{},"body":{"components/TinymceComponent.html":{}}}],["constructor(auth",{"_index":2388,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["constructor(bodi",{"_index":3313,"title":{},"body":{"classes/ResourceForm.html":{}}}],["constructor(componentfactoryresolv",{"_index":1312,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["constructor(config",{"_index":2878,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationConfig.html":{}}}],["constructor(crud",{"_index":2648,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["constructor(el",{"_index":1279,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/TabComponent.html":{}}}],["constructor(environ",{"_index":3396,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(fb",{"_index":2425,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["constructor(geocodeservic",{"_index":2338,"title":{},"body":{"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["constructor(host",{"_index":2229,"title":{},"body":{"components/LoaderComponent.html":{}}}],["constructor(iconservic",{"_index":1881,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(item",{"_index":724,"title":{},"body":{"classes/Collection.html":{}}}],["constructor(loaderservic",{"_index":1419,"title":{},"body":{"components/EntryListComponent.html":{}}}],["constructor(mapload",{"_index":1769,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["constructor(notif",{"_index":2737,"title":{},"body":{"classes/Notification.html":{}}}],["constructor(notificationservic",{"_index":1836,"title":{},"body":{"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{}}}],["constructor(popservic",{"_index":447,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/PopComponent.html":{}}}],["constructor(priv",{"_index":535,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["constructor(properti",{"_index":1509,"title":{},"body":{"classes/Field.html":{}}}],["constructor(protect",{"_index":494,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListComponent.html":{},"components/PopComponent.html":{}}}],["constructor(publ",{"_index":349,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceDeletePopComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/icons.html":{}}}],["constructor(resourceconfig",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(rout",{"_index":2550,"title":{},"body":{"components/MenuComponent.html":{},"components/TabsComponent.html":{}}}],["constructor(sdk",{"_index":341,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"components/UploadComponent.html":{}}}],["constructor(symbol",{"_index":1483,"title":{},"body":{"components/ErrorComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/TypeConfigService.html":{}}}],["constructor(usedesktopnotif",{"_index":2834,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(viewcontainerref",{"_index":3544,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["contact",{"_index":3938,"title":{},"body":{"interfaces/WithLoader.html":{},"miscellaneous/variables.html":{}}}],["contain",{"_index":34,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes/field.html":{}}}],["content",{"_index":1879,"title":{},"body":{"components/IconComponent.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["content_css",{"_index":4551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contentchildren",{"_index":3673,"title":{},"body":{"components/TabsComponent.html":{}}}],["contentchildren(tabcompon",{"_index":3677,"title":{},"body":{"components/TabsComponent.html":{}}}],["context",{"_index":2050,"title":{},"body":{"interfaces/ItemConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["contextmenu",{"_index":4544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contrast",{"_index":4358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control",{"_index":40,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["control'",{"_index":2013,"title":{},"body":{"components/InputErrorsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["control.reset",{"_index":2185,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["control[field.properti",{"_index":1749,"title":{},"body":{"injectables/FormService.html":{}}}],["controlvalueaccessor",{"_index":16,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["convert",{"_index":1456,"title":{},"body":{"components/EntryListComponent.html":{}}}],["cooki",{"_index":563,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["cookiefactori",{"_index":571,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["cookiemodul",{"_index":561,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/functions.html":{}}}],["cookiemodule.forroot",{"_index":574,"title":{},"body":{"modules/AuthModule.html":{}}}],["cool",{"_index":4748,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["coolstringcompon",{"_index":4810,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["coord",{"_index":1802,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{}}}],["coords.lat",{"_index":2310,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["coords.lng",{"_index":2309,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["copi",{"_index":4377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["core",{"_index":619,"title":{"additional-documentation/core-classes.html":{}},"body":{"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"injectables/FormService.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["core/ui/data",{"_index":4220,"title":{},"body":{"index.html":{}}}],["correct",{"_index":4749,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["count",{"_index":2905,"title":{},"body":{"classes/Pagination.html":{}}}],["cours",{"_index":1573,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{}}}],["coverag",{"_index":4049,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":70,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["create(model",{"_index":972,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["create(rel",{"_index":3347,"title":{},"body":{"injectables/ResourceService.html":{}}}],["create/edit/delet",{"_index":817,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["create/read/update/delet",{"_index":996,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"changelog.html":{}}}],["createclick",{"_index":3252,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["created(label",{"_index":3091,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["created.otherwis",{"_index":3355,"title":{},"body":{"injectables/ResourceService.html":{}}}],["createfield",{"_index":3310,"title":{},"body":{"classes/ResourceForm.html":{}}}],["createfield(properti",{"_index":3324,"title":{},"body":{"classes/ResourceForm.html":{}}}],["createlabel",{"_index":924,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["createlist",{"_index":1414,"title":{},"body":{"components/EntryListComponent.html":{}}}],["creates/upd",{"_index":1450,"title":{},"body":{"components/EntryListComponent.html":{}}}],["creator",{"_index":2675,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["credenti",{"_index":2410,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["crop",{"_index":4363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cross",{"_index":4531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crud",{"_index":822,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/data.html":{}}}],["crud'",{"_index":839,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud'},{'nam",{"_index":201,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["crud.compon",{"_index":1063,"title":{},"body":{"modules/DataModule.html":{},"modules/ResourceModule.html":{}}}],["crud.component.html",{"_index":824,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud.component.scss",{"_index":823,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud.component.t",{"_index":3250,"title":{},"body":{"components/ResourceCrudComponent.html":{},"coverage.html":{}}}],["crud.component.ts:33",{"_index":3254,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:35",{"_index":3256,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:37",{"_index":3255,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:39",{"_index":3257,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:41",{"_index":3268,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:43",{"_index":3270,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:45",{"_index":3269,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:47",{"_index":3258,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:49",{"_index":3260,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:51",{"_index":3253,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:57",{"_index":3272,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:58",{"_index":3271,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:61",{"_index":3265,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:65",{"_index":3264,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:76",{"_index":3263,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:81",{"_index":3267,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:94",{"_index":3262,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:98",{"_index":3261,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud/crud",{"_index":488,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{}}}],["crud/crud.compon",{"_index":1049,"title":{},"body":{"modules/DataModule.html":{}}}],["crud/crud.servic",{"_index":1047,"title":{},"body":{"modules/DataModule.html":{},"components/EntryListComponent.html":{},"injectables/ModelConfigService.html":{}}}],["crud/resourc",{"_index":1062,"title":{},"body":{"modules/DataModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["crudcompon",{"_index":200,"title":{"components/CrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["crudcomponent#loadentri",{"_index":3279,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crudconfig",{"_index":457,"title":{"interfaces/CrudConfig.html":{}},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["crudservic",{"_index":952,"title":{"injectables/CrudService.html":{}},"body":{"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["current",{"_index":121,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{}}}],["cursor",{"_index":4364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["custom",{"_index":171,"title":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/MockupComponent.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/data.html":{}}}],["customfieldcompon",{"_index":1318,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["custominputcompon",{"_index":4724,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["customnam",{"_index":1592,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["cycl",{"_index":4753,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["da",{"_index":2771,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["darf",{"_index":4718,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["dashboard",{"_index":4350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":1328,"title":{"additional-documentation/data.html":{}},"body":{"components/DynamicSlotComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{}}}],["data.entryid",{"_index":1874,"title":{},"body":{"injectables/HistoryService.html":{}}}],["databas",{"_index":4437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datamanag",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["datamanager(environment.environ",{"_index":3453,"title":{},"body":{"injectables/SdkService.html":{}}}],["datamanager.api().emailavailable(control.value).then((avail",{"_index":4622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datamanagerid",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["datamanagerlistcompon",{"_index":3973,"title":{},"body":{"changelog.html":{}}}],["datamanagerresourc",{"_index":330,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["datamodul",{"_index":1031,"title":{"modules/DataModule.html":{}},"body":{"modules/DataModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["datamodule.forenvironment(environ",{"_index":4675,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["dataroutingmodul",{"_index":4006,"title":{},"body":{"changelog.html":{}}}],["datasourc",{"_index":3245,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["datasourceid",{"_index":3246,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["date",{"_index":1076,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["date()).format(this.symbol.resolve('moment.format.d",{"_index":3832,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date(0",{"_index":3833,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date.clon",{"_index":1226,"title":{},"body":{"interfaces/Day.html":{}}}],["date.clone().startof('day').issame(this.timespan[0].clone().startof('day",{"_index":1209,"title":{},"body":{"interfaces/Day.html":{}}}],["date.clone().startof('day').issame(this.timespan[1].clone().startof('day",{"_index":1211,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('dd",{"_index":1217,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('mm",{"_index":1212,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format(this.monthformat",{"_index":1228,"title":{},"body":{"interfaces/Day.html":{}}}],["date.isbetween(this.timespan[0",{"_index":1214,"title":{},"body":{"interfaces/Day.html":{}}}],["date.now",{"_index":2268,"title":{},"body":{"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["datenschutz",{"_index":4278,"title":{},"body":{"index.html":{}}}],["daterange'},{'nam",{"_index":203,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["daterangecompon",{"_index":202,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datetim",{"_index":1070,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["datetime'},{'nam",{"_index":205,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["datetime.component.html",{"_index":1073,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["datetime.component.scss",{"_index":1072,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["datetime/calendar.compon",{"_index":1717,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/daterange.compon",{"_index":1724,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/datetime.compon",{"_index":1713,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/datetime.pip",{"_index":1715,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/heatmap.compon",{"_index":1723,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/month.compon",{"_index":1714,"title":{},"body":{"modules/FormModule.html":{}}}],["datetimecompon",{"_index":204,"title":{"components/DatetimeComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datetimepip",{"_index":1102,"title":{"pipes/DatetimePipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"modules/FormModule.html":{},"coverage.html":{},"overview.html":{}}}],["datum",{"_index":3830,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["day",{"_index":1094,"title":{"interfaces/Day.html":{}},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"coverage.html":{}}}],["day.clone().startof('month').startof('week",{"_index":1201,"title":{},"body":{"interfaces/Day.html":{}}}],["day.date.clon",{"_index":1170,"title":{},"body":{"interfaces/Day.html":{}}}],["day.first",{"_index":1163,"title":{},"body":{"interfaces/Day.html":{}}}],["day.format('mm",{"_index":1213,"title":{},"body":{"interfaces/Day.html":{}}}],["day.last",{"_index":1165,"title":{},"body":{"interfaces/Day.html":{}}}],["dayclick",{"_index":1150,"title":{},"body":{"interfaces/Day.html":{},"changelog.html":{}}}],["de",{"_index":3606,"title":{},"body":{"injectables/SymbolService.html":{}}}],["deactiv",{"_index":3642,"title":{},"body":{"components/TabComponent.html":{}}}],["debit",{"_index":4325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debounc",{"_index":1960,"title":{},"body":{"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["debouncetime(this.debounc",{"_index":2000,"title":{},"body":{"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["decid",{"_index":2088,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["decim",{"_index":3822,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["declar",{"_index":141,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/GeocodeService.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["decor",{"_index":105,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["decreas",{"_index":4390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deeper",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":113,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"modules/FormModule.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["defaultconfig",{"_index":2684,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["defaultconfig[properti",{"_index":2697,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["defaultentryinputcompon",{"_index":206,"title":{"components/DefaultEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultentryoutputcompon",{"_index":207,"title":{"components/DefaultEntryOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultinputcompon",{"_index":19,"title":{"components/DefaultInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["defaultinputcomponent:12",{"_index":125,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:14",{"_index":129,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:16",{"_index":128,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:18",{"_index":124,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultlocal",{"_index":3130,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["defaultoutputcompon",{"_index":210,"title":{"components/DefaultOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaulttim",{"_index":2831,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["defin",{"_index":66,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["definit",{"_index":4786,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["del",{"_index":962,"title":{},"body":{"injectables/CrudService.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{}}}],["del(model",{"_index":974,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["del(rel",{"_index":3349,"title":{},"body":{"injectables/ResourceService.html":{}}}],["delay",{"_index":437,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/MenuComponent.html":{},"components/PopComponent.html":{},"miscellaneous/variables.html":{}}}],["delet",{"_index":275,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["delete(resourc",{"_index":3293,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["deletenullproperti",{"_index":3345,"title":{},"body":{"injectables/ResourceService.html":{}}}],["demo",{"_index":4041,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes.html":{}}}],["demonstr",{"_index":4693,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["deni",{"_index":2861,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["depend",{"_index":58,"title":{"dependencies.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["deprec",{"_index":3865,"title":{},"body":{"components/UploadComponent.html":{},"changelog.html":{}}}],["der",{"_index":2773,"title":{},"body":{"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["desc",{"_index":2138,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"changelog.html":{}}}],["descend",{"_index":2144,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["describ",{"_index":1546,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"additional-documentation/core-classes/field.html":{}}}],["descript",{"_index":10,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}}}],["deselect",{"_index":3652,"title":{},"body":{"components/TabComponent.html":{}}}],["desir",{"_index":2293,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["desktop",{"_index":2830,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotif",{"_index":2832,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotification(notif",{"_index":2836,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["destroy",{"_index":2504,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["determin",{"_index":1126,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ItemConfig.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{}}}],["dev",{"_index":4235,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["develop",{"_index":925,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["diagon",{"_index":4451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dial",{"_index":4368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dialog",{"_index":3040,"title":{},"body":{"components/PopComponent.html":{}}}],["diamond",{"_index":4370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["didact",{"_index":4771,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["die",{"_index":2774,"title":{},"body":{"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["dies",{"_index":538,"title":{},"body":{"injectables/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["differ",{"_index":858,"title":{},"body":{"components/CrudComponent.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/NotificationsComponent.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["direct",{"_index":184,"title":{"directives/AssetDirective.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/medium.html":{}}}],["directive/pipe/service/class/modul",{"_index":4240,"title":{},"body":{"index.html":{}}}],["directli",{"_index":392,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ResourceDeletePopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/item.html":{}}}],["directori",{"_index":4243,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":1273,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/LoaderComponent.html":{},"components/MockupComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["disablecreatepop",{"_index":926,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disabledragend",{"_index":1145,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledragstart",{"_index":1143,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledtyp",{"_index":3200,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["disablehead",{"_index":2139,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["disablelistpop",{"_index":927,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disableselect",{"_index":3969,"title":{},"body":{"changelog.html":{}}}],["disableselectswitch",{"_index":928,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disablestrategi",{"_index":3229,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["disabletim",{"_index":1077,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["disableupd",{"_index":1834,"title":{},"body":{"injectables/HistoryService.html":{}}}],["disableupdates(key",{"_index":1838,"title":{},"body":{"injectables/HistoryService.html":{}}}],["discuss",{"_index":4756,"title":{},"body":{"additional-documentation/ui.html":{}}}],["display",{"_index":1079,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["displayaccount",{"_index":3802,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displayd",{"_index":3803,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displaydate(tim",{"_index":3807,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["dist",{"_index":4242,"title":{},"body":{"index.html":{}}}],["div",{"_index":2957,"title":{},"body":{"components/PaginationComponent.html":{}}}],["divid",{"_index":4371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dm",{"_index":3123,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dm::delet",{"_index":3125,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dm::edit",{"_index":3124,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dmaccount",{"_index":3168,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dmasset",{"_index":1639,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{}}}],["dmassetlist",{"_index":1605,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["dmassetresourc",{"_index":1613,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["dmclient",{"_index":3223,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dmuser",{"_index":3205,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["doc",{"_index":1517,"title":{},"body":{"classes/Field.html":{},"changelog.html":{}}}],["document",{"_index":4050,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/list.html":{}}}],["document:click",{"_index":3474,"title":{},"body":{"components/SelectComponent.html":{}}}],["document:click($ev",{"_index":3484,"title":{},"body":{"components/SelectComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["domsanit",{"_index":3382,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["dont",{"_index":1609,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["dosomethingriski",{"_index":2776,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["down",{"_index":4320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["download",{"_index":4356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["drag",{"_index":1127,"title":{},"body":{"interfaces/Day.html":{},"miscellaneous/variables.html":{}}}],["dragend",{"_index":2303,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["draggabl",{"_index":1121,"title":{},"body":{"interfaces/Day.html":{}}}],["dragleav",{"_index":1277,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragleave(",{"_index":1287,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragov",{"_index":1278,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragover(",{"_index":1290,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragstart(day",{"_index":1180,"title":{},"body":{"interfaces/Day.html":{}}}],["drawer",{"_index":3041,"title":{},"body":{"components/PopComponent.html":{}}}],["drop",{"_index":506,"title":{},"body":{"components/AssetListPopComponent.html":{},"directives/DropzoneDirective.html":{},"miscellaneous/variables.html":{}}}],["drop(",{"_index":1292,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dropday(day",{"_index":1161,"title":{},"body":{"interfaces/Day.html":{}}}],["dropdown",{"_index":2176,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/SelectComponent.html":{}}}],["dropzone/dropzone.direct",{"_index":1689,"title":{},"body":{"modules/FilesModule.html":{}}}],["dropzonedirect",{"_index":295,"title":{"directives/DropzoneDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dublic",{"_index":2627,"title":{},"body":{"components/MockupComponent.html":{}}}],["due",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["dumbbel",{"_index":4519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplic",{"_index":1599,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"injectables/SymbolService.html":{},"interfaces/Upload.html":{}}}],["dure",{"_index":2436,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["dynam",{"_index":213,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["dynamicrackcompon",{"_index":211,"title":{"components/DynamicRackComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicslotcompon",{"_index":212,"title":{"components/DynamicSlotComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicslotcomponent:11",{"_index":1987,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["dynamicslotcomponent:18",{"_index":1977,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["e",{"_index":165,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Day.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/ListItemsComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/item.html":{}}}],["e.data.yt",{"_index":4606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.datatransfer.fil",{"_index":1302,"title":{},"body":{"directives/DropzoneDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["e.datatransfer.files.length",{"_index":1303,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["e.display",{"_index":4797,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["e.g",{"_index":56,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthGuard.html":{},"classes/Config.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Symbol.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["e.id",{"_index":4796,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["e.preventdefault",{"_index":1183,"title":{},"body":{"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/SelectComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["e.stopimmediatepropag",{"_index":2207,"title":{},"body":{"components/ListItemsComponent.html":{},"components/ToolbarComponent.html":{}}}],["e.stoppropag",{"_index":1298,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/ListItemsComponent.html":{},"components/SelectComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["e.target",{"_index":3890,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.fil",{"_index":1625,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["e.target.files.length",{"_index":3891,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.localnam",{"_index":3749,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e.toel",{"_index":3751,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e2",{"_index":4274,"title":{},"body":{"index.html":{}}}],["each",{"_index":957,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{}}}],["easi",{"_index":3948,"title":{},"body":{"changelog.html":{},"additional-documentation/core-classes/list.html":{}}}],["ec",{"_index":27,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["ec.api",{"_index":336,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["ec.asset",{"_index":3188,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["ec.compon",{"_index":1726,"title":{},"body":{"injectables/FormService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes.html":{}}}],["ec.components//src/_",{"_index":4022,"title":{},"body":{"changelog.html":{}}}],["ec.components/_",{"_index":4020,"title":{},"body":{"changelog.html":{}}}],["ec.components/ac",{"_index":4764,"title":{},"body":{"additional-documentation/ace.html":{}}}],["ec.components/cor",{"_index":487,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"pipes/GroupPipe.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/PaginationComponent.html":{},"injectables/PopService.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"index.html":{},"additional-documentation/core-classes.html":{}}}],["ec.components/core/src/collection/collect",{"_index":2263,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{}}}],["ec.components/core/src/config/config",{"_index":2677,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["ec.components/core/src/config/field",{"_index":2678,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["ec.components/core/src/field/field",{"_index":1253,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["ec.components/core/src/form/form",{"_index":1743,"title":{},"body":{"injectables/FormService.html":{},"components/InputComponent.html":{}}}],["ec.components/core/src/item/item",{"_index":1260,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"classes/ResourceForm.html":{},"components/SelectComponent.html":{},"interfaces/Upload.html":{}}}],["ec.components/core/src/list/list",{"_index":951,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/EntryListComponent.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{}}}],["ec.components/core/src/selection/select",{"_index":871,"title":{},"body":{"components/CrudComponent.html":{},"components/ListHeaderComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/data",{"_index":493,"title":{},"body":{"components/AssetListPopComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/data/src/entri",{"_index":3107,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["ec.components/data/src/resourc",{"_index":1860,"title":{},"body":{"injectables/HistoryService.html":{}}}],["ec.components/data/src/sdk/sdk.servic",{"_index":345,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthGuard.html":{},"components/DefaultEntryInputComponent.html":{}}}],["ec.components/loc",{"_index":4181,"title":{},"body":{"dependencies.html":{}}}],["ec.components/medium",{"_index":4179,"title":{},"body":{"dependencies.html":{},"additional-documentation/medium.html":{}}}],["ec.components/styl",{"_index":3994,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/style/components.scss\";5",{"_index":4661,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/tinymc",{"_index":4180,"title":{},"body":{"dependencies.html":{},"additional-documentation/tinymce.html":{}}}],["ec.components/ui",{"_index":135,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["ec.components/ui/src/form/default",{"_index":346,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["ec.components/ui/src/icon/emoji",{"_index":1891,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["ec.components/ui/src/loader/loader.compon",{"_index":872,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/ui/src/loader/loader.servic",{"_index":873,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/ui/src/notifications/notif",{"_index":881,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/UploadComponent.html":{}}}],["ec.components/ui/src/notifications/notifications.compon",{"_index":950,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["ec.components/ui/src/notifications/notifications.servic",{"_index":533,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/ui/src/notifications/with",{"_index":879,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/UploadComponent.html":{}}}],["ec.components/ui/src/pop/pop.compon",{"_index":486,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/UploadComponent.html":{}}}],["ec.components/ui/src/pop/pop.servic",{"_index":492,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["ec.components/ui/src/symbol/symbol.servic",{"_index":878,"title":{},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["ec.components/ui/src/ui.modul",{"_index":564,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{}}}],["ec.components/uidemo",{"_index":4762,"title":{},"body":{"additional-documentation/ui.html":{}}}],["ec.list",{"_index":2625,"title":{},"body":{"components/MockupComponent.html":{}}}],["ec.list.card",{"_index":2633,"title":{},"body":{"components/MockupComponent.html":{}}}],["ec.list.simpl",{"_index":2634,"title":{},"body":{"components/MockupComponent.html":{}}}],["ec.sdk",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{},"classes/Field.html":{},"injectables/SdkService.html":{},"changelog.html":{},"dependencies.html":{}}}],["ec.sdk/lib/account",{"_index":3428,"title":{},"body":{"injectables/SdkService.html":{}}}],["ec.sdk/lib/cor",{"_index":642,"title":{},"body":{"injectables/AuthService.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/datamanag",{"_index":3430,"title":{},"body":{"injectables/SdkService.html":{}}}],["ec.sdk/lib/publicapi",{"_index":404,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{}}}],["ec.sdk/lib/resources/accounts/accountresourc",{"_index":639,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/resources/datamanager/datamanagerresourc",{"_index":348,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/resources/datamanager/modelresourc",{"_index":1859,"title":{},"body":{"injectables/HistoryService.html":{}}}],["ec.sdk/lib/resources/listresourc",{"_index":1370,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetlist",{"_index":1606,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetresourc",{"_index":1941,"title":{},"body":{"directives/ImageDirective.html":{}}}],["ec.sdk/lib/resources/publicapi/entrylist",{"_index":993,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/resources/publicapi/entryresourc",{"_index":992,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetlist",{"_index":1604,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetresourc",{"_index":402,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/resourc",{"_index":3108,"title":{},"body":{"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{}}}],["ec.sdk/lib/sess",{"_index":3431,"title":{},"body":{"injectables/SdkService.html":{}}}],["ecasset",{"_index":361,"title":{},"body":{"directives/AssetDirective.html":{},"changelog.html":{}}}],["ecasset]'},{'nam",{"_index":294,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecdropzon",{"_index":1272,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ecdropzone]'},{'nam",{"_index":296,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecentri",{"_index":1342,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"changelog.html":{}}}],["ecentries]'},{'nam",{"_index":298,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecentry]'},{'nam",{"_index":300,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecicon",{"_index":1911,"title":{},"body":{"injectables/IconService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ecimag",{"_index":1920,"title":{},"body":{"directives/ImageDirective.html":{}}}],["ecimage]'},{'nam",{"_index":303,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecpublicasset",{"_index":3980,"title":{},"body":{"changelog.html":{}}}],["ecvc",{"_index":3776,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["edg",{"_index":1177,"title":{},"body":{"interfaces/Day.html":{}}}],["edit",{"_index":429,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/ToolbarComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["editfilt",{"_index":2156,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["editfilter(pop",{"_index":2164,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["editor",{"_index":13,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["editor#mediumeditor",{"_index":2516,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor'},{'nam",{"_index":255,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["editor,[ec",{"_index":217,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["editor.addbutton('imag",{"_index":4618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor.addbutton('youtub",{"_index":4598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor.caret?.flow?.typ",{"_index":3797,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["editor.caret?.phrasing?.typ",{"_index":3798,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["editor.compon",{"_index":2531,"title":{},"body":{"modules/MediumModule.html":{}}}],["editor.component.html",{"_index":2495,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.scss",{"_index":2494,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.t",{"_index":2490,"title":{},"body":{"components/MediumEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:35",{"_index":2498,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:37",{"_index":2500,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":2501,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:41",{"_index":2502,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":2509,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:45",{"_index":2513,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":2510,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":2512,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:52",{"_index":2505,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:63",{"_index":2503,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:68",{"_index":2508,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:75",{"_index":2511,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:78",{"_index":2506,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:82",{"_index":2507,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.destroy",{"_index":3756,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editor.getcont",{"_index":3739,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editor.insertcont",{"_index":4617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor.on('chang",{"_index":164,"title":{},"body":{"components/AceComponent.html":{}}}],["editor.setcontent(this.valu",{"_index":2524,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["editor.setvalue(this.valu",{"_index":180,"title":{},"body":{"components/AceComponent.html":{}}}],["editor.windowmanager.open",{"_index":4601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor/dist/js/medium",{"_index":2514,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor/editor.compon",{"_index":3790,"title":{},"body":{"components/ToolbarComponent.html":{},"modules/VcModule.html":{}}}],["editor/src/medium",{"_index":2489,"title":{},"body":{"components/MediumEditorComponent.html":{},"coverage.html":{}}}],["editor/src/medium.module.t",{"_index":2530,"title":{},"body":{"modules/MediumModule.html":{}}}],["editor?.caret?.phrasing?.typ",{"_index":3795,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["editor[0",{"_index":3746,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editor]'},{'nam",{"_index":218,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["editorcompon",{"_index":215,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/VcModule.html":{},"coverage.html":{},"overview.html":{}}}],["editorset",{"_index":3736,"title":{},"body":{"components/TinymceComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ein",{"_index":3028,"title":{},"body":{"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{}}}],["einfach",{"_index":4568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["einfügen",{"_index":4602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eingab",{"_index":4307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eingeloggt",{"_index":546,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["einleitung",{"_index":4581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eject",{"_index":4479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["el",{"_index":1281,"title":{},"body":{"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{},"components/TabComponent.html":{}}}],["el.tag",{"_index":3796,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["element",{"_index":108,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["elementref",{"_index":104,"title":{},"body":{"components/AceComponent.html":{},"directives/DropzoneDirective.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["elimin",{"_index":4760,"title":{},"body":{"additional-documentation/ui.html":{}}}],["email",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["emailavail",{"_index":2468,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emaillabel",{"_index":2420,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["emailplacehold",{"_index":2421,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["emailunavail",{"_index":4302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailvalid",{"_index":4169,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["embed",{"_index":1317,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["embedd",{"_index":1888,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["emit",{"_index":465,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["emit(host",{"_index":2781,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["emit(notif",{"_index":2841,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["emitt",{"_index":464,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/NotificationsService.html":{},"components/SelectComponent.html":{}}}],["emoji",{"_index":4638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emojiicon",{"_index":1890,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/icons.html":{}}}],["empti",{"_index":454,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ListConfig.html":{},"components/MediumEditorComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["en",{"_index":3622,"title":{},"body":{"injectables/SymbolService.html":{}}}],["enabl",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{},"index.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["enableupd",{"_index":1835,"title":{},"body":{"injectables/HistoryService.html":{}}}],["enableupdates(resourc",{"_index":1843,"title":{},"body":{"injectables/HistoryService.html":{}}}],["encapsul",{"_index":2056,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{}}}],["end",{"_index":1144,"title":{},"body":{"interfaces/Day.html":{},"index.html":{}}}],["endless",{"_index":1347,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["enforc",{"_index":4684,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["enhanc",{"_index":3615,"title":{},"body":{"injectables/SymbolService.html":{}}}],["enough",{"_index":4664,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["enrich",{"_index":3113,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["ensur",{"_index":3021,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["enter",{"_index":4501,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["entiti",{"_index":2038,"title":{},"body":{"interfaces/ItemConfig.html":{},"additional-documentation/core-classes/item.html":{}}}],["entri",{"_index":208,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/data.html":{}}}],["entries/entries.direct",{"_index":1058,"title":{},"body":{"modules/DataModule.html":{}}}],["entriesdirect",{"_index":297,"title":{"directives/EntriesDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entry.del().then((r",{"_index":1030,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["entry.getimagethumburl(properti",{"_index":3823,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.gettitle(properti",{"_index":3834,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.sav",{"_index":1004,"title":{},"body":{"injectables/CrudService.html":{},"injectables/SymbolPipe.html":{},"interfaces/Update.html":{}}}],["entry.save().then((_entri",{"_index":1018,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["entry/entry.direct",{"_index":1059,"title":{},"body":{"modules/DataModule.html":{}}}],["entry[key",{"_index":1014,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["entrycompon",{"_index":321,"title":{},"body":{"modules/AceModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["entrydirect",{"_index":299,"title":{"directives/EntryDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryformcompon",{"_index":219,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryformcomponent.deleteentri",{"_index":3997,"title":{},"body":{"changelog.html":{}}}],["entryid",{"_index":1393,"title":{},"body":{"directives/EntryDirective.html":{},"injectables/ResourceService.html":{}}}],["entrylist",{"_index":864,"title":{},"body":{"components/CrudComponent.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"interfaces/Update.html":{},"coverage.html":{}}}],["entrylist(this.model",{"_index":1478,"title":{},"body":{"components/EntryListComponent.html":{}}}],["entrylistcompon",{"_index":221,"title":{"components/EntryListComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrypop",{"_index":825,"title":{},"body":{"components/CrudComponent.html":{}}}],["entrypopcompon",{"_index":223,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryresourc",{"_index":975,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{}}}],["entryselectcompon",{"_index":224,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["env",{"_index":3429,"title":{},"body":{"injectables/SdkService.html":{}}}],["env=prod",{"_index":4244,"title":{},"body":{"index.html":{}}}],["env=stag",{"_index":4245,"title":{},"body":{"index.html":{}}}],["envelop",{"_index":4372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environ",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/SdkService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["environment.clientid",{"_index":3445,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.datamanagerid",{"_index":3448,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.environ",{"_index":3455,"title":{},"body":{"injectables/SdkService.html":{}}}],["environments/environ",{"_index":4672,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["equal",{"_index":895,"title":{},"body":{"components/CrudComponent.html":{},"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["equalis",{"_index":4373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eras",{"_index":4374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erhalten",{"_index":3032,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["err",{"_index":910,"title":{},"body":{"components/CrudComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["err.messag",{"_index":2470,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["error",{"_index":515,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["error'},{'nam",{"_index":226,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["error('cannot",{"_index":414,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{}}}],["error('get",{"_index":3437,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('no",{"_index":3432,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('th",{"_index":3628,"title":{},"body":{"injectables/SymbolService.html":{}}}],["error(`cannot",{"_index":2932,"title":{},"body":{"classes/Pagination.html":{}}}],["error.cod",{"_index":1494,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.code}}{{error.datapath}}{{error?.message}}{{error.detail",{"_index":1498,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":1482,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.datapath",{"_index":1495,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.detail",{"_index":1497,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.messag",{"_index":2028,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["error/error.compon",{"_index":2826,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["error?.messag",{"_index":1496,"title":{},"body":{"components/ErrorComponent.html":{}}}],["errorcompon",{"_index":225,"title":{"components/ErrorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormessag",{"_index":2415,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["errors'},{'nam",{"_index":234,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["errors.compon",{"_index":2035,"title":{},"body":{"modules/IoModule.html":{}}}],["errors.component.html",{"_index":2016,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.scss",{"_index":2015,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.t",{"_index":2012,"title":{},"body":{"components/InputErrorsComponent.html":{},"coverage.html":{}}}],["errors.component.ts:13",{"_index":2018,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:15",{"_index":2022,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:19",{"_index":2019,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors/input",{"_index":2011,"title":{},"body":{"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"coverage.html":{}}}],["errs.push",{"_index":2027,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["erstellt",{"_index":4710,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["es2015",{"_index":4247,"title":{},"body":{"index.html":{}}}],["es6",{"_index":1097,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"dependencies.html":{}}}],["escap",{"_index":3068,"title":{},"body":{"injectables/PopService.html":{}}}],["etc",{"_index":1516,"title":{},"body":{"classes/Field.html":{},"components/ListItemsComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["euro",{"_index":4453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["even",{"_index":934,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["event",{"_index":379,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["event.key",{"_index":3075,"title":{},"body":{"injectables/PopService.html":{}}}],["event.keycod",{"_index":3073,"title":{},"body":{"injectables/PopService.html":{}}}],["eventemitt",{"_index":380,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/core-classes.html":{}}}],["eventemitter.t",{"_index":809,"title":{},"body":{"classes/Config.html":{}}}],["eventsourc",{"_index":1833,"title":{},"body":{"injectables/HistoryService.html":{}}}],["eventu",{"_index":3897,"title":{},"body":{"components/UploadComponent.html":{},"index.html":{}}}],["everyth",{"_index":2639,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["everytim",{"_index":991,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["exact",{"_index":1105,"title":{},"body":{"pipes/DatetimePipe.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"injectables/TypeConfigService.html":{}}}],["exampl",{"_index":7,"title":{},"body":{"components/AceComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["exclud",{"_index":4262,"title":{},"body":{"index.html":{}}}],["execut",{"_index":4272,"title":{},"body":{"index.html":{}}}],["exist",{"_index":987,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["expand",{"_index":4375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect",{"_index":139,"title":{},"body":{"components/AceComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"interfaces/Symbol.html":{},"miscellaneous/variables.html":{}}}],["experiment",{"_index":2149,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["explicitli",{"_index":4261,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["export",{"_index":145,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["exporta",{"_index":405,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["expos",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{}}}],["exposur",{"_index":4376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extend",{"_index":18,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListComponent.html":{},"interfaces/FormConfig.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"classes/ResourceForm.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["extens",{"_index":424,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListComponent.html":{},"interfaces/FormConfig.html":{},"classes/ResourceForm.html":{}}}],["extensions/modes/them",{"_index":4768,"title":{},"body":{"additional-documentation/ace.html":{}}}],["extern",{"_index":944,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Pagination.html":{}}}],["extra",{"_index":426,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/CrudConfig.html":{},"additional-documentation/core-classes/form.html":{}}}],["extract",{"_index":1737,"title":{},"body":{"injectables/FormService.html":{}}}],["ey",{"_index":4384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f.name",{"_index":3914,"title":{},"body":{"components/UploadComponent.html":{}}}],["f]{12}$/i",{"_index":3120,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["f]{3",{"_index":3118,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["f]{4",{"_index":3116,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["f]{8",{"_index":3115,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["facebook",{"_index":4491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factori",{"_index":4498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fail",{"_index":529,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Collection.html":{},"index.html":{}}}],["failiur",{"_index":2794,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["faktor",{"_index":4714,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["fall",{"_index":945,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["fallback",{"_index":2078,"title":{},"body":{"components/ListComponent.html":{}}}],["fals",{"_index":409,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"modules/NotificationsModule.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["fancier",{"_index":3764,"title":{},"body":{"components/ToggleComponent.html":{}}}],["fax",{"_index":4499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fb",{"_index":2428,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["featur",{"_index":2784,"title":{},"body":{"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["feature=oembed&rel=0",{"_index":4616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fehler",{"_index":2778,"title":{},"body":{"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["feld",{"_index":4305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff5353",{"_index":4564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffff8d",{"_index":4565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":3114,"title":{},"body":{"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["ffnungszeiten",{"_index":4729,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["field",{"_index":41,"title":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"directives/SlotHostDirective.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["field'",{"_index":1535,"title":{},"body":{"classes/Field.html":{}}}],["field('nam",{"_index":1559,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.compon",{"_index":1319,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["field.display(nam",{"_index":1567,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.form",{"_index":1746,"title":{},"body":{"injectables/FormService.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["field.group(nam",{"_index":1568,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.label",{"_index":2186,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.maxitems||10",{"_index":1265,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["field.properti",{"_index":2187,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.queryfilt",{"_index":1467,"title":{},"body":{"components/EntryListComponent.html":{}}}],["field.queryfilter(valu",{"_index":1468,"title":{},"body":{"components/EntryListComponent.html":{}}}],["field.requir",{"_index":1757,"title":{},"body":{"injectables/FormService.html":{}}}],["field.resolve({value:{name:'bobbi",{"_index":1565,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.sort(nam",{"_index":1570,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.title).filter(field",{"_index":3141,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["field.typ",{"_index":355,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["field.valid",{"_index":1741,"title":{},"body":{"injectables/FormService.html":{}}}],["field.validate(control.valu",{"_index":1760,"title":{},"body":{"injectables/FormService.html":{}}}],["field[0",{"_index":3142,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["fieldconfig",{"_index":1587,"title":{"interfaces/FieldConfig.html":{}},"body":{"interfaces/FieldConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{},"additional-documentation/core-classes/item.html":{}}}],["fieldconfig).then((field",{"_index":2732,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[properti",{"_index":2710,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfigproperti",{"_index":1500,"title":{},"body":{"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/ResourceForm.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{},"additional-documentation/core-classes/field.html":{}}}],["fieldfilt",{"_index":1447,"title":{},"body":{"components/EntryListComponent.html":{}}}],["fieldhost",{"_index":1324,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldhostdirect",{"_index":1331,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldlabel",{"_index":2157,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["fieldlabel(field",{"_index":2167,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["fieldnam",{"_index":1593,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["fields.filter((field",{"_index":3935,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fields.pip",{"_index":1711,"title":{},"body":{"modules/FormModule.html":{}}}],["fields.pipe.t",{"_index":3930,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{},"coverage.html":{}}}],["fields.pipe.ts:10",{"_index":3933,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fieldvalid",{"_index":2459,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fieldvalidators.email",{"_index":2467,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["file.servic",{"_index":491,"title":{},"body":{"components/AssetListPopComponent.html":{},"modules/FilesModule.html":{},"components/UploadComponent.html":{}}}],["fileinput",{"_index":3860,"title":{},"body":{"components/UploadComponent.html":{}}}],["filelist",{"_index":1624,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["filenam",{"_index":1602,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["fileopt",{"_index":1590,"title":{"interfaces/FileOptions.html":{}},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"coverage.html":{}}}],["files.length",{"_index":1626,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["files/files.modul",{"_index":1056,"title":{},"body":{"modules/DataModule.html":{}}}],["fileservic",{"_index":1607,"title":{"injectables/FileService.html":{}},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filesmodul",{"_index":1037,"title":{"modules/FilesModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filestoupload",{"_index":3861,"title":{},"body":{"components/UploadComponent.html":{}}}],["fill",{"_index":4513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill(0",{"_index":1204,"title":{},"body":{"interfaces/Day.html":{}}}],["filter",{"_index":968,"title":{},"body":{"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/list.html":{}}}],["filter((item",{"_index":3576,"title":{},"body":{"classes/Sorter.html":{}}}],["filter(properti",{"_index":1441,"title":{},"body":{"components/EntryListComponent.html":{},"injectables/ModelConfigService.html":{}}}],["filter(rout",{"_index":2594,"title":{},"body":{"components/MenuComponent.html":{}}}],["filter[key",{"_index":1000,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["filteroper",{"_index":1501,"title":{},"body":{"classes/Field.html":{},"injectables/TypeConfigService.html":{}}}],["filteropt",{"_index":1355,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["filterpopclass",{"_index":1502,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["find",{"_index":168,"title":{},"body":{"components/AceComponent.html":{},"injectables/SymbolService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["finish",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["fire",{"_index":378,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["first",{"_index":474,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["fit",{"_index":984,"title":{},"body":{"injectables/CrudService.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["fix",{"_index":1658,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"changelog.html":{},"index.html":{}}}],["flag",{"_index":738,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"injectables/NotificationsService.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["flash",{"_index":4378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flat",{"_index":4229,"title":{},"body":{"index.html":{}}}],["flexibl",{"_index":2092,"title":{},"body":{"components/ListComponent.html":{},"changelog.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["flip",{"_index":1289,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/LoginFormComponent.html":{},"injectables/SdkService.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":4702,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["fn",{"_index":89,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["focu",{"_index":3788,"title":{},"body":{"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["focusout",{"_index":3781,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["focusout(",{"_index":3785,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["folder",{"_index":4035,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["follow",{"_index":1901,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["font",{"_index":3591,"title":{},"body":{"interfaces/Symbol.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":3053,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["foreach((field",{"_index":1747,"title":{},"body":{"injectables/FormService.html":{}}}],["forecolor",{"_index":4594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forenviron",{"_index":4678,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["forenvironment(environ",{"_index":1068,"title":{},"body":{"modules/DataModule.html":{}}}],["forev",{"_index":2750,"title":{},"body":{"classes/Notification.html":{}}}],["form",{"_index":112,"title":{"additional-documentation/core-classes/form.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/form.html":{}}}],["form'",{"_index":1984,"title":{},"body":{"components/InputComponent.html":{}}}],["form'},{'nam",{"_index":220,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["form(nul",{"_index":4807,"title":{},"body":{"additional-documentation/core-classes/form.html":{}}}],["form.compon",{"_index":174,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FormModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"modules/UtilityModule.html":{},"changelog.html":{}}}],["form.component.html",{"_index":2414,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.scss",{"_index":2413,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.t",{"_index":2409,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:18",{"_index":2455,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:20",{"_index":2458,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:22",{"_index":2454,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:24",{"_index":2445,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:26",{"_index":2443,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:28",{"_index":2437,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:30",{"_index":2442,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:32",{"_index":2433,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:34",{"_index":2435,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:36",{"_index":2439,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:38",{"_index":2440,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:40",{"_index":2431,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:42",{"_index":2430,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:44",{"_index":2427,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:51",{"_index":2450,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:59",{"_index":2453,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:67",{"_index":2447,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:72",{"_index":2451,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.fields.filter((field",{"_index":1745,"title":{},"body":{"injectables/FormService.html":{}}}],["form.servic",{"_index":1710,"title":{},"body":{"modules/FormModule.html":{}}}],["form.t",{"_index":3309,"title":{},"body":{"classes/ResourceForm.html":{},"coverage.html":{}}}],["form.ts:11",{"_index":3315,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form.ts:12",{"_index":3316,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form.ts:13",{"_index":3317,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form.ts:17",{"_index":3322,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form.ts:8",{"_index":3314,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form/admin",{"_index":325,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"modules/DataModule.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["form/default",{"_index":1048,"title":{},"body":{"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["form/entri",{"_index":868,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"coverage.html":{}}}],["form/form.compon",{"_index":2178,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["form/form.modul",{"_index":2218,"title":{},"body":{"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["form/login",{"_index":2408,"title":{},"body":{"components/LoginFormComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{}}}],["form/resourc",{"_index":1060,"title":{},"body":{"modules/DataModule.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["form:11",{"_index":3319,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form:13",{"_index":3318,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form:31",{"_index":3325,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form:49",{"_index":3327,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form:54",{"_index":3329,"title":{},"body":{"classes/ResourceForm.html":{}}}],["format",{"_index":1122,"title":{},"body":{"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["formattedtext",{"_index":3820,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["formbuild",{"_index":2426,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["formcompon",{"_index":227,"title":{"additional-documentation/ui/formcomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["formcomponent#input",{"_index":1985,"title":{},"body":{"components/InputComponent.html":{}}}],["formcomponent.submit",{"_index":4000,"title":{},"body":{"changelog.html":{}}}],["formconfig",{"_index":1690,"title":{"interfaces/FormConfig.html":{}},"body":{"interfaces/FormConfig.html":{},"classes/ResourceForm.html":{},"coverage.html":{}}}],["formcontrol",{"_index":122,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/LocationPickerComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["formcontrol(form.getvalue(field.properti",{"_index":1750,"title":{},"body":{"injectables/FormService.html":{}}}],["formdata",{"_index":1622,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["former",{"_index":3988,"title":{},"body":{"changelog.html":{}}}],["formgroup",{"_index":127,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{}}}],["formgroup(control",{"_index":1755,"title":{},"body":{"injectables/FormService.html":{}}}],["formmodul",{"_index":1694,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["formservic",{"_index":1707,"title":{"injectables/FormService.html":{}},"body":{"modules/FormModule.html":{},"injectables/FormService.html":{},"coverage.html":{},"overview.html":{}}}],["formsmodul",{"_index":1044,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{}}}],["forwardref",{"_index":131,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["found",{"_index":514,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["foundat",{"_index":4774,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["fourth",{"_index":4204,"title":{},"body":{"index.html":{}}}],["fox",{"_index":2629,"title":{},"body":{"components/MockupComponent.html":{}}}],["frage",{"_index":4585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frame",{"_index":4379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frompromis",{"_index":1789,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["frompromise(this.maploader.load",{"_index":1809,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["fromsearch",{"_index":2344,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["front",{"_index":4409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fruit",{"_index":2096,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["früchte",{"_index":4817,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["full",{"_index":2579,"title":{},"body":{"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["fullscreen",{"_index":4541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fun",{"_index":4688,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["function",{"_index":570,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{}}}],["fundament",{"_index":715,"title":{},"body":{"classes/Collection.html":{}}}],["further",{"_index":2747,"title":{},"body":{"classes/Notification.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{},"index.html":{}}}],["g",{"_index":4641,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["gener",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["generateconfig",{"_index":2644,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generateconfig(model",{"_index":2652,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generatefieldconfig",{"_index":2645,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generatefieldconfig(model",{"_index":2654,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["geo",{"_index":2347,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["geocod",{"_index":1764,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocode.servic",{"_index":2323,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["geocodelatlng",{"_index":1766,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodelatlng(geocod",{"_index":1778,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocoder.geocod",{"_index":1814,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodeservic",{"_index":1761,"title":{"injectables/GeocodeService.html":{}},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["get",{"_index":2743,"title":{"changelog.html":{},"index.html":{}},"body":{"classes/Notification.html":{},"index.html":{},"additional-documentation/core-classes/list.html":{}}}],["get(nam",{"_index":3609,"title":{},"body":{"injectables/SymbolService.html":{}}}],["get(properti",{"_index":2659,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["get(relationnam",{"_index":3094,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["get(typ",{"_index":3812,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["getaccount",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getaccount(api",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getalgorithm",{"_index":3552,"title":{},"body":{"classes/Sorter.html":{}}}],["getalgorithm(item",{"_index":3557,"title":{},"body":{"classes/Sorter.html":{}}}],["getallowedmodelmethod",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedmodelmethods(model",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethod",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethods(rel",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["getapi",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getapi(email",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcolor",{"_index":2539,"title":{},"body":{"components/MenuComponent.html":{}}}],["getcolor(level",{"_index":2570,"title":{},"body":{"components/MenuComponent.html":{}}}],["getconfig",{"_index":3105,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["getdaycolor(_mo",{"_index":1187,"title":{},"body":{"interfaces/Day.html":{}}}],["geterror",{"_index":2017,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["getfield",{"_index":3311,"title":{},"body":{"classes/ResourceForm.html":{}}}],["getfield(properti",{"_index":3326,"title":{},"body":{"classes/ResourceForm.html":{}}}],["getformdata",{"_index":1663,"title":{},"body":{"injectables/FileService.html":{}}}],["getformdata(fil",{"_index":1623,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["getgroup",{"_index":1728,"title":{},"body":{"injectables/FormService.html":{}}}],["getgroup(form",{"_index":1733,"title":{},"body":{"injectables/FormService.html":{}}}],["getitemcolor",{"_index":2540,"title":{},"body":{"components/MenuComponent.html":{}}}],["getitemcolor(item",{"_index":2572,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlevel",{"_index":2541,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlevel(level",{"_index":2574,"title":{},"body":{"components/MenuComponent.html":{}}}],["getmonth(day",{"_index":1199,"title":{},"body":{"interfaces/Day.html":{}}}],["getnearestaddress",{"_index":1767,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getnearestaddress(loc",{"_index":1783,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getpag",{"_index":2874,"title":{},"body":{"classes/Pagination.html":{}}}],["getpath",{"_index":2542,"title":{},"body":{"components/MenuComponent.html":{}}}],["getpath(item",{"_index":2577,"title":{},"body":{"components/MenuComponent.html":{}}}],["getpermiss",{"_index":2833,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getplacehold",{"_index":1508,"title":{},"body":{"classes/Field.html":{}}}],["getpopclass",{"_index":828,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["getroot",{"_index":3423,"title":{},"body":{"injectables/SdkService.html":{}}}],["getschema",{"_index":3393,"title":{},"body":{"injectables/SdkService.html":{}}}],["getschema(model",{"_index":3400,"title":{},"body":{"injectables/SdkService.html":{}}}],["getter",{"_index":798,"title":{},"body":{"classes/Config.html":{},"injectables/SdkService.html":{},"additional-documentation/core-classes/form.html":{}}}],["getvalid",{"_index":1729,"title":{},"body":{"injectables/FormService.html":{}}}],["getvalidators(field",{"_index":1735,"title":{},"body":{"injectables/FormService.html":{}}}],["getvalu",{"_index":3312,"title":{},"body":{"classes/ResourceForm.html":{}}}],["getvalue(properti",{"_index":3328,"title":{},"body":{"classes/ResourceForm.html":{}}}],["github",{"_index":4514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["give",{"_index":983,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["given",{"_index":75,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["glass",{"_index":4485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["global",{"_index":2241,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["globalload",{"_index":2247,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["globe",{"_index":4402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glue",{"_index":4515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glyph",{"_index":3592,"title":{},"body":{"interfaces/Symbol.html":{}}}],["go",{"_index":4276,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["googl",{"_index":1763,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["google.maps.geocod",{"_index":1821,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.places.autocomplete(el",{"_index":1795,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["googlemap",{"_index":2377,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["gp",{"_index":4403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradient",{"_index":4380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":2840,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["graph",{"_index":4338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grid",{"_index":4557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group",{"_index":42,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{}}}],["group.addcontrol(field.properti",{"_index":1756,"title":{},"body":{"injectables/FormService.html":{}}}],["group.nam",{"_index":3166,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["group.pip",{"_index":2216,"title":{},"body":{"modules/ListModule.html":{}}}],["group.valu",{"_index":1480,"title":{},"body":{"components/EntryListComponent.html":{},"components/ListComponent.html":{}}}],["groupdat",{"_index":3804,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["groupid",{"_index":3249,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["groupnam",{"_index":2626,"title":{},"body":{"components/MockupComponent.html":{}}}],["grouppip",{"_index":1104,"title":{"pipes/GroupPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"modules/ListModule.html":{},"coverage.html":{},"overview.html":{}}}],["grow",{"_index":1351,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["größer",{"_index":4715,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["guard",{"_index":511,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.servic",{"_index":568,"title":{},"body":{"modules/AuthModule.html":{}}}],["guard.service.t",{"_index":510,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["guard.service.ts:12",{"_index":524,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.service.ts:17",{"_index":525,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guid",{"_index":4206,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["h",{"_index":2102,"title":{},"body":{"components/ListComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["h2",{"_index":4573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h3",{"_index":4574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h4",{"_index":4576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h5",{"_index":4578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haben",{"_index":3026,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["hacki",{"_index":2009,"title":{},"body":{"components/InputComponent.html":{}}}],["halfr",{"_index":1858,"title":{},"body":{"injectables/HistoryService.html":{}}}],["hamburg",{"_index":4413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hand",{"_index":4365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handl",{"_index":427,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListComponent.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["handler",{"_index":2075,"title":{},"body":{"components/ListComponent.html":{},"components/SelectComponent.html":{}}}],["happen",{"_index":995,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["harri",{"_index":4405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["has(item",{"_index":746,"title":{},"body":{"classes/Collection.html":{}}}],["hasactivepath",{"_index":2543,"title":{},"body":{"components/MenuComponent.html":{}}}],["hasactivepath(item",{"_index":2580,"title":{},"body":{"components/MenuComponent.html":{}}}],["hasal",{"_index":720,"title":{},"body":{"classes/Collection.html":{}}}],["hasall(item",{"_index":749,"title":{},"body":{"classes/Collection.html":{}}}],["hasentri",{"_index":3144,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["hash",{"_index":4381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hasmethod",{"_index":829,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["hasmethod(method",{"_index":851,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["haspassword",{"_index":3157,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["haspendingemail",{"_index":3159,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["have",{"_index":329,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/LoaderService.html":{}}}],["header",{"_index":1146,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["header'},{'nam",{"_index":237,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["header.compon",{"_index":2215,"title":{},"body":{"modules/ListModule.html":{}}}],["header.component.html",{"_index":2154,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.scss",{"_index":2153,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.t",{"_index":2152,"title":{},"body":{"components/ListHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:16",{"_index":2159,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:18",{"_index":2160,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:20",{"_index":2175,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:22",{"_index":2171,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:25",{"_index":2165,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:31",{"_index":2162,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:35",{"_index":2170,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:39",{"_index":2168,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header/list",{"_index":2151,"title":{},"body":{"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["headlin",{"_index":2753,"title":{},"body":{"classes/Notification.html":{}}}],["health",{"_index":4382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heart",{"_index":4482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heatmap",{"_index":1137,"title":{},"body":{"interfaces/Day.html":{}}}],["heatmap'},{'nam",{"_index":229,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["heatmapcompon",{"_index":228,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":2095,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["help",{"_index":1980,"title":{},"body":{"components/InputComponent.html":{},"index.html":{}}}],["helper",{"_index":1358,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["here",{"_index":2244,"title":{},"body":{"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["hexcolor",{"_index":3083,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["hidden",{"_index":1503,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["hide",{"_index":440,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/SelectComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["hidefirstlast",{"_index":2997,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["hidepag",{"_index":2998,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["high",{"_index":4459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["higher",{"_index":2103,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["highlight",{"_index":4385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hint",{"_index":4773,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["histori",{"_index":1855,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/WithNotifications.html":{}}}],["historyservic",{"_index":1040,"title":{"injectables/HistoryService.html":{}},"body":{"modules/DataModule.html":{},"injectables/HistoryService.html":{},"coverage.html":{},"overview.html":{}}}],["hochladen",{"_index":507,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["hold",{"_index":327,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/MockupComponent.html":{},"injectables/PopService.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{}}}],["holder",{"_index":1411,"title":{},"body":{"components/EntryListComponent.html":{}}}],["home",{"_index":4429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hook",{"_index":172,"title":{},"body":{"components/AceComponent.html":{},"injectables/ResourceConfig.html":{}}}],["hook.method",{"_index":3146,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["horizont",{"_index":4335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":306,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["host.direct",{"_index":1332,"title":{},"body":{"components/DynamicSlotComponent.html":{},"modules/IoModule.html":{}}}],["host.directive.t",{"_index":3542,"title":{},"body":{"directives/SlotHostDirective.html":{},"coverage.html":{}}}],["host.directive.ts:11",{"_index":3547,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["host.directive.ts:9",{"_index":3545,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["hostbind",{"_index":1274,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostbinding('class.i",{"_index":1294,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlisten",{"_index":1276,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/SelectComponent.html":{},"components/ToolbarComponent.html":{}}}],["hostlistener('click",{"_index":3791,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["hostlistener('document:click",{"_index":3510,"title":{},"body":{"components/SelectComponent.html":{}}}],["hostlistener('dragleav",{"_index":1305,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('dragov",{"_index":1295,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('drop",{"_index":1300,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('focusout",{"_index":3794,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["hour",{"_index":4733,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["hourglass",{"_index":4386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hours.component.html",{"_index":4734,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["hours.component.scss",{"_index":4735,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["hover",{"_index":2536,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoverdelay",{"_index":2548,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoveritem",{"_index":2544,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoveritem(item",{"_index":2583,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoverout",{"_index":2545,"title":{},"body":{"components/MenuComponent.html":{}}}],["html",{"_index":183,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"pipes/SafeHtmlPipe.html":{},"components/SelectComponent.html":{},"injectables/SymbolPipe.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["html.pipe",{"_index":3927,"title":{},"body":{"modules/VcModule.html":{}}}],["html.pipe.t",{"_index":3375,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"coverage.html":{}}}],["html.pipe.ts:10",{"_index":3381,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["http",{"_index":4685,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["http://localhost:4200",{"_index":4237,"title":{},"body":{"index.html":{}}}],["https://angular.io/guide/dynam",{"_index":3543,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["https://blog.thoughtram.io/angular/2016/07/27/custom",{"_index":4739,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["https://components.entrecode.d",{"_index":4207,"title":{},"body":{"index.html":{}}}],["https://components.entrecode.de/auth/auth",{"_index":2386,"title":{},"body":{"components/LoginComponent.html":{}}}],["https://components.entrecode.de/data/crud",{"_index":819,"title":{},"body":{"components/CrudComponent.html":{}}}],["https://components.entrecode.de/data/entri",{"_index":1341,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{}}}],["https://components.entrecode.de/misc/ac",{"_index":17,"title":{},"body":{"components/AceComponent.html":{}}}],["https://components.entrecode.de/misc/medium",{"_index":2492,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["https://components.entrecode.de/misc/tinymc",{"_index":3699,"title":{},"body":{"components/TinymceComponent.html":{}}}],["https://components.entrecode.de/ui/datetim",{"_index":1071,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["https://components.entrecode.de/ui/list/bas",{"_index":2053,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/list/transform",{"_index":2055,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/load",{"_index":2223,"title":{},"body":{"components/LoaderComponent.html":{}}}],["https://components.entrecode.de/ui/login",{"_index":2412,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["https://components.entrecode.de/ui/notif",{"_index":2761,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["https://components.entrecode.de/ui/pop",{"_index":3042,"title":{},"body":{"components/PopComponent.html":{}}}],["https://components.entrecode.de/ui/select",{"_index":3465,"title":{},"body":{"components/SelectComponent.html":{}}}],["https://components.entrecode.de/ui/tab",{"_index":3659,"title":{},"body":{"components/TabsComponent.html":{}}}],["https://doc.entrecode.de/en/develop/resources/dm",{"_index":3195,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["https://docs.npmjs.com/cli/access#detail",{"_index":4755,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["https://entrecode.de/schema/dm",{"_index":3207,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["https://entrecode.github.io/ec.compon",{"_index":4205,"title":{},"body":{"index.html":{}}}],["https://entrecode.github.io/ec.sdk/#api",{"_index":1427,"title":{},"body":{"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["https://entrecode.github.io/ec.sdk/#environ",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["https://github.com/ajaxorg/ac",{"_index":148,"title":{},"body":{"components/AceComponent.html":{}}}],["https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4",{"_index":1754,"title":{},"body":{"injectables/FormService.html":{}}}],["https://github.com/auth0/angular2",{"_index":572,"title":{},"body":{"modules/AuthModule.html":{}}}],["https://github.com/mishoo/uglifyjs2/issues/659",{"_index":4251,"title":{},"body":{"index.html":{}}}],["https://icons.entrecode.de/ec",{"_index":4552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://localhost:4200",{"_index":4691,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["https://localhost:4200/muffin",{"_index":4701,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["https://www.youtube.com/emb",{"_index":4614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https?:\\/\\/(?:[a",{"_index":4608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["human",{"_index":1554,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"additional-documentation/core-classes/field.html":{}}}],["höhe",{"_index":4811,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["höher",{"_index":4812,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["i+1",{"_index":2986,"title":{},"body":{"components/PaginationComponent.html":{}}}],["icon",{"_index":1504,"title":{"additional-documentation/ui/icons.html":{}},"body":{"classes/Field.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/icons.html":{}}}],["icon'},{'nam",{"_index":231,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["icon.compon",{"_index":1909,"title":{},"body":{"modules/IconModule.html":{}}}],["icon.component.html",{"_index":1880,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.cont",{"_index":1903,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.servic",{"_index":1895,"title":{},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{}}}],["icon/icon.modul",{"_index":1719,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/UiModule.html":{}}}],["iconcompon",{"_index":230,"title":{"components/IconComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iconmodul",{"_index":1704,"title":{"modules/IconModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["icons.t",{"_index":4155,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["iconservic",{"_index":1882,"title":{"injectables/IconService.html":{}},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/icons.html":{}}}],["id",{"_index":360,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["idea",{"_index":2091,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["identifi",{"_index":1610,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["identifierpattern",{"_index":2040,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["ids.push(asset",{"_index":1652,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["ifram",{"_index":187,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{}}}],["ignor",{"_index":1598,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["ignoredupl",{"_index":1594,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["imag",{"_index":1915,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["image/image.direct",{"_index":1688,"title":{},"body":{"modules/FilesModule.html":{}}}],["imagedirect",{"_index":301,"title":{"directives/ImageDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["images",{"_index":3201,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["img",{"_index":302,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["img'",{"_index":1916,"title":{},"body":{"directives/ImageDirective.html":{}}}],["immedi",{"_index":372,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["immut",{"_index":979,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["immuta",{"_index":3093,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["implement",{"_index":15,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"pipes/SafeHtmlPipe.html":{},"components/SelectComponent.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["impli",{"_index":4227,"title":{},"body":{"index.html":{}}}],["import",{"_index":60,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["impressum",{"_index":4277,"title":{},"body":{"index.html":{}}}],["improv",{"_index":4046,"title":{},"body":{"changelog.html":{}}}],["inbox",{"_index":4388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includ",{"_index":1600,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/core-classes/form.html":{}}}],["includeassetidinpath",{"_index":1595,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["incom",{"_index":3377,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{}}}],["incompat",{"_index":3968,"title":{},"body":{"changelog.html":{}}}],["increas",{"_index":4391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indent",{"_index":4389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":32,"title":{"index.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/selection.html":{}}}],["index(item",{"_index":752,"title":{},"body":{"classes/Collection.html":{}}}],["index.html",{"_index":1889,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ace.html":{}}}],["index.t",{"_index":4231,"title":{},"body":{"index.html":{}}}],["indic",{"_index":1597,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["infin",{"_index":4392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["inform",{"_index":2172,"title":{},"body":{"components/ListHeaderComponent.html":{},"classes/Notification.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes.html":{}}}],["inhabit",{"_index":2044,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["inherit",{"_index":123,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/OutputComponent.html":{},"classes/ResourceForm.html":{},"additional-documentation/ui.html":{}}}],["init",{"_index":45,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"directives/EntriesDirective.html":{},"components/MediumEditorComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes/form.html":{}}}],["init(environ",{"_index":3404,"title":{},"body":{"injectables/SdkService.html":{}}}],["initfilt",{"_index":1415,"title":{},"body":{"components/EntryListComponent.html":{}}}],["initfilterqueri",{"_index":1416,"title":{},"body":{"components/EntryListComponent.html":{}}}],["initfilterquery(fieldfilt",{"_index":1444,"title":{},"body":{"components/EntryListComponent.html":{}}}],["initi",{"_index":119,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"changelog.html":{}}}],["initmethod",{"_index":3251,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["initselect",{"_index":3470,"title":{},"body":{"components/SelectComponent.html":{}}}],["inittab",{"_index":3663,"title":{},"body":{"components/TabsComponent.html":{}}}],["inject",{"_index":367,"title":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["inject('environ",{"_index":644,"title":{},"body":{"injectables/AuthService.html":{}}}],["inlin",{"_index":4583,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/ui.html":{}}}],["input",{"_index":35,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["input#id",{"_index":3957,"title":{},"body":{"changelog.html":{}}}],["input'",{"_index":1085,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["input'},{'nam",{"_index":232,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["input('config",{"_index":2110,"title":{},"body":{"components/ListComponent.html":{}}}],["input.compon",{"_index":173,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["input.component.html",{"_index":338,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["input.component.scss",{"_index":4723,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["input.component.t",{"_index":326,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["input.component.ts:10",{"_index":1248,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input.component.ts:12",{"_index":1258,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:13",{"_index":343,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["input.component.ts:14",{"_index":344,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultInputComponent.html":{}}}],["input.component.ts:16",{"_index":1259,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:18",{"_index":1257,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:9",{"_index":1247,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input/default",{"_index":347,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["input/input.compon",{"_index":2034,"title":{},"body":{"modules/IoModule.html":{}}}],["input/output",{"_index":4040,"title":{},"body":{"changelog.html":{},"additional-documentation/data.html":{}}}],["input[type=fil",{"_index":3882,"title":{},"body":{"components/UploadComponent.html":{}}}],["inputcompon",{"_index":110,"title":{"components/InputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["inputcomponent;and",{"_index":4744,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["inputerrorscompon",{"_index":233,"title":{"components/InputErrorsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputs/output",{"_index":4009,"title":{},"body":{"changelog.html":{}}}],["inputthi",{"_index":4721,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["insid",{"_index":428,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["inspir",{"_index":3280,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["instagram",{"_index":4520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instal",{"_index":4640,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{}}}],["instanc",{"_index":72,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["instanceof",{"_index":1950,"title":{},"body":{"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/TabsComponent.html":{}}}],["instanti",{"_index":4805,"title":{},"body":{"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["instead",{"_index":2797,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes.html":{}}}],["integr",{"_index":4751,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["intend",{"_index":3489,"title":{},"body":{"components/SelectComponent.html":{}}}],["interact",{"_index":2829,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["interfac",{"_index":918,"title":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["interfer",{"_index":2262,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["intern",{"_index":947,"title":{},"body":{"interfaces/CrudConfig.html":{},"miscellaneous/variables.html":{}}}],["intersect",{"_index":4396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intial",{"_index":1982,"title":{},"body":{"components/InputComponent.html":{}}}],["intl.collator(undefin",{"_index":3565,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/variables.html":{}}}],["introduct",{"_index":4769,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["invalid",{"_index":2632,"title":{},"body":{"components/MockupComponent.html":{},"injectables/TypeConfigService.html":{}}}],["invert",{"_index":3970,"title":{},"body":{"changelog.html":{}}}],["invit",{"_index":656,"title":{},"body":{"injectables/AuthService.html":{}}}],["invok",{"_index":2043,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/core-classes/item.html":{}}}],["io/io.modul",{"_index":1712,"title":{},"body":{"modules/FormModule.html":{},"modules/UtilityModule.html":{}}}],["iomodul",{"_index":1702,"title":{"modules/IoModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["isact",{"_index":2546,"title":{},"body":{"components/MenuComponent.html":{},"classes/Pagination.html":{}}}],["isactive(item",{"_index":2586,"title":{},"body":{"components/MenuComponent.html":{}}}],["isactive(pag",{"_index":2890,"title":{},"body":{"classes/Pagination.html":{}}}],["isempti",{"_index":721,"title":{},"body":{"classes/Collection.html":{}}}],["isend",{"_index":1210,"title":{},"body":{"interfaces/Day.html":{}}}],["isfirst",{"_index":1343,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["isimmutableproperti",{"_index":963,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{}}}],["isimmutableproperty(key",{"_index":977,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["islast",{"_index":1344,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["isnewasset",{"_index":1664,"title":{},"body":{"injectables/FileService.html":{}}}],["isnewasset(asset",{"_index":1614,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["iso",{"_index":4033,"title":{},"body":{"changelog.html":{}}}],["isselect",{"_index":2547,"title":{},"body":{"components/MenuComponent.html":{}}}],["isselected(_mo",{"_index":1236,"title":{},"body":{"interfaces/Day.html":{}}}],["isselected(item",{"_index":2588,"title":{},"body":{"components/MenuComponent.html":{}}}],["isstart",{"_index":1208,"title":{},"body":{"interfaces/Day.html":{}}}],["issystemproperti",{"_index":2646,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["issystemproperty(properti",{"_index":2664,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["ist",{"_index":2772,"title":{},"body":{"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["isvis",{"_index":2942,"title":{},"body":{"components/PaginationComponent.html":{}}}],["isvisible(pag",{"_index":2946,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ital",{"_index":4397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item",{"_index":43,"title":{"additional-documentation/core-classes/item.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["item'",{"_index":2195,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["item(",{"_index":472,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["item('a",{"_index":4777,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["item(1",{"_index":4801,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["item(asset",{"_index":1635,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["item(assets[0",{"_index":1632,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["item(resourc",{"_index":3334,"title":{},"body":{"classes/ResourceForm.html":{}}}],["item.config.fields[property].form",{"_index":897,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.fields[property].list",{"_index":896,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.onsav",{"_index":3359,"title":{},"body":{"injectables/ResourceService.html":{}}}],["item.data?.titl",{"_index":2618,"title":{},"body":{"components/MenuComponent.html":{}}}],["item.deleteimmutableproperties(valu",{"_index":3361,"title":{},"body":{"injectables/ResourceService.html":{}}}],["item.getbodi",{"_index":902,"title":{},"body":{"components/CrudComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{}}}],["item.group(properti",{"_index":1830,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["item.id",{"_index":904,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{}}}],["item.path",{"_index":2616,"title":{},"body":{"components/MenuComponent.html":{}}}],["item.sav",{"_index":4799,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["item.sort(properti",{"_index":3574,"title":{},"body":{"classes/Sorter.html":{}}}],["item/item",{"_index":1693,"title":{},"body":{"interfaces/FormConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["item?.display(field.properti",{"_index":1254,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["item?.display(field.property)?.length",{"_index":1267,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["itemclick",{"_index":3473,"title":{},"body":{"components/SelectComponent.html":{}}}],["itemconfig",{"_index":1692,"title":{"interfaces/ItemConfig.html":{}},"body":{"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"classes/ResourceForm.html":{},"coverage.html":{},"additional-documentation/core-classes/item.html":{}}}],["items'},{'nam",{"_index":239,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["items.compon",{"_index":2214,"title":{},"body":{"modules/ListModule.html":{}}}],["items.component.html",{"_index":2194,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.scss",{"_index":2193,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.t",{"_index":2189,"title":{},"body":{"components/ListItemsComponent.html":{},"coverage.html":{}}}],["items.component.ts:15",{"_index":2199,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:17",{"_index":2200,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:19",{"_index":2198,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:21",{"_index":2201,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:23",{"_index":2202,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:26",{"_index":2204,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:33",{"_index":2203,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.filter((item",{"_index":1829,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["items.foreach((item",{"_index":775,"title":{},"body":{"classes/Collection.html":{}}}],["items.length",{"_index":790,"title":{},"body":{"classes/Collection.html":{},"classes/Sorter.html":{}}}],["items.pip",{"_index":1721,"title":{},"body":{"modules/FormModule.html":{}}}],["items.pipe.t",{"_index":2482,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"coverage.html":{}}}],["items.pipe.ts:8",{"_index":2486,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["items.reduce((ha",{"_index":781,"title":{},"body":{"classes/Collection.html":{}}}],["items.revers",{"_index":3588,"title":{},"body":{"classes/Sorter.html":{}}}],["items.slice((this.config.pag",{"_index":2935,"title":{},"body":{"classes/Pagination.html":{}}}],["items.sort((a",{"_index":3583,"title":{},"body":{"classes/Sorter.html":{}}}],["items/list",{"_index":2188,"title":{},"body":{"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["itemwidth",{"_index":2971,"title":{},"body":{"components/PaginationComponent.html":{}}}],["itemwidth}px",{"_index":2982,"title":{},"body":{"components/PaginationComponent.html":{}}}],["iter",{"_index":2020,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/core-classes/form.html":{}}}],["itself",{"_index":1511,"title":{},"body":{"classes/Field.html":{},"components/NotificationsComponent.html":{},"components/TabComponent.html":{}}}],["ja",{"_index":4814,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["javascript",{"_index":57,"title":{},"body":{"components/AceComponent.html":{}}}],["join",{"_index":3147,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["js",{"_index":4184,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":643,"title":{},"body":{"injectables/AuthService.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{}}}],["json.parse(e.data",{"_index":1873,"title":{},"body":{"injectables/HistoryService.html":{}}}],["json.stringify(json",{"_index":3198,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["json.stringify(valu",{"_index":3836,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["jsoneditorcompon",{"_index":4742,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["json}}todo",{"_index":3509,"title":{},"body":{"components/SelectComponent.html":{},"additional-documentation/ui/selectcomponent.html":{}}}],["justifi",{"_index":4314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt/issues/305",{"_index":573,"title":{},"body":{"modules/AuthModule.html":{}}}],["kann",{"_index":540,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["karma",{"_index":4273,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1221,"title":{},"body":{"interfaces/Day.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputErrorsComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["keeppopopen",{"_index":929,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["key",{"_index":800,"title":{},"body":{"classes/Config.html":{},"injectables/CrudService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"interfaces/ListConfig.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{}}}],["key[0",{"_index":1021,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["keydown",{"_index":3069,"title":{},"body":{"injectables/PopService.html":{}}}],["keyup",{"_index":3753,"title":{},"body":{"components/TinymceComponent.html":{}}}],["kind",{"_index":2240,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"classes/Sorter.html":{},"interfaces/WithLoader.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["kleiner",{"_index":4717,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["know",{"_index":2933,"title":{},"body":{"classes/Pagination.html":{}}}],["known",{"_index":388,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{}}}],["kununu",{"_index":4510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kurz",{"_index":4309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":936,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/DefaultOutputComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/LoginFormComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/TabComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{}}}],["label#for",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["landscap",{"_index":4426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["languag",{"_index":94,"title":{},"body":{"components/AceComponent.html":{},"injectables/ResourceConfig.html":{}}}],["laptop",{"_index":4398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":1123,"title":{},"body":{"interfaces/Day.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{}}}],["lat",{"_index":1822,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["later",{"_index":1316,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"interfaces/WithNotifications.html":{}}}],["latest",{"_index":3070,"title":{},"body":{"injectables/PopService.html":{}}}],["latestpop",{"_index":3077,"title":{},"body":{"injectables/PopService.html":{}}}],["latestpop.hid",{"_index":3079,"title":{},"body":{"injectables/PopService.html":{}}}],["latitud",{"_index":1803,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["lay",{"_index":4758,"title":{},"body":{"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["layer",{"_index":2658,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["layout",{"_index":1222,"title":{},"body":{"interfaces/Day.html":{}}}],["lead",{"_index":4021,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["leav",{"_index":4404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":850,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["legaci",{"_index":455,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["legacyasset",{"_index":1647,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{}}}],["legend",{"_index":182,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"modules/UiModule.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"overview.html":{}}}],["lemontre",{"_index":2097,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["length",{"_index":784,"title":{},"body":{"classes/Collection.html":{}}}],["lerna",{"_index":4210,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["lerna.json",{"_index":4750,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["let",{"_index":4757,"title":{},"body":{"additional-documentation/ui.html":{}}}],["let'",{"_index":2859,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["letter",{"_index":955,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["level",{"_index":364,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"components/MenuComponent.html":{},"interfaces/Update.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["li",{"_index":2959,"title":{},"body":{"components/PaginationComponent.html":{}}}],["lib",{"_index":4249,"title":{},"body":{"index.html":{}}}],["librari",{"_index":2331,"title":{},"body":{"modules/LocationModule.html":{}}}],["light",{"_index":4562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lightbulb",{"_index":4399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["line",{"_index":170,"title":{},"body":{"components/AceComponent.html":{},"components/LoaderComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["line:no",{"_index":2109,"title":{},"body":{"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["link",{"_index":3002,"title":{},"body":{"classes/PaginationConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["link_class_list",{"_index":4567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linkedin",{"_index":4492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["list",{"_index":194,"title":{"additional-documentation/core-classes/list.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["list#toggleselectmod",{"_index":3972,"title":{},"body":{"changelog.html":{}}}],["list'},{'nam",{"_index":222,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["list(this.collection.item",{"_index":2116,"title":{},"body":{"components/ListComponent.html":{}}}],["list(this.item",{"_index":2114,"title":{},"body":{"components/ListComponent.html":{}}}],["list(this.valu",{"_index":3514,"title":{},"body":{"components/SelectComponent.html":{}}}],["list.compon",{"_index":870,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"changelog.html":{}}}],["list.component.html",{"_index":2058,"title":{},"body":{"components/ListComponent.html":{}}}],["list.component.scss",{"_index":1412,"title":{},"body":{"components/EntryListComponent.html":{},"components/ListComponent.html":{}}}],["list.component.t",{"_index":1409,"title":{},"body":{"components/EntryListComponent.html":{},"coverage.html":{}}}],["list.component.ts:25",{"_index":1424,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:27",{"_index":1422,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:37",{"_index":1452,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:48",{"_index":1438,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:61",{"_index":1437,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.t",{"_index":4098,"title":{},"body":{"coverage.html":{}}}],["list.ts/list.compon",{"_index":2915,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["list/entri",{"_index":869,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"coverage.html":{}}}],["list/list",{"_index":2916,"title":{},"body":{"classes/Pagination.html":{}}}],["list/list.modul",{"_index":3540,"title":{},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{}}}],["list/resourc",{"_index":1054,"title":{},"body":{"modules/DataModule.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["list/upload",{"_index":3944,"title":{},"body":{"changelog.html":{}}}],["listcompon",{"_index":235,"title":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["listconfig",{"_index":922,"title":{"interfaces/ListConfig.html":{}},"body":{"interfaces/CrudConfig.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/SelectComponent.html":{},"coverage.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["listen",{"_index":2759,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/PopService.html":{}}}],["listheadercompon",{"_index":236,"title":{"components/ListHeaderComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listitemscompon",{"_index":238,"title":{"components/ListItemsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["listmodul",{"_index":2208,"title":{"modules/ListModule.html":{}},"body":{"modules/ListModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["listresourc",{"_index":1417,"title":{},"body":{"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["liter",{"_index":794,"title":{},"body":{"classes/Config.html":{},"interfaces/CrudConfig.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"miscellaneous/variables.html":{}}}],["live",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["lng",{"_index":1824,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["load",{"_index":359,"title":{},"body":{"directives/AssetDirective.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"directives/SlotHostDirective.html":{},"interfaces/WithLoader.html":{},"miscellaneous/functions.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["load(config",{"_index":2895,"title":{},"body":{"classes/Pagination.html":{}}}],["load(id",{"_index":382,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["loadcompon",{"_index":1325,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loadcomponent(compon",{"_index":1327,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loadentri",{"_index":830,"title":{},"body":{"components/CrudComponent.html":{}}}],["loadentry(item",{"_index":853,"title":{},"body":{"components/CrudComponent.html":{}}}],["loader",{"_index":826,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"directives/SlotHostDirective.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"changelog.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["loader'",{"_index":2239,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'nam",{"_index":241,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["loader.compon",{"_index":2278,"title":{},"body":{"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"interfaces/WithLoader.html":{}}}],["loader.component.html",{"_index":2225,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":2224,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.interfac",{"_index":2463,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loader.interface.t",{"_index":3937,"title":{},"body":{"interfaces/WithLoader.html":{},"coverage.html":{}}}],["loader.servic",{"_index":2279,"title":{},"body":{"modules/LoaderModule.html":{}}}],["loader.wait(promis",{"_index":2285,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loader/loader.compon",{"_index":2461,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loader/loader.modul",{"_index":1718,"title":{},"body":{"modules/FormModule.html":{},"modules/UiModule.html":{}}}],["loader/with",{"_index":2462,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loadercompon",{"_index":240,"title":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["loadermodul",{"_index":1705,"title":{"modules/LoaderModule.html":{}},"body":{"modules/FormModule.html":{},"modules/LoaderModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["loaderservic",{"_index":833,"title":{"injectables/LoaderService.html":{}},"body":{"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["loaderth",{"_index":2243,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["local",{"_index":2242,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/SymbolService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["localload",{"_index":2249,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["locat",{"_index":243,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["location.latitud",{"_index":1823,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location.longitud",{"_index":1825,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location/map",{"_index":2320,"title":{},"body":{"modules/LocationModule.html":{}}}],["location_compon",{"_index":2321,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["locationmapcompon",{"_index":242,"title":{"components/LocationMapComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["locationmodul",{"_index":2313,"title":{"modules/LocationModule.html":{}},"body":{"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locationpickercompon",{"_index":245,"title":{"components/LocationPickerComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["locationsearchcompon",{"_index":247,"title":{"components/LocationSearchComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["lock",{"_index":3022,"title":{},"body":{"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{}}}],["lockform",{"_index":3012,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["log",{"_index":1887,"title":{},"body":{"components/IconComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["logic",{"_index":4738,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{}}}],["login",{"_index":252,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["login'",{"_index":2456,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["login'},{'nam",{"_index":250,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["login(undefin",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login(valu",{"_index":2446,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["login.component.html",{"_index":2387,"title":{},"body":{"components/LoginComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["login.component.t",{"_index":4704,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["login/login.compon",{"_index":567,"title":{},"body":{"modules/AuthModule.html":{}}}],["login/signup",{"_index":3986,"title":{},"body":{"changelog.html":{}}}],["logincompon",{"_index":249,"title":{"components/LoginComponent.html":{},"additional-documentation/ui/logincomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["loginformcompon",{"_index":251,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(api",{"_index":628,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":2147,"title":{},"body":{"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["longitud",{"_index":1805,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["look",{"_index":2739,"title":{},"body":{"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/list.html":{}}}],["lookup",{"_index":1782,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["loop",{"_index":4393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["low",{"_index":4460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lower",{"_index":2105,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["lvl1",{"_index":935,"title":{},"body":{"interfaces/CrudConfig.html":{},"changelog.html":{}}}],["löschen",{"_index":3286,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["machin",{"_index":4326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mail",{"_index":2432,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{}}}],["main",{"_index":2090,"title":{},"body":{"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["mainli",{"_index":4775,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["major",{"_index":4770,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["make",{"_index":61,"title":{},"body":{"components/AceComponent.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"components/LoaderComponent.html":{},"interfaces/Update.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["man",{"_index":4497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manag",{"_index":4213,"title":{},"body":{"index.html":{}}}],["mani",{"_index":942,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["manual",{"_index":3707,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ace.html":{}}}],["map",{"_index":807,"title":{},"body":{"classes/Config.html":{},"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/MenuComponent.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["map'},{'nam",{"_index":244,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["map((d",{"_index":1205,"title":{},"body":{"interfaces/Day.html":{}}}],["map((dat",{"_index":1207,"title":{},"body":{"interfaces/Day.html":{}}}],["map((method",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{}}}],["map(field",{"_index":3140,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map(hook",{"_index":3145,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map(item",{"_index":3575,"title":{},"body":{"classes/Sorter.html":{}}}],["map(p",{"_index":3203,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map(polici",{"_index":3149,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map.compon",{"_index":2324,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["map.component.html",{"_index":2289,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.scss",{"_index":2288,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.t",{"_index":2287,"title":{},"body":{"components/LocationMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:12",{"_index":2296,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:14",{"_index":2298,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:16",{"_index":2300,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:18",{"_index":2299,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:24",{"_index":2305,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:31",{"_index":2302,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.valu",{"_index":2366,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["mapload",{"_index":1773,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["mapsapiload",{"_index":1770,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["mark",{"_index":1139,"title":{},"body":{"interfaces/Day.html":{},"miscellaneous/variables.html":{}}}],["marker",{"_index":2297,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend",{"_index":2290,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend(coord",{"_index":2301,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markup",{"_index":3052,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["match",{"_index":309,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["match.length",{"_index":2700,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["match[1",{"_index":2701,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["match[3",{"_index":2702,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["matches(chang",{"_index":981,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["math.abs(curr",{"_index":2983,"title":{},"body":{"components/PaginationComponent.html":{}}}],["math.max(0",{"_index":2974,"title":{},"body":{"components/PaginationComponent.html":{}}}],["math.min(this.getpag",{"_index":2937,"title":{},"body":{"classes/Pagination.html":{}}}],["math.min(transl",{"_index":2976,"title":{},"body":{"components/PaginationComponent.html":{}}}],["matter",{"_index":4670,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["max",{"_index":1720,"title":{},"body":{"modules/FormModule.html":{},"components/PaginationComponent.html":{}}}],["maxcolumn",{"_index":2140,"title":{},"body":{"interfaces/ListConfig.html":{},"changelog.html":{}}}],["maxim",{"_index":2145,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["maximum",{"_index":1530,"title":{},"body":{"classes/Field.html":{},"changelog.html":{}}}],["maxitem",{"_index":1505,"title":{},"body":{"classes/Field.html":{},"pipes/MaxItemsPipe.html":{},"changelog.html":{}}}],["maxitemspip",{"_index":1700,"title":{"pipes/MaxItemsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/MaxItemsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["mean",{"_index":3971,"title":{},"body":{"changelog.html":{},"additional-documentation/ui.html":{}}}],["meant",{"_index":126,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"injectables/ResourceService.html":{},"components/TabComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["measur",{"_index":4407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":4599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["medium",{"_index":254,"title":{"additional-documentation/medium.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/medium.html":{}}}],["mediumeditor",{"_index":2499,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditor(this.container.nativeel",{"_index":2519,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditorcompon",{"_index":253,"title":{"components/MediumEditorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mediummodul",{"_index":2525,"title":{"modules/MediumModule.html":{}},"body":{"modules/MediumModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/medium.html":{}}}],["megaphon",{"_index":4440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":4743,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["menu",{"_index":2533,"title":{},"body":{"components/MenuComponent.html":{},"additional-documentation/ui.html":{}}}],["menu,[ec",{"_index":257,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["menu.component.html",{"_index":2535,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":2534,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu/menu.compon",{"_index":3921,"title":{},"body":{"modules/UtilityModule.html":{}}}],["menu]'},{'nam",{"_index":258,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["menubar",{"_index":4534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menucompon",{"_index":256,"title":{"components/MenuComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["merg",{"_index":804,"title":{},"body":{"classes/Config.html":{},"components/CrudComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{}}}],["merge(route.data",{"_index":885,"title":{},"body":{"components/CrudComponent.html":{}}}],["messag",{"_index":516,"title":{},"body":{"injectables/AuthGuard.html":{},"components/ErrorComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["message.clos",{"_index":2865,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["met",{"_index":4730,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["metadata",{"_index":22,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"pipes/SafeHtmlPipe.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["method",{"_index":44,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["middl",{"_index":2953,"title":{},"body":{"components/PaginationComponent.html":{},"miscellaneous/variables.html":{}}}],["minimum",{"_index":3007,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["minlength",{"_index":4308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minor",{"_index":4571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minu",{"_index":4408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellan",{"_index":4198,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":4256,"title":{},"body":{"index.html":{}}}],["mit",{"_index":3029,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["mkdir",{"_index":4746,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["mmmm",{"_index":1148,"title":{},"body":{"interfaces/Day.html":{}}}],["mobil",{"_index":4410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockup",{"_index":2622,"title":{},"body":{"components/MockupComponent.html":{}}}],["mockup'},{'nam",{"_index":260,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["mockup.component.html",{"_index":2624,"title":{},"body":{"components/MockupComponent.html":{}}}],["mockup.component.scss",{"_index":2623,"title":{},"body":{"components/MockupComponent.html":{}}}],["mockup/mockup.compon",{"_index":3920,"title":{},"body":{"modules/UtilityModule.html":{}}}],["mockupcompon",{"_index":259,"title":{"components/MockupComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["modal",{"_index":3050,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["mode",{"_index":53,"title":{},"body":{"components/AceComponent.html":{},"interfaces/CrudConfig.html":{}}}],["model",{"_index":103,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["model'",{"_index":2636,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{}}}],["model.field",{"_index":803,"title":{},"body":{"classes/Config.html":{}}}],["modelchang",{"_index":2497,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["modelconfig",{"_index":1420,"title":{"interfaces/ModelConfig.html":{}},"body":{"components/EntryListComponent.html":{},"interfaces/ModelConfig.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/data.html":{}}}],["modelconfig.get(&#39;muffin&#39",{"_index":2662,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.get('muffin",{"_index":2679,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set(&#39;muffin&#39",{"_index":2672,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set('muffin",{"_index":2681,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigservic",{"_index":1041,"title":{"injectables/ModelConfigService.html":{}},"body":{"modules/DataModule.html":{},"components/EntryListComponent.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["modelconfigur",{"_index":2733,"title":{"interfaces/ModelConfiguration.html":{}},"body":{"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["modelid",{"_index":3138,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["modelist.j",{"_index":150,"title":{},"body":{"components/AceComponent.html":{}}}],["modellistcompon",{"_index":3974,"title":{},"body":{"changelog.html":{}}}],["modelresourc",{"_index":1844,"title":{},"body":{"injectables/HistoryService.html":{}}}],["modern",{"_index":4533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modifi",{"_index":954,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["modified'].indexof(key",{"_index":1022,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["modul",{"_index":310,"title":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"modules.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"changelog.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["module'",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["modules.sh",{"_index":4226,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["modulewithprovid",{"_index":559,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{}}}],["moment",{"_index":1096,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["moment'",{"_index":1219,"title":{},"body":{"interfaces/Day.html":{}}}],["moment().startof('day').diff(d",{"_index":1218,"title":{},"body":{"interfaces/Day.html":{}}}],["moment(new",{"_index":3831,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(valu",{"_index":1114,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format('yyyi",{"_index":4711,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["moment(value).format(format",{"_index":3847,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).format(pattern",{"_index":1118,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format(this.symbol.resolve('moment.format.month",{"_index":3849,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).isvalid",{"_index":3828,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.d",{"_index":3810,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.month",{"_index":3815,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.tim",{"_index":3811,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.locale('d",{"_index":4706,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["moment.mo",{"_index":1081,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["money",{"_index":4411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["monorepo",{"_index":4212,"title":{},"body":{"index.html":{}}}],["month",{"_index":1120,"title":{},"body":{"interfaces/Day.html":{}}}],["month'},{'nam",{"_index":262,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["month.compon",{"_index":3977,"title":{},"body":{"changelog.html":{}}}],["month.component.html",{"_index":1134,"title":{},"body":{"interfaces/Day.html":{}}}],["month.component.scss",{"_index":1133,"title":{},"body":{"interfaces/Day.html":{}}}],["monthcompon",{"_index":261,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["monthformat",{"_index":1147,"title":{},"body":{"interfaces/Day.html":{}}}],["more",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/collection.html":{}}}],["mouseout",{"_index":2565,"title":{},"body":{"components/MenuComponent.html":{}}}],["mouseov",{"_index":2558,"title":{},"body":{"components/MenuComponent.html":{}}}],["mouseover(day",{"_index":1185,"title":{},"body":{"interfaces/Day.html":{}}}],["mouseup(day",{"_index":1184,"title":{},"body":{"interfaces/Day.html":{}}}],["move",{"_index":3987,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ms",{"_index":1964,"title":{},"body":{"components/InputComponent.html":{},"classes/Notification.html":{}}}],["much",{"_index":4042,"title":{},"body":{"changelog.html":{}}}],["muffin",{"_index":2663,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["muffin.entry?.nam",{"_index":1404,"title":{},"body":{"directives/EntryDirective.html":{}}}],["muffin.nam",{"_index":1369,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["muffincompon",{"_index":2787,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["muffins/muffins.compon",{"_index":4700,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["muffinsadd",{"_index":4695,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["muffinscompon",{"_index":4699,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["multi",{"_index":144,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["multipl",{"_index":1548,"title":{},"body":{"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["music",{"_index":4412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mustreload",{"_index":831,"title":{},"body":{"components/CrudComponent.html":{}}}],["mustreload(item",{"_index":856,"title":{},"body":{"components/CrudComponent.html":{}}}],["myapp",{"_index":2245,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["myasset.asset?.assetid",{"_index":393,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.cr",{"_index":398,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.files?.length",{"_index":400,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.tag",{"_index":397,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.titl",{"_index":395,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.typ",{"_index":399,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myclient",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{}}}],["mycompon",{"_index":2769,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["myimage.asset?.assetid",{"_index":1940,"title":{},"body":{"directives/ImageDirective.html":{}}}],["n",{"_index":4800,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["n.resolv",{"_index":4804,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["n.save",{"_index":4803,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["nach",{"_index":4819,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["name",{"_index":87,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["name[0].touppercas",{"_index":4709,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["namespac",{"_index":1793,"title":{},"body":{"injectables/GeocodeService.html":{},"miscellaneous/variables.html":{}}}],["nativ",{"_index":1933,"title":{},"body":{"directives/ImageDirective.html":{}}}],["natur",{"_index":3563,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["navig",{"_index":4236,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["navigationend",{"_index":3675,"title":{},"body":{"components/TabsComponent.html":{}}}],["nearest",{"_index":1785,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["need",{"_index":2796,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ace.html":{}}}],["nein",{"_index":4815,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["nest",{"_index":949,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["nestedcrudconfig",{"_index":3801,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["nestedpopclass",{"_index":930,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["new",{"_index":71,"title":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["newassetlistconfig",{"_index":1608,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["newdat",{"_index":1239,"title":{},"body":{"interfaces/Day.html":{}}}],["newdate.isbetween(this.timespan[0",{"_index":1241,"title":{},"body":{"interfaces/Day.html":{}}}],["newhistori",{"_index":1871,"title":{},"body":{"injectables/HistoryService.html":{}}}],["newtimespan",{"_index":1167,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan.revers",{"_index":1172,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[0].isafter(newtimespan[1",{"_index":1171,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[this.dragged.first",{"_index":1169,"title":{},"body":{"interfaces/Day.html":{}}}],["next",{"_index":528,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Collection.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":4233,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["ng_value_accessor",{"_index":133,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["ngaftercontentinit",{"_index":3664,"title":{},"body":{"components/TabsComponent.html":{}}}],["ngafterviewinit",{"_index":2371,"title":{},"body":{"components/LocationSearchComponent.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{}}}],["ngif",{"_index":461,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/PopComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["ngmodel",{"_index":4003,"title":{},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["ngmodul",{"_index":322,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["ngonchang",{"_index":46,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/SelectComponent.html":{}}}],["ngonchanges(chang",{"_index":1190,"title":{},"body":{"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{}}}],["ngondestroy",{"_index":2496,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ngoninit",{"_index":47,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SelectComponent.html":{}}}],["ngx",{"_index":562,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["ngzone",{"_index":1771,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationSearchComponent.html":{}}}],["nicht",{"_index":541,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["niedrig",{"_index":4813,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["noapi",{"_index":3394,"title":{},"body":{"injectables/SdkService.html":{}}}],["noapi(api",{"_index":3407,"title":{},"body":{"injectables/SdkService.html":{}}}],["noclientid",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["noconflict/ace.j",{"_index":137,"title":{},"body":{"components/AceComponent.html":{}}}],["noconflict/ace.js';when",{"_index":4767,"title":{},"body":{"additional-documentation/ace.html":{}}}],["node_modul",{"_index":4217,"title":{},"body":{"index.html":{}}}],["node_modules/@ec.components/**/*.spec.t",{"_index":4269,"title":{},"body":{"index.html":{}}}],["node_modules/@ec.components/**/*.t",{"_index":4270,"title":{},"body":{"index.html":{}}}],["node_modules/@ec.components/data/src/auth/auth.service.t",{"_index":4254,"title":{},"body":{"index.html":{}}}],["non",{"_index":3616,"title":{},"body":{"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}}}],["none",{"_index":2196,"title":{},"body":{"components/ListItemsComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["normal",{"_index":425,"title":{},"body":{"components/AssetListPopComponent.html":{},"directives/DropzoneDirective.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":3004,"title":{},"body":{"classes/PaginationConfig.html":{},"miscellaneous/variables.html":{}}}],["noth",{"_index":3590,"title":{},"body":{"interfaces/Symbol.html":{}}}],["notif",{"_index":522,"title":{"classes/Notification.html":{}},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notification(notif",{"_index":2852,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notification.append",{"_index":2808,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.append.push(notif",{"_index":2809,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.component.t",{"_index":2798,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notification.error",{"_index":2756,"title":{},"body":{"classes/Notification.html":{}}}],["notification.hid",{"_index":2803,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.host",{"_index":2813,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.messag",{"_index":2806,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.replac",{"_index":2810,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.length",{"_index":2811,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.push(notif",{"_index":2812,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.sticki",{"_index":2815,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.tim",{"_index":2816,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.titl",{"_index":2805,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationcompon",{"_index":2736,"title":{},"body":{"classes/Notification.html":{}}}],["notifications'},{'nam",{"_index":264,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["notifications.compon",{"_index":2755,"title":{},"body":{"classes/Notification.html":{},"modules/NotificationsModule.html":{}}}],["notifications.component.html",{"_index":2763,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":2762,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.interfac",{"_index":880,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/UploadComponent.html":{}}}],["notifications.interface.t",{"_index":3940,"title":{},"body":{"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["notifications.servic",{"_index":2799,"title":{},"body":{"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{}}}],["notifications/notifications.modul",{"_index":3855,"title":{},"body":{"modules/UiModule.html":{}}}],["notificationscompon",{"_index":263,"title":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notificationservic",{"_index":834,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notificationservice.$emitt",{"_index":2760,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationsmodul",{"_index":2819,"title":{"modules/NotificationsModule.html":{}},"body":{"modules/NotificationsModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationsservic",{"_index":523,"title":{"injectables/NotificationsService.html":{}},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["now",{"_index":3415,"title":{},"body":{"injectables/SdkService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{}}}],["npm",{"_index":4215,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{}}}],["nr",{"_index":4793,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["nth",{"_index":2484,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["null",{"_index":779,"title":{},"body":{"classes/Collection.html":{},"injectables/CrudService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":376,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["numbers.add(4",{"_index":740,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.addall([5",{"_index":743,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has(2",{"_index":748,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has([1,2",{"_index":751,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.remove(4",{"_index":757,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.removeal",{"_index":760,"title":{},"body":{"classes/Collection.html":{}}}],["numer",{"_index":3566,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/variables.html":{}}}],["numlist",{"_index":4596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oauth",{"_index":3172,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object",{"_index":430,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["object.assign",{"_index":805,"title":{},"body":{"classes/Config.html":{},"modules/DataModule.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{}}}],["object.assign(componentref.inst",{"_index":1339,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["object.assign(config",{"_index":2696,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["object.assign(entri",{"_index":1015,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["object.assign(resourc",{"_index":3368,"title":{},"body":{"injectables/ResourceService.html":{}}}],["object.assign(thi",{"_index":1581,"title":{},"body":{"classes/Field.html":{},"classes/Notification.html":{},"classes/PaginationConfig.html":{}}}],["object.assign(this.config",{"_index":1476,"title":{},"body":{"components/EntryListComponent.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"components/SelectComponent.html":{}}}],["object.assign(this.config[key][properti",{"_index":813,"title":{},"body":{"classes/Config.html":{}}}],["object.assign(this.stringfield('model",{"_index":3139,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.assign(this.stringfield('nam",{"_index":3127,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.assign(this.tagsfield('right",{"_index":3135,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.assign(this.types[typ",{"_index":3845,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["object.keys(defaultconfig).foreach(properti",{"_index":2695,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(filt",{"_index":997,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(item.config.fields).reduce((equ",{"_index":894,"title":{},"body":{"components/CrudComponent.html":{}}}],["object.keys(permiss",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{}}}],["object.keys(schema.properti",{"_index":2708,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(this.config[relationnam",{"_index":3112,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.keys(this.control.errors).reduce((err",{"_index":2023,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["object.keys(this.sets).length",{"_index":3625,"title":{},"body":{"injectables/SymbolService.html":{}}}],["object.keys(value).foreach((key",{"_index":1012,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(variables).foreach((key",{"_index":669,"title":{},"body":{"injectables/AuthService.html":{}}}],["observ",{"_index":469,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"injectables/GeocodeService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/core-classes.html":{}}}],["observable(observ",{"_index":1794,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observable.throw(err",{"_index":2473,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["observeel",{"_index":1768,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observeelement(el",{"_index":1786,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.complet",{"_index":1808,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.next(coord",{"_index":1807,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["obsolet",{"_index":2793,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["ok",{"_index":1816,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["old",{"_index":1011,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["oldvalu",{"_index":1010,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["oldvalues[key",{"_index":1013,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["omit",{"_index":169,"title":{},"body":{"components/AceComponent.html":{},"injectables/ModelConfigService.html":{}}}],["omittedfield",{"_index":2642,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["on",{"_index":1434,"title":{},"body":{"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["onchang",{"_index":21,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/SelectComponent.html":{}}}],["onclick",{"_index":4600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ondestroy",{"_index":2493,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ondragleave(",{"_index":1306,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondragover(",{"_index":1296,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondrop(",{"_index":1301,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{}}}],["onsav",{"_index":2041,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/core-classes/item.html":{}}}],["onsubmit",{"_index":2416,"title":{},"body":{"components/LoginFormComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":933,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ListHeaderComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["openid",{"_index":3162,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["openinghour",{"_index":4728,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["openinghourscompon",{"_index":4736,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["oper",{"_index":1443,"title":{},"body":{"components/EntryListComponent.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"injectables/ModelConfigService.html":{},"classes/Sorter.html":{},"interfaces/WithLoader.html":{}}}],["optim",{"_index":3951,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":88,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/selection.html":{}}}],["options](https://github.com/yabwe/medium",{"_index":2515,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["order",{"_index":4772,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["origin",{"_index":3330,"title":{},"body":{"classes/ResourceForm.html":{}}}],["other",{"_index":2166,"title":{},"body":{"components/ListHeaderComponent.html":{},"classes/Notification.html":{}}}],["otherwis",{"_index":988,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["ouput",{"_index":1970,"title":{},"body":{"components/InputComponent.html":{}}}],["out",{"_index":319,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"components/ToolbarComponent.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["outbox",{"_index":4414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["outdir",{"_index":4264,"title":{},"body":{"index.html":{}}}],["outlin",{"_index":4483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["output",{"_index":365,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/list.html":{}}}],["output'},{'nam",{"_index":209,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["output('toggl",{"_index":3056,"title":{},"body":{"components/PopComponent.html":{}}}],["output.compon",{"_index":1050,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["output.component.html",{"_index":1250,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output.component.scss",{"_index":1262,"title":{},"body":{"components/DefaultOutputComponent.html":{},"components/OutputComponent.html":{}}}],["output.component.t",{"_index":1249,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"coverage.html":{}}}],["output.component.ts:12",{"_index":1251,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{}}}],["output.component.ts:13",{"_index":1263,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["output.component.ts:14",{"_index":1252,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{}}}],["output.component.ts:15",{"_index":1264,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["output/default",{"_index":1261,"title":{},"body":{"components/DefaultOutputComponent.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["output/output.compon",{"_index":2033,"title":{},"body":{"modules/IoModule.html":{}}}],["outputcompon",{"_index":265,"title":{"components/OutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["outsid",{"_index":102,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"directives/SlotHostDirective.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["over",{"_index":2021,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["overrid",{"_index":1451,"title":{},"body":{"components/EntryListComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/core-classes/selection.html":{}}}],["overridden",{"_index":2474,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["overriden",{"_index":2641,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SymbolService.html":{}}}],["overview",{"_index":4281,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/ui.html":{},"additional-documentation/data.html":{}}}],["overwritten",{"_index":2448,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SelectComponent.html":{}}}],["p",{"_index":4580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img",{"_index":4589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p.method",{"_index":3204,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["packag",{"_index":3995,"title":{"dependencies.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{}}}],["package.json",{"_index":4680,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["packages/.../ace.component.t",{"_index":4287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../auth.module.t",{"_index":4199,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/.../ec",{"_index":4290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../editor.component.t",{"_index":4289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../email",{"_index":4292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../email.validator.t",{"_index":4293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../emoji",{"_index":4294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../errors.t",{"_index":4288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../field",{"_index":4295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../geocode.service.t",{"_index":4296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../location.module.t",{"_index":4297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../notifications.service.t",{"_index":4298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../sorter.t",{"_index":4200,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packages/.../tinymc",{"_index":4291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/ace/src/ace.component.t",{"_index":9,"title":{},"body":{"components/AceComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ace/src/ace.component.ts:103",{"_index":100,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:113",{"_index":115,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:117",{"_index":82,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:121",{"_index":90,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:26",{"_index":109,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:30",{"_index":120,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:34",{"_index":117,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:36",{"_index":111,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:40",{"_index":107,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:44",{"_index":67,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:48",{"_index":68,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:51",{"_index":69,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:76",{"_index":92,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:85",{"_index":97,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:94",{"_index":80,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:98",{"_index":78,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.module.t",{"_index":320,"title":{},"body":{"modules/AceModule.html":{}}}],["packages/cor",{"_index":4232,"title":{},"body":{"index.html":{}}}],["packages/core/src/collection/collection.t",{"_index":713,"title":{},"body":{"classes/Collection.html":{},"coverage.html":{}}}],["packages/core/src/collection/collection.ts:107",{"_index":756,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:11",{"_index":730,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:124",{"_index":759,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:13",{"_index":733,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:139",{"_index":762,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:15",{"_index":725,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:152",{"_index":754,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:32",{"_index":753,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:43",{"_index":747,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:54",{"_index":750,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:72",{"_index":737,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:90",{"_index":742,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/config/config.t",{"_index":792,"title":{},"body":{"classes/Config.html":{},"coverage.html":{}}}],["packages/core/src/config/config.ts:13",{"_index":797,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/config/config.ts:5",{"_index":795,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/config/field",{"_index":1588,"title":{},"body":{"interfaces/FieldConfig.html":{},"coverage.html":{}}}],["packages/core/src/field/field.t",{"_index":1499,"title":{},"body":{"classes/Field.html":{},"coverage.html":{}}}],["packages/core/src/field/field.ts:11",{"_index":1522,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:13",{"_index":1539,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:15",{"_index":1542,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:17",{"_index":1540,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:19",{"_index":1527,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:21",{"_index":1532,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:23",{"_index":1533,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:25",{"_index":1528,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:27",{"_index":1514,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:29",{"_index":1518,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:31",{"_index":1519,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:33",{"_index":1541,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:35",{"_index":1512,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:37",{"_index":1526,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:39",{"_index":1538,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:41",{"_index":1513,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:43",{"_index":1529,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:45",{"_index":1524,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:47",{"_index":1510,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:59",{"_index":1543,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:7",{"_index":1536,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:9",{"_index":1534,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/form/form",{"_index":1691,"title":{},"body":{"interfaces/FormConfig.html":{},"coverage.html":{}}}],["packages/core/src/form/form.t",{"_index":4060,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/item/item",{"_index":2037,"title":{},"body":{"interfaces/ItemConfig.html":{},"coverage.html":{}}}],["packages/core/src/item/item.t",{"_index":4063,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/list/list",{"_index":2135,"title":{},"body":{"interfaces/ListConfig.html":{},"coverage.html":{}}}],["packages/core/src/list/list.t",{"_index":4067,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/pagination/pagination.t",{"_index":2872,"title":{},"body":{"classes/Pagination.html":{},"coverage.html":{}}}],["packages/core/src/pagination/pagination.ts:10",{"_index":2883,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:104",{"_index":2891,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:109",{"_index":2892,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:114",{"_index":2893,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:12",{"_index":2884,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:122",{"_index":2907,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:127",{"_index":2898,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:138",{"_index":2910,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:14",{"_index":2881,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:16",{"_index":2879,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:34",{"_index":2888,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:39",{"_index":2889,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:44",{"_index":2897,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:53",{"_index":2899,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:64",{"_index":2903,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:74",{"_index":2896,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:8",{"_index":2885,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:82",{"_index":2901,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:90",{"_index":2887,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:95",{"_index":2894,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/selection/selection.t",{"_index":4070,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/sorter/sorter.t",{"_index":3549,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packages/core/src/sorter/sorter.ts:25",{"_index":3556,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/sorter/sorter.ts:32",{"_index":3558,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/sorter/sorter.ts:62",{"_index":3561,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/data/src/auth/auth",{"_index":509,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["packages/data/src/auth/auth.module.t",{"_index":555,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/data/src/auth/auth.service.t",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["packages/data/src/auth/auth.service.ts:114",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:136",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:148",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:158",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:172",{"_index":630,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:26",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:33",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:47",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:59",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:68",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:75",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:83",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/email",{"_index":4077,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/data/src/auth/errors.t",{"_index":4079,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/data/src/auth/login/login.component.t",{"_index":2383,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["packages/data/src/auth/login/login.component.ts:20",{"_index":2391,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:22",{"_index":2392,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:24",{"_index":2396,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:26",{"_index":2389,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:28",{"_index":2395,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:29",{"_index":2397,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:30",{"_index":2398,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:33",{"_index":2393,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/password",{"_index":3008,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["packages/data/src/crud/crud",{"_index":919,"title":{},"body":{"interfaces/CrudConfig.html":{},"coverage.html":{}}}],["packages/data/src/crud/crud.component.t",{"_index":814,"title":{},"body":{"components/CrudComponent.html":{},"coverage.html":{}}}],["packages/data/src/crud/crud.component.ts:113",{"_index":861,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:125",{"_index":847,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:36",{"_index":842,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:38",{"_index":841,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:40",{"_index":843,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:42",{"_index":863,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:44",{"_index":862,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:46",{"_index":865,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:48",{"_index":845,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:50",{"_index":846,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:52",{"_index":838,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:59",{"_index":867,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:60",{"_index":866,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:71",{"_index":859,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:79",{"_index":852,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:84",{"_index":857,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:91",{"_index":854,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.service.t",{"_index":953,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{},"coverage.html":{}}}],["packages/data/src/crud/crud.service.ts:112",{"_index":976,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:29",{"_index":964,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:36",{"_index":982,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:42",{"_index":966,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:50",{"_index":986,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:63",{"_index":990,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:78",{"_index":978,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:84",{"_index":970,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:99",{"_index":973,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/data.module.t",{"_index":1043,"title":{},"body":{"modules/DataModule.html":{}}}],["packages/data/src/entri",{"_index":324,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/EntryListComponent.html":{},"coverage.html":{}}}],["packages/data/src/entries/entries.directive.t",{"_index":1340,"title":{},"body":{"directives/EntriesDirective.html":{},"coverage.html":{}}}],["packages/data/src/entries/entries.directive.ts:100",{"_index":1357,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:21",{"_index":1368,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:23",{"_index":1354,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:25",{"_index":1356,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:27",{"_index":1352,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:29",{"_index":1349,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:31",{"_index":1353,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:33",{"_index":1367,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:34",{"_index":1348,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:41",{"_index":1363,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:54",{"_index":1361,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:63",{"_index":1366,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:74",{"_index":1362,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:81",{"_index":1364,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:88",{"_index":1360,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:92",{"_index":1359,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entry/entry.directive.t",{"_index":1392,"title":{},"body":{"directives/EntryDirective.html":{},"coverage.html":{}}}],["packages/data/src/entry/entry.directive.ts:18",{"_index":1403,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:20",{"_index":1396,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:22",{"_index":1399,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:24",{"_index":1395,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:26",{"_index":1397,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:28",{"_index":1400,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:30",{"_index":1398,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:32",{"_index":1394,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:39",{"_index":1402,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:47",{"_index":1401,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/files/asset",{"_index":420,"title":{},"body":{"components/AssetListPopComponent.html":{},"coverage.html":{}}}],["packages/data/src/files/asset/asset.directive.t",{"_index":358,"title":{},"body":{"directives/AssetDirective.html":{},"coverage.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:13",{"_index":389,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:15",{"_index":371,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:17",{"_index":375,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:19",{"_index":374,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:21",{"_index":377,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:23",{"_index":370,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:25",{"_index":381,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:27",{"_index":366,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:30",{"_index":390,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:34",{"_index":387,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:45",{"_index":383,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.t",{"_index":1269,"title":{},"body":{"directives/DropzoneDirective.html":{},"coverage.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:11",{"_index":1283,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:13",{"_index":1291,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:24",{"_index":1293,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:37",{"_index":1288,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:46",{"_index":1280,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:7",{"_index":1285,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:9",{"_index":1284,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/file.service.t",{"_index":1591,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["packages/data/src/files/file.service.ts:101",{"_index":1673,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:123",{"_index":1674,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:157",{"_index":1671,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:49",{"_index":1676,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:51",{"_index":1675,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:63",{"_index":1668,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:73",{"_index":1670,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:81",{"_index":1669,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/files.module.t",{"_index":1682,"title":{},"body":{"modules/FilesModule.html":{}}}],["packages/data/src/files/image/image.directive.t",{"_index":1914,"title":{},"body":{"directives/ImageDirective.html":{},"coverage.html":{}}}],["packages/data/src/files/image/image.directive.ts:15",{"_index":1930,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:17",{"_index":1928,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:19",{"_index":1925,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:21",{"_index":1924,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:23",{"_index":1939,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:28",{"_index":1934,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:40",{"_index":1931,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:44",{"_index":1938,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:61",{"_index":1936,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/upload/upload.component.t",{"_index":3858,"title":{},"body":{"components/UploadComponent.html":{},"coverage.html":{}}}],["packages/data/src/files/upload/upload.component.ts:18",{"_index":3880,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:19",{"_index":3885,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:20",{"_index":3883,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:22",{"_index":3871,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:24",{"_index":3869,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:26",{"_index":3867,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:28",{"_index":3866,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:30",{"_index":3868,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:32",{"_index":3870,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:39",{"_index":3864,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:41",{"_index":3873,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:43",{"_index":3881,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:45",{"_index":3884,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:47",{"_index":3863,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:56",{"_index":3877,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:66",{"_index":3875,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:80",{"_index":3876,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:88",{"_index":3879,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/model",{"_index":2635,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["packages/data/src/resourc",{"_index":3081,"title":{},"body":{"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"coverage.html":{}}}],["packages/data/src/resource/resource.module.t",{"_index":3340,"title":{},"body":{"modules/ResourceModule.html":{}}}],["packages/data/src/sdk/history.service.t",{"_index":1831,"title":{},"body":{"injectables/HistoryService.html":{},"coverage.html":{}}}],["packages/data/src/sdk/history.service.ts:14",{"_index":1854,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:16",{"_index":1837,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:19",{"_index":1853,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:20",{"_index":1852,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:21",{"_index":1857,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:22",{"_index":1856,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:24",{"_index":1849,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:40",{"_index":1839,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:50",{"_index":1845,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/sdk.module.t",{"_index":3387,"title":{},"body":{"modules/SdkModule.html":{}}}],["packages/data/src/sdk/sdk.service.t",{"_index":3389,"title":{},"body":{"injectables/SdkService.html":{},"coverage.html":{}}}],["packages/data/src/sdk/sdk.service.ts:100",{"_index":3410,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:110",{"_index":3401,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:121",{"_index":3398,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:133",{"_index":3408,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:30",{"_index":3414,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:32",{"_index":3419,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:33",{"_index":3424,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:43",{"_index":3421,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:45",{"_index":3413,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:47",{"_index":3412,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:49",{"_index":3425,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:56",{"_index":3427,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:61",{"_index":3416,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:63",{"_index":3422,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:65",{"_index":3420,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:72",{"_index":3397,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:75",{"_index":3417,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:80",{"_index":3405,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/location/src/geocode.service.t",{"_index":1762,"title":{},"body":{"injectables/GeocodeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/location/src/geocode.service.ts:12",{"_index":1772,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:18",{"_index":1787,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:43",{"_index":1775,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:49",{"_index":1779,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:62",{"_index":1784,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/loc",{"_index":2286,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{}}}],["packages/location/src/location.module.t",{"_index":2319,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/medium",{"_index":2488,"title":{},"body":{"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["packages/tinymce/src/tinymce.module.t",{"_index":3761,"title":{},"body":{"modules/TinymceModule.html":{}}}],["packages/tinymce/src/tinymce/tinymc",{"_index":4138,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.t",{"_index":3697,"title":{},"body":{"components/TinymceComponent.html":{},"coverage.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:108",{"_index":3713,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:117",{"_index":3716,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:127",{"_index":3719,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:129",{"_index":3714,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:133",{"_index":3715,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:53",{"_index":3720,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:55",{"_index":3718,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:57",{"_index":3717,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:59",{"_index":3721,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:61",{"_index":3709,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:63",{"_index":3710,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:65",{"_index":3711,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:67",{"_index":3704,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:83",{"_index":3712,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/ui/src/form/datetime/calendar.component.t",{"_index":4142,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/datetime/daterange.component.t",{"_index":4145,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/datetime/datetime.component.t",{"_index":1069,"title":{},"body":{"components/DatetimeComponent.html":{},"coverage.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:25",{"_index":1082,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:27",{"_index":1084,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:29",{"_index":1090,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:31",{"_index":1093,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:33",{"_index":1083,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:35",{"_index":1086,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:38",{"_index":1089,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:43",{"_index":1091,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:47",{"_index":1087,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:52",{"_index":1088,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.pipe.t",{"_index":1103,"title":{},"body":{"pipes/DatetimePipe.html":{},"coverage.html":{}}}],["packages/ui/src/form/datetime/datetime.pipe.ts:12",{"_index":1110,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["packages/ui/src/form/datetime/heatmap.component.t",{"_index":4148,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/datetime/month.component.t",{"_index":1119,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{}}}],["packages/ui/src/form/default",{"_index":1255,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/form/form.component.t",{"_index":4152,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/form.module.t",{"_index":1708,"title":{},"body":{"modules/FormModule.html":{}}}],["packages/ui/src/form/form.service.t",{"_index":1725,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{}}}],["packages/ui/src/form/form.service.ts:18",{"_index":1734,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/form.service.ts:31",{"_index":1732,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/form.service.ts:38",{"_index":1736,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/form.service.ts:50",{"_index":1740,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/max",{"_index":2481,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"coverage.html":{}}}],["packages/ui/src/form/toggle/toggle.component.t",{"_index":3763,"title":{},"body":{"components/ToggleComponent.html":{},"coverage.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:20",{"_index":3774,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:22",{"_index":3767,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:25",{"_index":3771,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:30",{"_index":3772,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:34",{"_index":3773,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:37",{"_index":3768,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:41",{"_index":3769,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/vis",{"_index":3929,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{},"coverage.html":{}}}],["packages/ui/src/icon/ec",{"_index":4154,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/icon/emoji",{"_index":4156,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/icon/icon.component.t",{"_index":1877,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["packages/ui/src/icon/icon.component.ts:13",{"_index":1884,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/icon/icon.component.ts:15",{"_index":1883,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/icon/icon.component.ts:19",{"_index":1885,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/icon/icon.module.t",{"_index":1908,"title":{},"body":{"modules/IconModule.html":{}}}],["packages/ui/src/icon/icon.service.t",{"_index":1910,"title":{},"body":{"injectables/IconService.html":{},"coverage.html":{}}}],["packages/ui/src/icon/icon.service.ts:9",{"_index":1912,"title":{},"body":{"injectables/IconService.html":{}}}],["packages/ui/src/io/dynam",{"_index":1307,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/input",{"_index":2010,"title":{},"body":{"components/InputErrorsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/input/input.component.t",{"_index":1958,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/input/input.component.ts:23",{"_index":1967,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:25",{"_index":1963,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:27",{"_index":1972,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:29",{"_index":1965,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:31",{"_index":1966,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:33",{"_index":1969,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:35",{"_index":1968,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:37",{"_index":1961,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:40",{"_index":1978,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:42",{"_index":1973,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:73",{"_index":1976,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:79",{"_index":1986,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:83",{"_index":1974,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:87",{"_index":1975,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/io.module.t",{"_index":2032,"title":{},"body":{"modules/IoModule.html":{}}}],["packages/ui/src/io/output/output.component.t",{"_index":2867,"title":{},"body":{"components/OutputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/output/output.component.ts:15",{"_index":2868,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/io/output/output.component.ts:17",{"_index":2869,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/io/output/output.component.ts:21",{"_index":2870,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/io/slot",{"_index":3541,"title":{},"body":{"directives/SlotHostDirective.html":{},"coverage.html":{}}}],["packages/ui/src/list/group.pipe.t",{"_index":1826,"title":{},"body":{"pipes/GroupPipe.html":{},"coverage.html":{}}}],["packages/ui/src/list/group.pipe.ts:10",{"_index":1828,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["packages/ui/src/list/list",{"_index":2150,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/list/list.component.t",{"_index":2052,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["packages/ui/src/list/list.component.ts:100",{"_index":2085,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:24",{"_index":2089,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:27",{"_index":2065,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:29",{"_index":2066,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:31",{"_index":2064,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:33",{"_index":2069,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:35",{"_index":2070,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:37",{"_index":2071,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:39",{"_index":2072,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:41",{"_index":2067,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:43",{"_index":2068,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:47",{"_index":2080,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:68",{"_index":2074,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:76",{"_index":2087,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:82",{"_index":2083,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:90",{"_index":2084,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.module.t",{"_index":2213,"title":{},"body":{"modules/ListModule.html":{}}}],["packages/ui/src/list/pagination/pagin",{"_index":2996,"title":{},"body":{"classes/PaginationConfig.html":{},"coverage.html":{}}}],["packages/ui/src/list/pagination/pagination.component.t",{"_index":2938,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:16",{"_index":2945,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:18",{"_index":2956,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:20",{"_index":2960,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:22",{"_index":2958,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:24",{"_index":2944,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:28",{"_index":2951,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:33",{"_index":2950,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:43",{"_index":2948,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:48",{"_index":2952,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:62",{"_index":2947,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:67",{"_index":2955,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/loader/loader.component.t",{"_index":2219,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["packages/ui/src/loader/loader.component.ts:14",{"_index":2237,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:16",{"_index":2238,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:18",{"_index":2230,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:25",{"_index":2232,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:31",{"_index":2231,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:38",{"_index":2234,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.module.t",{"_index":2277,"title":{},"body":{"modules/LoaderModule.html":{}}}],["packages/ui/src/loader/loader.service.t",{"_index":2280,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["packages/ui/src/loader/loader.service.ts:11",{"_index":2282,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/loader/loader.service.ts:16",{"_index":2283,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/loader/loader.service.ts:8",{"_index":2284,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/loader/with",{"_index":3936,"title":{},"body":{"interfaces/WithLoader.html":{},"coverage.html":{}}}],["packages/ui/src/notifications/error/error.component.t",{"_index":1481,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:12",{"_index":1484,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:18",{"_index":1486,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:22",{"_index":1485,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:26",{"_index":1487,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/notification.t",{"_index":2735,"title":{},"body":{"classes/Notification.html":{},"coverage.html":{}}}],["packages/ui/src/notifications/notification.ts:10",{"_index":2744,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:12",{"_index":2751,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:14",{"_index":2748,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:16",{"_index":2754,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:18",{"_index":2741,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:20",{"_index":2742,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:22",{"_index":2740,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:24",{"_index":2738,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:6",{"_index":2752,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:8",{"_index":2745,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notifications.component.t",{"_index":2758,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/notifications/notifications.component.ts:20",{"_index":2765,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/notifications/notifications.component.ts:22",{"_index":2764,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/notifications/notifications.module.t",{"_index":2825,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["packages/ui/src/notifications/notifications.service.t",{"_index":2828,"title":{},"body":{"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:22",{"_index":2846,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:24",{"_index":2848,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:26",{"_index":2835,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:34",{"_index":2842,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:45",{"_index":2844,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:58",{"_index":2837,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/with",{"_index":3939,"title":{},"body":{"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["packages/ui/src/pop/pop.component.t",{"_index":3038,"title":{},"body":{"components/PopComponent.html":{},"coverage.html":{}}}],["packages/ui/src/pop/pop.component.ts:18",{"_index":3044,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:20",{"_index":3045,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:23",{"_index":3046,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:25",{"_index":3043,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:31",{"_index":3049,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:43",{"_index":3048,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:52",{"_index":3047,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.module.t",{"_index":3066,"title":{},"body":{"modules/PopModule.html":{}}}],["packages/ui/src/pop/pop.service.t",{"_index":3067,"title":{},"body":{"injectables/PopService.html":{},"coverage.html":{}}}],["packages/ui/src/pop/pop.service.ts:9",{"_index":3071,"title":{},"body":{"injectables/PopService.html":{}}}],["packages/ui/src/select/select.component.t",{"_index":3464,"title":{},"body":{"components/SelectComponent.html":{},"coverage.html":{}}}],["packages/ui/src/select/select.component.ts:102",{"_index":3503,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:113",{"_index":3505,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:120",{"_index":3491,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:125",{"_index":3499,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:129",{"_index":3501,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:137",{"_index":3486,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:145",{"_index":3508,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:148",{"_index":3495,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:152",{"_index":3496,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:27",{"_index":3475,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:29",{"_index":3480,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:31",{"_index":3478,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:33",{"_index":3477,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:35",{"_index":3482,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:37",{"_index":3483,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:39",{"_index":3476,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:41",{"_index":3481,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:43",{"_index":3479,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:45",{"_index":3507,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:47",{"_index":3485,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:53",{"_index":3488,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:61",{"_index":3494,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:65",{"_index":3493,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:70",{"_index":3492,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:91",{"_index":3506,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.component.ts:96",{"_index":3498,"title":{},"body":{"components/SelectComponent.html":{}}}],["packages/ui/src/select/select.module.t",{"_index":3539,"title":{},"body":{"modules/SelectModule.html":{}}}],["packages/ui/src/symbol/symbol.interface.t",{"_index":3589,"title":{},"body":{"interfaces/Symbol.html":{},"coverage.html":{}}}],["packages/ui/src/symbol/symbol.module.t",{"_index":3595,"title":{},"body":{"modules/SymbolModule.html":{}}}],["packages/ui/src/symbol/symbol.pipe.t",{"_index":3599,"title":{},"body":{"injectables/SymbolPipe.html":{},"coverage.html":{}}}],["packages/ui/src/symbol/symbol.pipe.ts:21",{"_index":3601,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["packages/ui/src/symbol/symbol.service.t",{"_index":3605,"title":{},"body":{"injectables/SymbolService.html":{},"coverage.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:10",{"_index":3623,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:12",{"_index":3608,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:18",{"_index":3618,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:23",{"_index":3620,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:31",{"_index":3610,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:36",{"_index":3612,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:46",{"_index":3614,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:9",{"_index":3621,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/ui.module.t",{"_index":3854,"title":{},"body":{"modules/UiModule.html":{}}}],["packages/ui/src/utility/login",{"_index":2407,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/menu/menu.component.t",{"_index":2532,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:102",{"_index":2578,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:15",{"_index":2563,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:17",{"_index":2562,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:19",{"_index":2564,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:21",{"_index":2561,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:23",{"_index":2557,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:25",{"_index":2567,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:27",{"_index":2560,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:29",{"_index":2591,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:31",{"_index":2551,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:38",{"_index":2590,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:47",{"_index":2581,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:52",{"_index":2589,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:58",{"_index":2587,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:63",{"_index":2575,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:68",{"_index":2571,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:73",{"_index":2573,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:78",{"_index":2584,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:88",{"_index":2568,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:95",{"_index":2585,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/mockup/mockup.component.t",{"_index":2619,"title":{},"body":{"components/MockupComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/tab/tab.component.t",{"_index":3638,"title":{},"body":{"components/TabComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:12",{"_index":3645,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:14",{"_index":3647,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:16",{"_index":3646,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:18",{"_index":3648,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:20",{"_index":3649,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:22",{"_index":3643,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:25",{"_index":3653,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:28",{"_index":3650,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:33",{"_index":3651,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.t",{"_index":3657,"title":{},"body":{"components/TabsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:15",{"_index":3674,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:17",{"_index":3666,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:28",{"_index":3672,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:39",{"_index":3667,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:49",{"_index":3668,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:54",{"_index":3670,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/utility.module.t",{"_index":3919,"title":{},"body":{"modules/UtilityModule.html":{}}}],["packages/ui/src/utility/validators/email.validator.t",{"_index":4168,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/utility/validators/field",{"_index":4170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/vc/src/editor/editor.component.t",{"_index":4172,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/vc/src/saf",{"_index":3374,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"coverage.html":{}}}],["packages/vc/src/toolbar/toolbar.component.t",{"_index":3775,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["packages/vc/src/toolbar/toolbar.component.ts:13",{"_index":3782,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["packages/vc/src/toolbar/toolbar.component.ts:17",{"_index":3784,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["packages/vc/src/toolbar/toolbar.component.ts:24",{"_index":3789,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["packages/vc/src/toolbar/toolbar.component.ts:29",{"_index":3786,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["packages/vc/src/vc.module.t",{"_index":3926,"title":{},"body":{"modules/VcModule.html":{}}}],["pad",{"_index":4369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["page",{"_index":531,"title":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}},"body":{"injectables/AuthGuard.html":{},"directives/EntriesDirective.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["page!==1",{"_index":1375,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["pagecontain",{"_index":2941,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagin",{"_index":2192,"title":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}},"body":{"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["pagination'},{'nam",{"_index":267,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["pagination.component.html",{"_index":2940,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.component.scss",{"_index":2939,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.first",{"_index":2984,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.getpag",{"_index":2913,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["pagination.last",{"_index":2988,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.next",{"_index":2987,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.of",{"_index":2991,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.params().from",{"_index":2989,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.params().to",{"_index":2990,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.params().tot",{"_index":2992,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.prev",{"_index":2985,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.s",{"_index":2995,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.settotal(50",{"_index":2912,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["pagination/pagin",{"_index":2107,"title":{},"body":{"components/ListComponent.html":{}}}],["pagination/pagination.compon",{"_index":2217,"title":{},"body":{"modules/ListModule.html":{}}}],["paginationcompon",{"_index":266,"title":{"components/PaginationComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paginationconfig",{"_index":2063,"title":{"classes/PaginationConfig.html":{}},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"changelog.html":{},"coverage.html":{}}}],["paginationconfig(this.config",{"_index":2965,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paint",{"_index":4415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["palett",{"_index":4359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paperclip",{"_index":4419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paperplan",{"_index":4420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paragraph",{"_index":4421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":2875,"title":{},"body":{"classes/Pagination.html":{},"classes/Sorter.html":{}}}],["paramet",{"_index":86,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":771,"title":{},"body":{"classes/Collection.html":{},"interfaces/ItemConfig.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/collection.html":{}}}],["parent.getpath(item",{"_index":2600,"title":{},"body":{"components/MenuComponent.html":{}}}],["parent=0",{"_index":2576,"title":{},"body":{"components/MenuComponent.html":{}}}],["pars",{"_index":2668,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["parsetyp",{"_index":2647,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["parsetype(typ",{"_index":2666,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["part",{"_index":460,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["pass",{"_index":1846,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/item.html":{}}}],["password",{"_index":269,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["passwordlabel",{"_index":2422,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["passwordplacehold",{"_index":2423,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["passwordresetcompon",{"_index":268,"title":{"components/PasswordResetComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["passwort",{"_index":2438,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{}}}],["past",{"_index":4539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paste_as_text",{"_index":4554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":1459,"title":{},"body":{"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ItemConfig.html":{},"components/MenuComponent.html":{},"components/TabsComponent.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["paths[paths.length",{"_index":3684,"title":{},"body":{"components/TabsComponent.html":{}}}],["pattern",{"_index":1108,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["pattern[0",{"_index":1117,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["paus",{"_index":4480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pen",{"_index":4423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pencil",{"_index":4344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pend",{"_index":3170,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{}}}],["per",{"_index":2148,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["percent",{"_index":4424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["peripher",{"_index":2191,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["permiss",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceConfig.html":{},"changelog.html":{}}}],["permissions[method",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{}}}],["pflichtfeld",{"_index":4306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phone",{"_index":3826,"title":{},"body":{"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["photo",{"_index":4425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pick",{"_index":453,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/LocationPickerComponent.html":{}}}],["picker",{"_index":2333,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker'},{'nam",{"_index":246,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["picker.compon",{"_index":2325,"title":{},"body":{"modules/LocationModule.html":{}}}],["picker.component.html",{"_index":2335,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.scss",{"_index":2334,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.t",{"_index":2332,"title":{},"body":{"components/LocationPickerComponent.html":{},"coverage.html":{}}}],["picker.component.ts:24",{"_index":2340,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:26",{"_index":2341,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:28",{"_index":2350,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:30",{"_index":2352,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:32",{"_index":2339,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:35",{"_index":2349,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:41",{"_index":2345,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:56",{"_index":2348,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:62",{"_index":2346,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:78",{"_index":2351,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:80",{"_index":2342,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:84",{"_index":2343,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["pictur",{"_index":4428,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["pie",{"_index":4339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pin",{"_index":4348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe",{"_index":1101,"title":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/SafeHtmlPipe.html":{},"pipes/VisibleFieldsPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(switchmap",{"_index":1810,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["pipetransform",{"_index":1112,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["place",{"_index":1798,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/NotificationsComponent.html":{},"components/TabComponent.html":{},"index.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["place.geometri",{"_index":1801,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lat",{"_index":1804,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lng",{"_index":1806,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["placehold",{"_index":1078,"title":{},"body":{"components/DatetimeComponent.html":{},"classes/Field.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PasswordResetComponent.html":{},"components/SelectComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["placeholder||'auswählen",{"_index":3530,"title":{},"body":{"components/SelectComponent.html":{}}}],["placeholder||\\'auswählen",{"_index":3532,"title":{},"body":{"components/SelectComponent.html":{}}}],["plan",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"miscellaneous/variables.html":{}}}],["platform",{"_index":3183,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["platformid",{"_index":3184,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["platformtyp",{"_index":3186,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["play",{"_index":4481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pleas",{"_index":4258,"title":{},"body":{"index.html":{}}}],["plot",{"_index":4342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plug",{"_index":2220,"title":{},"body":{"components/LoaderComponent.html":{}}}],["plugin",{"_index":4538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["point",{"_index":4352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["polici",{"_index":3148,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["policy.method",{"_index":3150,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["pop",{"_index":423,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"classes/Field.html":{},"components/ListHeaderComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["pop'},{'nam",{"_index":195,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["pop.compon",{"_index":877,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{}}}],["pop.component.html",{"_index":436,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/PopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["pop.component.scss",{"_index":435,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/PopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["pop.component.t",{"_index":422,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/ResourceDeletePopComponent.html":{},"coverage.html":{}}}],["pop.component.ts:21",{"_index":3295,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:23",{"_index":3289,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:24",{"_index":458,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:25",{"_index":3288,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:26",{"_index":459,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:27",{"_index":3287,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:28",{"_index":456,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:29",{"_index":3296,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:30",{"_index":451,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:32",{"_index":3294,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:34",{"_index":480,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:39",{"_index":471,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:51",{"_index":468,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:56",{"_index":3291,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.hid",{"_index":2183,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["pop.servic",{"_index":3055,"title":{},"body":{"components/PopComponent.html":{},"modules/PopModule.html":{}}}],["pop.toggl",{"_index":2181,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["pop/asset",{"_index":421,"title":{},"body":{"components/AssetListPopComponent.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["pop/entri",{"_index":876,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"coverage.html":{}}}],["pop/pop.compon",{"_index":2177,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/SelectComponent.html":{}}}],["pop/pop.modul",{"_index":1709,"title":{},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/UiModule.html":{}}}],["pop/resourc",{"_index":1061,"title":{},"body":{"modules/DataModule.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["pop_dialog",{"_index":3236,"title":{},"body":{"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["pop_draw",{"_index":849,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{}}}],["pop_fullscreen",{"_index":3818,"title":{},"body":{"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["pop_toast",{"_index":3993,"title":{},"body":{"changelog.html":{}}}],["popclass",{"_index":931,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/TypeConfigService.html":{}}}],["popcompon",{"_index":271,"title":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["popcomponent:18",{"_index":462,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popcomponent:20",{"_index":463,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popcomponent:23",{"_index":466,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popcomponent:25",{"_index":482,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popcomponent:31",{"_index":478,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popcomponent:43",{"_index":476,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popcomponent:52",{"_index":473,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popmodul",{"_index":1703,"title":{"modules/PopModule.html":{}},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["popservic",{"_index":448,"title":{"injectables/PopService.html":{}},"body":{"components/AssetListPopComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"coverage.html":{},"overview.html":{}}}],["popth",{"_index":3054,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["popul",{"_index":3320,"title":{},"body":{"classes/ResourceForm.html":{}}}],["portrait",{"_index":4427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["posit",{"_index":2308,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["possess",{"_index":1426,"title":{},"body":{"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["possibl",{"_index":432,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/CrudConfig.html":{},"classes/Field.html":{},"components/LoginFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["post",{"_index":678,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["potter",{"_index":4406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["power",{"_index":4430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preced",{"_index":2792,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["prefer",{"_index":4023,"title":{},"body":{"changelog.html":{}}}],["prefil",{"_index":3098,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/core-classes/form.html":{}}}],["prefill:'bobbi",{"_index":4808,"title":{},"body":{"additional-documentation/core-classes/form.html":{}}}],["prefix",{"_index":4649,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["prepend",{"_index":2712,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["prepublish",{"_index":4221,"title":{},"body":{"index.html":{}}}],["prequisit",{"_index":4639,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["present",{"_index":73,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthGuard.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{}}}],["preserv",{"_index":1601,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["preservefilenam",{"_index":1596,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["press",{"_index":3259,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["pretti",{"_index":2008,"title":{},"body":{"components/InputComponent.html":{}}}],["prev",{"_index":1345,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{},"miscellaneous/variables.html":{}}}],["preview",{"_index":3190,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["previou",{"_index":2086,"title":{},"body":{"components/ListComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["price",{"_index":4471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primit",{"_index":2049,"title":{},"body":{"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["primitive.resolv",{"_index":4778,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["primitv",{"_index":4732,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["printer",{"_index":4431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["privat",{"_index":495,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"directives/ImageDirective.html":{},"components/InputErrorsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["process",{"_index":3708,"title":{},"body":{"components/TinymceComponent.html":{}}}],["prod",{"_index":4663,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["product",{"_index":4666,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["profil",{"_index":4512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["programmat",{"_index":2045,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["project",{"_index":4015,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["promis",{"_index":116,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["promise((resolv",{"_index":1812,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["promise.all(this.stack.item",{"_index":2270,"title":{},"body":{"components/LoaderComponent.html":{}}}],["promise.reject('api_not_found",{"_index":653,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject('cannot",{"_index":411,"title":{},"body":{"directives/AssetDirective.html":{}}}],["promise.reject('desktop",{"_index":2860,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["promise.reject('fehl",{"_index":2777,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["promise.reject('getaccount",{"_index":3462,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('getschema",{"_index":3459,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('no_api_found",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject(`ecimag",{"_index":1948,"title":{},"body":{"directives/ImageDirective.html":{}}}],["promise.reject(err",{"_index":1009,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["promise.reject(this.noclientid",{"_index":646,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolv",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["promise.resolve().then",{"_index":898,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(>asset",{"_index":1654,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(['get",{"_index":677,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(api",{"_index":647,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(config",{"_index":2730,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["promise.resolve(item.config.onsave(item",{"_index":3360,"title":{},"body":{"injectables/ResourceService.html":{}}}],["promise.resolve(method",{"_index":672,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(result",{"_index":683,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(results.concat(method",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(this.editor",{"_index":155,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{}}}],["promise.resolve(valu",{"_index":2475,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["propag",{"_index":1092,"title":{},"body":{"components/DatetimeComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["propagatechang",{"_index":36,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["proper",{"_index":2656,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["properli",{"_index":4703,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["properti",{"_index":33,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["properties.foreach(properti",{"_index":2713,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["property.can",{"_index":4260,"title":{},"body":{"index.html":{}}}],["property.interfac",{"_index":1580,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["property.interface.t",{"_index":4057,"title":{},"body":{"coverage.html":{}}}],["property.split",{"_index":1463,"title":{},"body":{"components/EntryListComponent.html":{}}}],["property[0",{"_index":2682,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["protect",{"_index":716,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"classes/Pagination.html":{}}}],["prototyp",{"_index":2621,"title":{},"body":{"components/MockupComponent.html":{}}}],["protractor",{"_index":4275,"title":{},"body":{"index.html":{}}}],["provd",{"_index":2197,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["provid",{"_index":23,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["public",{"_index":39,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["publicapi",{"_index":369,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{}}}],["publicapi(shortid",{"_index":3454,"title":{},"body":{"injectables/SdkService.html":{}}}],["publicassetlist",{"_index":1603,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["publicassetresourc",{"_index":401,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["publicassetright",{"_index":3132,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["publicservic",{"_index":3984,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":4218,"title":{"additional-documentation/project-setup-tutorial/publishing.html":{}},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["push",{"_index":2843,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["put",{"_index":679,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"injectables/HistoryService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"changelog.html":{}}}],["qb1mro56u5katpx9j8o4",{"_index":2330,"title":{},"body":{"modules/LocationModule.html":{}}}],["qr",{"_index":4432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quellenangab",{"_index":4582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queri",{"_index":2141,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["queryfilt",{"_index":3824,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["querylist",{"_index":2173,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/PaginationComponent.html":{},"components/TabsComponent.html":{}}}],["question",{"_index":4395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quick",{"_index":921,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["quickli",{"_index":4694,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["quot",{"_index":4433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rack",{"_index":1320,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.compon",{"_index":2036,"title":{},"body":{"modules/IoModule.html":{}}}],["rack.component.html",{"_index":1311,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.component.t",{"_index":1309,"title":{},"body":{"components/DynamicRackComponent.html":{},"coverage.html":{}}}],["rack.component.ts:10",{"_index":1314,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack/dynam",{"_index":1308,"title":{},"body":{"components/DynamicRackComponent.html":{},"modules/IoModule.html":{},"coverage.html":{}}}],["ramp",{"_index":4454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rang",{"_index":2999,"title":{},"body":{"classes/PaginationConfig.html":{},"changelog.html":{}}}],["raw",{"_index":1109,"title":{},"body":{"pipes/DatetimePipe.html":{},"components/LocationPickerComponent.html":{},"injectables/ModelConfigService.html":{}}}],["rawfilt",{"_index":2690,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["rc.0",{"_index":4209,"title":{},"body":{"index.html":{}}}],["re",{"_index":79,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["react",{"_index":518,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["reactiv",{"_index":2491,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["reactiveformsmodul",{"_index":560,"title":{},"body":{"modules/AuthModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{}}}],["read",{"_index":948,"title":{},"body":{"interfaces/CrudConfig.html":{},"directives/ImageDirective.html":{},"miscellaneous/variables.html":{}}}],["readabl",{"_index":1555,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["readi",{"_index":37,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"changelog.html":{}}}],["readm",{"_index":357,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Collection.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"components/TabsComponent.html":{},"index.html":{}}}],["readonli",{"_index":2047,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/LocationMapComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"changelog.html":{}}}],["recent",{"_index":2457,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["recogn",{"_index":4821,"title":{},"body":{"additional-documentation/core-classes/selection.html":{}}}],["recommend",{"_index":2785,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["reconstruct",{"_index":2081,"title":{},"body":{"components/ListComponent.html":{}}}],["recycl",{"_index":4518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirect",{"_index":520,"title":{},"body":{"injectables/AuthGuard.html":{},"components/LoginComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["redo",{"_index":4508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reduce((a",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{}}}],["reduce((ha",{"_index":3573,"title":{},"body":{"classes/Sorter.html":{}}}],["reduce((match",{"_index":998,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["redund",{"_index":4761,"title":{},"body":{"additional-documentation/ui.html":{}}}],["refactor",{"_index":4013,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":1979,"title":{},"body":{"components/InputComponent.html":{},"injectables/LoaderService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["referenc",{"_index":4726,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["reflect",{"_index":1138,"title":{},"body":{"interfaces/Day.html":{},"miscellaneous/variables.html":{}}}],["refresh",{"_index":4345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regex",{"_index":3089,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["regexp",{"_index":2042,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/ResourceConfig.html":{}}}],["regist",{"_index":83,"title":{},"body":{"components/AceComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"injectables/LoaderService.html":{},"injectables/SymbolService.html":{},"components/ToggleComponent.html":{}}}],["registeronchang",{"_index":48,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["registeronchange(fn",{"_index":81,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["registerontouch",{"_index":49,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["registri",{"_index":1878,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{},"injectables/SymbolService.html":{},"additional-documentation/ui/icons.html":{}}}],["regular",{"_index":3934,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["reject",{"_index":1813,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["reject(statu",{"_index":1818,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["rel",{"_index":1242,"title":{},"body":{"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/TabComponent.html":{},"index.html":{}}}],["relat",{"_index":556,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"modules/LocationModule.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{}}}],["relationnam",{"_index":3096,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["relativeto",{"_index":3695,"title":{},"body":{"components/TabsComponent.html":{}}}],["releas",{"_index":4048,"title":{},"body":{"changelog.html":{}}}],["relev",{"_index":332,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["reli",{"_index":4731,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["reload",{"_index":855,"title":{},"body":{"components/CrudComponent.html":{},"index.html":{}}}],["remain",{"_index":939,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["remov",{"_index":475,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["remove(item",{"_index":755,"title":{},"body":{"classes/Collection.html":{}}}],["removeal",{"_index":722,"title":{},"body":{"classes/Collection.html":{}}}],["removeall(item",{"_index":758,"title":{},"body":{"classes/Collection.html":{}}}],["removefilt",{"_index":2158,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["removefilter(properti",{"_index":2169,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["removeformat",{"_index":4597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removeitem",{"_index":3471,"title":{},"body":{"components/SelectComponent.html":{}}}],["removeitem(item",{"_index":3497,"title":{},"body":{"components/SelectComponent.html":{}}}],["renam",{"_index":2051,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/PopComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["renamend",{"_index":3989,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":816,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["renew",{"_index":3999,"title":{},"body":{"changelog.html":{}}}],["repeat",{"_index":4469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replac",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/SymbolService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["replacewith",{"_index":723,"title":{},"body":{"classes/Collection.html":{}}}],["replacewith(item",{"_index":761,"title":{},"body":{"classes/Collection.html":{}}}],["repli",{"_index":4587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repositori",{"_index":4211,"title":{},"body":{"index.html":{}}}],["repres",{"_index":1125,"title":{},"body":{"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["request",{"_index":1926,"title":{},"body":{"directives/ImageDirective.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{}}}],["requir",{"_index":328,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"classes/Field.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["reset",{"_index":318,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"components/LoginFormComponent.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"components/PasswordResetComponent.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"changelog.html":{},"overview.html":{}}}],["reset'},{'nam",{"_index":270,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["reset.compon",{"_index":566,"title":{},"body":{"modules/AuthModule.html":{}}}],["reset.component.html",{"_index":3011,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.t",{"_index":3009,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reset.component.ts:14",{"_index":3020,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:16",{"_index":3019,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:18",{"_index":3014,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:20",{"_index":3015,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:22",{"_index":3016,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:24",{"_index":3013,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:26",{"_index":3018,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:29",{"_index":3017,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset/password",{"_index":565,"title":{},"body":{"modules/AuthModule.html":{},"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["resetpassword",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(email",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{}}}],["resiz",{"_index":4536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolv",{"_index":118,"title":{},"body":{"components/AceComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["resolve(nam",{"_index":3611,"title":{},"body":{"injectables/SymbolService.html":{}}}],["resolve(result",{"_index":1817,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["resolveasset",{"_index":1665,"title":{},"body":{"injectables/FileService.html":{}}}],["resolveassets(asset",{"_index":1648,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["resolved.find((resourc",{"_index":1661,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["resolvedapi",{"_index":651,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvevari",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvevariables(str",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{}}}],["resourc",{"_index":273,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["resource.assetid",{"_index":1662,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["resource.del().then((r",{"_index":3372,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resource.delete.no",{"_index":3308,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["resource.delete.quest",{"_index":3306,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["resource.delete.y",{"_index":3307,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["resource.newhistori",{"_index":1870,"title":{},"body":{"injectables/HistoryService.html":{}}}],["resource.sav",{"_index":3362,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resource.save().then((_resourc",{"_index":3369,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resource/resource.modul",{"_index":1065,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{}}}],["resource[key",{"_index":3367,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resourceconfig",{"_index":604,"title":{"injectables/ResourceConfig.html":{}},"body":{"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["resourcecrudcompon",{"_index":272,"title":{"components/ResourceCrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["resourcedeletepopcompon",{"_index":274,"title":{"components/ResourceDeletePopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceform",{"_index":3109,"title":{"classes/ResourceForm.html":{}},"body":{"injectables/ResourceConfig.html":{},"classes/ResourceForm.html":{},"coverage.html":{}}}],["resourceformcompon",{"_index":276,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcelist",{"_index":1440,"title":{},"body":{"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{},"changelog.html":{},"coverage.html":{}}}],["resourcelistcompon",{"_index":277,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["resourcelistcomponent:105",{"_index":1448,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:114",{"_index":1442,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:118",{"_index":1446,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:22",{"_index":1454,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:24",{"_index":1430,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:26",{"_index":1435,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:28",{"_index":1453,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:30",{"_index":1428,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:32",{"_index":1433,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:34",{"_index":1431,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:36",{"_index":1436,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:45",{"_index":1455,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:57",{"_index":1439,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:78",{"_index":1449,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcemodul",{"_index":1038,"title":{"modules/ResourceModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules.html":{},"overview.html":{}}}],["resourcepopcompon",{"_index":278,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["resourceselectcompon",{"_index":279,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceservic",{"_index":1421,"title":{"injectables/ResourceService.html":{}},"body":{"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["respons",{"_index":1645,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["response['getallitem",{"_index":1644,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["rest",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/ui/icons.html":{}}}],["result",{"_index":308,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["results.length",{"_index":2364,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["results.push(method",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{}}}],["results[0].formatted_address",{"_index":2365,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["retriev",{"_index":2661,"title":{},"body":{"injectables/ModelConfigService.html":{},"classes/Pagination.html":{}}}],["return",{"_index":76,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["revers",{"_index":1780,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"classes/Sorter.html":{}}}],["right",{"_index":3134,"title":{},"body":{"injectables/ResourceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["role",{"_index":334,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{}}}],["roleid",{"_index":3231,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["roll",{"_index":4418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":353,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"classes/Config.html":{},"injectables/SdkService.html":{}}}],["rotat",{"_index":4473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rout",{"_index":512,"title":{"additional-documentation/project-setup-tutorial/routes.html":{}},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["route.data",{"_index":2597,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.data.hidden",{"_index":2598,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.param",{"_index":886,"title":{},"body":{"components/CrudComponent.html":{}}}],["route.params.subscrib",{"_index":1461,"title":{},"body":{"components/EntryListComponent.html":{}}}],["route.path",{"_index":2595,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.path.indexof",{"_index":2596,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.queryparam",{"_index":887,"title":{},"body":{"components/CrudComponent.html":{}}}],["router",{"_index":827,"title":{},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["routermodul",{"_index":1045,"title":{},"body":{"modules/DataModule.html":{},"modules/UtilityModule.html":{}}}],["routing.module.t",{"_index":4698,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["rss",{"_index":4441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ruler",{"_index":4435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1552,"title":{},"body":{"classes/Field.html":{},"classes/ResourceForm.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes/field.html":{}}}],["rxj",{"_index":4188,"title":{},"body":{"dependencies.html":{},"additional-documentation/core-classes.html":{}}}],["rxjs/add/operator/debouncetim",{"_index":1130,"title":{},"body":{"interfaces/Day.html":{},"components/TinymceComponent.html":{}}}],["rxjs/add/operator/filt",{"_index":994,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rxjs/add/operator/switchmap",{"_index":874,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["rxjs/observ",{"_index":772,"title":{},"body":{"classes/Collection.html":{},"injectables/CrudService.html":{},"injectables/GeocodeService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rxjs/observable/frompromis",{"_index":1790,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["rxjs/observable/merg",{"_index":875,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["rxjs/oper",{"_index":1792,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["rxjs/subject",{"_index":534,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{}}}],["safe",{"_index":3378,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"modules/VcModule.html":{}}}],["safehtml",{"_index":3380,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["safehtmlpip",{"_index":3373,"title":{"pipes/SafeHtmlPipe.html":{}},"body":{"pipes/SafeHtmlPipe.html":{},"modules/VcModule.html":{},"coverage.html":{},"overview.html":{}}}],["samantha",{"_index":2628,"title":{},"body":{"components/MockupComponent.html":{}}}],["same",{"_index":731,"title":{},"body":{"classes/Collection.html":{},"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"components/MenuComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/core-classes/selection.html":{}}}],["sandbox.scss",{"_index":4660,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["sanit",{"_index":3383,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["save",{"_index":941,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/ItemConfig.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["save(item",{"_index":3353,"title":{},"body":{"injectables/ResourceService.html":{}}}],["save(model",{"_index":985,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["save(valu",{"_index":3321,"title":{},"body":{"classes/ResourceForm.html":{}}}],["savethi",{"_index":4654,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["scaffold",{"_index":4239,"title":{},"body":{"index.html":{}}}],["scale",{"_index":4340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema",{"_index":2640,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{}}}],["schema'",{"_index":2669,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.allof[1",{"_index":2707,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.properties[properti",{"_index":2719,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.properties[property].readonli",{"_index":2721,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.properties[property].titl",{"_index":2717,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.required.indexof(properti",{"_index":2722,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schemarequest",{"_index":3391,"title":{},"body":{"injectables/SdkService.html":{}}}],["schon",{"_index":4303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scissor",{"_index":4436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":4747,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["screen",{"_index":4361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["script",{"_index":4216,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["scripts:npm",{"_index":4222,"title":{},"body":{"index.html":{}}}],["scssmake",{"_index":4650,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["sdk",{"_index":339,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["sdk.api",{"_index":368,"title":{},"body":{"directives/AssetDirective.html":{},"components/PasswordResetComponent.html":{},"components/UploadComponent.html":{}}}],["sdk.servic",{"_index":3388,"title":{},"body":{"modules/SdkModule.html":{}}}],["sdk/history.servic",{"_index":1066,"title":{},"body":{"modules/DataModule.html":{}}}],["sdk/sdk.modul",{"_index":1055,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{}}}],["sdk/sdk.servic",{"_index":403,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["sdkmodul",{"_index":1039,"title":{"modules/SdkModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules.html":{},"overview.html":{}}}],["sdkservic",{"_index":342,"title":{"injectables/SdkService.html":{}},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/data.html":{}}}],["sdkservice#api",{"_index":2390,"title":{},"body":{"components/LoginComponent.html":{}}}],["sdkservice.readi",{"_index":3998,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":1515,"title":{},"body":{"classes/Field.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["search'},{'nam",{"_index":248,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["search.compon",{"_index":2326,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["search.component.html",{"_index":2369,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.t",{"_index":2367,"title":{},"body":{"components/LocationSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:13",{"_index":2373,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:15",{"_index":2376,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:17",{"_index":2372,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:25",{"_index":2374,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:31",{"_index":2375,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["searchbar",{"_index":1777,"title":{},"body":{"injectables/GeocodeService.html":{},"interfaces/ItemConfig.html":{},"components/LocationSearchComponent.html":{}}}],["searchinput",{"_index":2370,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["second",{"_index":2101,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["section",{"_index":3051,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["see",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["sein",{"_index":4719,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["seit",{"_index":539,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["sekundär",{"_index":4570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select",{"_index":438,"title":{"additional-documentation/core-classes/selection.html":{}},"body":{"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationSearchComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/selection.html":{}}}],["select'},{'nam",{"_index":197,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["select($ev",{"_index":467,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["select(item",{"_index":3266,"title":{},"body":{"components/ResourceCrudComponent.html":{},"components/SelectComponent.html":{}}}],["select(pag",{"_index":2900,"title":{},"body":{"classes/Pagination.html":{}}}],["select(tab",{"_index":3669,"title":{},"body":{"components/TabsComponent.html":{}}}],["select.compon",{"_index":1052,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{}}}],["select.component.html",{"_index":3467,"title":{},"body":{"components/SelectComponent.html":{}}}],["select.component.scss",{"_index":3466,"title":{},"body":{"components/SelectComponent.html":{}}}],["select.component.t",{"_index":4102,"title":{},"body":{"coverage.html":{}}}],["select.emit(item",{"_index":2077,"title":{},"body":{"components/ListComponent.html":{}}}],["select/asset",{"_index":1685,"title":{},"body":{"modules/FilesModule.html":{},"coverage.html":{}}}],["select/entri",{"_index":1051,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{}}}],["select/resourc",{"_index":1064,"title":{},"body":{"modules/DataModule.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["select/select.modul",{"_index":3857,"title":{},"body":{"modules/UiModule.html":{}}}],["selectbyurl",{"_index":3665,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectbyurl(url",{"_index":3671,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectcompon",{"_index":280,"title":{"components/SelectComponent.html":{},"additional-documentation/ui/selectcomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selectday(_mo",{"_index":1230,"title":{},"body":{"interfaces/Day.html":{}}}],["selected.display",{"_index":3531,"title":{},"body":{"components/SelectComponent.html":{}}}],["selectentri",{"_index":832,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectentry(item",{"_index":860,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectindex",{"_index":2059,"title":{},"body":{"components/ListComponent.html":{}}}],["selectindex(index",{"_index":2082,"title":{},"body":{"components/ListComponent.html":{}}}],["selection(this.valu",{"_index":3516,"title":{},"body":{"components/SelectComponent.html":{}}}],["selection.compon",{"_index":3979,"title":{},"body":{"changelog.html":{}}}],["selection.toggl",{"_index":2079,"title":{},"body":{"components/ListComponent.html":{}}}],["selectmod",{"_index":2142,"title":{},"body":{"interfaces/ListConfig.html":{},"changelog.html":{}}}],["selectmodul",{"_index":3533,"title":{"modules/SelectModule.html":{}},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["selectnext",{"_index":2060,"title":{},"body":{"components/ListComponent.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["selectprev",{"_index":2061,"title":{},"body":{"components/ListComponent.html":{}}}],["selectupload",{"_index":439,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["selectupload(upload",{"_index":470,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["send",{"_index":3010,"title":{},"body":{"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{}}}],["sensit",{"_index":3567,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/variables.html":{}}}],["sent",{"_index":3023,"title":{},"body":{"components/PasswordResetComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["serial",{"_index":3323,"title":{},"body":{"classes/ResourceForm.html":{}}}],["serv",{"_index":4234,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes.html":{}}}],["server",{"_index":3658,"title":{},"body":{"components/TabsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["servic",{"_index":452,"title":{},"body":{"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"modules/LocationModule.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["session",{"_index":3392,"title":{},"body":{"injectables/SdkService.html":{}}}],["session(environment.environ",{"_index":3444,"title":{},"body":{"injectables/SdkService.html":{}}}],["set",{"_index":74,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{}}}],["set([this.config.s",{"_index":2918,"title":{},"body":{"classes/Pagination.html":{}}}],["set(properti",{"_index":2670,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["set(symbol",{"_index":3613,"title":{},"body":{"injectables/SymbolService.html":{}}}],["set(typ",{"_index":3816,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["setapi(api",{"_index":3426,"title":{},"body":{"injectables/SdkService.html":{}}}],["setclientid",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["setdate(d",{"_index":1224,"title":{},"body":{"interfaces/Day.html":{}}}],["setemptystringstonul",{"_index":3344,"title":{},"body":{"injectables/ResourceService.html":{}}}],["setmod",{"_index":50,"title":{},"body":{"components/AceComponent.html":{}}}],["setmode(mod",{"_index":91,"title":{},"body":{"components/AceComponent.html":{}}}],["setter",{"_index":799,"title":{},"body":{"classes/Config.html":{}}}],["setthem",{"_index":51,"title":{},"body":{"components/AceComponent.html":{}}}],["settheme(them",{"_index":96,"title":{},"body":{"components/AceComponent.html":{}}}],["settimeout",{"_index":2612,"title":{},"body":{"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{}}}],["settimeout(resolv",{"_index":2252,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["settings.t",{"_index":4139,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["settot",{"_index":2876,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(itemcount",{"_index":2934,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(tot",{"_index":2902,"title":{},"body":{"classes/Pagination.html":{}}}],["setup",{"_index":4016,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["seturl",{"_index":1921,"title":{},"body":{"directives/ImageDirective.html":{}}}],["seturl(url",{"_index":1935,"title":{},"body":{"directives/ImageDirective.html":{}}}],["setvalu",{"_index":2291,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["setvalue(valu",{"_index":2304,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["share",{"_index":4439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shear",{"_index":4444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shift",{"_index":4502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shoot",{"_index":4253,"title":{},"body":{"index.html":{}}}],["shop",{"_index":4445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["short",{"_index":3411,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["shorthand",{"_index":4651,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["shortid",{"_index":2728,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["show",{"_index":431,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceDeletePopComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["showerror",{"_index":2417,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["showerror(err",{"_index":2452,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["showhead",{"_index":2062,"title":{},"body":{"components/ListComponent.html":{}}}],["showlabel",{"_index":2424,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["shown",{"_index":517,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/CrudConfig.html":{},"components/EntryListComponent.html":{},"components/IconComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["shownotif",{"_index":2770,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["showrawvalu",{"_index":2337,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["shrink",{"_index":4450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sie",{"_index":544,"title":{},"body":{"injectables/AuthGuard.html":{},"components/PasswordResetComponent.html":{}}}],["sign",{"_index":4323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signal",{"_index":4442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signup",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(undefin",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{}}}],["silent",{"_index":3941,"title":{},"body":{"interfaces/WithNotifications.html":{},"miscellaneous/variables.html":{}}}],["simi",{"_index":808,"title":{},"body":{"classes/Config.html":{}}}],["simibug",{"_index":1371,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["similar",{"_index":1472,"title":{},"body":{"components/EntryListComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"components/LoginComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{}}}],["simpl",{"_index":2767,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["sind",{"_index":545,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["singl",{"_index":391,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{},"classes/ResourceForm.html":{}}}],["singleton",{"_index":3550,"title":{},"body":{"classes/Sorter.html":{}}}],["site",{"_index":2258,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["situat",{"_index":3800,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["size",{"_index":1922,"title":{},"body":{"directives/ImageDirective.html":{},"interfaces/ListConfig.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["skin",{"_index":4537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skip",{"_index":1429,"title":{},"body":{"components/EntryListComponent.html":{}}}],["skull",{"_index":4455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice",{"_index":2483,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"classes/Pagination.html":{}}}],["slice(item",{"_index":2906,"title":{},"body":{"classes/Pagination.html":{}}}],["slider",{"_index":4438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slot",{"_index":305,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["slot'},{'nam",{"_index":214,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["slot.compon",{"_index":1988,"title":{},"body":{"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{}}}],["slot.component.html",{"_index":1323,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["slot.component.t",{"_index":1322,"title":{},"body":{"components/DynamicSlotComponent.html":{},"coverage.html":{}}}],["slot.component.ts:11",{"_index":1326,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot.component.ts:18",{"_index":1329,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot/dynam",{"_index":1321,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"coverage.html":{}}}],["slothostdirect",{"_index":304,"title":{"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["small",{"_index":4456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smaller",{"_index":4532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smiley",{"_index":4503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smoother",{"_index":3005,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["soeben",{"_index":3027,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["solo",{"_index":1418,"title":{},"body":{"components/EntryListComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/SelectComponent.html":{},"additional-documentation/core-classes/selection.html":{}}}],["somemodul",{"_index":1892,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["somewher",{"_index":140,"title":{},"body":{"components/AceComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["soon",{"_index":356,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{}}}],["sophist",{"_index":714,"title":{},"body":{"classes/Collection.html":{},"index.html":{},"additional-documentation/core-classes/collection.html":{}}}],["sort",{"_index":1564,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["sort(((a",{"_index":2922,"title":{},"body":{"classes/Pagination.html":{}}}],["sort(item",{"_index":3560,"title":{},"body":{"classes/Sorter.html":{}}}],["sortabl",{"_index":1506,"title":{},"body":{"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["sortbi",{"_index":2143,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["sortboolean",{"_index":3555,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortboolean(a",{"_index":3572,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorter",{"_index":3548,"title":{"classes/Sorter.html":{},"additional-documentation/core-classes/sorter.html":{}},"body":{"classes/Sorter.html":{},"coverage.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["sortierenfor",{"_index":4820,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["sortnumb",{"_index":3554,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortnumber(a",{"_index":3571,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sortstr",{"_index":3553,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortstring(a",{"_index":3569,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorttyp",{"_index":3551,"title":{},"body":{"classes/Sorter.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{}}}],["source.addeventlistener('entrycr",{"_index":1875,"title":{},"body":{"injectables/HistoryService.html":{}}}],["source.addeventlistener('entryupd",{"_index":1872,"title":{},"body":{"injectables/HistoryService.html":{}}}],["space",{"_index":4422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["span",{"_index":1140,"title":{},"body":{"interfaces/Day.html":{}}}],["spanchang",{"_index":1151,"title":{},"body":{"interfaces/Day.html":{}}}],["spancolor",{"_index":1141,"title":{},"body":{"interfaces/Day.html":{}}}],["speaker",{"_index":4457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speakingurl",{"_index":4727,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["spec.t",{"_index":4268,"title":{},"body":{"index.html":{}}}],["specif",{"_index":1545,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["specifi",{"_index":93,"title":{},"body":{"components/AceComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{}}}],["spell",{"_index":4461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spray",{"_index":4462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["squar",{"_index":1929,"title":{},"body":{"directives/ImageDirective.html":{},"miscellaneous/variables.html":{}}}],["src",{"_index":1919,"title":{},"body":{"directives/ImageDirective.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ace.html":{}}}],["src/app/app",{"_index":4697,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/app/app.component.html",{"_index":4686,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/app.modul",{"_index":4671,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/muffins/muffins.component.html",{"_index":4696,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/environ",{"_index":4662,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.prod.t",{"_index":4668,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.t",{"_index":4665,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/packag",{"_index":4203,"title":{},"body":{"index.html":{}}}],["ssl",{"_index":4679,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ssl\",without",{"_index":4681,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["stack",{"_index":2226,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"index.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["stackoverflow",{"_index":4509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stage",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["stand",{"_index":801,"title":{},"body":{"classes/Config.html":{}}}],["star",{"_index":4484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":1080,"title":{"changelog.html":{},"index.html":{}},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"pipes/MaxItemsPipe.html":{},"components/TabComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["startnow",{"_index":4690,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["state",{"_index":956,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListHeaderComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["statement",{"_index":4051,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1067,"title":{},"body":{"modules/DataModule.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["statu",{"_index":1815,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{}}}],["stay",{"_index":2749,"title":{},"body":{"classes/Notification.html":{},"injectables/SymbolService.html":{},"changelog.html":{}}}],["sticki",{"_index":912,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["stop",{"_index":2236,"title":{},"body":{"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":1850,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/WithNotifications.html":{},"index.html":{}}}],["strategy=endless",{"_index":1376,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["stream",{"_index":1841,"title":{},"body":{"injectables/HistoryService.html":{},"dependencies.html":{}}}],["strike",{"_index":4463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":65,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/list.html":{}}}],["string,valu",{"_index":1445,"title":{},"body":{"components/EntryListComponent.html":{}}}],["string.replac",{"_index":670,"title":{},"body":{"injectables/AuthService.html":{}}}],["stringfield",{"_index":3084,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["stringfield(label",{"_index":3099,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["structur",{"_index":1549,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["stuff",{"_index":2222,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["style",{"_index":2620,"title":{},"body":{"components/MockupComponent.html":{},"components/PopComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["style_format",{"_index":4572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles.scss",{"_index":4656,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["styleselect",{"_index":4593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleurl",{"_index":28,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultOutputComponent.html":{},"components/EntryListComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["sub",{"_index":802,"title":{},"body":{"classes/Config.html":{}}}],["subbranch",{"_index":2048,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["subclass",{"_index":2449,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["subfold",{"_index":4230,"title":{},"body":{"index.html":{}}}],["subject",{"_index":527,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"additional-documentation/core-classes.html":{}}}],["submenu",{"_index":2552,"title":{},"body":{"components/MenuComponent.html":{}}}],["submit",{"_index":2411,"title":{},"body":{"components/LoginFormComponent.html":{},"changelog.html":{}}}],["subscrib",{"_index":888,"title":{},"body":{"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LocationSearchComponent.html":{},"components/PaginationComponent.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["subscribe((chang",{"_index":2001,"title":{},"body":{"components/InputComponent.html":{}}}],["subscribe((day",{"_index":1156,"title":{},"body":{"interfaces/Day.html":{}}}],["subscribe((upd",{"_index":1470,"title":{},"body":{"components/EntryListComponent.html":{}}}],["subscribe(editor",{"_index":3738,"title":{},"body":{"components/TinymceComponent.html":{}}}],["subscribe(timespan",{"_index":1159,"title":{},"body":{"interfaces/Day.html":{}}}],["subscript",{"_index":4464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["substract",{"_index":4465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subtract(weeksbefor",{"_index":1202,"title":{},"body":{"interfaces/Day.html":{}}}],["succes",{"_index":2444,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["success",{"_index":2385,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["success/error",{"_index":2783,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["successfulli",{"_index":940,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["such",{"_index":1550,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["suitabl",{"_index":1556,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["sunni",{"_index":4466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super",{"_index":350,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/ModelConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["super(bodi",{"_index":3331,"title":{},"body":{"classes/ResourceForm.html":{}}}],["super(loaderservic",{"_index":1460,"title":{},"body":{"components/EntryListComponent.html":{}}}],["super(popservic",{"_index":496,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["super(sdk",{"_index":1942,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.load",{"_index":1932,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.load(id).then(this.use.bind(thi",{"_index":1946,"title":{},"body":{"directives/ImageDirective.html":{}}}],["superscript",{"_index":4467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":186,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/SelectComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"modules.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["sure",{"_index":62,"title":{},"body":{"components/AceComponent.html":{},"injectables/CrudService.html":{},"components/LoaderComponent.html":{},"interfaces/Update.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["svg",{"_index":4279,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":938,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoaderComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["switchmap",{"_index":1791,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["symbol",{"_index":835,"title":{"interfaces/Symbol.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["symbol.cont",{"_index":3633,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbol.interfac",{"_index":3603,"title":{},"body":{"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{}}}],["symbol.nam",{"_index":3631,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbol.pip",{"_index":3598,"title":{},"body":{"modules/SymbolModule.html":{}}}],["symbol.servic",{"_index":3596,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"changelog.html":{}}}],["symbol/symbol.interfac",{"_index":1896,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{}}}],["symbol/symbol.modul",{"_index":1722,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["symbol/symbol.servic",{"_index":1913,"title":{},"body":{"injectables/IconService.html":{},"components/InputErrorsComponent.html":{}}}],["symbolmodul",{"_index":1706,"title":{"modules/SymbolModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["symbolpip",{"_index":3597,"title":{"injectables/SymbolPipe.html":{}},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"coverage.html":{}}}],["symbols.map(symbol",{"_index":3634,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservic",{"_index":836,"title":{"injectables/SymbolService.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"injectables/IconService.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["symbolservice.resolv",{"_index":3602,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["symlink",{"_index":4214,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["symlinks.sh",{"_index":4225,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["sync",{"_index":3151,"title":{},"body":{"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["synchron",{"_index":4470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":980,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["t",{"_index":732,"title":{},"body":{"classes/Collection.html":{},"interfaces/ItemConfig.html":{}}}],["t\\=(?:[0",{"_index":4612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tab",{"_index":3639,"title":{},"body":{"components/TabComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["tab'",{"_index":3644,"title":{},"body":{"components/TabComponent.html":{}}}],["tab'},{'nam",{"_index":282,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["tab.activ",{"_index":3693,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.component.html",{"_index":3641,"title":{},"body":{"components/TabComponent.html":{}}}],["tab.component.scss",{"_index":3640,"title":{},"body":{"components/TabComponent.html":{}}}],["tab.el.nativeelement.getattribute('select",{"_index":3688,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.label",{"_index":3696,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.par",{"_index":3687,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.rout",{"_index":3683,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab/tab.compon",{"_index":3676,"title":{},"body":{"components/TabsComponent.html":{},"modules/UtilityModule.html":{}}}],["tabcompon",{"_index":281,"title":{"components/TabComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["tabl",{"_index":1132,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["table_class_list",{"_index":4558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table_default_attribut",{"_index":4556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table_toolbar",{"_index":4555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":4174,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":4487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabs'},{'nam",{"_index":284,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["tabs.component.html",{"_index":3662,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs.component.scss",{"_index":3661,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs/tabs.compon",{"_index":3654,"title":{},"body":{"components/TabComponent.html":{},"modules/UtilityModule.html":{}}}],["tabscompon",{"_index":283,"title":{"components/TabsComponent.html":{},"additional-documentation/ui/tabscomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["tag",{"_index":396,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Field.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["tagsfield",{"_index":3085,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["tagsfield(label",{"_index":3101,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["take",{"_index":815,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/core-classes.html":{}}}],["tank",{"_index":4472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tap",{"_index":4366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tape",{"_index":4351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target",{"_index":130,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/EntryListComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/ResourceConfig.html":{},"components/TinymceComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["target[0",{"_index":1465,"title":{},"body":{"components/EntryListComponent.html":{}}}],["target[1",{"_index":1466,"title":{},"body":{"components/EntryListComponent.html":{}}}],["targetid",{"_index":3247,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["targettyp",{"_index":3248,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["task",{"_index":4219,"title":{},"body":{"index.html":{}}}],["tbd",{"_index":4763,"title":{},"body":{"additional-documentation/ui.html":{},"additional-documentation/ui/formcomponent.html":{}}}],["tell",{"_index":1537,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["template::view",{"_index":3174,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["templateid",{"_index":3173,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["templateurl",{"_index":30,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["test",{"_index":3562,"title":{},"body":{"classes/Sorter.html":{},"changelog.html":{},"index.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["test.t",{"_index":4267,"title":{},"body":{"index.html":{}}}],["test@test.d",{"_index":2630,"title":{},"body":{"components/MockupComponent.html":{}}}],["text",{"_index":1268,"title":{},"body":{"components/DefaultOutputComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"interfaces/Symbol.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["textarea",{"_index":3821,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["textbox",{"_index":4603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["textcolor",{"_index":4545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["textcolor_map",{"_index":4559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["that",{"_index":4689,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["theme",{"_index":54,"title":{},"body":{"components/AceComponent.html":{},"miscellaneous/variables.html":{}}}],["themelist.j",{"_index":151,"title":{},"body":{"components/AceComponent.html":{}}}],["then((_entri",{"_index":1007,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["then((_resourc",{"_index":3365,"title":{},"body":{"injectables/ResourceService.html":{}}}],["then((_upload",{"_index":3903,"title":{},"body":{"components/UploadComponent.html":{}}}],["then((asset",{"_index":417,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((assetlist",{"_index":1629,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((avail",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((config",{"_index":1475,"title":{},"body":{"components/EntryListComponent.html":{},"injectables/ModelConfigService.html":{}}}],["then((entri",{"_index":1028,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"interfaces/Update.html":{}}}],["then((loadedentri",{"_index":905,"title":{},"body":{"components/CrudComponent.html":{}}}],["then((method",{"_index":892,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["then((r",{"_index":661,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginFormComponent.html":{}}}],["then((resolvedapi",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((resourc",{"_index":3371,"title":{},"body":{"injectables/ResourceService.html":{}}}],["then((respons",{"_index":1643,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((schema",{"_index":2706,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["then((upload",{"_index":1636,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((us",{"_index":2400,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{}}}],["then(_method",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{}}}],["then(editor",{"_index":3745,"title":{},"body":{"components/TinymceComponent.html":{}}}],["then(list",{"_index":1379,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["then(r",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ResourceDeletePopComponent.html":{},"interfaces/Upload.html":{}}}],["then(resourc",{"_index":3333,"title":{},"body":{"classes/ResourceForm.html":{}}}],["then(result",{"_index":2363,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["then(sourc",{"_index":1865,"title":{},"body":{"injectables/HistoryService.html":{}}}],["then(this.seturl.bind(thi",{"_index":1955,"title":{},"body":{"directives/ImageDirective.html":{}}}],["therefor",{"_index":2046,"title":{},"body":{"interfaces/ItemConfig.html":{},"index.html":{}}}],["thin",{"_index":1410,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this._api",{"_index":3403,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.m",{"_index":3463,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then",{"_index":3439,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then(api",{"_index":3456,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.setclientid(environment.clientid",{"_index":3457,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._toggle.emit(vis",{"_index":3058,"title":{},"body":{"components/PopComponent.html":{}}}],["this.account",{"_index":3399,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.act",{"_index":1299,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["this.activated.next",{"_index":3655,"title":{},"body":{"components/TabComponent.html":{}}}],["this.add(item",{"_index":786,"title":{},"body":{"classes/Collection.html":{}}}],["this.addall(item",{"_index":791,"title":{},"body":{"classes/Collection.html":{}}}],["this.addsystempropertiestofieldconfig(fieldconfig",{"_index":2711,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.api",{"_index":352,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"classes/ResourceForm.html":{}}}],["this.apiresolv",{"_index":3440,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.app.tick",{"_index":3741,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.asset",{"_index":418,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.assetgroup",{"_index":3899,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.assetgroupid",{"_index":3898,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.assetid",{"_index":407,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["this.auth.getallowedmodelmethods(this.model",{"_index":890,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.auth.getallowedresourcemethods(this.rel",{"_index":3277,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.auth.login",{"_index":2399,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.auth.resetpassword(this.email",{"_index":3024,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.autoload",{"_index":408,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["this.bakery.bake().then",{"_index":2790,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.base64uuid",{"_index":3209,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.blockevent(",{"_index":3793,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.calendar.writevalue(valu",{"_index":1100,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["this.canalter(valu",{"_index":1244,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cel",{"_index":1197,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[0",{"_index":1175,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[this.cells.length",{"_index":1176,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cent",{"_index":2307,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.chang",{"_index":3518,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.change.asobserv",{"_index":2882,"title":{},"body":{"classes/Pagination.html":{}}}],["this.change.emit(coord",{"_index":2382,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.change.emit(posit",{"_index":2312,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.change.emit(this.select",{"_index":3528,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.change.emit(this.valu",{"_index":3740,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.change.next(this.config",{"_index":2931,"title":{},"body":{"classes/Pagination.html":{}}}],["this.changed.emit(chang",{"_index":2002,"title":{},"body":{"components/InputComponent.html":{}}}],["this.changes.asobserv",{"_index":1001,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.asobservable().filter((chang",{"_index":1002,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.next",{"_index":1019,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changespan.asobservable().debouncetime(800",{"_index":1158,"title":{},"body":{"interfaces/Day.html":{}}}],["this.changespan.next(this.timespan",{"_index":1174,"title":{},"body":{"interfaces/Day.html":{}}}],["this.checkpermission(`${model}:${method",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.checkpermission(`${this.resolvevariables(permissions[method",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.clean(oldvalu",{"_index":1020,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clean(valu",{"_index":1016,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clear",{"_index":3888,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.clickinside(",{"_index":3521,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.collect",{"_index":2115,"title":{},"body":{"components/ListComponent.html":{}}}],["this.color",{"_index":1188,"title":{},"body":{"interfaces/Day.html":{}}}],["this.colors.length",{"_index":2608,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.colors[_moment.toisostr",{"_index":1189,"title":{},"body":{"interfaces/Day.html":{}}}],["this.colors[this.getlevel(level",{"_index":2607,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.columnclicked.emit($ev",{"_index":503,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.columnclicked.emit(item",{"_index":913,"title":{},"body":{"components/CrudComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.columnclicked.observers.length",{"_index":502,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(compon",{"_index":1335,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.componentinst",{"_index":1996,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance['writevalu",{"_index":2006,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance['writevalue'](valu",{"_index":2007,"title":{},"body":{"components/InputComponent.html":{}}}],["this.config",{"_index":915,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/SelectComponent.html":{}}}],["this.config.alwaysloadentri",{"_index":899,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.fields[target[1",{"_index":1464,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.config.level",{"_index":901,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.method",{"_index":891,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.methods.indexof(method",{"_index":893,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.pag",{"_index":2924,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.popclass",{"_index":916,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.rang",{"_index":2975,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.config.s",{"_index":2921,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.selectmod",{"_index":3515,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.config.solo",{"_index":499,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/SelectComponent.html":{}}}],["this.config[key",{"_index":811,"title":{},"body":{"classes/Config.html":{}}}],["this.config[key][properti",{"_index":812,"title":{},"body":{"classes/Config.html":{}}}],["this.config[relationnam",{"_index":3110,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.configinput",{"_index":2112,"title":{},"body":{"components/ListComponent.html":{}}}],["this.configure('model",{"_index":2680,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.container.nativeel",{"_index":3743,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.container.nativeelement.innerhtml",{"_index":2517,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.container.nativeelement.styl",{"_index":2980,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.control",{"_index":1992,"title":{},"body":{"components/InputComponent.html":{}}}],["this.control.errors[key",{"_index":2024,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.create(model",{"_index":1006,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["this.create(rel",{"_index":3364,"title":{},"body":{"injectables/ResourceService.html":{}}}],["this.createclicked.next",{"_index":3282,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.createclicked.observers.length",{"_index":3281,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.created(this.symbol.resolve('field.label.cr",{"_index":3136,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.crud.chang",{"_index":1469,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.crud.save(model",{"_index":2729,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.custom",{"_index":3893,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.dat",{"_index":1225,"title":{},"body":{"interfaces/Day.html":{}}}],["this.datamanag",{"_index":3452,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.datamanager.datamanager(this._api.datamanagerid",{"_index":3435,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.date.clone().add(valu",{"_index":1240,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dayclicked.emit(_mo",{"_index":1233,"title":{},"body":{"interfaces/Day.html":{}}}],["this.deactivated.next",{"_index":3656,"title":{},"body":{"components/TabComponent.html":{}}}],["this.defaulttim",{"_index":2866,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.delay",{"_index":3060,"title":{},"body":{"components/PopComponent.html":{}}}],["this.deleted.next(r",{"_index":3302,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.desktopnotification(inst",{"_index":2854,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.dis",{"_index":1297,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["this.disabledragend",{"_index":1182,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disabledragstart",{"_index":1181,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disableupdates(key",{"_index":1863,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.displaydate(tru",{"_index":3827,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.drag",{"_index":1162,"title":{},"body":{"interfaces/Day.html":{}}}],["this.drag.asobservable().debouncetime(100",{"_index":1155,"title":{},"body":{"interfaces/Day.html":{}}}],["this.drag.next(day",{"_index":1186,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.first",{"_index":1164,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.last",{"_index":1166,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dropday(day",{"_index":1157,"title":{},"body":{"interfaces/Day.html":{}}}],["this.ecasset",{"_index":406,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.ecdropzone.emit(",{"_index":1304,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["this.ecimag",{"_index":1943,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.ecimage.assetid",{"_index":1944,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.editor",{"_index":152,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.editor.buttons.image.onclick(tru",{"_index":3750,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.destroy",{"_index":2523,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.getcont",{"_index":2521,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.on('chang",{"_index":3752,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.on('dblclick",{"_index":3748,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.session.setmode('ace/mod",{"_index":177,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setcontent(this.valu",{"_index":3747,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.settheme('ace/them",{"_index":178,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setvalue(this.valu",{"_index":161,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.subscribe('editableinput",{"_index":2520,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.elementref.nativeelement.src",{"_index":1957,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.emitter.asobserv",{"_index":2847,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.emitter.next(inst",{"_index":2855,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.enableupdates(resourc",{"_index":1864,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.endless",{"_index":1372,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entri",{"_index":1407,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entryid",{"_index":1405,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entrylist",{"_index":1382,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.follownextlink().then(list",{"_index":1388,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.followprevlink().then(list",{"_index":1389,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.getallitem",{"_index":1383,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasfirstlink",{"_index":1391,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasnextlink",{"_index":1390,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrypop.edit(loadedentri",{"_index":906,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.environ",{"_index":3406,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.environment.clientid",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.error",{"_index":1490,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.cod",{"_index":1492,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.emit(err",{"_index":2472,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.error.messag",{"_index":1493,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.errormessag",{"_index":2469,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.ev",{"_index":3894,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.eventsources[key",{"_index":1866,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[key].clos",{"_index":1869,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[rel",{"_index":1862,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.fb.group",{"_index":2465,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.field",{"_index":1989,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["this.field.init",{"_index":2004,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.init(this.componentinst",{"_index":2005,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.input",{"_index":1995,"title":{},"body":{"components/InputComponent.html":{}}}],["this.fieldhost.viewcontainerref",{"_index":1336,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.fileinput",{"_index":3887,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.click",{"_index":3889,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.valu",{"_index":3896,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.uploadassets(",{"_index":3901,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.uploadfiles(",{"_index":3902,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.filestoupload",{"_index":3892,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.form",{"_index":2464,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form.get('password').setvalu",{"_index":2471,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form.reset",{"_index":2479,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form.valid",{"_index":2477,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.format",{"_index":1227,"title":{},"body":{"interfaces/Day.html":{}}}],["this.generatefieldconfig(model",{"_index":2731,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.geocodelatlng",{"_index":1820,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.geocodeservice.autocompleteaddress(this.searchinput.nativeel",{"_index":2381,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.geocodeservice.getnearestaddress(valu",{"_index":2362,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.get(model",{"_index":2703,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.get(model).field",{"_index":2704,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.get(nam",{"_index":3632,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.getaccount",{"_index":3450,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.getalgorithm(item",{"_index":3582,"title":{},"body":{"classes/Sorter.html":{}}}],["this.getapi(email",{"_index":648,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getcolor(1",{"_index":2610,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getdaycolor(d",{"_index":1216,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getformdata(fil",{"_index":1628,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.getmonth(date.clon",{"_index":1229,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getmonth(this.date.clon",{"_index":1198,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getpag",{"_index":2936,"title":{},"body":{"classes/Pagination.html":{}}}],["this.getpath(item",{"_index":2602,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getpermission().then",{"_index":2863,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.getvalidators(field",{"_index":1748,"title":{},"body":{"injectables/FormService.html":{}}}],["this.group",{"_index":1991,"title":{},"body":{"components/InputComponent.html":{}}}],["this.group.get(this.field.properti",{"_index":1993,"title":{},"body":{"components/InputComponent.html":{}}}],["this.has(item",{"_index":782,"title":{},"body":{"classes/Collection.html":{}}}],["this.hexcolor",{"_index":3126,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.hid",{"_index":2271,"title":{},"body":{"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["this.host.nativeelement.classlist.add('i",{"_index":2264,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.host.nativeelement.classlist.remove('i",{"_index":2265,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.hov",{"_index":2604,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.hoverdelay",{"_index":2613,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.icon",{"_index":1897,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.get(this.nam",{"_index":1898,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.registri",{"_index":1902,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.set(emojiicon",{"_index":1894,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["this.iconservice.use(emojiicon",{"_index":1893,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["this.id",{"_index":1582,"title":{},"body":{"classes/Field.html":{}}}],["this.index(item",{"_index":778,"title":{},"body":{"classes/Collection.html":{}}}],["this.init",{"_index":179,"title":{},"body":{"components/AceComponent.html":{},"injectables/SdkService.html":{}}}],["this.initfilt",{"_index":1477,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.initfilterquery((properti",{"_index":1462,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.initmethod",{"_index":3275,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.initselect",{"_index":3512,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.inittab",{"_index":3691,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.input",{"_index":175,"title":{},"body":{"components/AceComponent.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.input.propagatechange(this.editor.getvalu",{"_index":176,"title":{},"body":{"components/AceComponent.html":{}}}],["this.input.propagatechange(this.valu",{"_index":4745,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.input.propagatechange(valu",{"_index":2359,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.isactive(item",{"_index":2609,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.isfirst",{"_index":2928,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isimmutableproperty(key",{"_index":1026,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.islast",{"_index":2927,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isnewasset(asset[0",{"_index":1617,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.isselected(item",{"_index":2605,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.issystemproperty(properti",{"_index":2709,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.item",{"_index":774,"title":{},"body":{"classes/Collection.html":{},"directives/EntriesDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/OutputComponent.html":{}}}],["this.item.getfield(this.properti",{"_index":1990,"title":{},"body":{"components/InputComponent.html":{}}}],["this.itemclick.emit(item",{"_index":3526,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.items.concat(item",{"_index":1384,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.filter((item",{"_index":1385,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.find((_item",{"_index":1386,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.indexof(item",{"_index":777,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.length",{"_index":785,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.push(item",{"_index":776,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(this.index(item",{"_index":787,"title":{},"body":{"classes/Collection.html":{}}}],["this.label",{"_index":1585,"title":{},"body":{"classes/Field.html":{}}}],["this.level",{"_index":1406,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.list",{"_index":2113,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/SelectComponent.html":{}}}],["this.list.config",{"_index":2117,"title":{},"body":{"components/ListComponent.html":{},"components/SelectComponent.html":{}}}],["this.list.config.alwaysshowhead",{"_index":2126,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.disablehead",{"_index":2123,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.selectmod",{"_index":2120,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.list.config.titl",{"_index":2125,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.fields.length",{"_index":2124,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.filter(properti",{"_index":2184,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.isempti",{"_index":2127,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.items.indexof(this.selection.items[0",{"_index":2131,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.items.length",{"_index":2134,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.items[index",{"_index":2128,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.load",{"_index":1471,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.list.pag",{"_index":2206,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.load",{"_index":410,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"components/UploadComponent.html":{}}}],["this.loadcomponent(this.compon",{"_index":1994,"title":{},"body":{"components/InputComponent.html":{}}}],["this.loadcomponent(this.field.output",{"_index":2871,"title":{},"body":{"components/OutputComponent.html":{}}}],["this.loaded.emit(asset",{"_index":419,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.loaded.emit(entri",{"_index":1408,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.loader.wait(delet",{"_index":3304,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.loader.wait(login",{"_index":2406,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{}}}],["this.loader.wait(reset",{"_index":3037,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.loader.wait(this.promis",{"_index":1381,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.loaderservice.use(this.globalload",{"_index":2250,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.loaderservice.wait(load",{"_index":1876,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(new",{"_index":2251,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.loaderservice.wait(this.loadentry(item",{"_index":914,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.loaderservice.wait(this.promises[key",{"_index":1868,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(this.uploadpromis",{"_index":3909,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.localload",{"_index":2254,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.localloader.wait(new",{"_index":2255,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.lockform",{"_index":3033,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.login(this.form.valu",{"_index":2478,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.map.setvalue(valu",{"_index":2356,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.map.valu",{"_index":2360,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.maploader.load().then",{"_index":1819,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.matches(chang",{"_index":1003,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.mod",{"_index":156,"title":{},"body":{"components/AceComponent.html":{}}}],["this.model",{"_index":889,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/MediumEditorComponent.html":{}}}],["this.modelconfig.generateconfig(this.model",{"_index":1474,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.modelconfig.set('muffin",{"_index":4707,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.monthformat",{"_index":1153,"title":{},"body":{"interfaces/Day.html":{}}}],["this.mustreload(item",{"_index":900,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.nam",{"_index":1900,"title":{},"body":{"components/IconComponent.html":{}}}],["this.nestedcrudconfig",{"_index":3835,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.newassetlistconfig",{"_index":1633,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.ngzone.run",{"_index":1797,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.noapi",{"_index":3436,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noapi(api",{"_index":3458,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noclientid",{"_index":645,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.notif",{"_index":908,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.notifications.add(notif",{"_index":2814,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.emit",{"_index":537,"title":{},"body":{"injectables/AuthGuard.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.notifications.remove(notif",{"_index":2818,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.removeall(notification.hid",{"_index":2804,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.defaulttim",{"_index":2801,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.emit",{"_index":907,"title":{},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.notificationservice.emitter$.subscribe((notif",{"_index":2802,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.observeelement(el",{"_index":1811,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.omittedfields.indexof(properti",{"_index":2683,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.opt",{"_index":1378,"title":{},"body":{"directives/EntriesDirective.html":{},"components/MediumEditorComponent.html":{},"components/UploadComponent.html":{}}}],["this.options.pag",{"_index":1373,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.options.placehold",{"_index":2518,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.pag",{"_index":2925,"title":{},"body":{"classes/Pagination.html":{},"components/PaginationComponent.html":{}}}],["this.page.first.nativeelement.clientwidth",{"_index":2972,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagecontain",{"_index":2969,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagecontainer.nativeelement.styl",{"_index":2977,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pages.length",{"_index":2926,"title":{},"body":{"classes/Pagination.html":{}}}],["this.pagin",{"_index":2966,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagination.change$.subscribe((config",{"_index":2967,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagination.getpag",{"_index":2973,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.par",{"_index":2599,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parent.getlevel(++level",{"_index":2606,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parent.getpath(this.rout",{"_index":2617,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parsetype(schema.properties[property].titl",{"_index":2715,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.placehold",{"_index":1584,"title":{},"body":{"classes/Field.html":{},"components/MediumEditorComponent.html":{}}}],["this.pop",{"_index":3283,"title":{},"body":{"components/ResourceCrudComponent.html":{},"components/SelectComponent.html":{}}}],["this.pop.cr",{"_index":3284,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.edit(item.getbodi",{"_index":3278,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.hid",{"_index":3301,"title":{},"body":{"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/UploadComponent.html":{}}}],["this.pop.show",{"_index":3305,"title":{},"body":{"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{}}}],["this.pop.toggl",{"_index":3527,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.pops.foreach((pop",{"_index":2182,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.popservice.stack.add(thi",{"_index":3059,"title":{},"body":{"components/PopComponent.html":{}}}],["this.popservice.stack.remove(thi",{"_index":3061,"title":{},"body":{"components/PopComponent.html":{}}}],["this.promis",{"_index":415,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.promises[key",{"_index":1861,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.propagatechang",{"_index":181,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.propagatechange(chang",{"_index":2003,"title":{},"body":{"components/InputComponent.html":{}}}],["this.propagatechange(this.editor.getvalu",{"_index":166,"title":{},"body":{"components/AceComponent.html":{}}}],["this.propagatechange(this.selection.getvalu",{"_index":3529,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.propagatechange(this.valu",{"_index":2522,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.propagatechange(valu",{"_index":2358,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.properti",{"_index":1586,"title":{},"body":{"classes/Field.html":{},"components/InputComponent.html":{}}}],["this.property}_${date.now",{"_index":1583,"title":{},"body":{"classes/Field.html":{}}}],["this.readi",{"_index":154,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["this.ready.then",{"_index":3434,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.ready.then((editor",{"_index":163,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{}}}],["this.ready.then(editor",{"_index":3755,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.redirect.next",{"_index":547,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.registri",{"_index":3624,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry.find(symbol",{"_index":3630,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry.indexof(this.get(symbol.nam",{"_index":3635,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry.push(symbol",{"_index":3636,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry[index",{"_index":3637,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.rel",{"_index":3276,"title":{},"body":{"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{}}}],["this.remove(item",{"_index":788,"title":{},"body":{"classes/Collection.html":{}}}],["this.removeall(undefin",{"_index":789,"title":{},"body":{"classes/Collection.html":{}}}],["this.resourc",{"_index":3292,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.resourceconfig.get('legacyasset",{"_index":1646,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.resourceconfig.get(rel",{"_index":673,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resourceconfig.get(relation).permiss",{"_index":674,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resourceservice.chang",{"_index":1473,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.resourceservice.changes.next",{"_index":1638,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"interfaces/Upload.html":{}}}],["this.resourceservice.del(this.rel",{"_index":3299,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.resourceservice.save(thi",{"_index":3332,"title":{},"body":{"classes/ResourceForm.html":{}}}],["this.roots[this._api.datamanagerid",{"_index":3433,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.rout",{"_index":2592,"title":{},"body":{"components/MenuComponent.html":{},"components/TabsComponent.html":{}}}],["this.route.children",{"_index":2593,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.events.subscribe((ev",{"_index":3678,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.navigate(['profil",{"_index":4705,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["this.router.navigate([tab.rout",{"_index":3694,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.url",{"_index":2601,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.url.indexof(path",{"_index":2603,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.url.split('?')[0",{"_index":1842,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.sanitized.bypasssecuritytrusthtml(valu",{"_index":3384,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["this.schemarequests[model",{"_index":3460,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk",{"_index":1479,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.sdk.account",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.emailavail",{"_index":4623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.sdk.accounts.m",{"_index":663,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.signup(email",{"_index":660,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api",{"_index":412,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"components/UploadComponent.html":{}}}],["this.sdk.api.assetlist",{"_index":1659,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createasset(data",{"_index":1641,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createassets(data",{"_index":1642,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createentry(model",{"_index":1027,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["this.sdk.api.emailavailable(email",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.entry(this.model",{"_index":903,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntryDirective.html":{}}}],["this.sdk.api.entrylist(this.model",{"_index":1377,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.sdk.api.logout",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.m",{"_index":665,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.signup(email",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.getschema(model",{"_index":2705,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.sdk.init",{"_index":655,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.ready.then((us",{"_index":666,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.ready.then(account",{"_index":3418,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk.ready.then(us",{"_index":536,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.sdk.root.then((root",{"_index":351,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["this.sdk.sess",{"_index":652,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.session.logout().catch",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.us",{"_index":667,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.search.clear",{"_index":2355,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.search.searchinput.nativeelement.valu",{"_index":2361,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.searchinput",{"_index":2379,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.searchinput.nativeelement.valu",{"_index":2380,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.select",{"_index":497,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{}}}],["this.select(match",{"_index":3685,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.select(tab",{"_index":3689,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(event.url",{"_index":3679,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(this.router.url",{"_index":3690,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selected.deactiv",{"_index":3692,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selected.emit(select",{"_index":2119,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selected.startof('day').diff(_mo",{"_index":1237,"title":{},"body":{"interfaces/Day.html":{}}}],["this.selectindex(index",{"_index":2133,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.isempti",{"_index":2130,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.remove(item",{"_index":3520,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.selection.removeal",{"_index":2132,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.replacewith(list.item",{"_index":3524,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.selection.select(this.list.items[index",{"_index":2129,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.select(upload.item",{"_index":500,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.selection.toggle($ev",{"_index":505,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.selection.toggle(item",{"_index":2121,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/SelectComponent.html":{}}}],["this.selection.toggleall(upload.item",{"_index":501,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.selection.update$.subscrib",{"_index":3517,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.selection.update$.subscribe((select",{"_index":2118,"title":{},"body":{"components/ListComponent.html":{}}}],["this.sess",{"_index":3443,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.session.setclientid(environment.clientid",{"_index":3446,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.set",{"_index":3744,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.setd",{"_index":1179,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(_mo",{"_index":1231,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(day.date.clone().subtract(1",{"_index":1178,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(mo",{"_index":1246,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.d",{"_index":1194,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.date.clone().add(valu",{"_index":1245,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.select",{"_index":1192,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setmode(this.mod",{"_index":157,"title":{},"body":{"components/AceComponent.html":{}}}],["this.sets[key",{"_index":3627,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.sets[object.keys(this.sets)[0",{"_index":3626,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.settheme(this.them",{"_index":159,"title":{},"body":{"components/AceComponent.html":{}}}],["this.settotal(tot",{"_index":2923,"title":{},"body":{"classes/Pagination.html":{}}}],["this.setvalue(posit",{"_index":2311,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.show",{"_index":2267,"title":{},"body":{"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["this.solo",{"_index":2122,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/SelectComponent.html":{}}}],["this.sorttype[types[0",{"_index":3580,"title":{},"body":{"classes/Sorter.html":{}}}],["this.spanchanged.emit(this.timespan",{"_index":1160,"title":{},"body":{"interfaces/Day.html":{}}}],["this.stack.add(promis",{"_index":2266,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.stack.items.length",{"_index":3076,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.items[this.stack.items.length",{"_index":3078,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.remove(latestpop",{"_index":3080,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.removeal",{"_index":2272,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.stringfield(this.symbol.resolve('field.label.nam",{"_index":3155,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.submit",{"_index":2476,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.success.emit",{"_index":3034,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.success.emit(_upload",{"_index":3904,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.success.emit(r",{"_index":2480,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.success.emit(us",{"_index":2402,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol",{"_index":3137,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.group",{"_index":3164,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.haspendingemail",{"_index":3160,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.languag",{"_index":3161,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.st",{"_index":3167,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('app.field.label.app",{"_index":3182,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('asset.field.label.assetgroupid",{"_index":3197,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('asset.field.label.fil",{"_index":3193,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('asset.field.label.thumb",{"_index":3189,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('client.field.label.callbackurl",{"_index":3226,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('client.field.label.clientid",{"_index":3224,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmaccount.field.label.haspassword",{"_index":3169,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmaccount.field.label.pend",{"_index":3171,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.assetid",{"_index":3215,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.capt",{"_index":3217,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.dupl",{"_index":3218,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.fil",{"_index":3210,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.thumbnail",{"_index":3220,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.typ",{"_index":3222,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('error",{"_index":1491,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.symbol.resolve('error.delet",{"_index":3303,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.symbol.resolve('error.input",{"_index":2025,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.input.invalid",{"_index":2026,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.load",{"_index":911,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.symbol.resolve('error.upload",{"_index":3908,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve('field.creator.ecus",{"_index":3848,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('field.label.config",{"_index":3129,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.cr",{"_index":2687,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.descript",{"_index":3128,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.email",{"_index":3156,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.id",{"_index":2685,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.label",{"_index":3233,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.modifi",{"_index":2692,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.nam",{"_index":3232,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.password",{"_index":3158,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.shortid",{"_index":3181,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.titl",{"_index":3192,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.typ",{"_index":3244,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('login.error",{"_index":2404,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('login.success",{"_index":2401,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('moment.format.d",{"_index":1111,"title":{},"body":{"pipes/DatetimePipe.html":{},"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('moment.format.month",{"_index":1154,"title":{},"body":{"interfaces/Day.html":{}}}],["this.symbol.resolve('moment.format.tim",{"_index":3846,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('platform.field.label.platform",{"_index":3185,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('platform.field.label.platformtyp",{"_index":3187,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('role.field.label.account",{"_index":3234,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('role.field.label.addregist",{"_index":3238,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('role.field.label.addunregist",{"_index":3240,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('success.delet",{"_index":3300,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.symbol.resolve('success.upload",{"_index":3905,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve('template.field.label.templ",{"_index":3175,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('template.field.label.vers",{"_index":3177,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve(nam",{"_index":3604,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["this.tab",{"_index":3680,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.find((tab",{"_index":3682,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.foreach((tab",{"_index":3686,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tagsfield(this.symbol.resolve('account.field.label.permiss",{"_index":3163,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('asset.field.label.tag",{"_index":3194,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('client.field.label.disablestrategi",{"_index":3230,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('client.field.label.tokenmethod",{"_index":3228,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('datamanager.field.label.publicassetright",{"_index":3133,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('field.label.local",{"_index":3131,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.them",{"_index":158,"title":{},"body":{"components/AceComponent.html":{}}}],["this.thumb",{"_index":1952,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.tim",{"_index":2800,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.timeout",{"_index":2611,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.timespan",{"_index":1173,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timespan[1",{"_index":1215,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timestamp",{"_index":2269,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.tot",{"_index":2929,"title":{},"body":{"classes/Pagination.html":{}}}],["this.translatecontain",{"_index":2968,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.tre",{"_index":2093,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["this.typ",{"_index":2757,"title":{},"body":{"classes/Notification.html":{}}}],["this.typeconfig.displayaccount",{"_index":2694,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.displayd",{"_index":2688,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["this.typeconfig.get(type.nam",{"_index":2723,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.groupd",{"_index":2689,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["this.types[typ",{"_index":3840,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.upd",{"_index":1489,"title":{},"body":{"components/ErrorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.update(model",{"_index":1005,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["this.update(rel",{"_index":3363,"title":{},"body":{"injectables/ResourceService.html":{}}}],["this.update.asobserv",{"_index":734,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(thi",{"_index":783,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(this.editor",{"_index":3754,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.updateaddress",{"_index":2357,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.upload(",{"_index":3895,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromis",{"_index":3900,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromise.then",{"_index":3910,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploads.emit(upload",{"_index":1637,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.url",{"_index":1956,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.us",{"_index":3451,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.use(this.ecimag",{"_index":1945,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.use(this.sets[key",{"_index":3629,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.use(valu",{"_index":3519,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.usedatamanager(environment.datamanagerid",{"_index":3449,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.usedesktopnotif",{"_index":2853,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.uselist(list",{"_index":1380,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.uuid",{"_index":3122,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.valu",{"_index":160,"title":{},"body":{"components/AceComponent.html":{},"components/LocationMapComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["this.value.length",{"_index":3523,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.vanishdelay",{"_index":2615,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.vis",{"_index":479,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["this.writevalue(this.valu",{"_index":3525,"title":{},"body":{"components/SelectComponent.html":{}}}],["those",{"_index":1577,"title":{},"body":{"classes/Field.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/core-classes/field.html":{}}}],["thought",{"_index":4776,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["three",{"_index":2657,"title":{},"body":{"injectables/ModelConfigService.html":{},"index.html":{}}}],["through",{"_index":1847,"title":{},"body":{"injectables/HistoryService.html":{},"components/PasswordResetComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["throw",{"_index":413,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["thrown",{"_index":1488,"title":{},"body":{"components/ErrorComponent.html":{}}}],["thumb",{"_index":1923,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["thumbnail",{"_index":3219,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["thumbsiz",{"_index":3202,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["tick",{"_index":3706,"title":{},"body":{"components/TinymceComponent.html":{}}}],["ticket",{"_index":4500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":484,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["timeout",{"_index":2537,"title":{},"body":{"components/MenuComponent.html":{}}}],["timespan",{"_index":1128,"title":{},"body":{"interfaces/Day.html":{}}}],["timestamp",{"_index":2227,"title":{},"body":{"components/LoaderComponent.html":{}}}],["tinymc",{"_index":3698,"title":{"additional-documentation/tinymce.html":{}},"body":{"components/TinymceComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinymce.html":{}}}],["tinymce'},{'nam",{"_index":286,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["tinymce.component.html",{"_index":3701,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce.component.scss",{"_index":3700,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce.init",{"_index":3742,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autolink",{"_index":3731,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autores",{"_index":3726,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/cod",{"_index":3727,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/colorpick",{"_index":3735,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/contextmenu",{"_index":3733,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/fullscreen",{"_index":3723,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/link",{"_index":3728,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/list",{"_index":3732,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/past",{"_index":3724,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/t",{"_index":3729,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/templ",{"_index":3725,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/textcolor",{"_index":3734,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/visualblock",{"_index":3730,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/themes/modern",{"_index":3722,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/tinymce.compon",{"_index":3762,"title":{},"body":{"modules/TinymceModule.html":{}}}],["tinymcecompon",{"_index":285,"title":{"components/TinymceComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tinymcemodul",{"_index":3757,"title":{"modules/TinymceModule.html":{}},"body":{"modules/TinymceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinymce.html":{}}}],["titel",{"_index":1611,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["titel&#39",{"_index":2674,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["titl",{"_index":394,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/item.html":{}}}],["titlefield",{"_index":3143,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["today",{"_index":1124,"title":{},"body":{"interfaces/Day.html":{}}}],["todo",{"_index":167,"title":{},"body":{"components/AceComponent.html":{},"classes/Config.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["togeth",{"_index":1557,"title":{},"body":{"classes/Field.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/field.html":{}}}],["toggl",{"_index":441,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ListItemsComponent.html":{},"components/PopComponent.html":{},"components/SelectComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["toggle'},{'nam",{"_index":288,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["toggle(",{"_index":3500,"title":{},"body":{"components/SelectComponent.html":{}}}],["toggle(resourc",{"_index":1848,"title":{},"body":{"injectables/HistoryService.html":{}}}],["toggle(vis",{"_index":477,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/PopComponent.html":{}}}],["toggle.component.html",{"_index":3766,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle.component.scss",{"_index":3765,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle/toggle.compon",{"_index":1716,"title":{},"body":{"modules/FormModule.html":{}}}],["togglecompon",{"_index":287,"title":{"components/ToggleComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["token",{"_index":4669,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["tokenmethod",{"_index":3227,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["tommi",{"_index":4780,"title":{},"body":{"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{}}}],["tommy'item",{"_index":4785,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.display('nam",{"_index":4782,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.getvalue('nam",{"_index":4806,"title":{},"body":{"additional-documentation/core-classes/form.html":{}}}],["tommy.group('nam",{"_index":4783,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.resolve('nam",{"_index":4781,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.sort('nam",{"_index":4784,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tool",{"_index":3778,"title":{},"body":{"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["toolbar",{"_index":3777,"title":{},"body":{"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["toolbar'},{'nam",{"_index":290,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["toolbar.component.html",{"_index":3780,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":3779,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar/toolbar.compon",{"_index":3928,"title":{},"body":{"modules/VcModule.html":{}}}],["toolbarcompon",{"_index":289,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/VcModule.html":{},"coverage.html":{},"overview.html":{}}}],["toolbox",{"_index":4475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["top",{"_index":3991,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["total",{"_index":2873,"title":{},"body":{"classes/Pagination.html":{}}}],["totop",{"_index":4511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touch",{"_index":3770,"title":{},"body":{"components/ToggleComponent.html":{}}}],["tower",{"_index":4443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["track",{"_index":1832,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["tranform",{"_index":2054,"title":{},"body":{"components/ListComponent.html":{}}}],["transfer",{"_index":4367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transform",{"_index":1106,"title":{},"body":{"pipes/DatetimePipe.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["transform(array",{"_index":2485,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["transform(field",{"_index":3932,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["transform(item",{"_index":1827,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["transform(nam",{"_index":3600,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["transform(valu",{"_index":1107,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/SafeHtmlPipe.html":{}}}],["transform:translatex",{"_index":2978,"title":{},"body":{"components/PaginationComponent.html":{}}}],["translat",{"_index":2949,"title":{},"body":{"components/PaginationComponent.html":{},"injectables/SymbolPipe.html":{}}}],["translatecontain",{"_index":2943,"title":{},"body":{"components/PaginationComponent.html":{}}}],["translation}px",{"_index":2979,"title":{},"body":{"components/PaginationComponent.html":{}}}],["transpar",{"_index":4517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trash",{"_index":4328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["tree.display('fruit",{"_index":4818,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["tree.display('nam",{"_index":4816,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["tri",{"_index":2384,"title":{},"body":{"components/LoginComponent.html":{}}}],["trigger",{"_index":2076,"title":{},"body":{"components/ListComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/SelectComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["troubl",{"_index":4252,"title":{},"body":{"index.html":{}}}],["true",{"_index":25,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"modules/SelectModule.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["trust",{"_index":3376,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["ts",{"_index":3441,"title":{},"body":{"injectables/SdkService.html":{},"index.html":{}}}],["tsc/app",{"_index":4265,"title":{},"body":{"index.html":{}}}],["tsconfig",{"_index":4259,"title":{},"body":{"index.html":{}}}],["tsconfig.json",{"_index":4248,"title":{},"body":{"index.html":{}}}],["tslint:dis",{"_index":2108,"title":{},"body":{"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["turn",{"_index":1270,"title":{},"body":{"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{},"interfaces/ListConfig.html":{}}}],["tutori",{"_index":4017,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes.html":{}}}],["twitter",{"_index":4493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":4004,"title":{},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["type",{"_index":64,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["type'",{"_index":3799,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["type.match(/^(\\w*)()?/i",{"_index":2699,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["type.rel",{"_index":2720,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typeconfig",{"_index":1612,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{}}}],["typeconfigservic",{"_index":1042,"title":{"injectables/TypeConfigService.html":{}},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["typed.isvalid",{"_index":1115,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["typeof",{"_index":1651,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["types.length",{"_index":3579,"title":{},"body":{"classes/Sorter.html":{}}}],["types[0",{"_index":3581,"title":{},"body":{"classes/Sorter.html":{}}}],["typescript",{"_index":773,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes.html":{}}}],["typic",{"_index":2782,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["uglifyj",{"_index":4250,"title":{},"body":{"index.html":{}}}],["ui",{"_index":840,"title":{"additional-documentation/ui.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{},"components/ResourceCrudComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["ui/src/list/list.component.html",{"_index":1413,"title":{},"body":{"components/EntryListComponent.html":{}}}],["uimodul",{"_index":554,"title":{"modules/UiModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["ul",{"_index":2961,"title":{},"body":{"components/PaginationComponent.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":971,"title":{},"body":{"injectables/CrudService.html":{},"injectables/GeocodeService.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{}}}],["under",{"_index":1851,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/Symbol.html":{}}}],["underlin",{"_index":4476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undo",{"_index":4507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unexpect",{"_index":2718,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["ungültig",{"_index":3829,"title":{},"body":{"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["uniqu",{"_index":736,"title":{},"body":{"classes/Collection.html":{},"interfaces/Symbol.html":{}}}],["unit",{"_index":4271,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["unresolv",{"_index":1649,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["unresolved.length",{"_index":1653,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["unresolved.push(unresolved[0",{"_index":1655,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["untertitel",{"_index":4575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["until",{"_index":2235,"title":{},"body":{"components/LoaderComponent.html":{}}}],["up",{"_index":959,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/item.html":{}}}],["updat",{"_index":717,"title":{"interfaces/Update.html":{}},"body":{"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/selectcomponent.html":{}}}],["update(model",{"_index":989,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["update(rel",{"_index":3356,"title":{},"body":{"injectables/ResourceService.html":{}}}],["updateaddress",{"_index":2336,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["updateon",{"_index":1751,"title":{},"body":{"injectables/FormService.html":{}}}],["updates",{"_index":2877,"title":{},"body":{"classes/Pagination.html":{},"components/PaginationComponent.html":{}}}],["updatesize(s",{"_index":2909,"title":{},"body":{"classes/Pagination.html":{}}}],["updatesize(valu",{"_index":2954,"title":{},"body":{"components/PaginationComponent.html":{}}}],["upload",{"_index":292,"title":{"interfaces/Upload.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["upload(",{"_index":3878,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.component.html",{"_index":3859,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.ignoredupl",{"_index":3913,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.includeassetidinpath",{"_index":3912,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.preservefilenam",{"_index":3911,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload/upload.compon",{"_index":1686,"title":{},"body":{"modules/FilesModule.html":{}}}],["uploadasset",{"_index":1666,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadassets(",{"_index":1672,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadcompon",{"_index":291,"title":{"components/UploadComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uploadfil",{"_index":1667,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadfiles(",{"_index":1640,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["uploadpromis",{"_index":3862,"title":{},"body":{"components/UploadComponent.html":{}}}],["upon",{"_index":960,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["url",{"_index":1918,"title":{},"body":{"directives/ImageDirective.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["url.split",{"_index":3681,"title":{},"body":{"components/TabsComponent.html":{}}}],["url/id",{"_index":4605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlexpir",{"_index":3199,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["us",{"_index":55,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["usag",{"_index":1558,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["use(asset",{"_index":1937,"title":{},"body":{"directives/ImageDirective.html":{}}}],["use(load",{"_index":2281,"title":{},"body":{"injectables/LoaderService.html":{}}}],["use(symbol",{"_index":3617,"title":{},"body":{"injectables/SymbolService.html":{}}}],["use(valu",{"_index":3502,"title":{},"body":{"components/SelectComponent.html":{}}}],["useconfig",{"_index":3472,"title":{},"body":{"components/SelectComponent.html":{}}}],["useconfig(config",{"_index":3504,"title":{},"body":{"components/SelectComponent.html":{}}}],["usedatamanag",{"_index":3395,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedatamanager(shortid",{"_index":3409,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedesktopnotif",{"_index":2827,"title":{},"body":{"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{}}}],["useexist",{"_index":143,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["uselist",{"_index":1346,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["uselist(entrylist",{"_index":1365,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["user",{"_index":513,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"miscellaneous/variables.html":{}}}],["users/kon/workspace/0.entrecode/nwb.admin/node_modules/@ec.components/data/src/auth/auth.service.t",{"_index":4255,"title":{},"body":{"index.html":{}}}],["uses",{"_index":3809,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["useset",{"_index":3607,"title":{},"body":{"injectables/SymbolService.html":{}}}],["useset(key",{"_index":3619,"title":{},"body":{"injectables/SymbolService.html":{}}}],["usevalu",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["utility/utility.modul",{"_index":3856,"title":{},"body":{"modules/UiModule.html":{}}}],["utilitymodul",{"_index":3853,"title":{"modules/UtilityModule.html":{}},"body":{"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["uuid",{"_index":3086,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["ux",{"_index":3006,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["v",{"_index":4505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":1507,"title":{},"body":{"classes/Field.html":{},"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"interfaces/Symbol.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["validatefactori",{"_index":1730,"title":{},"body":{"injectables/FormService.html":{}}}],["validatefactory(field",{"_index":1739,"title":{},"body":{"injectables/FormService.html":{}}}],["validationerror",{"_index":1742,"title":{},"body":{"injectables/FormService.html":{}}}],["validatorfn",{"_index":1738,"title":{},"body":{"injectables/FormService.html":{},"miscellaneous/variables.html":{}}}],["validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0",{"_index":4624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators.push(this.validatefactory(field",{"_index":1759,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.push(validators.requir",{"_index":1758,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.requir",{"_index":2466,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["validators.t",{"_index":4171,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validators/field",{"_index":2460,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["valu",{"_index":38,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["value.hasownproperty(key",{"_index":1023,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["value.latitud",{"_index":3838,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.length",{"_index":1562,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceConfig.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["value.longitud",{"_index":3837,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.map(group",{"_index":3165,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["value.nam",{"_index":3839,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.split",{"_index":3825,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.titl",{"_index":3235,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{}}}],["value.touppercas",{"_index":1561,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["value.url",{"_index":3211,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["value[key",{"_index":1024,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["values.map(valu",{"_index":3221,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["vanishdelay",{"_index":2549,"title":{},"body":{"components/MenuComponent.html":{}}}],["var",{"_index":188,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["variabl",{"_index":618,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/AuthService.html":{},"components/TabsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["variables[key",{"_index":671,"title":{},"body":{"injectables/AuthService.html":{}}}],["variou",{"_index":2221,"title":{},"body":{"components/LoaderComponent.html":{}}}],["vc",{"_index":216,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["vcmodul",{"_index":3922,"title":{"modules/VcModule.html":{}},"body":{"modules/VcModule.html":{},"modules.html":{},"overview.html":{}}}],["vector",{"_index":4474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vergeben",{"_index":4304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["verifi",{"_index":1800,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["versendet",{"_index":3025,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["version",{"_index":3176,"title":{},"body":{"injectables/ResourceConfig.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["versions:npm",{"_index":4223,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":4334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":519,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Config.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/TabsComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/list.html":{}}}],["viabl",{"_index":1574,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["video",{"_index":4477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["view",{"_index":1136,"title":{},"body":{"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"directives/SlotHostDirective.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["viewchild",{"_index":106,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["viewchild('contain",{"_index":147,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{}}}],["viewchild('fileinput",{"_index":3886,"title":{},"body":{"components/UploadComponent.html":{}}}],["viewchild('filterform",{"_index":2180,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["viewchild('globalload",{"_index":2246,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["viewchild('localload",{"_index":2248,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["viewchild('pagecontain",{"_index":2963,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewchild('search",{"_index":2378,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["viewchild(calendarcompon",{"_index":1099,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["viewchild(entrylistcompon",{"_index":882,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(entrypopcompon",{"_index":883,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(loadercompon",{"_index":884,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["viewchild(locationmapcompon",{"_index":2353,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(locationsearchcompon",{"_index":2354,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(popcompon",{"_index":3297,"title":{},"body":{"components/ResourceDeletePopComponent.html":{},"components/SelectComponent.html":{},"components/UploadComponent.html":{}}}],["viewchild(resourcelistcompon",{"_index":3273,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(resourcepopcompon",{"_index":3274,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(slothostdirect",{"_index":1333,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewchildren",{"_index":2174,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/PaginationComponent.html":{}}}],["viewchildren('filterpop",{"_index":2179,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["viewchildren('pag",{"_index":2964,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewcontain",{"_index":3546,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["viewcontainerref",{"_index":1315,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/SlotHostDirective.html":{}}}],["viewcontainerref.clear",{"_index":1337,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewcontainerref.createcomponent(componentfactori",{"_index":1338,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewencapsul",{"_index":2106,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{}}}],["viewencapsulation.non",{"_index":2057,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{}}}],["visibl",{"_index":445,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"classes/Field.html":{},"modules/FormModule.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"components/SelectComponent.html":{},"changelog.html":{}}}],["visiblefield",{"_index":3931,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["visiblefieldspip",{"_index":1701,"title":{"pipes/VisibleFieldsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["visualblock",{"_index":4542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":77,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/SelectComponent.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["volum",{"_index":4458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wait",{"_index":2228,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["wait(promis",{"_index":2233,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["wand",{"_index":4504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["want",{"_index":1981,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ace.html":{}}}],["war",{"_index":4301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warn",{"_index":1886,"title":{},"body":{"components/IconComponent.html":{}}}],["water",{"_index":4521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["way",{"_index":59,"title":{},"body":{"components/AceComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"changelog.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["week",{"_index":1095,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["weekday",{"_index":1075,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["wei",{"_index":4566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":4525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weiteren",{"_index":3030,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["well",{"_index":1310,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["werden",{"_index":543,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["wether",{"_index":1520,"title":{},"body":{"classes/Field.html":{},"components/SelectComponent.html":{}}}],["whenev",{"_index":1971,"title":{},"body":{"components/InputComponent.html":{}}}],["whistl",{"_index":4524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whiteboard",{"_index":4341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whole",{"_index":1576,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"injectables/ResourceConfig.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["whose",{"_index":1423,"title":{},"body":{"components/EntryListComponent.html":{},"components/PopComponent.html":{}}}],["width:${(1",{"_index":2981,"title":{},"body":{"components/PaginationComponent.html":{}}}],["wifi",{"_index":4357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wildcard",{"_index":1544,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["window",{"_index":2849,"title":{},"body":{"injectables/NotificationsService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["window.addeventlistener('keydown",{"_index":3072,"title":{},"body":{"injectables/PopService.html":{}}}],["window.notification(notification.titl",{"_index":2864,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.permiss",{"_index":2856,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.requestpermission().then((permiss",{"_index":2857,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["withload",{"_index":820,"title":{"interfaces/WithLoader.html":{}},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"coverage.html":{}}}],["withnotif",{"_index":821,"title":{"interfaces/WithNotifications.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["without",{"_index":943,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/form.html":{}}}],["won't",{"_index":4683,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["wont",{"_index":2441,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["work",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["workaround",{"_index":138,"title":{},"body":{"components/AceComponent.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["wrap",{"_index":11,"title":{},"body":{"components/AceComponent.html":{},"injectables/GeocodeService.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["wrapper",{"_index":4741,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/item.html":{}}}],["write",{"_index":101,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["writevalu",{"_index":52,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["writevalue(valu",{"_index":99,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/SelectComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["written",{"_index":4201,"title":{},"body":{"index.html":{}}}],["wrote",{"_index":4014,"title":{},"body":{"changelog.html":{}}}],["wurst",{"_index":4795,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["wurst'sav",{"_index":4798,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["x",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["x.ui",{"_index":4191,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["x.ui/src/_config",{"_index":4658,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x.ui/src/x.ui",{"_index":4659,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x1f3b5",{"_index":4635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4b0",{"_index":4629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4c5",{"_index":4632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4e7",{"_index":4636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4f7",{"_index":4633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f50d",{"_index":4637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f516",{"_index":4630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f5a5",{"_index":4634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f682;&#x1f683;&#x1f683;&#x1f683",{"_index":354,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["x1f68c",{"_index":4631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xing",{"_index":4494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xlcss/sass/xlcss.scss",{"_index":4657,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["xxxxxxxx",{"_index":4667,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["yarn",{"_index":4653,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ye",{"_index":386,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/EntryListComponent.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/SelectComponent.html":{},"classes/Sorter.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["yield",{"_index":967,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["youtub",{"_index":4495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yt",{"_index":4604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yturl",{"_index":4607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yturl[1",{"_index":4615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yyyi",{"_index":1149,"title":{},"body":{"interfaces/Day.html":{}}}],["z",{"_index":2726,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["z0",{"_index":1619,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["z]+))?)/g.exec(yt",{"_index":4613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z]+.)?)(?:youtu\\.?be(?:\\.com)?\\/)(?:embed\\/)?(?:(?:(?:(?:watch\\?)?(?:time_continue=(?:[0",{"_index":4609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z]{2",{"_index":4628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["za",{"_index":1618,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["zone",{"_index":1271,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["zone.j",{"_index":4194,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":317,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["zurücksetzen",{"_index":3036,"title":{},"body":{"components/PasswordResetComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AceComponent.html":{"url":"components/AceComponent.html","title":"component - AceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ace/src/ace.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps ace editor as angular component. Implements ControlValueAccessor!\nhttps://components.entrecode.de/misc/ace\n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-ace\n            \n\n            \n                styleUrls\n                ace.component.scss\n            \n\n\n\n            \n                templateUrl\n                ace.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                input\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                value\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setMode\n                            \n                            \n                                setTheme\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mode\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mode\n                    \n                    \n                        mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:48\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            creates new ace instance if not present and sets mode and theme if given \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Re-inits the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Inits the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setMode\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetMode(mode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Sets the editor mode to the specified language (after ace/mode/) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTheme(theme: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Sets the editor theme to the specified theme (after ace/theme/) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        theme\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:40\n                            \n                        \n\n                \n                    \n                        container element for ace editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:26\n                            \n                        \n\n                \n                    \n                        The ace editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     InputComponent\n\n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:36\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:113\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:34\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:30\n                            \n                        \n\n                \n                    \n                        The current value of the editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ElementRef, ViewChild, Input, OnChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent } from '@ec.components/ui';\n// import 'ace-builds/src-noconflict/ace.js';\n\n/** Workaround that expects ace to be imported somewhere else... */\ndeclare const ace: any;\n/** Wraps ace editor as angular component. Implements ControlValueAccessor!\n *\n * https://components.entrecode.de/misc/ace\n*/\n@Component({\n    selector: 'ec-ace',\n    templateUrl: 'ace.component.html',\n    styleUrls: ['ace.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => AceComponent),\n            multi: true\n        }\n    ]\n})\nexport class AceComponent extends DefaultInputComponent implements ControlValueAccessor, OnInit, OnChanges {\n    /** The ace editor instance */\n    editor: any;\n    /**\n     * The current value of the editor\n     */\n    value = '';\n    /**\n     * Promise that resolves when the editor has been initialized.\n     */\n    ready: Promise;\n    /** Form input component */\n    input: InputComponent;\n    /**\n     * container element for ace editor\n     */\n    @ViewChild('container') container: ElementRef;\n    /**\n     * mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n     */\n    @Input() mode: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-modelist.js\n    /**\n     * theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n     */\n    @Input() theme: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-themelist.js\n\n    /** creates new ace instance if not present and sets mode and theme if given */\n    init() {\n        if (!this.editor) {\n            this.editor = ace.edit(this.container.nativeElement);\n        }\n        this.ready = Promise.resolve(this.editor);\n        if (this.mode) {\n            this.setMode(this.mode);\n        }\n        if (this.theme) {\n            this.setTheme(this.theme);\n        }\n        if (this.value) {\n            this.editor.setValue(this.value, 1);\n        }\n        this.ready.then((editor) => {\n            editor.on('change', (e) => {\n                this.propagateChange(this.editor.getValue());\n                // TODO: find a way to omit this line in custom components and hook to change from input.component or form.component\n                if (this.input) {\n                    this.input.propagateChange(this.editor.getValue());\n                }\n            });\n        });\n    }\n    /** Sets the editor mode to the specified language (after ace/mode/) */\n    setMode(mode: string) {\n        this.mode = mode;\n        if (!this.editor) {\n            return;\n        }\n        this.editor.session.setMode('ace/mode/' + this.mode);\n    }\n\n    /** Sets the editor theme to the specified theme (after ace/theme/) */\n    setTheme(theme: string) {\n        this.theme = theme;\n        if (!this.editor) {\n            return;\n        }\n        this.editor.setTheme('ace/theme/' + this.theme);\n    }\n\n    /** Inits the editor */\n    ngOnInit() {\n        this.init();\n    }\n    /** Re-inits the editor */\n    ngOnChanges() {\n        this.init();\n    }\n\n    /** writes value to editor on outside model change. */\n    writeValue(value: any) {\n        this.value = value || '';\n        if (!this.ready) {\n            return;\n        }\n        this.ready.then((editor) => {\n            editor.setValue(this.value, 1);\n        });\n    }\n\n    propagateChange = (_: any) => {\n    };\n\n    /** Registers change callback */\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() {\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'AceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AceModule.html":{"url":"modules/AceModule.html","title":"module - AceModule","body":"\n                   \n\n\n\n\n  Modules\n  AceModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_exports\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->AceComponent -->\n\n{\n    : , : (() => ), : true\n}->AceComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ace/src/ace.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AceComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AceComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AceComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { AceComponent } from './ace.component';\n\n@NgModule({\n    imports: [],\n    exports: [AceComponent],\n    declarations: [AceComponent],\n    entryComponents: [AceComponent],\n    providers: [],\n})\nexport class AceModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminEntryInputComponent.html":{"url":"components/AdminEntryInputComponent.html","title":"component - AdminEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-form/admin-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that require having the DatamanagerResource as api.\nThis is currently relevant for account and role fields which come from the ec.api.\n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./admin-entry-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     DataManagerResource\n\n                    \n                \n                    \n                        \n                            Type :     DataManagerResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/admin-entry-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { SdkService } from '@ec.components/data/src/sdk/sdk.service';\nimport { Component } from '@angular/core';\nimport { DefaultInputComponent } from '@ec.components/ui/src/form/default-input/default-input.component';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\n\n/** This component holds the input templates for all field types that require having the DatamanagerResource as api.\n * This is currently relevant for account and role fields which come from the ec.api.\n */\n@Component({\n    templateUrl: './admin-entry-input.component.html',\n})\nexport class AdminEntryInputComponent extends DefaultInputComponent {\n    api: DataManagerResource;\n    constructor(public sdk: SdkService) {\n        super();\n        this.sdk.root.then((root) => this.api = root);\n    }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AssetDirective.html":{"url":"directives/AssetDirective.html","title":"directive - AssetDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  AssetDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/asset/asset.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset by id to the template. \n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecAsset]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                asset\n                            \n                            \n                                promise\n                            \n                            \n                                    Public\n                                sdk\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetId\n                            \n                            \n                                autoload\n                            \n                            \n                                ecAsset\n                            \n                            \n                                levels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/asset/asset.directive.ts:27\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The api to use. Defaults to sdk.api \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetId\n                    \n                    \n                        The asset id that should be loaded\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                    \n                        Should the asset be loaded immediately? Defaults to true \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ecAsset\n                    \n                    \n                        The asset id that should be loaded\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                    \n                        The levels to use. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:21\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                    \n                        Fires as soon as the asset has been loaded. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:25\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:45\n                            \n                        \n\n\n                \n                    \n                            Loads the asset. Can be called from template when using autoload=false \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:34\n                            \n                        \n\n\n                \n                    \n                            as soon as model and id are known, the asset will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            asset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        asset:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:27\n                            \n                        \n\n                \n                    \n                        The current loaded asset \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promise:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:13\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ecAsset\nThis directive can be used to load a single asset directly from the template:\n\n  id: {{myAsset.asset?.assetID}}\n  title: {{myAsset.asset?.title}}\n  tags: {{myAsset.asset?.tags}}\n  created: {{myAsset.asset?.created}}\n  type: {{myAsset.asset?.type}}\n  files: {{myAsset.asset?.files?.length}}\n\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { SdkService } from '../../sdk/sdk.service';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\n\n/** Loads an public asset by id to the template. */\n@Directive({\n  selector: '[ecAsset]',\n  exportAs: 'ecAsset'\n})\nexport class AssetDirective implements OnChanges {\n  /** The loading promise */\n  promise: any;\n  /** The asset id that should be loaded*/\n  @Input() assetId: string;\n  /** The asset id that should be loaded*/\n  @Input() ecAsset: string;\n  /** Should the asset be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** The api to use. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Fires as soon as the asset has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The current loaded asset */\n  public asset: any;\n\n  /** Injects the sdk */\n  constructor(public sdk: SdkService) {\n  }\n\n  /** as soon as model and id are known, the asset will be loaded. */\n  ngOnChanges() {\n    if (this.ecAsset) {\n      this.assetId = this.ecAsset;\n    }\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the asset. Can be called from template when using autoload=false */\n  load(id?: string) {\n    this.assetId = id || this.assetId;\n    if (!this.assetId) {\n      return Promise.reject('cannot load asset: no assetId is set');\n    }\n    const api = this.api || this.sdk.api;\n    if (!api) {\n      throw new Error('cannot load asset: no api was set!');\n    }\n    this.promise = api.asset(this.assetId)\n      .then((asset) => {\n        this.asset = asset;\n        this.loaded.emit(asset);\n        return asset;\n      });\n    return this.promise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AssetListPopComponent.html":{"url":"components/AssetListPopComponent.html","title":"component - AssetListPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AssetListPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/files/asset-list-pop/asset-list-pop.component.ts\n\n\n    \n        Description\n    \n    \n        Entry Pop is an extension of Pop component to host an entry-form.\nYou can use it like a normal pop but with the extra handling of an entry form inside.\nYou can call edit with an entry object to edit an entry, or just call show.\nIt is also possible to bind an entry directly which will then be bound to the form.\n\n    \n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-asset-list-pop\n            \n\n            \n                styleUrls\n                asset-list-pop.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./asset-list-pop.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                delay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                select\n                            \n                            \n                                selectUpload\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                config\n                            \n                            \n                                selection\n                            \n                            \n                                active\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, auth: AuthService, sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:30\n                            \n                        \n\n                \n                    \n                            Injects auth service and calls super constructor. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                    \n                        The assetGroupID that should be picked from. If empty, legacy assets are used \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        CrudConfig for customizing the entry-form and the pop.\n\n                            \n                            Type:    CrudConfig\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The used selection \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                    \n                        If true, .visible is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Event emitter on item selection \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        Emits the value of visible on change. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            emits columnClicked event or toggles selection if no observers. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectUpload\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectUpload(upload: Upload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            method that is called after the upload to select the uploaded item(s). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        upload\n                                                        \n                                                                    Upload\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:52\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. First removes visible and after the delay it removes active. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:43\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. First sets active and after the delay it sets visible. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(visible: boolean, emit: boolean)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:31\n                            \n                        \n\n\n                \n                    \n                            Shows if not visible, hides if visible. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        visible\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                !this.visible\n                                                        \n\n                                                \n                                                \n                                                        emit\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:25\n                            \n                        \n\n                \n                    \n                        The amount of time between setting active and visible. Defaults to 0. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { PopComponent } from '@ec.components/ui/src/pop/pop.component';\nimport { Selection, Item } from '@ec.components/core';\nimport { CrudConfig } from '../../crud/crud-config.interface';\nimport { AuthService } from '../../auth/auth.service';\nimport { Upload } from '../file.service';\nimport { PopService } from '@ec.components/ui/src/pop/pop.service';\nimport { SdkService } from '@ec.components/data';\n\n/** Entry Pop is an extension of Pop component to host an entry-form.\n * You can use it like a normal pop but with the extra handling of an entry form inside.\n * You can call edit with an entry object to edit an entry, or just call show.\n * It is also possible to bind an entry directly which will then be bound to the form.\n * */\n@Component({\n  selector: 'ec-asset-list-pop',\n  templateUrl: './asset-list-pop.component.html',\n  styleUrls: ['./asset-list-pop.component.scss']\n})\n\nexport class AssetListPopComponent extends PopComponent {\n  /** CrudConfig for customizing the entry-form and the pop.*/\n  @Input() config: CrudConfig = {};\n  /** The used selection */\n  @Input() selection: Selection;\n  /** The assetGroupID that should be picked from. If empty, legacy assets are used */\n  @Input() assetGroupID: string;\n  /** Event emitter on item selection */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  /** Injects auth service and calls super constructor. */\n  constructor(protected popService: PopService,\n    private auth: AuthService,\n    public sdk: SdkService) {\n    super(popService);\n  }\n\n  /** method that is called after the upload to select the uploaded item(s). */\n  selectUpload(upload: Upload) {\n    if (!this.selection) {\n      console.warn('no selection.');\n      return;\n    }\n    if (this.config.solo) {\n      this.selection.select(upload.item);\n    } else {\n      this.selection.toggleAll(upload.items);\n    }\n  }\n  /** emits columnClicked event or toggles selection if no observers. */\n  select($event) {\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit($event);\n    } else if (this.selection) {\n      console.log('selection', this.selection);\n      // this.selection.toggle($event);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n      \n        Drop to upload!\n      \n      \n        \n        Hochladen\n\n      \n      \n      \n      \n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Drop to upload!                            Hochladen                                        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'AssetListPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/auth/auth-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                This guard can be used on routes that only can be activated when a user is present in the SdkService.\nIf no user is found, an error message is shown. You can then react via the redirect output. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/auth-guard.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth-guard.service.ts:17\n                            \n                        \n\n\n                \n                    \n                            Checks if the sdk contains a user, if not an error message is shown. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        redirect:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/auth-guard.service.ts:12\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the user check fails. (Meant to be used for redirecting to another page e.g. login) \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { SdkService } from '@ec.components/data/src/sdk/sdk.service';\nimport { NotificationsService } from '@ec.components/ui/src/notifications/notifications.service';\nimport { Subject } from 'rxjs/Subject';\n\n/** This guard can be used on routes that only can be activated when a user is present in the SdkService.\n * If no user is found, an error message is shown. You can then react via the redirect output. */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  /** Subject that is nexted when the user check fails. (Meant to be used for redirecting to another page e.g. login) */\n  redirect: Subject = new Subject();\n\n  constructor(private sdk: SdkService, private notifications: NotificationsService) {\n  }\n  /** Checks if the sdk contains a user, if not an error message is shown. */\n  canActivate() {\n    return this.sdk.ready.then(user => {\n      if (!!user) {\n        return true;\n      }\n      this.notifications.emit({\n        type: 'error',\n        title: 'Diese Seite kann nicht angezeigt werden.',\n        message: 'Sie sind nicht eingeloggt.'\n      });\n      this.redirect.next();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\n()\n\n()\n\nAuthModule -->\n\n()->AuthModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAuthModule -->\n\nAuthGuard->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/auth/auth.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for all auth related components and services. \n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                            \n                                PasswordResetComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuard\n                            \n                            \n                                     AuthService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ()\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoginComponent\n                            \n                            \n                                    PasswordResetComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CookieModule } from 'ngx-cookie';\nimport { UiModule } from '@ec.components/ui/src/ui.module';\nimport { PasswordResetComponent } from './password-reset/password-reset.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './auth-guard.service';\nimport { AuthService } from './auth.service';\n\n/** loads CookieModule */\nexport function cookieFactory(): ModuleWithProviders {\n  // https://github.com/auth0/angular2-jwt/issues/305\n  return CookieModule.forRoot();\n}\n/** Module for all auth related components and services. */\n@NgModule({\n  declarations: [\n    PasswordResetComponent,\n    LoginComponent\n  ],\n  imports: [\n    cookieFactory(),\n    CommonModule,\n    ReactiveFormsModule,\n    UiModule\n  ],\n  exports: [\n    ReactiveFormsModule,\n    PasswordResetComponent,\n    LoginComponent,\n  ],\n  providers: [AuthGuard, AuthService]\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\n{\nprovide: \"environment\",\nuseValue: {\ndatamanagerID: \"83cc6374\",\nenvironment: \"stage\",\nclientID: \"rest\"\n}\n}The environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkPermission\n                            \n                            \n                                getAccount\n                            \n                            \n                                getAllowedModelMethods\n                            \n                            \n                                getAllowedResourceMethods\n                            \n                            \n                                getApi\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                noClientID\n                            \n                            \n                                resetPassword\n                            \n                            \n                                resolveVariables\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceConfig: ResourceConfig, environment: , sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/auth.service.ts:26\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        environment\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckPermission(permission: string, api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:68\n                            \n                        \n\n\n                \n                    \n                            checks given public permission for given api, defaults to this.sdk.api. Also works as ec user \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permission\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAccount(api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns the current account. Works for all apis \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedModelMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedModelMethods(model: string, methods?: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:114\n                            \n                        \n\n\n                \n                    \n                            Returns an array of all allowed methods for the given relation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        methods\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedResourceMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedResourceMethods(relation: string, variables: Object, methods?: string[], api?: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        variables\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        methods\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApi\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApi(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:158\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined: , api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Generic login that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout(api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:148\n                            \n                        \n\n\n                \n                    \n                            Generic logout that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noClientID\n                            \n                            \n                        \n                    \n                \n                \n                    \nnoClientID()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:172\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(email: , api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:136\n                            \n                        \n\n\n                \n                    \n                            Generic password reset that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveVariables\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolveVariables(string: string, variables: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:75\n                            \n                        \n\n\n                \n                    \n                            replaces all variables by values in a string \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        variables\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(undefined: , api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Generic Signup, works for accounts API and PublicAPI \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { SdkService } from '../sdk/sdk.service';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport Core from 'ec.sdk/lib/Core';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: \"environment\",\n   useValue: {\n     datamanagerID: \"83cc6374\",\n     environment: \"stage\",\n     clientID: \"rest\"\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class AuthService {\n\n  /** Calls init and sets ready to true when finished. */\n  constructor(private resourceConfig: ResourceConfig, @Inject('environment') private environment, private sdk: SdkService) {\n  }\n\n  /** Generic login that works with both public and admin API. */\n  login({ email, password }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email))\n      .then((resolvedAPI) => {\n        const _api = resolvedAPI || this.sdk.session;\n        return !_api ? Promise.reject('api_not_found') : _api.login(email, password);\n      }).then(() => {\n        return this.sdk.init();\n      });\n  }\n\n  /** Generic Signup, works for accounts API and PublicAPI */\n  signup({ email, password, invite }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api ? api.signup() : this.sdk.api.signup(email, password, invite)\n      .catch(() => this.sdk.accounts.signup(email, password, invite))\n      .then((res) => {\n        return this.sdk.init();\n      })\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.sdk.api) {\n    return api.me().then((account) => {\n      return account || this.sdk.accounts.me();\n    }).catch((err) => {\n      return this.sdk.api.me();\n    });\n  }\n\n  /** checks given public permission for given api, defaults to this.sdk.api. Also works as ec user */\n  checkPermission(permission: string, api?) {\n    return this.sdk.ready.then((user) => {\n      api = api || this.sdk.user;\n      return api.checkPermission(permission);\n    })\n  }\n  /** replaces all variables by values in a string */\n  resolveVariables(string: string, variables: Object) {\n    Object.keys(variables).forEach((key) => {\n      string = string.replace(``, variables[key]);\n    });\n    return string;\n  }\n\n  /** Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. */\n  getAllowedResourceMethods(relation: string, variables: Object = {}, methods?: string[], api?: Core): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    if (!this.resourceConfig.get(relation) || !this.resourceConfig.get(relation).permissions) {\n      /* console.warn(`relation ${relation} has no defined permissions, defaulting to all methods available`); */\n      return Promise.resolve(['get', 'post', 'put', 'delete']);\n    }\n    const permissions = this.resourceConfig.get(relation).permissions;\n    return Object.keys(permissions)\n      .map((method) => (results) => {\n        return !permissions[method] ? Promise.resolve(results) :\n          permissions[method] === true ? Promise.resolve(results.concat(method)) :\n            this.checkPermission(`${this.resolveVariables(permissions[method], variables)}`, api)\n              .then(res => {\n                if (res) {\n                  results.push(method);\n                }\n                return results;\n              }).catch(err => {\n                return results;\n              })\n      })\n      .reduce((a, b) => a.then(r => b(r)), Promise.resolve([]))\n      .then(_methods => {\n        _methods.filter(x => !!x);\n        return _methods;\n      });\n  }\n\n  /** Returns an array of all allowed methods for the given relation */\n  getAllowedModelMethods(model: string, methods?: string[]): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    return ['get', 'post', 'put', 'delete']\n      .map((method) => (results) =>\n        this.checkPermission(`${model}:${method}`, this.sdk.api)\n          .then(res => {\n            if (res) {\n              results.push(method);\n            }\n            return results;\n          })\n      )\n      .reduce((a, b) => a.then(r => b(r)), Promise.resolve([]))\n      .then(_methods => {\n        _methods.filter(x => !!x);\n        return _methods;\n      });\n  }\n\n  /** Generic password reset that works with both public and admin API. */\n  resetPassword(email, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email))\n      .then((resolvedAPI) => {\n        const _api = resolvedAPI || this.sdk.accounts;\n        return !_api ? Promise.reject('api_not_found') : _api.resetPassword(email);\n      });\n  }\n\n  /** Generic logout that works with both public and admin API. */\n  logout(api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api ? api.logout() : this.sdk.session.logout().catch(() => this.sdk.api.logout())\n      .then(() => {\n        return this.sdk.init();\n      });\n  }\n\n  getApi(email: string) {\n    if (!this.sdk.api && !this.sdk.accounts) {\n      return Promise.reject('no_api_found');\n    }\n    return this.sdk.api.emailAvailable(email)\n      .then((available) => {\n        if (!available) {\n          return this.sdk.api;\n        }\n      }).catch(() => {\n        return;\n      });\n  }\n\n  noClientID() {\n    if (!this.environment.clientID) {\n      return `\nNo clientID set in environment! To enable all auth related functionalities,\nyou can create a client in your datamanager settings and provide it with your environment:\n\n  providers: [\n    {\n      provide: 'environment',\n      useValue: {\n        datamanagerID: '83cc6374',\n        clientID: 'myClient',\n      }\n    }\n  ]\n`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Collection.html":{"url":"classes/Collection.html","title":"class - Collection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Collection\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/collection/collection.ts\n        \n\n            \n                Description\n            \n            \n                A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Public\n                                update$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addAll\n                            \n                            \n                                has\n                            \n                            \n                                hasAll\n                            \n                            \n                                index\n                            \n                            \n                                isEmpty\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                replaceWith\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: Array)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/collection/collection.ts:15\n                            \n                        \n\n                \n                    \n                            Constructs the collection with the given item Array (optional).\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                                    Example :\n                                        \n                                            const numbers = new Collection([1, 2, 3]);\n                                        \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:11\n                            \n                        \n\n                \n                    \n                        The items must all have the same type T.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update:     Subject>\n\n                    \n                \n                    \n                        \n                            Type :     Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:13\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items update \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            update$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update$:     Observable>\n\n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                    \n                        \n                            Default value : this.update.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:15\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items change \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(item: T, unique?: boolean, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:72\n                            \n                        \n\n\n                \n                    \n                            Adds the given item to the Collection. If the unique flag is set, the item will only be added\nif it is not contained.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        unique\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.add(4);\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addAll\n                            \n                            \n                        \n                    \n                \n                \n                    \naddAll(items: Array, unique: boolean, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:90\n                            \n                        \n\n\n                \n                    \n                            Adds the given items to the Collection. If the unique flag is set, only items that are not\ncontained will be added.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        unique\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.addAll([5, 6, 7]);\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            has\n                            \n                            \n                        \n                    \n                \n                \n                    \nhas(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:43\n                            \n                        \n\n\n                \n                    \n                            Checks if the Collection contains the given item.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.has(2); //true\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasAll(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:54\n                            \n                        \n\n\n                \n                    \n                            Checks if the Collection contains all given items.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.has([1,2]); //true\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            index\n                            \n                            \n                        \n                    \n                \n                \n                    \nindex(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:32\n                            \n                        \n\n\n                \n                    \n                            Returns the index of the given item \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisEmpty()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:152\n                            \n                        \n\n\n                \n                    \n                            Returns true if the collection is empty \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(item: T, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:107\n                            \n                        \n\n\n                \n                    \n                            Removes the given item from the Collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.remove(4);\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll(items?: Array, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:124\n                            \n                        \n\n\n                \n                    \n                            Removes all items from the Collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.removeAll();\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            replaceWith\n                            \n                            \n                        \n                    \n                \n                \n                    \nreplaceWith(items: Array, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:139\n                            \n                        \n\n\n                \n                    \n                            Replaces all current items with the given items. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Collection\nCollection is a more sophisticated Array:\nconst collection = new Collection([1, 2, 3]);\ncollection.has(1); //true\ncollection.has(4); //false\ncollection.add(4);\ncollection.remove(4);\ncollection.index(1); //0\ncollection.addAll([10,11,12]); //true\ncollection.hasAll([1,10,11]); //true\ncollection.removeAll();It is the Parent Class of List and Selection.\n\n    \n\n    \n        import { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n/**\n * A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n */\nexport class Collection {\n  /**\n   * The items must all have the same type T.\n   */\n  public items: Array;\n  /** Subject that is nexted when the items update */\n  protected update: Subject> = new Subject();\n  /** Subject that is nexted when the items change */\n  public update$: Observable> = this.update.asObservable();\n\n  /**\n   * Constructs the collection with the given item Array (optional).\n   * @example\n   * ```typescript\n   *  const numbers = new Collection([1, 2, 3]);\n   * ```\n   */\n  constructor(items: Array = []) {\n    this.items = [];\n    items.forEach((item) => {\n      this.items.push(item);\n    });\n  }\n\n  /** Returns the index of the given item */\n  index(item: T): number {\n    return this.items.indexOf(item);\n  }\n\n  /**\n   * Checks if the Collection contains the given item.\n   * @example\n   * ```typescript\n   * numbers.has(2); //true\n   * ```\n   */\n  has(item: T): boolean {\n    return this.index(item) !== -1;\n  }\n\n  /**\n   * Checks if the Collection contains all given items.\n   * @example\n   * ```typescript\n   * numbers.has([1,2]); //true\n   * ```\n   */\n  hasAll(items: Array = []): boolean {\n    if (items === null) {\n      // console.warn('has all fail', this, items);\n      return false;\n    }\n    return items.reduce((has, item) => {\n      return has && this.has(item);\n    }, true);\n  }\n\n  /**\n   * Adds the given item to the Collection. If the unique flag is set, the item will only be added\n   * if it is not contained.\n   * @example\n   * ```typescript\n   * numbers.add(4);\n   * ```\n   */\n  add(item: T, unique?: boolean, event: boolean = true) {\n    if (unique && this.has(item)) {\n      return false;\n    }\n    this.items.push(item);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Adds the given items to the Collection. If the unique flag is set, only items that are not\n   * contained will be added.\n   * @example\n   * ```typescript\n   * numbers.addAll([5, 6, 7]);\n   * ```\n   */\n  addAll(items: Array = [], unique: boolean = false, event: boolean = true) {\n    const length = this.items.length;\n    items.forEach((item) => {\n      this.add(item, unique, false);\n    });\n    if (this.items.length > length && event) {\n      this.update.next(this);\n    }\n  };\n\n  /**\n   * Removes the given item from the Collection.\n   * @example\n   * ```typescript\n   * numbers.remove(4);\n   * ```\n   */\n  remove(item: T, event: boolean = true) {\n    if (!this.has(item)) {\n      return false;\n    }\n    this.items.splice(this.index(item), 1);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Removes all items from the Collection.\n   * @example\n   * ```typescript\n   * numbers.removeAll();\n   * ```\n   */\n  removeAll(items?: Array, event: boolean = true) {\n    const length = this.items.length;\n    if (items) {\n      items.forEach((item) => {\n        this.remove(item, false);\n      });\n    } else {\n      this.items.length = 0;\n    }\n    if (this.items.length , event: boolean = true) {\n    if (this.items && this.items.length) {\n      this.removeAll(undefined, false);\n    }\n    if (items.length) {\n      this.addAll(items, false, false);\n    }\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /** Returns true if the collection is empty */\n  isEmpty() {\n    return this.items.length === 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Config.html":{"url":"classes/Config.html","title":"class - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/config/config.ts\n        \n\n            \n                Description\n            \n            \n                The Root class for all Configurations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                configure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/config/config.ts:5\n                            \n                        \n\n                \n                    \n                        The config object. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configure(key: string, property: string, config?: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/config/config.ts:13\n                            \n                        \n\n\n                \n                    \n                            This method is a getter and setter for configurations. The key stands for the config (e.g. model).\nThe property is a sub property if the config (e.g. fields => model.fields).\nIf no config is given, the method just returns the configuration for the given property.\nIf a config is given, the property config is merged via Object.assign. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Config {\n  // TODO use Map !!!! (like simi did in EventEmitter.ts)\n  /** The config object. */\n  private config: {\n    [key: string]: Object,\n  } = {};\n\n  /** This method is a getter and setter for configurations. The key stands for the config (e.g. model).\n   * The property is a sub property if the config (e.g. fields => model.fields).\n   * If no config is given, the method just returns the configuration for the given property.\n   * If a config is given, the property config is merged via Object.assign. */\n  public configure?(key: string, property: string, config?: Object) {\n    if (!this.config[key]) {\n      this.config[key] = {};\n    }\n    if (!config) {\n      return this.config[key][property];\n    }\n    if (!this.config[key][property]) {\n      this.config[key][property] = {};\n    }\n    Object.assign(this.config[key][property], config);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CrudComponent.html":{"url":"components/CrudComponent.html","title":"component - CrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/crud/crud.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\nhttps://components.entrecode.de/data/crud\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-crud\n            \n\n            \n                styleUrls\n                crud.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./crud.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entryPop\n                            \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPopClass\n                            \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                    Private\n                                loadEntry\n                            \n                            \n                                    Public\n                                mustReload\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                selectEntry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                model\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, notificationService: NotificationsService, symbol: SymbolService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/crud/crud.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                            \n                            Type:    CrudConfig\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model that should be crud'ed. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection that should be used \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Emits when a list element is clicked \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Emits when the selection has changed \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:50\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPopClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPopClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:125\n                            \n                        \n\n\n                \n                    \n                            Returns the pop class that should be used, either uses config.popClass or defaults to ec-pop_drawer-left. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasMethod(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadEntry(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mustReload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mustReload(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Returns true if the visible fields in the list differ from the visible fields in the form\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectEntry(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:113\n                            \n                        \n\n\n                \n                    \n                            Is called when an item in the list is clicked. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entryPop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entryPop:     EntryPopComponent\n\n                    \n                \n                    \n                        \n                            Type :     EntryPopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:44\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        list:     EntryListComponent\n\n                    \n                \n                    \n                        \n                            Type :     EntryListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:42\n                            \n                        \n\n                \n                    \n                        The EntryList inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:46\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:52\n                            \n                        \n\n                \n                    \n                        Emitted Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CrudConfig } from './crud-config.interface';\nimport { EntryFormComponent } from '../entry-form/entry-form.component';\nimport { EntryListComponent } from '../entry-list/entry-list.component';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core/src/selection/selection';\nimport { LoaderComponent } from '@ec.components/ui/src/loader/loader.component';\nimport { LoaderService } from '@ec.components/ui/src/loader/loader.service';\nimport { NotificationsService } from '@ec.components/ui/src/notifications/notifications.service';\nimport 'rxjs/add/operator/switchMap';\nimport { merge } from 'rxjs/observable/merge';\nimport { AuthService } from '../auth/auth.service';\nimport { EntryPopComponent } from '../entry-pop/entry-pop.component';\nimport { WithLoader } from '@ec.components/ui';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport { WithNotifications } from '@ec.components/ui/src/notifications/with-notifications.interface';\nimport { Notification } from '@ec.components/ui/src/notifications/notification';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * https://components.entrecode.de/data/crud\n * */\n@Component({\n  selector: 'ec-crud',\n  templateUrl: './crud.component.html',\n  styleUrls: ['./crud.component.scss']\n})\nexport class CrudComponent implements OnInit, WithLoader, WithNotifications {\n  /** The model that should be crud'ed. */\n  @Input() model: string;\n  /** CrudConfig for customization of the crud's UI.*/\n  @Input() config: CrudConfig = {};\n  /** The selection that should be used */\n  @Input() selection: Selection;\n  /** The EntryList inside the template. */\n  @ViewChild(EntryListComponent) list: EntryListComponent;\n  /** The Pop inside the template. */\n  @ViewChild(EntryPopComponent) entryPop: EntryPopComponent;\n  /** The lists loader */\n  @ViewChild(LoaderComponent) loader: LoaderComponent;\n  /** Emits when a list element is clicked */\n  @Output() columnClicked: EventEmitter = new EventEmitter();\n  /** Emits when the selection has changed */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Emitted Notifications */\n  notifications: Notification[] = []\n\n  constructor(private sdk: SdkService,\n    private auth: AuthService,\n    private loaderService: LoaderService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService,\n    @Optional() public router: Router,\n    @Optional() public route: ActivatedRoute) {\n    if (route) {\n      merge(route.data, route.params, route.queryParams)\n        .subscribe(({ model }) => {\n          if (model) {\n            this.model = model;\n          }\n        });\n    }\n  }\n\n  ngOnInit() {\n    this.auth.getAllowedModelMethods(this.model, this.config.methods)\n      .then((methods) => {\n        this.config.methods = methods;\n      });\n  }\n\n  /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n  public hasMethod(method: string) {\n    return this.config.methods && this.config.methods.indexOf(method) !== -1;\n  }\n\n  /** Returns true if the visible fields in the list differ from the visible fields in the form*/\n  public mustReload(item) {\n    return !Object.keys(item.config.fields).reduce((equal, property) => {\n      return equal && (item.config.fields[property].list !== false || item.config.fields[property].form === false);\n    }, true);\n  }\n\n  /** Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. */\n  private loadEntry(item) {\n    return Promise.resolve().then(() => {\n      if (!this.config.alwaysLoadEntry && !this.mustReload(item) && (!this.config.levels || this.config.levels === 1)) {\n        return item.getBody();\n      }\n      return this.sdk.api.entry(this.model, item.id(), { levels: this.config.levels || 1 })\n    }).then((loadedEntry) => {\n      this.entryPop.edit(loadedEntry);\n      this.notificationService.emit({ hide: this.notifications });\n    }).catch((err) => {\n      console.log('error while loading entry to edit', err);\n      this.notificationService.emit({\n        title: this.symbol.resolve('error.load'),\n        error: err,\n        sticky: true,\n        hide: this.notifications,\n        replace: this.notifications\n      })\n    });\n  }\n\n  /** Is called when an item in the list is clicked. */\n  private selectEntry(item) {\n    if (!item) {\n      return;\n    }\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n      return;\n    }\n    this.loaderService.wait(this.loadEntry(item), this.loader);\n  }\n\n  /** Returns the pop class that should be used, either uses config.popClass or defaults to ec-pop_drawer-left. */\n  getPopClass() {\n    return this.config && this.config.popClass ? this.config.popClass : 'ec-pop_drawer-left';\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{config?.createLabel}}\n        \n          \n        \n      \n    \n  \n  \n    \n    \n  \n\n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{config?.createLabel}}                                                      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'CrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CrudConfig.html":{"url":"interfaces/CrudConfig.html","title":"interface - CrudConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CrudConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/crud/crud-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                The CrudConfig allows a quick customization of an ec-crud component. \n\n            \n\n            \n                Extends\n            \n            \n                    ListConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysLoadEntry\n                                \n                                \n                                            Optional\n                                        createLabel\n                                \n                                \n                                            Optional\n                                        develop\n                                \n                                \n                                            Optional\n                                        disableCreatePop\n                                \n                                \n                                            Optional\n                                        disableListPop\n                                \n                                \n                                            Optional\n                                        disableSelectSwitch\n                                \n                                \n                                            Optional\n                                        keepPopOpen\n                                \n                                \n                                            Optional\n                                        levels\n                                \n                                \n                                            Optional\n                                        loader\n                                \n                                \n                                            Optional\n                                        methods\n                                \n                                \n                                            Optional\n                                        nestedPopClass\n                                \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        permissions\n                                \n                                \n                                            Optional\n                                        popClass\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysLoadEntry\n                                    \n                                \n                                \n                                    \n                                        alwaysLoadEntry:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an entry is always loaded when opened, even with lvl1 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createLabel\n                                    \n                                \n                                \n                                    \n                                        createLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for the entry create button \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        develop\n                                    \n                                \n                                \n                                    \n                                        develop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an extra develop button will be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCreatePop\n                                    \n                                \n                                \n                                    \n                                        disableCreatePop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no create pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableListPop\n                                    \n                                \n                                \n                                    \n                                        disableListPop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no list pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSelectSwitch\n                                    \n                                \n                                \n                                    \n                                        disableSelectSwitch:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no select mode switch will be shown \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepPopOpen\n                                    \n                                \n                                \n                                    \n                                        keepPopOpen:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the entry pop will remain open after the entry has been successfully saved. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        levels\n                                    \n                                \n                                \n                                    \n                                        levels:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:     LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoaderComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external loader component that should be used, falls back to internal. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        methods\n                                    \n                                \n                                \n                                    \n                                        methods:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An Array of Methods that should be supported. Possible values are create, read, update and delete\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nestedPopClass\n                                    \n                                \n                                \n                                    \n                                        nestedPopClass:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The class that should be used for the nested resources pops, defaults to no class. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:     NotificationsComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NotificationsComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external notifications component that should be used, falls back to internal \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    maps the permissions to the methods post put create delete \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popClass\n                                    \n                                \n                                \n                                    \n                                        popClass:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The class that should be used for the pop. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { LoaderComponent } from '@ec.components/ui/src/loader/loader.component';\nimport { NotificationsComponent } from '@ec.components/ui/src/notifications/notifications.component';\nimport { ListConfig } from '@ec.components/core/src/list/list-config.interface';\n\n/** The CrudConfig allows a quick customization of an ec-crud component. */\nexport interface CrudConfig extends ListConfig {\n  /** The label for the entry create button */\n  createLabel?: string;\n  /** An Array of Methods that should be supported. Possible values are create, read, update and delete*/\n  methods?: Array;\n  /** An external loader component that should be used, falls back to internal. */\n  loader?: LoaderComponent;\n  /** An external notifications component that should be used, falls back to internal */\n  notifications?: NotificationsComponent;\n  /** If true, an extra develop button will be shown*/\n  develop?: boolean;\n  /** If true, the entry pop will remain open after the entry has been successfully saved. */\n  keepPopOpen?: boolean;\n  /** With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)*/\n  levels?: number;\n  /** If true, an entry is always loaded when opened, even with lvl1 */\n  alwaysLoadEntry?: boolean;\n  /** The class that should be used for the pop. */\n  popClass?: string;\n  /** The class that should be used for the nested resources pops, defaults to no class. */\n  nestedPopClass?: string;\n  /** maps the permissions to the methods post put create delete */\n  permissions?: { put?: string | boolean, post?: string | boolean, get?: string | boolean, delete?: string | boolean }\n  /** If true, no select mode switch will be shown */\n  disableSelectSwitch?: boolean;\n  /** If true, no list pop will be available at selects */\n  disableListPop?: boolean;\n  /** If true, no create pop will be available at selects */\n  disableCreatePop?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CrudService.html":{"url":"injectables/CrudService.html","title":"injectable - CrudService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/crud/crud.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                matches\n                            \n                            \n                                save\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/crud/crud.service.ts:29\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(filter?: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Yields an observable that emits for all updates that match the given filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clean\n                            \n                            \n                        \n                    \n                \n                \n                    \nclean(value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:84\n                            \n                        \n\n\n                \n                    \n                            Removes all null or undefined values from the given object \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(model: string, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:99\n                            \n                        \n\n\n                \n                    \n                            Creates a new entry with the given value for the given model. Fires the \"create\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            del\n                            \n                            \n                        \n                    \n                \n                \n                    \ndel(model: string, entry: EntryResource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:112\n                            \n                        \n\n\n                \n                    \n                            deletes the given entry and emits the \"delete\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImmutableProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisImmutableProperty(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:78\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given field key is an immutable system property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatches(change: Update, filter: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:36\n                            \n                        \n\n\n                \n                    \n                            Gives true if the given change fits all property values of the filter. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        change\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(model: string, entry: EntryResource, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(model: , entry: EntryResource, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Updates the given entry with the new value. Fires the \"update\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            changes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changes:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:29\n                            \n                        \n\n                \n                    \n                        The changes event is emitted everytime an entry is created or updated. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport EntryList from 'ec.sdk/lib/resources/publicAPI/EntryList';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/filter';\nimport { Subject } from 'rxjs/Subject';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Update {\n  /** The model that has been updated. */\n  model: string | string[],\n  /** The relevant entry. */\n  entry?: EntryResource,\n  /** The list where it happened. */\n  list?: EntryList,\n  /** The type of update. (create/read/update/delete) */\n  type?: 'post' | 'get' | 'put' | 'delete'\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class CrudService {\n  /** The changes event is emitted everytime an entry is created or updated. */\n  private changes: Subject = new Subject();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService) {\n  }\n\n  /** Gives true if the given change fits all property values of the filter. */\n  matches(change: Update, filter: Update): boolean {\n    return Object.keys(filter)\n      .reduce((match, key) => match && change[key] === filter[key], true);\n  }\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: Update): Observable {\n    if (!filter) {\n      return this.changes.asObservable();\n    }\n    return this.changes.asObservable().filter((change: Update) => this.matches(change, filter));\n  }\n\n  /** Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. */\n  save(model: string, entry: EntryResource, value: Object) {\n    if (entry && entry.save) {\n      return this.update(model, entry, value);\n    }\n    return this.create(model, value)\n      .then((_entry) => {\n        return _entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given entry with the new value. Fires the \"update\" change. */\n  update(model, entry: EntryResource, value: Object): Promise {\n    const oldValues = {}; // save old values\n    Object.keys(value).forEach((key) => oldValues[key] = entry[key]);\n    Object.assign(entry, this.clean(value)); // assign new form values\n    return entry.save().then((_entry) => {\n      this.changes.next({ model, entry: _entry, type: 'put' });\n      return _entry;\n    })\n      .catch((err) => {\n        Object.assign(entry, this.clean(oldValues)); // fall back to old values\n        return Promise.reject(err);\n      });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' ||\n      ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (value[key] === '') { // clear empty strings\n          value[key] = null;\n        }\n        if (this.isImmutableProperty(key)) { // filter system properties\n          delete value[key];\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new entry with the given value for the given model. Fires the \"create\" change. */\n  create(model: string, value: Object): Promise {\n    return this.sdk.api.createEntry(model, this.clean(value))\n      .then((entry: EntryResource) => {\n        // console.log('created entry', entry);\n        // TODO make sure leveled entries are returned leveled\n        this.changes.next({ model, entry, type: 'post' });\n        return entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given entry and emits the \"delete\" change. */\n  del(model: string, entry: EntryResource) {\n    return entry.del().then((res) => {\n      this.changes.next({ model, entry, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n  Modules\n  DataModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nCrudService\n\nCrudService\n\nDataModule -->\n\nCrudService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/data.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AdminEntryInputComponent\n                            \n                            \n                                CrudComponent\n                            \n                            \n                                DefaultEntryInputComponent\n                            \n                            \n                                DefaultEntryOutputComponent\n                            \n                            \n                                EntriesDirective\n                            \n                            \n                                EntryDirective\n                            \n                            \n                                EntryFormComponent\n                            \n                            \n                                EntryListComponent\n                            \n                            \n                                EntryPopComponent\n                            \n                            \n                                EntrySelectComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AdminEntryInputComponent\n                            \n                            \n                                DefaultEntryInputComponent\n                            \n                            \n                                DefaultEntryOutputComponent\n                            \n                            \n                                EntrySelectComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     CrudService\n                            \n                            \n                                     HistoryService\n                            \n                            \n                                     ModelConfigService\n                            \n                            \n                                     TypeConfigService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthModule\n                            \n                            \n                                    FilesModule\n                            \n                            \n                                    ResourceModule\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AuthModule\n                            \n                            \n                                    CrudComponent\n                            \n                            \n                                    EntriesDirective\n                            \n                            \n                                    EntryDirective\n                            \n                            \n                                    EntryFormComponent\n                            \n                            \n                                    EntryListComponent\n                            \n                            \n                                    EntryPopComponent\n                            \n                            \n                                    EntrySelectComponent\n                            \n                            \n                                    FilesModule\n                            \n                            \n                                    ResourceModule\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { UiModule } from '@ec.components/ui/src/ui.module';\nimport { ModelConfigService } from './model-config/model-config.service';\nimport { CrudService } from './crud/crud.service';\nimport { DefaultEntryInputComponent } from './entry-form/default-entry-input.component';\nimport { EntryListComponent } from './entry-list/entry-list.component';\nimport { EntryFormComponent } from './entry-form/entry-form.component';\nimport { CrudComponent } from './crud/crud.component';\nimport { DefaultEntryOutputComponent } from './entry-form/default-entry-output.component';\nimport { EntrySelectComponent } from './entry-select/entry-select.component';\nimport { TypeConfigService } from './model-config/type-config.service';\nimport { ResourceListComponent } from './resource-list/resource-list.component';\nimport { SdkModule } from './sdk/sdk.module';\nimport { FilesModule } from './files/files.module';\nimport { AuthModule } from './auth/auth.module';\nimport { EntriesDirective } from './entries/entries.directive';\nimport { EntryDirective } from './entry/entry.directive';\nimport { EntryPopComponent } from './entry-pop/entry-pop.component';\nimport { ResourceFormComponent } from './resource-form/resource-form.component';\nimport { ResourcePopComponent } from './resource-pop/resource-pop.component';\nimport { ResourceCrudComponent } from './resource-crud/resource-crud.component';\nimport { ResourceDeletePopComponent } from './resource-delete-pop/resource-delete-pop.component';\nimport { ResourceSelectComponent } from './resource-select/resource-select.component';\nimport { AdminEntryInputComponent } from './entry-form/admin-entry-input.component';\nimport { ResourceModule } from './resource/resource.module';\nimport { HistoryService } from './sdk/history.service';\n\n@NgModule({\n  entryComponents: [\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    EntrySelectComponent,\n  ],\n  declarations: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    CrudComponent,\n    EntrySelectComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    SdkModule,\n    FilesModule,\n    AuthModule,\n    ResourceModule,\n  ],\n  exports: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    CrudComponent,\n    EntrySelectComponent,\n    RouterModule,\n    UiModule,\n    SdkModule,\n    FilesModule,\n    AuthModule,\n    ResourceModule\n  ],\n  providers: [\n    CrudService,\n    TypeConfigService,\n    ModelConfigService,\n    HistoryService,\n    {\n      provide: 'environment',\n      useValue: {\n        environment: 'live'\n      }\n    }\n  ]\n})\nexport class DataModule {\n  static forEnvironment(environment): ModuleWithProviders {\n    return {\n      ngModule: DataModule,\n      providers: [\n        {\n          provide: 'environment',\n          useValue: Object.assign(\n            {\n              environment: 'live'\n            },\n            environment\n          )\n        }\n      ]\n    };\n  }\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatetimeComponent.html":{"url":"components/DatetimeComponent.html","title":"component - DatetimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatetimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/datetime/datetime.component.ts\n\n\n    \n        Description\n    \n    \n        Input for a datetime.\nhttps://components.entrecode.de/ui/datetime\n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-datetime\n            \n\n            \n                styleUrls\n                datetime.component.scss\n            \n\n\n\n            \n                templateUrl\n                datetime.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                weekdays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                disableTime\n                            \n                            \n                                formControl\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        date\n                    \n                    \n                        The date that should be displayed at start. \n\n                            \n                            Type:    moment.Moment\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableTime\n                    \n                    \n                        If true, the time will not be displayed nor will be editable. \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        The form control that holds the date \n\n                            \n                            Type:    FormControl\n\n                            \n                        \n                            Default value: new FormControl()\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        The input's placeholder \n\n                        \n                            Default value: ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            registerOnChange implementation of ControlValueAccessor \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            registerOnTouched implementation of ControlValueAccessor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Selects the given Date when the model changes. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calendar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        calendar:     CalendarComponent\n\n                    \n                \n                    \n                        \n                            Type :     CalendarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:29\n                            \n                        \n\n                \n                    \n                        The used calendar component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:43\n                            \n                        \n\n                \n                    \n                        Change propagation for ControlValueAccessor \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weekdays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weekdays:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:31\n                            \n                        \n\n                \n                    \n                        Array of the days of a week. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport moment from 'moment-es6';\nimport { CalendarComponent } from './calendar.component';\n\n/** Input for a datetime.\n *\n * https://components.entrecode.de/ui/datetime\n *\n*/\n@Component({\n  selector: 'ec-datetime',\n  templateUrl: 'datetime.component.html',\n  styleUrls: ['datetime.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatetimeComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatetimeComponent implements ControlValueAccessor {\n  /** The date that should be displayed at start. */\n  @Input() date: moment.Moment;\n  /** The form control that holds the date */\n  @Input() formControl: FormControl = new FormControl();\n  /** The used calendar component */\n  @ViewChild(CalendarComponent) calendar: CalendarComponent;\n  /** Array of the days of a week. */\n  public weekdays: string[];\n  /** If true, the time will not be displayed nor will be editable. */\n  @Input() disableTime: boolean;\n  /** The input's placeholder */\n  @Input() placeholder = '';\n\n  /** Selects the given Date when the model changes. */\n  writeValue(value: Date) {\n    this.calendar.writeValue(value);\n  }\n\n  /** Change propagation for ControlValueAccessor */\n  propagateChange = (_: any) => {\n  };\n\n  /** registerOnChange implementation of ControlValueAccessor */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  /** registerOnTouched implementation of ControlValueAccessor */\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n    \n  \n  \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatetimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DatetimePipe.html":{"url":"pipes/DatetimePipe.html","title":"pipe - DatetimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  DatetimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/datetime/datetime.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        datetime\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: Date | string, pattern: string | string[], raw?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Date | string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        pattern\n                                                        \n                                                                    string | string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.symbol.resolve('moment.format.date')\n                                                        \n\n                                                \n                                                \n                                                        raw\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment-es6';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'datetime'\n})\nexport class DatetimePipe implements PipeTransform {\n  constructor(private symbol: SymbolService) { }\n  transform(\n    value: Date | string,\n    pattern: string | string[] = this.symbol.resolve('moment.format.date'),\n    raw?: string\n  ): string {\n    if (!value) {\n      return '';\n    }\n    if (raw) {\n      console.log('raw', raw);\n    }\n    const typed = moment(value, pattern, true);\n    if (!typed.isValid()) {\n      return '';\n    }\n    if (Array.isArray(pattern)) {\n      pattern = pattern[0];\n    }\n    return moment(value).format(pattern);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Day.html":{"url":"interfaces/Day.html","title":"interface - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Day\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/form/datetime/month.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a day inside the a month. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        date\n                                \n                                \n                                        draggable\n                                \n                                \n                                        first\n                                \n                                \n                                        format\n                                \n                                \n                                        index\n                                \n                                \n                                        last\n                                \n                                \n                                        today\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:     moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     moment.Moment\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The moment that is represented by the day. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    determines if the day can be dragged to change the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                    \n                                \n                                \n                                    \n                                        first:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the first in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The formatted day number. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The cell index \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                    \n                                \n                                \n                                    \n                                        last:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the last in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        today\n                                    \n                                \n                                \n                                    \n                                        today:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Flag that is true if the day is today. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Can be given a type, to set a class. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport moment from 'moment-es6';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/debounceTime';\n\n/** Interface for a day inside the a month. */\nexport interface Day {\n  /** The cell index */\n  index: number,\n  /** The moment that is represented by the day. */\n  date: moment.Moment;\n  /** Can be given a type, to set a class. */\n  type?: string;\n  /** The formatted day number. */\n  format: string;\n  /** Flag that is true if the day is today. */\n  today: boolean;\n  /** if the day is the first in the timespan */\n  first: boolean;\n  /** if the day is the last in the timespan */\n  last: boolean;\n  /** determines if the day can be dragged to change the timespan */\n  draggable: boolean;\n}\n\n/** Displays the days of a month in a calendarish table. */\n@Component({\n  selector: 'ec-month',\n  styleUrls: ['month.component.scss'],\n  templateUrl: 'month.component.html'\n})\nexport class MonthComponent implements OnInit, OnChanges {\n  dragged: any;\n  /** The current selected date */\n  @Input() selected: moment.Moment;\n  /** Color array for day cells. E.g. to view a month heatmap */\n  @Input() colors: Object;\n  /** Timespan that is reflected. Marks days inside the span */\n  @Input() timespan: moment.Moment[];\n  /** The current date (for showing month) */\n  @Input() date: moment.Moment;\n  /** The color of days that are inside the timespan */\n  @Input() spancolor = '#ccc'\n  /** If true, the timespan start cannot be dragged */\n  @Input() disableDragStart = false;\n  /** If true, the timespan end cannot be dragged */\n  @Input() disableDragEnd = false;\n  /** The current month as string */\n  public formatted: string;\n  /** The cells containing the days */\n  public cells: Array;\n  /** Format for month in header */\n  public monthFormat = 'MMMM YYYY';\n  /** Emits when the selected day changes. */\n  @Output() dayClicked: EventEmitter = new EventEmitter();\n  /** Changed Timespan selection */\n  @Output() spanChanged: EventEmitter = new EventEmitter();\n\n  protected drag: Subject = new Subject();\n  protected changeSpan: Subject = new Subject();\n\n  constructor(public symbol: SymbolService) {\n    this.monthFormat = this.symbol.resolve('moment.format.month') || this.monthFormat;\n    this.drag.asObservable().debounceTime(100)\n      .subscribe((day) => this.dropDay(day));\n    this.changeSpan.asObservable().debounceTime(800)\n      .subscribe(timespan => this.spanChanged.emit(this.timespan))\n  }\n\n  dropDay(day: Day) {\n    if (!this.dragged || (day.first && this.dragged.first || day.last && this.dragged.last)) {\n      return;\n    }\n    const newTimespan = [].concat(this.timespan);\n    newTimespan[this.dragged.first ? 0 : 1] = day.date.clone();\n    if (newTimespan[0].isAfter(newTimespan[1])) {\n      this.dragged.first = !this.dragged.first;\n      this.dragged.last = !this.dragged.last;\n      newTimespan.reverse();\n    }\n    this.timespan = newTimespan;\n    this.changeSpan.next(this.timespan);\n    /* if (this.cells[0] === day || this.cells[this.cells.length - 1] === day) {\n      // change month if dragging to edge\n      this.setDate(day.date.clone().subtract(1, 'days'));\n    } else {\n      this.setDate();\n    } */\n    this.setDate();\n  }\n\n  dragStart(day, e) {\n    if ((this.disableDragStart && day.first) || (this.disableDragEnd && day.last)) {\n      return;\n    }\n    this.dragged = day;\n    e.preventDefault();\n  }\n\n  mouseUp(day, e) {\n    if (!this.dragged) {\n      return;\n    }\n    delete this.dragged;\n    e.preventDefault();\n  }\n\n  mouseOver(day, e) {\n    if (!this.dragged || this.dragged === day) {\n      return;\n    }\n    e.preventDefault();\n    this.drag.next(day);\n  }\n\n  getDayColor(_moment: moment.Moment) {\n    if (this.colors && this.colors[_moment.toISOString()]) {\n      return this.colors[_moment.toISOString()];\n    }\n  }\n\n  /** Initializes the calendar. */\n  ngOnInit() {\n    this.setDate();\n  }\n\n  /** When changing the date or selected input, the calendar will update its view to display the month containing it. */\n  ngOnChanges(change) {\n    if (change.selected) {\n      this.setDate(this.selected);\n      return;\n    } else if (change.date) {\n      this.setDate(this.date);\n    } else if (change.timespan) {\n      this.setDate();\n    } else if (change.colors) {\n      this.cells = this.getMonth(this.date.clone(), 'current');\n    }\n  }\n\n  /** Returns days of current month */\n  getMonth(day = moment(), type?: string): Array {\n    const begin = day.clone().startOf('month').startOf('week'); // .subtract(weeksbefore * 7, 'days');\n    return new Array(42)\n      .fill(0)\n      .map((d, index) => begin.clone().add(index, 'days'))\n      .map((date, index) => {\n        const isStart = this.timespan && date.clone().startOf('day').isSame(this.timespan[0].clone().startOf('day'));\n        const isEnd = this.timespan && date.clone().startOf('day').isSame(this.timespan[1].clone().startOf('day'));\n        return {\n          index,\n          date,\n          type: date.format('MM YYYY') === day.format('MM YYYY') ? 'current' : 'other',\n          active: this.timespan && date.isBetween(this.timespan[0], this.timespan[1], 'days', '[]'),\n          first: isStart,\n          last: isEnd,\n          draggable: (!this.disableDragStart && isStart) || (!this.disableDragEnd && isEnd),\n          color: this.getDayColor(date),\n          format: date.format('DD'),\n          today: moment().startOf('day').diff(date, 'days') === 0,\n        }\n      });\n  }\n\n\n  /** Sets the calendars viewed date to the given moment's month. Renders always 42 cells to keep the layout consistent. */\n  setDate(date: moment.Moment = this.selected || this.date || moment()) {\n    this.date = date.clone();\n    this.formatted = date.format(this.monthFormat);\n    this.cells = this.getMonth(date.clone(), 'current');\n  }\n\n  /** Selects the day of the given moment. */\n  selectDay(_moment: moment.Moment): void {\n    this.setDate(_moment);\n    this.selected = _moment;\n    this.dayClicked.emit(_moment);\n  }\n\n  /** Clears the current selected date*/\n  clearSelection(): void {\n    delete this.selected;\n  }\n\n  /** Returns true if the given moment is currently selected (on a day basis) */\n  isSelected(_moment: moment.Moment): boolean {\n    if (!this.selected) {\n      return;\n    }\n    return this.selected.startOf('day').diff(_moment, 'days') === 0;\n  }\n\n  canAlter(value, span: string) {\n    if (!this.timespan) {\n      return true;\n    }\n    const newDate = this.date.clone().add(value, span);\n    return newDate.isBetween(this.timespan[0], this.timespan[1], 'months', '[]');\n  }\n\n  /** Updates the viewed date to reflect the given relative changes. */\n  alter(value, span: string): void {\n    if (!this.canAlter(value, span)) {\n      return;\n    }\n    this.setDate(this.date.clone().add(value, span));\n  }\n\n  /** Sets the current viewed date to today. */\n  today(): void {\n    this.setDate(moment());\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryInputComponent.html":{"url":"components/DefaultEntryInputComponent.html","title":"component - DefaultEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-form/default-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that can not be represented by the default input template. \n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-entry-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry-form/default-entry-input.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/default-entry-input.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { DefaultInputComponent } from '@ec.components/ui/src/form/default-input/default-input.component';\nimport { SdkService } from '@ec.components/data/src/sdk/sdk.service';\n\n/** This component holds the input templates for all field types that can not be represented by the default input template. */\n@Component({\n  templateUrl: './default-entry-input.component.html',\n})\nexport class DefaultEntryInputComponent extends DefaultInputComponent {\n  constructor(public sdk: SdkService) {\n    super();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryOutputComponent.html":{"url":"components/DefaultEntryOutputComponent.html","title":"component - DefaultEntryOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-form/default-entry-output.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all output types that cannot be represented by the default output component. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-entry-output\n            \n\n\n\n\n            \n                templateUrl\n                ./default-entry-output.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/default-entry-output.component.ts:12\n                            \n                        \n\n                \n                    \n                        The field to output. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/default-entry-output.component.ts:14\n                            \n                        \n\n                \n                    \n                        The item to display \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core';\n\n/** This component holds the templates for all output types that cannot be represented by the default output component. */\n@Component({\n  selector: 'ec-default-entry-output',\n  templateUrl: './default-entry-output.component.html',\n})\nexport class DefaultEntryOutputComponent {\n  /** The field to output. */\n  field: Field;\n  /** The item to display */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n    JSON\n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} output coming soon!-->\n    {{item?.display(field.property)}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          JSON        🚂🚃🚃🚃 {{field.type}} output coming soon!-->    {{item?.display(field.property)}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultInputComponent.html":{"url":"components/DefaultInputComponent.html","title":"component - DefaultInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/default-input/default-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all basic field types. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core/src/item/item';\n\n/** This component holds the templates for all basic field types. */\n@Component({\n  templateUrl: './default-input.component.html',\n})\nexport class DefaultInputComponent {\n  /** The field for which the input is meant. */\n  public field: Field;\n  /** The item that is targeted by the input */\n  public item: Item;\n  /** The form group that is used */\n  public group: FormGroup;\n  /** The form control that is used */\n  public control: FormControl;\n}\n\n    \n\n    \n        \n  \n\n  \n\n  \n\n  \n    \n      \n    \n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n    \n    \n      {{option}}\n    \n  \n\n  \n    \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  {{option}}                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultOutputComponent.html":{"url":"components/DefaultOutputComponent.html","title":"component - DefaultOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/default-output/default-output.component.ts\n\n\n    \n        Description\n    \n    \n        Holds the templates to output item field values. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-output\n            \n\n            \n                styleUrls\n                default-output.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./default-output.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-output/default-output.component.ts:13\n                            \n                        \n\n                \n                    \n                        The field that should be displayed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-output/default-output.component.ts:15\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core/src/item/item';\n\n/** Holds the templates to output item field values. */\n@Component({\n  selector: 'ec-default-output',\n  styleUrls: ['./default-output.component.scss'],\n  templateUrl: './default-output.component.html',\n})\nexport class DefaultOutputComponent {\n  /** The field that should be displayed */\n  field: Field;\n  /** The item that is targeted by the input */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{label}}\n      \n    \n    (field.maxItems||10)\">\n      ...\n    \n  \n\n  \n    {{item?.display(field.property)}}\n  \n\n  \n    &#10004;\n  \n  \n    {{item?.display(field.property)}}\n  \n\n  \n    {{item?.display(field.property)}}\n  \n  \n    {{item?.display(field.property)}}\n  \n\n  \n    \n    {{item?.display(field.property)}}\n  \n\n  \n    \n  \n\n  \n    \n      \n        \n      \n    -->\n    \n    {{item?.display(field.property)?.length}}\n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    {{item?.display(field.property)}}\n    \n  \n  \n    \n    text\n  \n  \n    {{item?.display(field.property)}}-->\n    JSON\n  \n  \n    {{item?.display(field.property)}}  \n  \n  \n    {{item?.display(field.property)}} \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{label}}              (field.maxItems||10)\">      ...            {{item?.display(field.property)}}        ✔        {{item?.display(field.property)}}        {{item?.display(field.property)}}        {{item?.display(field.property)}}            {{item?.display(field.property)}}                                        -->        {{item?.display(field.property)?.length}}                        {{item?.display(field.property)}}                text        {{item?.display(field.property)}}-->    JSON        {{item?.display(field.property)}}          {{item?.display(field.property)}}   '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropzoneDirective.html":{"url":"directives/DropzoneDirective.html","title":"directive - DropzoneDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DropzoneDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/dropzone/dropzone.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive that turns any element into a zone to drop files. \n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecDropzone]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecDropzone\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.is-active\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                dragleave\n                            \n                            \n                                dragover\n                            \n                            \n                                drop\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/dropzone/dropzone.directive.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                    \n                        If true the element acts normal \n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:11\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ecDropzone\n                    \n                    \n                        Emits when files are dropped \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:9\n                            \n                        \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.is-active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.is-active:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:7\n                            \n                        \n\n                \n                    \n                        The is-active class is bound to the host when dragover is active \n\n                    \n                \n\n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            dragleave\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragleave(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:37\n                            \n                        \n\n\n                \n                    \n                            flips active to false on dragleave \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragover\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragover(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:13\n                            \n                        \n\n\n                \n                    \n                            flips active to true on dragover \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drop\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndrop(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:24\n                            \n                        \n\n\n                \n                    \n                            emits dropped files and flips active to false on drop \n\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\n\n/** Directive that turns any element into a zone to drop files. */\n@Directive({ selector: '[ecDropzone]' })\nexport class DropzoneDirective {\n    /** The is-active class is bound to the host when dragover is active */\n    @HostBinding('class.is-active') private active: boolean;\n    /** Emits when files are dropped */\n    @Output() ecDropzone: EventEmitter = new EventEmitter();\n    /** If true the element acts normal */\n    @Input() disabled = false;\n    /** flips active to true on dragover */\n    @HostListener('dragover', ['$event']) onDragOver(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this.active) {\n            this.active = true;\n        }\n    }\n    /** emits dropped files and flips active to false on drop */\n    @HostListener('drop', ['$event']) onDrop(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (!e.dataTransfer.files || !e.dataTransfer.files.length) {\n            return;\n        }\n        this.ecDropzone.emit(e);\n        this.active = false;\n    }\n    /** flips active to false on dragleave */\n    @HostListener('dragleave', ['$event']) onDragLeave(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (this.active) {\n            this.active = false;\n        }\n    }\n    constructor(private el: ElementRef) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicRackComponent.html":{"url":"components/DynamicRackComponent.html","title":"component - DynamicRackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicRackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/dynamic-rack/dynamic-rack.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./dynamic-rack.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/dynamic-rack/dynamic-rack.component.ts:10\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver, Type, ViewChild } from '@angular/core';\n\n// import { CustomFieldComponent } from './custom-field.component';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  // selector: 'ec-dynamic-rack',\n  templateUrl: './dynamic-rack.component.html'\n})\nexport class DynamicRackComponent {\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n}\n\n    \n\n    \n        \n  \n    -->\n    -->\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      -->    -->  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicRackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicSlotComponent.html":{"url":"components/DynamicSlotComponent.html","title":"component - DynamicSlotComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicSlotComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-dynamic-slot\n            \n\n\n\n\n            \n                templateUrl\n                ./dynamic-slot.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, data: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldHost:     SlotHostDirective\n\n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver, ComponentRef, Type, ViewChild } from '@angular/core';\nimport { SlotHostDirective } from '../slot-host.directive';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-dynamic-slot',\n  templateUrl: './dynamic-slot.component.html'\n})\nexport class DynamicSlotComponent {\n  /** The FieldHostDirective will  be used to nest custom components into the field */\n  @ViewChild(SlotHostDirective) fieldHost: SlotHostDirective;\n\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n\n  /** Loads the given component inside the fieldHost. Sets current item and field by default. */\n  loadComponent(component: Type, data: Object = {}): ComponentRef {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n    const viewContainerRef = this.fieldHost.viewContainerRef;\n    viewContainerRef.clear();\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    Object.assign(componentRef.instance, data);\n    return componentRef;\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicSlotComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntriesDirective.html":{"url":"directives/EntriesDirective.html","title":"directive - EntriesDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  EntriesDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/entries/entries.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entryList of a given model with the given config.\nhttps://components.entrecode.de/data/entries\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecEntries]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                entryList\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Private\n                                promise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                load\n                            \n                            \n                                next\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                prev\n                            \n                            \n                                useList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                endless\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entries/entries.directive.ts:34\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                    \n                        Should the entries be loaded immediately? Defaults to true \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        endless\n                    \n                    \n                        If true, calling next will append the next page to the items, making the list grow.\n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be used. \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model to load from. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        The filterOptions for loading. \n\n                            \n                            Type:    any\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:25\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                            \n                        \n                    \n                \n                \n                    \nentries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:100\n                            \n                        \n\n\n                \n                    \n                            This helper returns all items of the current entryList. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLast\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:54\n                            \n                        \n\n\n                \n                    \n                            Loads the entries \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \nnext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:41\n                            \n                        \n\n\n                \n                    \n                            When the model is known, the entryList will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prev\n                            \n                            \n                        \n                    \n                \n                \n                    \nprev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useList\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseList(entryList: EntryList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entryList\n                                                        \n                                                                    EntryList\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            entryList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entryList:     EntryList\n\n                    \n                \n                    \n                        \n                            Type :     EntryList\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:33\n                            \n                        \n\n                \n                    \n                        The current loaded entryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     EntryResource[]\n\n                    \n                \n                    \n                        \n                            Type :     EntryResource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            promise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promise:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:21\n                            \n                        \n\n                \n                    \n                        The promise of the entryList call. \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        ec-entries\nThis component can be used to load a list of entries from the template:\n\n  \n  {{muffin.name}}\n  \n\n    \n\n    \n        import { Directive, Input, OnChanges } from '@angular/core';\nimport { SdkService } from '../sdk/sdk.service';\nimport EntryList from 'ec.sdk/lib/resources/publicAPI/EntryList';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { WithLoader, LoaderComponent } from '@ec.components/ui';\n\n// import { filterOptions } from 'ec.sdk/lib/resources/ListResource';\n\n/** Loads an entryList of a given model with the given config.\n * https://components.entrecode.de/data/entries\n*/\n@Directive({\n  selector: '[ecEntries]',\n  exportAs: 'ecEntries'\n})\nexport class EntriesDirective implements OnChanges, WithLoader {\n  /** The promise of the entryList call. */\n  private promise: any;\n  /** The model to load from. */\n  @Input() model: string;\n  /** The filterOptions for loading. */\n  @Input() options: any = {}; // TODO cannot import #simibug : filterOptions;\n  /** If true, calling next will append the next page to the items, making the list grow.*/\n  @Input() endless = false;\n  /** Should the entries be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entryList */\n  private entryList: EntryList;\n  public items: EntryResource[] = [];\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService) {\n  }\n\n  /** When the model is known, the entryList will be loaded. */\n  ngOnChanges() {\n    if (!this.model) {\n      return;\n    }\n    if (this.endless && this.options.page && this.options.page > 1) {\n      console.warn('cannot init ecEntries on page!==1 with strategy=endless');\n    }\n    if (this.autoload !== false) {\n      this.load();\n    }\n  }\n\n  /** Loads the entries */\n  load() {\n    this.promise = this.sdk.api.entryList(this.model, this.options)\n      .then(list => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n\n  useList(entryList: EntryList) {\n    this.entryList = entryList;\n    const items = this.entryList.getAllItems();\n    if (this.endless) {\n      this.items = this.items.concat(items);\n      this.items = this.items.filter((item) => this.items.find((_item) => _item.id === item.id));\n    } else {\n      this.items = this.entryList.getAllItems();\n    }\n  }\n\n  next() {\n    this.promise = this.entryList.followNextLink().then(list => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  prev() {\n    this.promise = this.entryList.followPrevLink().then(list => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  isLast() {\n    return !this.entryList || !this.entryList.hasNextLink();\n  }\n\n  isFirst() {\n    if (this.endless) {\n      return true;\n    }\n    return !this.entryList || !this.entryList.hasFirstLink();\n  }\n\n  /** This helper returns all items of the current entryList. */\n  entries() {\n    if (!this.entryList) {\n      return [];\n    }\n    return this.entryList.getAllItems();\n  }\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntryDirective.html":{"url":"directives/EntryDirective.html","title":"directive - EntryDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  EntryDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/entry/entry.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entry by id to the template.\nhttps://components.entrecode.de/data/entries\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecEntry]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                            \n                                promise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                entryId\n                            \n                            \n                                levels\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry/entry.directive.ts:32\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                    \n                        Should the entry be loaded immediately? Defaults to true \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        entryId\n                    \n                    \n                        The entry id that should be loaded\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                    \n                        The levels to use. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be used. \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model to load from \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:22\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                    \n                        Fires as soon as the entry has been loaded. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:28\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:47\n                            \n                        \n\n\n                \n                    \n                            Loads the entry. Can be called from template when using autoload=false \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:39\n                            \n                        \n\n\n                \n                    \n                            as soon as model and id are known, the entry will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entry:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:32\n                            \n                        \n\n                \n                    \n                        The current loaded entry \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promise:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:18\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        ec-entry\nThis directive can be used to load a single entry directly from the template:\n\n{{muffin.entry?.name}}\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { SdkService } from '../sdk/sdk.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { WithLoader, LoaderComponent } from '@ec.components/ui';\n\n/** Loads an entry by id to the template.\n * https://components.entrecode.de/data/entries\n * */\n@Directive({\n  selector: '[ecEntry]',\n  exportAs: 'ecEntry'\n})\nexport class EntryDirective implements OnChanges, WithLoader {\n  /** The loading promise */\n  promise: any;\n  /** The entry id that should be loaded*/\n  @Input() entryId: string;\n  /** The model to load from */\n  @Input() model: string;\n  /** Should the entry be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** Fires as soon as the entry has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entry */\n  entry: any;\n\n  /** Injects the sdk */\n  constructor(private sdk: SdkService) {\n  }\n\n  /** as soon as model and id are known, the entry will be loaded. */\n  ngOnChanges() {\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the entry. Can be called from template when using autoload=false */\n  load() {\n    if (!this.entryId || !this.model) {\n      return;\n    }\n    this.promise = this.sdk.api.entry(this.model, this.entryId, this.levels)\n      .then((entry) => {\n        this.entry = entry;\n        this.loaded.emit(entry);\n        return entry;\n      });\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntryListComponent.html":{"url":"components/EntryListComponent.html","title":"component - EntryListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EntryListComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-list/entry-list.component.ts\n\n\n    \n        Description\n    \n    \n        The EntryListComponent is a thin holder of an EntryList instance. It extends the ListComponent\nhttps://components.entrecode.de/data/entry-list\n\n    \n\n    \n        Extends\n    \n    \n            ResourceListComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-entry-list\n            \n\n            \n                styleUrls\n                entry-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ../../../ui/src/list/list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                list\n                            \n                            \n                                resourceConfig\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createList\n                            \n                            \n                                initFilter\n                            \n                            \n                                    Protected\n                                createList\n                            \n                            \n                                filter\n                            \n                            \n                                initFilterQuery\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                api\n                            \n                            \n                                listResource\n                            \n                            \n                                loader\n                            \n                            \n                                relation\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loaderService: LoaderService, sdk: SdkService, notificationService: NotificationsService, modelConfig: ModelConfigService, crud: CrudService, symbol: SymbolService, resourceService: ResourceService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry-list/entry-list.component.ts:27\n                            \n                        \n\n                \n                    \n                            The constructor will just call super of List\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelConfig\n                                                  \n                                                        \n                                                                    ModelConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        crud\n                                                  \n                                                        \n                                                                    CrudService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model whose entries should be shown.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                            \n                            Type:    Core\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listResource\n                    \n                    \n                        If listResource input is set, the given ListResource will be used directly and loading will be skipped. \n\n                            \n                            Type:    ListResource\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be shown while the list is loaded. \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        If true, only one item is selectable next \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        emits when the list changed (after loading) \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createList\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createList()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:57\n                            \n                        \n\n\n                \n                    \n                            The method to create the list\n\n\n                            \n                                Returns :     Promise | ResourceList\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilter(property: string, value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:114\n                            \n                        \n\n\n                \n                    \n                            This method will filter the list by a given property value and optional operator. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initFilterQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitFilterQuery(fieldFilter: (property: string,value: any) => void)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fieldFilter\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:105\n                            \n                        \n\n\n                \n                    \n                            When changing the model or the config, the list will update\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:78\n                            \n                        \n\n\n                \n                    \n                            Creates/Updates the list and subscribes Observables.  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ListConfig\n\n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:27\n                            \n                        \n\n                \n                    \n                        Overrides the Config of ResourceList with a ListConfig containing an EntryResource \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        list:     ResourceList\n\n                    \n                \n                    \n                        \n                            Type :     ResourceList\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:28\n                            \n                        \n\n                \n                    \n                        The instance of an EntryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resourceConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceConfig:     ResourceConfig\n\n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Entry List\nEntry List is a thin extension of ec-list. It handles loading entries from the datamanager and converting them to a List instance.\n\n    \n\n    \n        import { Component, Input, Optional } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SdkService } from '../sdk/sdk.service';\nimport { ModelConfigService } from '../model-config/model-config.service';\nimport { LoaderService } from '@ec.components/ui/src/loader/loader.service';\nimport { EntryList } from './entry-list';\nimport { CrudService } from '../crud/crud.service';\nimport { NotificationsService } from '@ec.components/ui/src/notifications/notifications.service';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { ListConfig } from '@ec.components/core/src/list/list-config.interface';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport { ResourceService } from '../resource-config/resource.service';\n\n/** The EntryListComponent is a thin holder of an EntryList instance. It extends the ListComponent\n * https://components.entrecode.de/data/entry-list\n*/\n@Component({\n  selector: 'ec-entry-list',\n  templateUrl: '../../../ui/src/list/list.component.html', // TODO avoid relative paths\n  styleUrls: ['./entry-list.component.scss']\n})\nexport class EntryListComponent extends ResourceListComponent {\n  /** The model whose entries should be shown.*/\n  @Input() model: string;\n  /** Overrides the Config of ResourceList with a ListConfig containing an EntryResource */\n  config: ListConfig = {};\n\n  /** The constructor will just call super of List*/\n  constructor(protected loaderService: LoaderService,\n    protected sdk: SdkService,\n    protected notificationService: NotificationsService,\n    protected modelConfig: ModelConfigService,\n    protected crud: CrudService,\n    protected symbol: SymbolService,\n    protected resourceService: ResourceService,\n    @Optional() public route: ActivatedRoute) {\n    super(loaderService, sdk, notificationService, symbol, resourceService, route);\n    /*if (route) {\n      route.params.subscribe(({ model }) => {\n        if (model) {\n          this.model = model;\n        }\n      })\n    }*/\n  }\n\n  initFilter() {\n    this.initFilterQuery((property, value) => {\n      const target = property.split('.');\n      const field = this.config.fields[target[1]];\n      if (target[0] === this.model && field) {\n        return {\n          property: target[1],\n          value: field.queryFilter ? field.queryFilter(value) : value\n        }\n      }\n    });\n  }\n\n  createList(): Promise {\n    if (!this.model) {\n      return;\n    }\n    this.crud.change({ model: this.model })\n      .subscribe((update) => {\n        this.list.load();\n      }); // TODO: remove crud service or similar\n    this.resourceService.change({ relation: this.model })\n      .subscribe((update) => {\n        this.list.load();\n      });\n    return this.modelConfig.generateConfig(this.model, (this.config || {}).fields)\n      .then((config: ListConfig) => {\n        this.config = Object.assign(this.config || {}, config);\n        this.initFilter();\n        return new EntryList(this.model, this.config, this.sdk);\n      });\n\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n        \n        \n          {{group.value}}\n        \n      \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          {{group.value}}                          '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'EntryListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/notifications/error/error.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/error/error.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                    \n                        The error that should be displayed \n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            change update \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            initial update \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            updates error message  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  */\n@Component({\n  selector: 'ec-error',\n  templateUrl: './error.component.html'\n})\n/** Displays an error thrown by the SDK. */\nexport class ErrorComponent implements OnInit, OnChanges {\n  /** The error that should be displayed */\n  @Input() error: any;\n\n  constructor(private symbol: SymbolService) {\n  }\n\n  /** initial update */\n  ngOnInit() {\n    this.update();\n  }\n  /** change update */\n  ngOnChanges() {\n    this.update();\n  }\n  /** updates error message  */\n  update() {\n    if (!this.error) {\n      return;\n    }\n    const message = this.symbol.resolve('error.' + this.error.code);\n    if (message) {\n      this.error.message = message;\n    }\n  }\n}\n\n    \n\n    \n        {{error.code}}\n{{error.dataPath}}\n{{error?.message}}\n{{error.detail}}\n\n  \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{error.code}}{{error.dataPath}}{{error?.message}}{{error.detail}}        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Field.html":{"url":"classes/Field.html","title":"class - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Field\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/field/field.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        FieldConfigProperty\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                    Optional\n                                filterable\n                            \n                            \n                                    Optional\n                                filterOperator\n                            \n                            \n                                    Optional\n                                filterPopClass\n                            \n                            \n                                    Optional\n                                form\n                            \n                            \n                                    Optional\n                                hidden\n                            \n                            \n                                    Optional\n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                input\n                            \n                            \n                                    Optional\n                                label\n                            \n                            \n                                    Optional\n                                maxItems\n                            \n                            \n                                    Optional\n                                output\n                            \n                            \n                                    Optional\n                                placeholder\n                            \n                            \n                                    Optional\n                                property\n                            \n                            \n                                    Optional\n                                required\n                            \n                            \n                                    Optional\n                                sortable\n                            \n                            \n                                    Optional\n                                type\n                            \n                            \n                                    Optional\n                                validate\n                            \n                            \n                                values\n                            \n                            \n                                    Optional\n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlaceholder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(property: string, config: FieldConfigProperty)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/field/field.ts:47\n                            \n                        \n\n                \n                    \n                            A Field is constructed by assigning the given config and the property to itself\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:35\n                            \n                        \n\n                \n                    \n                        Class string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:41\n                            \n                        \n\n                \n                    \n                        if false, the field will not be filterable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterOperator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterOperator:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:27\n                            \n                        \n\n                \n                    \n                        The operator to use for filtering: exact, search, any etc.. see ec.sdk doc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterPopClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterPopClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:29\n                            \n                        \n\n                \n                    \n                        Defines the class for the filter pop, e.g. in list header. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:31\n                            \n                        \n\n                \n                    \n                        Wether or not the field should appear in default forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hidden\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hidden:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:11\n                            \n                        \n\n                \n                    \n                        If true, the field will not be visible anywhere \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:45\n                            \n                        \n\n                \n                    \n                        Icon name that should be associated with the field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:37\n                            \n                        \n\n                \n                    \n                        id for form labels \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:19\n                            \n                        \n\n                \n                    \n                        Custom Component to display form input *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:25\n                            \n                        \n\n                \n                    \n                        Label for Inputs. Defaults to property name. If false, the label is empty. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxItems:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:43\n                            \n                        \n\n                \n                    \n                        Defines the maximum of visible item (for tags view or similar). Defaults to 10 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            output\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        output:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:21\n                            \n                        \n\n                \n                    \n                        Custom Component to display value *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            placeholder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placeholder:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:23\n                            \n                        \n\n                \n                    \n                        Placeholder in inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            property\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        property:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:9\n                            \n                        \n\n                \n                    \n                        The name of the field's property \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            required\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        required:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:7\n                            \n                        \n\n                \n                    \n                        Tells if the field is required in forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sortable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:39\n                            \n                        \n\n                \n                    \n                        if false, the field will not be sortable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:13\n                            \n                        \n\n                \n                    \n                        The field's type \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validate:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:17\n                            \n                        \n\n                \n                    \n                        Custom Validation function \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        values:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:33\n                            \n                        \n\n                \n                    \n                        Possible Values e.g. in a select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            view\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        view:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:15\n                            \n                        \n\n                \n                    \n                        The field's view \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlaceholder\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlaceholder()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns placeholder if any \n\n\n                            \n                                Returns :     string | true\n\n                            \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/field/field.ts:45\n                            \n                        \n                \n                    \n                        wildcard for custom config values \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n\n    \n        Field\nA Field represents a property of an Object, without a specific value.\nIt is used to describe a column or field of one or multiple equally structured objects.\nThe field config (see FieldConfigProperty) can contain different transformation methods, such as:\n\nresolve: This method is used to resolve the field value from the object body.\nIt runs before all other transformation methods.\ndisplay: Transforms the resolved value to a human readable output. It is used for e.g. in list cells.\ngroup: Should return a value that is suitable for grouping multiple different values together, like in a list.\n\nExample Usage:\nconst field = new Field('name', {\n    resolve: (body) => body.value.name,\n    display: (value) => value.toUpperCase(),\n    group: (value) => value.length + ' Buchstaben',\n    sort: (value) => value.length\n    });\nconst name = field.resolve({value:{name:'bobby'}}); // 'bobby'\nfield.display(name); // => 'Bobby'\nfield.group(name); // => '5 Buchstaben'\nfield.sort(name); // => 5The above example is of course only viable to show the concept.\nWhen using the components as a whole, those methods will be called automatically from Item, List or Form.\n\n    \n\n    \n        import { FieldConfigProperty } from '../config/field-config-property.interface';\n\nexport class Field implements FieldConfigProperty {\n  /** Tells if the field is required in forms */\n  required?: boolean;\n  /** The name of the field's property */\n  property?: string;\n  /** If true, the field will not be visible anywhere */\n  hidden?: boolean;\n  /** The field's type */\n  type?: string;\n  /** The field's view */\n  view?: string;\n  /** Custom Validation function */\n  validate?: (value, field) => any;\n  /** Custom Component to display form input **/\n  input?: any;\n  /** Custom Component to display value **/\n  output?: any;\n  /** Placeholder in inputs */\n  placeholder?: string;\n  /** Label for Inputs. Defaults to property name. If false, the label is empty. */\n  label?: string | boolean;\n  /** The operator to use for filtering: exact, search, any etc.. see ec.sdk doc */\n  filterOperator?: string;\n  /** Defines the class for the filter pop, e.g. in list header. */\n  filterPopClass?: string;\n  /** Wether or not the field should appear in default forms */\n  form?: boolean;\n  /** Possible Values e.g. in a select */\n  values: any[] = [];\n  /** Class string */\n  class = '';\n  /** id for form labels */\n  id: string;\n  /** if false, the field will not be sortable in a list */\n  sortable?: boolean;\n  /** if false, the field will not be filterable in a list */\n  filterable?: boolean;\n  /** Defines the maximum of visible item (for tags view or similar). Defaults to 10 */\n  maxItems?: number;\n  /** Icon name that should be associated with the field */\n  icon?: string;\n  /** wildcard for custom config values */\n  [key: string]: any;\n\n  /** A Field is constructed by assigning the given config and the property to itself*/\n  constructor(property: string, config: FieldConfigProperty) {\n    if (config) {\n      Object.assign(this, config);\n    }\n    Object.assign(this, { property: property });\n    this.id = `${this.property}_${Date.now()}`;\n  }\n\n  /** Returns placeholder if any */\n  getPlaceholder() {\n    return this.placeholder || this.label || this.property;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldConfig.html":{"url":"interfaces/FieldConfig.html","title":"interface - FieldConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FieldConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/config/field-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for list fields.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    FieldConfigProperty\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/config/field-config.interface.ts:4\n                            \n                        \n                \n                    \n                        Each field can be configured in the form of FieldConfigProperty. \n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        export interface FieldConfig {\n  /** Each field can be configured in the form of FieldConfigProperty. */\n  [key: string]: FieldConfigProperty\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileOptions.html":{"url":"interfaces/FileOptions.html","title":"interface - FileOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for file options used by new assets \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customNames\n                                \n                                \n                                            Optional\n                                        fieldName\n                                \n                                \n                                            Optional\n                                        ignoreDuplicates\n                                \n                                \n                                            Optional\n                                        includeAssetIDInPath\n                                \n                                \n                                            Optional\n                                        preserveFilenames\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customNames\n                                    \n                                \n                                \n                                    \n                                        customNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional custom names for assets. Mapped by indices to assets. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                    \n                                \n                                \n                                    \n                                        fieldName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom file form fieldName \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreDuplicates\n                                    \n                                \n                                \n                                    \n                                        ignoreDuplicates:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Ignores duplicates \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includeAssetIDInPath\n                                    \n                                \n                                \n                                    \n                                        includeAssetIDInPath:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Includes assetID in path \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preserveFilenames\n                                    \n                                \n                                \n                                    \n                                        preserveFilenames:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Preserves Filenames \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport { SdkService } from '../sdk/sdk.service';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport moment from 'moment-es6';\nimport { Item } from '@ec.components/core/src/item/item';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource,\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[],\n  /** The uploaded asset as item */\n  item?: Item\n  /** The uploaded asset as item */\n  items?: Array>\n  /** The list where it happened. */\n  list?: ResourceList,\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  customNames?: string[]\n  /** Custom file form fieldName */\n  fieldName?: string\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n\n  public newAssetListConfig = { // TODO: dont use\n    label: 'title',\n    identifier: 'assetID',\n    fields: {\n      title: {\n        label: 'Titel',\n        sortable: true,\n        filterable: true,\n        type: 'text',\n        view: 'string',\n      },\n    }\n  }\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig) {\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset) {\n    if (Array.isArray(asset)) {\n      return asset.length ? this.isNewAsset(asset[0]) : false;\n    }\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(asset.assetID)\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n    const files = e.target.files || e.dataTransfer.files;\n    if (!files.length) {\n      return;\n    }\n    return api.createDMAssets(assetGroupID, this.getFormData(files, options))\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.newAssetListConfig),\n          items: assets.map(asset => new Item(asset, this.newAssetListConfig))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(e): Promise {\n    const files = e.target.files || e.dataTransfer.files;\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve().then((): Promise Promise> => {\n      if (files.length === 1) {\n        return this.sdk.api.createAsset(data, {})\n      }\n      return this.sdk.api.createAssets(data, {})\n    })\n      .then(res => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      }).then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('legacyAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(assets: Array): Promise> {\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (unresolved.length === 1) {\n      unresolved.push(unresolved[0]); // :) TODO remove when backend bug is fixed\n    }\n    return this.sdk.api.assetList({ assetID: { any: unresolved } })\n      .then((assetList) => {\n        const resolved = assetList.getAllItems();\n        return assets.map((asset) =>\n          typeof asset === 'string' ?\n            resolved.find((resource) => resource.assetID === asset) : asset)\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                newAssetListConfig\n                            \n                            \n                                    Public\n                                uploads\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormData\n                            \n                            \n                                    Public\n                                isNewAsset\n                            \n                            \n                                    Public\n                                resolveAssets\n                            \n                            \n                                    Public\n                                uploadAssets\n                            \n                            \n                                    Public\n                                uploadFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, typeConfig: TypeConfigService, resourceService: ResourceService, resourceConfig: ResourceConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/file.service.ts:63\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                    TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormData(files: FileList, options?: FileOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:81\n                            \n                        \n\n\n                \n                    \n                            Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    FileOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormData\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isNewAsset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isNewAsset(asset: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:73\n                            \n                        \n\n\n                \n                    \n                            returns true if the given asset is a new one (DMAssetResource) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        asset\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolveAssets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolveAssets(assets: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:157\n                            \n                        \n\n\n                \n                    \n                            Resolves all assetIDs to PublicAssetResources \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        assets\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploadAssets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        uploadAssets(e: , assetGroupID: , options: FileOptions, api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            Upload New Assets \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        assetGroupID\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    FileOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploadFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        uploadFiles(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:123\n                            \n                        \n\n\n                \n                    \n                            Upload old assets \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newAssetListConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newAssetListConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : { // TODO: dont use\n    label: 'title',\n    identifier: 'assetID',\n    fields: {\n      title: {\n        label: 'Titel',\n        sortable: true,\n        filterable: true,\n        type: 'text',\n        view: 'string',\n      },\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploads\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uploads:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:49\n                            \n                        \n\n                \n                    \n                        The changes event is emitted everytime an entry is created or updated. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport { SdkService } from '../sdk/sdk.service';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport moment from 'moment-es6';\nimport { Item } from '@ec.components/core/src/item/item';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource,\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[],\n  /** The uploaded asset as item */\n  item?: Item\n  /** The uploaded asset as item */\n  items?: Array>\n  /** The list where it happened. */\n  list?: ResourceList,\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  customNames?: string[]\n  /** Custom file form fieldName */\n  fieldName?: string\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n\n  public newAssetListConfig = { // TODO: dont use\n    label: 'title',\n    identifier: 'assetID',\n    fields: {\n      title: {\n        label: 'Titel',\n        sortable: true,\n        filterable: true,\n        type: 'text',\n        view: 'string',\n      },\n    }\n  }\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig) {\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset) {\n    if (Array.isArray(asset)) {\n      return asset.length ? this.isNewAsset(asset[0]) : false;\n    }\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(asset.assetID)\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n    const files = e.target.files || e.dataTransfer.files;\n    if (!files.length) {\n      return;\n    }\n    return api.createDMAssets(assetGroupID, this.getFormData(files, options))\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.newAssetListConfig),\n          items: assets.map(asset => new Item(asset, this.newAssetListConfig))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(e): Promise {\n    const files = e.target.files || e.dataTransfer.files;\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve().then((): Promise Promise> => {\n      if (files.length === 1) {\n        return this.sdk.api.createAsset(data, {})\n      }\n      return this.sdk.api.createAssets(data, {})\n    })\n      .then(res => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      }).then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('legacyAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(assets: Array): Promise> {\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (unresolved.length === 1) {\n      unresolved.push(unresolved[0]); // :) TODO remove when backend bug is fixed\n    }\n    return this.sdk.api.assetList({ assetID: { any: unresolved } })\n      .then((assetList) => {\n        const resolved = assetList.getAllItems();\n        return assets.map((asset) =>\n          typeof asset === 'string' ?\n            resolved.find((resource) => resource.assetID === asset) : asset)\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n  Modules\n  FilesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nAssetDirective\n\nAssetDirective\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\n\n\nResourceModule\n\nResourceModule\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/files/files.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AssetDirective\n                            \n                            \n                                AssetListPopComponent\n                            \n                            \n                                AssetSelectComponent\n                            \n                            \n                                DropzoneDirective\n                            \n                            \n                                ImageDirective\n                            \n                            \n                                UploadComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AssetSelectComponent\n                            \n                            \n                                UploadComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     FileService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ResourceModule\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AssetDirective\n                            \n                            \n                                    AssetListPopComponent\n                            \n                            \n                                    AssetSelectComponent\n                            \n                            \n                                    DropzoneDirective\n                            \n                            \n                                    ImageDirective\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UploadComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { UiModule } from '@ec.components/ui/src/ui.module';\nimport { AssetSelectComponent } from './asset-select/asset-select.component';\nimport { FileService } from './file.service';\nimport { UploadComponent } from './upload/upload.component';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { AssetDirective } from './asset/asset.directive';\nimport { ImageDirective } from './image/image.directive';\nimport { AssetListPopComponent } from './asset-list-pop/asset-list-pop.component';\nimport { ResourceModule } from '../resource/resource.module';\nimport { DropzoneDirective } from './dropzone/dropzone.directive';\n\n@NgModule({\n  entryComponents: [\n    AssetSelectComponent,\n    UploadComponent,\n  ],\n  declarations: [\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    SdkModule,\n    ResourceModule\n  ],\n  exports: [\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n    SdkModule,\n  ],\n  providers: [\n    FileService\n  ],\n})\nexport class FilesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormConfig.html":{"url":"interfaces/FormConfig.html","title":"interface - FormConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FormConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/form/form-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                FormConfig is an extension of ItemConfig. \n\n            \n\n            \n                Extends\n            \n            \n                    ItemConfig\n            \n\n\n\n\n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\n\n/** FormConfig is an extension of ItemConfig. */\nexport interface FormConfig extends ItemConfig {\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n  Modules\n  FormModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nCalendarComponent->FormModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nFormModule -->\n\nDaterangeComponent->FormModule\n\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nFormModule -->\n\nDatetimePipe->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nFormModule -->\n\nHeatmapComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nFormModule -->\n\nMonthComponent->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nFormModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nFormModule->DaterangeComponent \n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nFormModule->DatetimePipe \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nFormModule->HeatmapComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nFormModule->MonthComponent \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nIconModule\n\nIconModule\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/form.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CalendarComponent\n                            \n                            \n                                DaterangeComponent\n                            \n                            \n                                DatetimeComponent\n                            \n                            \n                                DatetimePipe\n                            \n                            \n                                DefaultInputComponent\n                            \n                            \n                                DefaultOutputComponent\n                            \n                            \n                                FormComponent\n                            \n                            \n                                HeatmapComponent\n                            \n                            \n                                MaxItemsPipe\n                            \n                            \n                                MonthComponent\n                            \n                            \n                                ToggleComponent\n                            \n                            \n                                VisibleFieldsPipe\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                DefaultInputComponent\n                            \n                            \n                                DefaultOutputComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     FormService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IconModule\n                            \n                            \n                                    IoModule\n                            \n                            \n                                    LoaderModule\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    SymbolModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CalendarComponent\n                            \n                            \n                                    DaterangeComponent\n                            \n                            \n                                    DatetimeComponent\n                            \n                            \n                                    DatetimePipe\n                            \n                            \n                                    FormComponent\n                            \n                            \n                                    HeatmapComponent\n                            \n                            \n                                    IoModule\n                            \n                            \n                                    MaxItemsPipe\n                            \n                            \n                                    MonthComponent\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    ToggleComponent\n                            \n                            \n                                    VisibleFieldsPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormComponent } from './form.component';\nimport { DefaultInputComponent } from './default-input/default-input.component';\nimport { DefaultOutputComponent } from './default-output/default-output.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PopModule } from '../pop/pop.module';\nimport { FormService } from './form.service';\nimport { VisibleFieldsPipe } from './visible-fields.pipe';\nimport { IoModule } from '../io/io.module';\nimport { DatetimeComponent } from './datetime/datetime.component';\nimport { MonthComponent } from './datetime/month.component';\nimport { DatetimePipe } from './datetime/datetime.pipe';\nimport { ToggleComponent } from './toggle/toggle.component';\nimport { CalendarComponent } from './datetime/calendar.component';\nimport { LoaderModule } from '../loader/loader.module';\nimport { IconModule } from '../icon/icon.module';\nimport { MaxItemsPipe } from './max-items.pipe';\nimport { SymbolModule } from '../symbol/symbol.module';\nimport { HeatmapComponent } from './datetime/heatmap.component';\nimport { DaterangeComponent } from './datetime/daterange.component';\n\n@NgModule({\n  entryComponents: [\n    DefaultInputComponent,\n    DefaultOutputComponent,\n  ],\n  declarations: [\n    FormComponent,\n    DefaultInputComponent,\n    DefaultOutputComponent,\n    DatetimeComponent,\n    DatetimePipe,\n    MonthComponent,\n    HeatmapComponent,\n    DaterangeComponent,\n    CalendarComponent,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    ToggleComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    PopModule,\n    IoModule,\n    LoaderModule,\n    IconModule,\n    SymbolModule\n  ],\n  exports: [\n    FormComponent,\n    ReactiveFormsModule,\n    DatetimeComponent,\n    DatetimePipe,\n    CalendarComponent,\n    HeatmapComponent,\n    DaterangeComponent,\n    MonthComponent,\n    PopModule,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    IoModule,\n    ToggleComponent,\n  ],\n  providers: [\n    FormService\n  ]\n})\nexport class FormModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/form/form.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the interface between Angular Forms and ec.components core classes. \n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addField\n                            \n                            \n                                    Public\n                                getGroup\n                            \n                            \n                                getValidators\n                            \n                            \n                                validateFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addField\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addField(field: Field, form: Form, group: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            adds a new field to a form. handles form group and control \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        group\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroup(form: Form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Initializes the form group from the form fields\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValidators\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValidators(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Extracts all validators from a given Field instance. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidatorFn[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateFactory(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Returns a Validation function from the given field (using field.validate) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidationErrors | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Form } from '@ec.components/core/src/form/form';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators\n} from '@angular/forms';\nimport { Field } from '@ec.components/core/src/field/field';\n\n/** This service is the interface between Angular Forms and ec.components core classes. */\n@Injectable()\nexport class FormService {\n\n  /** Initializes the form group from the form fields*/\n  public getGroup(form: Form) {\n    const control = {};\n    form.fields.filter((field) => field.form !== false)\n      .forEach((field) => {\n        const validators = this.getValidators(field);\n        control[field.property] = new FormControl(form.getValue(field.property), validators)\n        // TODO use { updateOn: blur } when updating to angular 5.0.0\n        // see https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4\n      });\n    return new FormGroup(control);\n  }\n\n  /** adds a new field to a form. handles form group and control */\n  public addField(field: Field, form: Form, group: FormGroup) {\n    const validators = this.getValidators(field);\n    const control = new FormControl(form.getValue(field.property), validators);\n    group.addControl(field.property, control);\n  }\n\n  /** Extracts all validators from a given Field instance. */\n  getValidators(field: Field): ValidatorFn[] {\n    const validators = [];\n    if (field.required) {\n      validators.push(Validators.required);\n    }\n    if (field.validate) {\n      validators.push(this.validateFactory(field));\n    }\n    return validators;\n  }\n\n  /** Returns a Validation function from the given field (using field.validate) */\n  validateFactory(field: Field): ValidationErrors | null {\n    return (control: AbstractControl) => {\n      if (!field.validate) {\n        return;\n      }\n      const error = field.validate(control.value, field);\n      if (error) {\n        return {\n          custom: error\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocodeService.html":{"url":"injectables/GeocodeService.html","title":"injectable - GeocodeService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GeocodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/location/src/geocode.service.ts\n        \n\n            \n                Description\n            \n            \n                Wraps google maps api to handle geocode operations \n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                autocompleteAddress\n                            \n                            \n                                geocodeLatLng\n                            \n                            \n                                    Public\n                                getNearestAddress\n                            \n                            \n                                    Public\n                                observeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapLoader: MapsAPILoader, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/geocode.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapLoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autocompleteAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        autocompleteAddress(el: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Turns an input element to an maps autocomplete searchbar. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocodeLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \ngeocodeLatLng(geocoder: , location: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Reverse address lookup for a given location \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocoder\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        location\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNearestAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNearestAddress(location: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Returns the nearest address for a given location \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            observeElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        observeElement(el: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Observes a given input element, transforming it into an autocomplete \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { MapsAPILoader } from '@agm/core';\nimport { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { switchMap } from 'rxjs/operators';\n\n/** declares google namespace */\ndeclare var google: any;\n\n/** Wraps google maps api to handle geocode operations */\n@Injectable()\nexport class GeocodeService {\n\n    constructor(private mapLoader: MapsAPILoader,\n        private ngZone: NgZone) { }\n\n    /** Observes a given input element, transforming it into an autocomplete */\n    public observeElement(el) {\n        return new Observable(observer => {\n            const autocomplete = new google.maps.places.Autocomplete(el, {\n                types: ['address']\n            });\n            autocomplete.addListener('place_changed', () => {\n                this.ngZone.run(() => {\n                    // get the place result\n                    const place = autocomplete.getPlace();\n                    // verify result\n                    if (place.geometry === undefined || place.geometry === null) {\n                        return;\n                    }\n                    const coords = {\n                        latitude: place.geometry.location.lat(),\n                        longitude: place.geometry.location.lng()\n                    }\n                    observer.next(coords);\n                    /* observer.complete(); */\n                });\n            });\n        });\n    }\n\n    /** Turns an input element to an maps autocomplete searchbar. */\n    public autocompleteAddress(el): Observable {\n        return fromPromise(this.mapLoader.load())\n            .pipe(switchMap(() => this.observeElement(el)));\n    }\n\n    /** Reverse address lookup for a given location */\n    geocodeLatLng(geocoder, location): Promise {\n        return new Promise((resolve, reject) => {\n            geocoder.geocode({ location }, (results, status) => {\n                if (status === 'OK') {\n                    resolve(results);\n                } else {\n                    reject(status);\n                }\n            });\n        });\n    }\n\n    /** Returns the nearest address for a given location */\n    public getNearestAddress(location: { latitude: number, longitude: number }): Promise> {\n        return this.mapLoader.load().then(() => {\n            return this.geocodeLatLng(\n                new google.maps.Geocoder, {\n                    lat: location.latitude,\n                    lng: location.longitude\n                }\n            );\n        })\n    }\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GroupPipe.html":{"url":"pipes/GroupPipe.html","title":"pipe - GroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  GroupPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/list/group.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        group\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: Array>, property: string, value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/group.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Item } from '@ec.components/core';\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'group'\n})\nexport class GroupPipe implements PipeTransform {\n  transform(items: Array>, property: string, value: any): any {\n    if (!property) {\n      return items;\n    }\n    return items.filter((item) => {\n      return item.group(property) === value;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryService.html":{"url":"injectables/HistoryService.html","title":"injectable - HistoryService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/sdk/history.service.ts\n        \n\n            \n                Description\n            \n            \n                The HistoryService keeps track of live updates for models entries and datamanagers. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                eventSources\n                            \n                            \n                                    Public\n                                loaderService\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                promises\n                            \n                            \n                                    Public\n                                resourceService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disableUpdates\n                            \n                            \n                                enableUpdates\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService, loaderService: LoaderService, router: Router, resourceService: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/sdk/history.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableUpdates\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisableUpdates(key: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Closes the event stream for the given key \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableUpdates\n                            \n                            \n                        \n                    \n                \n                \n                    \nenableUpdates(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Enables Updates for the given resource. The relation is passed through the Update instances on change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    ModelResource | DataManagerResource | EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            Toggles live updates on the resource and stores them under the given key. The relation is passed through the Update instances on change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    ModelResource | DataManagerResource | EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eventSources\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eventSources:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:16\n                            \n                        \n\n                \n                    \n                        EventSources that are active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaderService:     LoaderService\n\n                    \n                \n                    \n                        \n                            Type :     LoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promises\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promises:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:14\n                            \n                        \n\n                \n                    \n                        Current loaded histories \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceService:     ResourceService\n\n                    \n                \n                    \n                        \n                            Type :     ResourceService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Resource } from 'halfred';\nimport ModelResource from 'ec.sdk/lib/resources/datamanager/ModelResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { ResourceService } from '@ec.components/data/src/resource-config/resource.service';\nimport { NotificationsService, LoaderService } from '@ec.components/ui';\nimport { Router } from '@angular/router';\n\n/** The HistoryService keeps track of live updates for models entries and datamanagers. */\n@Injectable()\nexport class HistoryService {\n    /** Current loaded histories */\n    promises: { [relation: string]: Promise } = {};\n    /** EventSources that are active */\n    eventSources: { [relation: string]: any } = {}; // EventSource[]\n\n    constructor(\n        public notificationService: NotificationsService,\n        public loaderService: LoaderService,\n        public router: Router,\n        public resourceService: ResourceService) { }\n    /** Toggles live updates on the resource and stores them under the given key. The relation is passed through the Update instances on change. */\n    toggle(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key = this.router.url.split('?')[0]) {\n        if (this.promises[key] && !this.eventSources[relation]) {\n            return this.promises[key];\n        }\n        this.disableUpdates(key);\n        this.promises[key] = this.enableUpdates(resource, relation, key)\n            .then(source => {\n                this.eventSources[key] = source;\n            })\n            .catch(error => {\n                delete this.promises[key];\n            });\n        this.loaderService.wait(this.promises[key]);\n    }\n\n    /** Closes the event stream for the given key */\n    disableUpdates(key = this.router.url.split('?')[0]) {\n        if (this.eventSources[key]) {\n            this.eventSources[key].close();\n            delete this.promises[key];\n            delete this.eventSources[key];\n            return;\n        }\n    }\n\n    /** Enables Updates for the given resource. The relation is passed through the Update instances on change. */\n    enableUpdates(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key = this.router.url.split('?')[0]) {\n        if (!resource || !resource.newHistory) {\n            throw new Error('cannot get history: no newHistory method found on given resource');\n        }\n        if (this.promises[key]) {\n            return this.promises[key];\n        }\n        const loading = resource.newHistory()\n            .then(source => {\n                source.addEventListener('entryUpdated', (e) => {\n                    const data = JSON.parse(e.data);\n                    this.resourceService.changes.next({\n                        relation,\n                        type: 'put',\n                        identifier: data ? data.entryID : ''\n                    });\n                }, false);\n                source.addEventListener('entryCreated', (e) => {\n                    const data = JSON.parse(e.data);\n                    this.resourceService.changes.next({\n                        relation,\n                        type: 'post',\n                        identifier: data ? data.entryID : ''\n                    });\n                }, false);\n                return source;\n            })\n            .catch(error => {\n                this.notificationService.emit({\n                    title: 'History Error',\n                    error\n                });\n            });\n        this.loaderService.wait(loading);\n        return loading;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/icon/icon.component.ts\n\n\n    \n        Description\n    \n    \n        Displays icons by name. If the matching Icon (from registry contains a content, the content is shown. If not, is is expected to be a ec-icon. \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-icon\n            \n\n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(iconService: IconService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/icon/icon.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iconService\n                                                  \n                                                        \n                                                                    IconService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of the icon. An Icon with this name is expected to be present in the current iconService registry. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.component.ts:19\n                            \n                        \n\n\n                \n                    \n                            The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     Symbol\n\n                    \n                \n                    \n                        \n                            Type :     Symbol\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.component.ts:15\n                            \n                        \n\n                \n                    \n                        The resolved icon (by name) \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Icon\nDisplays an icon:\nThe default icon set uses ec-icons. You have to embedd them to your index.html (or similar):\n  Using another icon set\nYou can also use other icons:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.use(emojiIcons);\n    }\n}Overriding icons\nYou can also override the current icon registry:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.set(emojiIcons);\n    }\n}This will override the icon registry with the given icons, but keep the rest.\n\n    \n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { IconService } from './icon.service';\nimport { Symbol } from '../symbol/symbol.interface';\n\n/** Displays icons by name. If the matching Icon (from registry contains a content, the content is shown. If not, is is expected to be a ec-icon. */\n@Component({\n    selector: 'ec-icon',\n    templateUrl: './icon.component.html'\n})\n\nexport class IconComponent implements OnInit {\n    /** The name of the icon. An Icon with this name is expected to be present in the current iconService registry. */\n    @Input() name: string;\n    /** The resolved icon (by name) */\n    icon: Symbol;\n    constructor(private iconService: IconService) {\n    }\n    /** The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. */\n    ngOnInit() {\n        this.icon = this.iconService.get(this.name);\n        if (!this.icon) {\n            console.warn(`Icon ${this.name} cannot be found. Using the following icon registry:`, this.iconService.registry);\n        }\n    }\n}\n\n    \n\n    \n        \n{{icon.content}}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{icon.content}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IconModule.html":{"url":"modules/IconModule.html","title":"module - IconModule","body":"\n                   \n\n\n\n\n  Modules\n  IconModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\n\nIconComponent\n\nIconComponent\n\n\n\nIconModule\n\nIconModule\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/icon/icon.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                IconComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     IconService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    IconComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IconComponent } from './icon.component';\nimport { IconService } from './icon.service';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [IconComponent],\n    exports: [IconComponent],\n    providers: [IconService],\n})\nexport class IconModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconService.html":{"url":"injectables/IconService.html","title":"injectable - IconService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  IconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/icon/icon.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons) \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registry\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registry:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : ecIcons\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.service.ts:9\n                            \n                        \n\n                \n                    \n                        The current icon set that is registered to the service. It will be used to resolve icons from. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ecIcons } from './ec-icons';\nimport { Symbol } from '../symbol/symbol.interface';\nimport { SymbolService } from '../symbol/symbol.service';\n/** Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons) */\n@Injectable()\nexport class IconService extends SymbolService {\n    /** The current icon set that is registered to the service. It will be used to resolve icons from. */\n    public registry: Symbol[] = ecIcons;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ImageDirective.html":{"url":"directives/ImageDirective.html","title":"directive - ImageDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ImageDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/image/image.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. \n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        img [ecImage]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                setUrl\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecImage\n                            \n                            \n                                size\n                            \n                            \n                                thumb\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/image/image.directive.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ecImage\n                    \n                    \n                        The assetID that should be loaded \n\n                            \n                            Type:    string | DMAssetResource\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        The size that should be requested. \n\n                        \n                            Default value: 200\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thumb\n                    \n                    \n                        If true, the image will be requested as thumb (square) \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:15\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:40\n                            \n                        \n\n\n                \n                    \n                            Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:28\n                            \n                        \n\n\n                \n                    \n                            Reads ecImage input as assetId and loads if autoload is not false \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(asset: PublicAssetResource | DMAssetResource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        asset\n                                                        \n                                                                    PublicAssetResource | DMAssetResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:21\n                            \n                        \n\n                \n                    \n                        Resolved asset url. \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        ecImage\nThis directive can be used to load an image:\n\nID: {{myImage.asset?.assetID}}\n    \n\n    \n        import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { AssetDirective } from '../asset/asset.directive';\nimport { SdkService } from '../../sdk/sdk.service';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\n\n/** Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. */\n@Directive({\n  selector: 'img [ecImage]',\n  exportAs: 'ecImage'\n})\nexport class ImageDirective extends AssetDirective implements OnChanges {\n  /** If true, the image will be requested as thumb (square) */\n  @Input() thumb: boolean;\n  /** The size that should be requested. */\n  @Input() size = 200;\n  /** The assetID that should be loaded */\n  @Input() ecImage: string | DMAssetResource;\n  /** Resolved asset url. */\n  url: string;\n\n  constructor(public sdk: SdkService, private elementRef: ElementRef) {\n    super(sdk);\n  }\n\n  /** Reads ecImage input as assetId and loads if autoload is not false */\n  ngOnChanges() {\n    if (typeof this.ecImage === 'string') {\n      this.assetId = this.ecImage;\n    } else if (this.ecImage && this.ecImage.assetID) {\n      this.use(this.ecImage);\n    }\n    if (this.autoload !== false && this.assetId) {\n      this.load();\n    }\n  }\n\n  /** Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) */\n  load(id?: string) {\n    return super.load(id).then(this.use.bind(this));\n  }\n\n  use(asset: PublicAssetResource | DMAssetResource) {\n    return Promise.resolve().then(() => {\n      if (asset.type !== 'image') {\n        return Promise.reject(`ecImage only works for assets of type image.\n        Loaded id ${asset.id} is of type ${asset.type}`);\n      }\n      if (asset instanceof DMAssetResource) { // new asset\n        return asset.getFileVariant(this.size, this.thumb);\n      } else if (asset instanceof PublicAssetResource) { // old asset\n        if (this.thumb) {\n          return asset.getImageThumbUrl(this.size, '');\n        }\n        return asset.getImageUrl(this.size, '');\n      }\n    }).then(this.setUrl.bind(this));\n  }\n\n  setUrl(url: string) {\n    this.url = url;\n    this.elementRef.nativeElement.src = this.url;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/input/input.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n    \n        Extends\n    \n    \n            DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-input\n            \n\n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentInstance\n                            \n                            \n                                propagateChange\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                control\n                            \n                            \n                                debounce\n                            \n                            \n                                field\n                            \n                            \n                                group\n                            \n                            \n                                item\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        component\n                    \n                    \n                        Overrides the default component \n\n                            \n                            Type:    Type\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                    \n                        The belonging form control. This is not required if you pass in a field and group. \n\n                            \n                            Type:    FormControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                    \n                        Debounce time in ms before the changed event emits. \n\n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        The instance of field that should be used in the template, can also be a property name. \n\n                            \n                            Type:    Field\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        group\n                    \n                    \n                        The belonging form group \n\n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                        The belonging item \n\n                            \n                            Type:    Item\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        property\n                    \n                    \n                        The property name that is edited. Expects a form as item input \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        The changed ouput emits whenever the form control of the input changes. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, data: Object)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentInstance:     Component\n\n                    \n                \n                    \n                        \n                            Type :     Component\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:40\n                            \n                        \n\n                \n                    \n                        Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\nYou can access a form's InputComponents via FormComponent#inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldHost:     SlotHostDirective\n\n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, OnChanges, Type, ComponentRef, forwardRef } from '@angular/core';\n\nimport { FormControl, FormGroup, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\nimport { DefaultInputComponent } from '../../form/default-input/default-input.component';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core/src/item/item';\nimport { Form } from '@ec.components/core/src/form/form';\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-input',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputComponent extends DynamicSlotComponent implements ControlValueAccessor, OnChanges {\n  /** The belonging form group */\n  @Input() group: FormGroup;\n  /** The belonging form control. This is not required if you pass in a field and group. */\n  @Input() control: FormControl;\n  /** The changed ouput emits whenever the form control of the input changes. */\n  @Output() changed = new EventEmitter();\n  /** Debounce time in ms before the changed event emits. */\n  @Input() debounce = 0;\n  /** The instance of field that should be used in the template, can also be a property name. */\n  @Input() field: Field;\n  /** The property name that is edited. Expects a form as item input */\n  @Input() property: string;\n  /** The belonging item */\n  @Input() item: Item;\n  /** Overrides the default component */\n  @Input() component: Type;\n  /** Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\n   * You can access a form's InputComponents via FormComponent#inputs */\n  componentInstance: Component\n\n  ngOnChanges() {\n    if (this.property && this.item instanceof Form) {\n      this.field = this.item.getField(this.property);\n    }\n    if (!this.field) {\n      return;\n    }\n    const data = {\n      group: this.group,\n      control: this.control || this.group ? this.group.get(this.field.property) : null,\n      item: this.item,\n      field: this.field,\n      input: this\n    };\n\n    const componentRef = this.loadComponent(this.component || this.field.input || DefaultInputComponent, data);\n    this.componentInstance = componentRef.instance;\n    if (componentRef.instance.control) {\n      componentRef.instance.control.valueChanges\n        .debounceTime(this.debounce)\n        .subscribe((change) => {\n          this.changed.emit(change);\n          this.propagateChange(change);\n        });\n    }\n    if (this.field && typeof this.field.init === 'function') {\n      this.field.init(this.componentInstance, this);\n    }\n  }\n\n  /** writes value to editor on outside model change. */\n  writeValue(value: any) {\n    if (this.componentInstance && this.componentInstance['writeValue']) {\n      this.componentInstance['writeValue'](value); // TODO: this is pretty hacky\n    }\n  }\n\n  propagateChange = (_: any) => {\n  };\n\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputErrorsComponent.html":{"url":"components/InputErrorsComponent.html","title":"component - InputErrorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputErrorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/input-errors/input-errors.component.ts\n\n\n    \n        Description\n    \n    \n        This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-input-errors\n            \n\n            \n                styleUrls\n                input-errors.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input-errors.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/input-errors/input-errors.component.ts:13\n                            \n                        \n\n                \n                    \n                            Imported error messages. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                    \n                        The form control that should be tracked \n\n                            \n                            Type:    FormControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input-errors/input-errors.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getErrors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getErrors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input-errors/input-errors.component.ts:19\n                            \n                        \n\n\n                \n                    \n                            This method will iterate over the control errors and generate objects for the template. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/input-errors/input-errors.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SymbolService } from '../../symbol/symbol.service';\n\n/** This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. */\n@Component({\n  selector: 'ec-input-errors',\n  templateUrl: './input-errors.component.html',\n  styleUrls: ['./input-errors.component.scss']\n})\nexport class InputErrorsComponent {\n  /** The form control that should be tracked */\n  @Input() control: FormControl;\n  /** Imported error messages. */\n  constructor(public symbol: SymbolService) {\n  }\n\n  /** This method will iterate over the control errors and generate objects for the template. */\n  private getErrors() {\n    return Object.keys(this.control.errors).reduce((errs, key) => {\n      let message;\n      if (key === 'custom') {\n        message = this.control.errors[key];\n      } else {\n        message = this.symbol.resolve('error.input.' + key) || this.symbol.resolve('error.input.invalid');\n      }\n      errs.push({\n        key: key,\n        error: this.control.errors[key],\n        message\n      });\n      return errs;\n    }, []);\n  }\n\n}\n\n    \n\n    \n        \n  {{error.message}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{error.message}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputErrorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IoModule.html":{"url":"modules/IoModule.html","title":"module - IoModule","body":"\n                   \n\n\n\n\n  Modules\n  IoModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\n\n\nIoModule\n\nIoModule\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/io/io.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DynamicRackComponent\n                            \n                            \n                                DynamicSlotComponent\n                            \n                            \n                                InputComponent\n                            \n                            \n                                InputErrorsComponent\n                            \n                            \n                                OutputComponent\n                            \n                            \n                                SlotHostDirective\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                DefaultInputComponent\n                            \n                            \n                                DefaultOutputComponent\n                            \n                            \n                                InputComponent\n                            \n                            \n                                InputErrorsComponent\n                            \n                            \n                                OutputComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DynamicRackComponent\n                            \n                            \n                                    DynamicSlotComponent\n                            \n                            \n                                    InputComponent\n                            \n                            \n                                    InputErrorsComponent\n                            \n                            \n                                    OutputComponent\n                            \n                            \n                                    SlotHostDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DynamicSlotComponent } from './dynamic-slot/dynamic-slot.component';\nimport { SlotHostDirective } from './slot-host.directive';\nimport { DefaultInputComponent } from '../form/default-input/default-input.component';\nimport { DefaultOutputComponent } from '../form/default-output/default-output.component';\nimport { OutputComponent } from './output/output.component';\nimport { InputComponent } from './input/input.component';\nimport { InputErrorsComponent } from './input-errors/input-errors.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DynamicRackComponent } from './dynamic-rack/dynamic-rack.component';\n\n@NgModule({\n  entryComponents: [\n    DefaultInputComponent,\n    DefaultOutputComponent,\n    InputComponent,\n    OutputComponent,\n    InputErrorsComponent,\n  ],\n  declarations: [\n    InputErrorsComponent,\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n    InputErrorsComponent,\n    ReactiveFormsModule,\n  ],\n  providers: []\n})\nexport class IoModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemConfig.html":{"url":"interfaces/ItemConfig.html","title":"interface - ItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/item/item-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                An ItemConfig describes an abstract entity with certain properties.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                                \n                                            Optional\n                                        identifier\n                                \n                                \n                                            Optional\n                                        identifierPattern\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        onSave\n                                \n                                \n                                            Optional\n                                        parent\n                                \n                                \n                                            Optional\n                                        resolve\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Items field Config \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to identify items from another (e.g. in a selection). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifierPattern\n                                    \n                                \n                                \n                                    \n                                        identifierPattern:     RegExp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RegExp\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Pattern of the identifier field. Is used e.g. in the searchbar \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to display the item for humans \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSave\n                                    \n                                \n                                \n                                    \n                                        onSave:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Callback that is invoked when the item is saved \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolve\n                                    \n                                \n                                \n                                    \n                                        resolve:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom resolve path function. It can be used e.g. to access subbranches of an Object. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For primitive values only: the title for the item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of the Item. It determines how it will be displayed in different contexts \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Item } from './item';\nimport { FieldConfigProperty } from '../config/field-config-property.interface';\nimport { FieldConfig } from '../config/field-config.interface';\n\n/** An ItemConfig describes an abstract entity with certain properties.*/\nexport interface ItemConfig {\n  /** For primitive values only: the title for the item */\n  title?: string;\n  /** The Property that is used to identify items from another (e.g. in a selection). */\n  identifier?: string;\n  /** Pattern of the identifier field. Is used e.g. in the searchbar */\n  identifierPattern?: RegExp;\n  /** The Property that is used to display the item for humans */\n  label?: string;\n  /** The Items field Config */\n  fields?: FieldConfig;\n  /** The type of the Item. It determines how it will be displayed in different contexts */\n  type?: string;\n  /** Custom resolve path function. It can be used e.g. to access subbranches of an Object. */\n  resolve?: (body: T) => any;\n  /** Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.*/\n  parent?: any;\n  /** Callback that is invoked when the item is saved */\n  onSave?: (item?: Item, value?: Object) => Promise | T; // TODO rename to save\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/list.component.ts\n\n\n    \n        Description\n    \n    \n        The ListComponent will render a list containing the given items or collection.\nBasic Example:\nhttps://components.entrecode.de/ui/list/basic\nWith Tranforms:\nhttps://components.entrecode.de/ui/list/transforms\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list\n            \n\n            \n                styleUrls\n                list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectIndex\n                            \n                            \n                                selectNext\n                            \n                            \n                                selectPrev\n                            \n                            \n                                showHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                collection\n                            \n                            \n                                config\n                            \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                paginationConfig\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        collection\n                    \n                    \n                        The used collection \n\n                            \n                            Type:    Collection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        Config input for List \n\n                            \n                            Type:    ListConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        The visible items \n\n                            \n                            Type:    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The Instance of the List \n\n                            \n                            Type:    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        paginationConfig\n                    \n                    \n                        Custom PaginationConfig \n\n                            \n                            Type:    PaginationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The used selection \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        If true, only one item is selectable next \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:35\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Event emitter on item selection \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Event emitter on selection change \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncolumnClick(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Column click handler. Triggers select.emit(item) with fallback to selection.toggle\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Changing items or collection will trigger reconstructing the list with the new items.\nChanging the selection will reconstruct the selection \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIndex(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Selects the item with the given index \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectNext\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectNext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Selects the next item \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectPrev\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectPrev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Selects the previous item \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowHeader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Decides if the header should be visible or not \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ListConfig\n\n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:24\n                            \n                        \n\n                \n                    \n                        The current list config \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        List\nThe List is one of the main components to work with.\nThe basic idea is to display collections of data in a structured but flexible way.\nYou can create a new List like this:\nthis.trees = new List(\n//first argument: Array of Objects\n[{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}],\n//second (optional) argument: ListConfig\n{\n  fields: {\n    name: {\n      label: 'Name'\n    },\n    height: {\n      label: 'Height',\n      group: (h) => h > 10 ? 'Higher than 10m' : 'Lower than 10m'\n    },\n    fruits: {\n      label: 'Has Fruits?',\n      display: (value) => value ? 'yes' : 'no'\n    },\n  }\n})This is how you display a List instance into your template:\n\n    \n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { Collection, List, ListConfig, Selection } from '@ec.components/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport { PaginationConfig } from './pagination/pagination-config.interface';\n\n/**\n * The ListComponent will render a list containing the given items or collection.\n *\n * Basic Example:\n *\n * https://components.entrecode.de/ui/list/basic\n *\n * With Tranforms:\n * https://components.entrecode.de/ui/list/transforms\n * */\n@Component({\n  selector: 'ec-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ListComponent implements OnChanges {\n  /** The current list config */\n  config: ListConfig = {};\n  /** Config input for List */\n  // tslint:disable-next-line:no-input-rename\n  @Input('config') configInput: ListConfig;\n  /** The visible items */\n  @Input() items: Array;\n  /** The used collection */\n  @Input() collection: Collection;\n  /** The used selection */\n  @Input() selection: Selection;\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** Event emitter on item selection */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  /** Event emitter on selection change */\n  @Output() selected: EventEmitter> = new EventEmitter();\n  /** The Instance of the List */\n  @Input() list: List;\n  /** Custom PaginationConfig */\n  @Input() paginationConfig: PaginationConfig;\n\n  /** Changing items or collection will trigger reconstructing the list with the new items.\n   * Changing the selection will reconstruct the selection */\n  ngOnChanges(changes?) {\n    this.config = Object.assign(this.config || {}, this.configInput || {});\n    if (this.items) {\n      this.list = new List(this.items, this.config);\n    } else if (this.collection) {\n      this.list = new List(this.collection.items, this.config);\n    }\n    if (!this.list) {\n      return;\n    }\n    if (!this.selection) {\n      this.selection = new Selection([], this.list.config);\n    }\n    if (this.selection) {\n      this.selection.update$.subscribe((selection: Selection) => {\n        this.selected.emit(selection);\n      })\n    }\n  }\n\n  /** Column click handler. Triggers select.emit(item) with fallback to selection.toggle*/\n  columnClick(item) {\n    if (this.list.config.selectMode && this.selection) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      return this.columnClicked.emit(item);\n    }\n  }\n  /** Decides if the header should be visible or not */\n  showHeader() {\n    return this.list && this.list.config && !this.list.config.disableHeader && (this.list.fields.length || this.list.config.title)\n      && (this.list.config.alwaysShowHeader || !this.list.isEmpty());\n  }\n\n  /** Selects the item with the given index */\n  selectIndex(index: number) {\n    if (!this.selection || this.list.isEmpty() || !this.list.items[index]) {\n      return;\n    }\n    this.selection.select(this.list.items[index]);\n  }\n\n  /** Selects the next item */\n  selectNext() {\n    let index = 0;\n    if (!this.selection.isEmpty()) {\n      index = this.list.items.indexOf(this.selection.items[0]) + 1;\n    }\n    this.selection.removeAll();\n    this.selectIndex(index % this.list.items.length);\n  }\n\n  /** Selects the previous item */\n  selectPrev() {\n    let index = this.list.items.length - 1;\n    if (!this.selection.isEmpty()) {\n      index = this.list.items.indexOf(this.selection.items[0]) + this.list.items.length - 1;\n    }\n    this.selection.removeAll();\n    this.selectIndex(index % this.list.items.length);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n        \n        \n          {{group.value}}\n        \n      \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          {{group.value}}                          '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListConfig.html":{"url":"interfaces/ListConfig.html","title":"interface - ListConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/list/list-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for List Classes.\n\n            \n\n            \n                Extends\n            \n            \n                    ItemConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysShowHeader\n                                \n                                \n                                            Optional\n                                        availableSizes\n                                \n                                \n                                            Optional\n                                        desc\n                                \n                                \n                                            Optional\n                                        disableHeader\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                            Optional\n                                        maxColumns\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        query\n                                \n                                \n                                            Optional\n                                        selectMode\n                                \n                                \n                                            Optional\n                                        size\n                                \n                                \n                                            Optional\n                                        solo\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                                \n                                            Optional\n                                        sortBy\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysShowHeader\n                                    \n                                \n                                \n                                    \n                                        alwaysShowHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the header will also be shown when the list is empty. Defaults to false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        availableSizes\n                                    \n                                \n                                \n                                    \n                                        availableSizes:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The available sizes. If not set, the size cannot be changed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                    \n                                \n                                \n                                    \n                                        desc:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set to true, the sorting will be descending \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableHeader\n                                    \n                                \n                                \n                                    \n                                        disableHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will have no header. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    tells the list to show only items that match the filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxColumns\n                                    \n                                \n                                \n                                    \n                                        maxColumns:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximal visible columns. Defaults to 8 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The current active page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    a query that will be turned in to a filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectMode\n                                    \n                                \n                                \n                                    \n                                        selectMode:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will show its checkboxes and will select on column click.\nThe columnClicked output will be ignored as long selectMode is active \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The number of items per page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        solo\n                                    \n                                \n                                \n                                    \n                                        solo:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Should the selection be solo? \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of properties that is sorted after, experimental... \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortBy\n                                    \n                                \n                                \n                                    \n                                        sortBy:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The property name that is sorted after \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For lists with primitive values only: the title of the list header \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\n\n/**\n *  Configuration for List Classes.\n * */\nexport interface ListConfig extends ItemConfig {\n  /** For lists with primitive values only: the title of the list header */\n  title?: string;\n  /** The property name that is sorted after */\n  sortBy?: string;\n  /** Array of properties that is sorted after, experimental... */\n  sort?: string[];\n  /** If set to true, the sorting will be descending */\n  desc?: boolean;\n  /** If true, the list will show its checkboxes and will select on column click.\n   * The columnClicked output will be ignored as long selectMode is active */\n  selectMode?: boolean\n  /** If true, the list will have no header. */\n  disableHeader?: boolean\n  /** If true, the header will also be shown when the list is empty. Defaults to false */\n  alwaysShowHeader?: boolean\n  /** The current active page */\n  page?: number,\n  /** The number of items per page */\n  size?: number,\n  /** The available sizes. If not set, the size cannot be changed */\n  availableSizes?: number[],\n  /** Should the selection be solo? */\n  solo?: boolean,\n  /** tells the list to show only items that match the filter */\n  filter?: { [key: string]: any },\n  /** a query that will be turned in to a filter */\n  query?: { [key: string]: any },\n  /** Maximal visible columns. Defaults to 8 */\n  maxColumns?: number\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListHeaderComponent.html":{"url":"components/ListHeaderComponent.html","title":"component - ListHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/list-header/list-header.component.ts\n\n\n    \n        Description\n    \n    \n        This component renders, as the name states, the header of a list.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-header\n            \n\n            \n                styleUrls\n                list-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                pops\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyFilter\n                            \n                            \n                                    Public\n                                editFilter\n                            \n                            \n                                    Public\n                                fieldLabel\n                            \n                            \n                                    Public\n                                removeFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The list instance \n\n                            \n                            Type:    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        applyFilter(property: , value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Applies the given filter to the list. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        editFilter(pop: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            opens the given filter pop and closes all others \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pop\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fieldLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fieldLabel(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFilter(property: , control: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        control\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filter:     FormComponent\n\n                    \n                \n                    \n                        \n                            Type :     FormComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:22\n                            \n                        \n\n                \n                    \n                        The form that holds the current filter information \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pops\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pops:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:20\n                            \n                        \n\n                \n                    \n                        The pop dropdowns that contain the filtering \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { PopComponent } from '../../pop/pop.component';\nimport { FormComponent } from '../../form/form.component';\nimport { List } from '@ec.components/core/src/list/list';\nimport { Selection } from '@ec.components/core/src/selection/selection';\nimport { Field } from '@ec.components/core';\n\n/** This component renders, as the name states, the header of a list.*/\n@Component({\n  selector: 'ec-list-header',\n  templateUrl: './list-header.component.html',\n  styleUrls: ['./list-header.component.scss']\n})\nexport class ListHeaderComponent {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** The pop dropdowns that contain the filtering */\n  @ViewChildren('filterPop') pops: QueryList;\n  /** The form that holds the current filter information */\n  @ViewChild('filterForm') filter: FormComponent;\n\n  /** opens the given filter pop and closes all others */\n  public editFilter(pop) {\n    pop.toggle();\n    // this.pops.forEach((pop) => pop.hide());\n  }\n\n  /** Applies the given filter to the list. */\n  public applyFilter(property, value) {\n    this.list.filter(property, value);\n  }\n\n  public removeFilter(property, control) {\n    control.reset();\n  }\n\n  public fieldLabel(field: Field) {\n    if (field.label === false) {\n      return '';\n    }\n    return field.label || field.property;\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n  \n\n    \n      \n    \n\n    \n      {{fieldLabel(field)}}\n    \n    \n\n    \n      \n        \n        &times;\n      \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{fieldLabel(field)}}                                  ×            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListItemsComponent.html":{"url":"components/ListItemsComponent.html","title":"component - ListItemsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListItemsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/list-items/list-items.component.ts\n\n\n    \n        Description\n    \n    \n        The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\nIt can either be given an Array of Items or just the list parent to control the shown items. \n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-items\n            \n\n            \n                styleUrls\n                list-items.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-items.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.\n\n                            \n                            Type:    Item[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The list instance \n\n                            \n                            Type:    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        If true, only one item is selectable next \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Event emitter on item clicked \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncolumnClick(item: Item, e: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Propagate clicked item to host or toggle selection. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Checks for host and uses its list. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Item, List, Selection } from '@ec.components/core';\nimport { ListComponent } from '../list.component';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\n\n/** The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\n * It can either be given an Array of Items or just the list parent to control the shown items. */\n@Component({\n  selector: 'ec-list-items',\n  templateUrl: './list-items.component.html',\n  styleUrls: ['./list-items.component.scss']\n})\nexport class ListItemsComponent implements OnChanges {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.*/\n  @Input() items: Item[];\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** Event emitter on item clicked */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n\n  /** Checks for host and uses its list. */\n  ngOnChanges() {\n    if (!this.items && this.list) {\n      this.items = this.list.page;\n    }\n  }\n\n  /** Propagate clicked item to host or toggle selection. */\n  columnClick(item: Item, e: Event) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (this.selection && this.list && this.list.config.selectMode) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListItemsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ListModule.html":{"url":"modules/ListModule.html","title":"module - ListModule","body":"\n                   \n\n\n\n\n  Modules\n  ListModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_imports\n\n\n\ncluster_ListModule_exports\n\n\n\n\nGroupPipe\n\nGroupPipe\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nFormModule\n\nFormModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/list/list.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GroupPipe\n                            \n                            \n                                ListComponent\n                            \n                            \n                                ListHeaderComponent\n                            \n                            \n                                ListItemsComponent\n                            \n                            \n                                PaginationComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    IconModule\n                            \n                            \n                                    SymbolModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    GroupPipe\n                            \n                            \n                                    ListComponent\n                            \n                            \n                                    ListHeaderComponent\n                            \n                            \n                                    ListItemsComponent\n                            \n                            \n                                    PaginationComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ListComponent } from './list.component';\nimport { ListItemsComponent } from './list-items/list-items.component';\nimport { ListHeaderComponent } from './list-header/list-header.component';\nimport { GroupPipe } from './group.pipe';\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { FormModule } from '../form/form.module';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '../icon/icon.module';\nimport { SymbolModule } from '../symbol/symbol.module';\n\n@NgModule({\n  declarations: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    GroupPipe,\n  ],\n  imports: [\n    CommonModule,\n    FormModule,\n    IconModule,\n    SymbolModule\n  ],\n  exports: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    GroupPipe,\n    FormModule,\n  ],\n  providers: []\n})\nexport class ListModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/loader/loader.component.ts\n\n\n    \n        Description\n    \n    \n        The ec-loader can be plugged into various components to be triggered when they load stuff.\nhttps://components.entrecode.de/ui/loader\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-loader\n            \n\n            \n                styleUrls\n                loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stack\n                            \n                            \n                                    Private\n                                timestamp\n                            \n                            \n                                    Private\n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hide\n                            \n                            \n                                    Private\n                                show\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(host: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                            Injects the host element. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nwait(promise: Promise)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\nMake sure the given promise is catched (so the loader will stop loading on error)! \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promise\n                                                        \n                                                                    Promise\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stack:     Collection>\n\n                    \n                \n                    \n                        \n                            Type :     Collection>\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:14\n                            \n                        \n\n                \n                    \n                        The current stack of loading promises.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timestamp:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                        The timestamp of the last time a promise has been added to the stack. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:16\n                            \n                        \n\n                \n                    \n                        The loader's visibility status. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Loader\nThe loader can be used to indicate any kind of loading activity\nTemplate\n\n\nGlobal Loader\nLocal LoaderThe default classes can be found here.\nUsage\nYou can use a global loader that handles every action or use multiple local loaders:\nimport { LoaderComponent, LoaderService } from '@ec.components/ui';\nexport class MyApp {\n  @ViewChild('globalLoader') globalLoader: LoaderComponent;\n  @ViewChild('localLoader') localLoader: LoaderComponent;\n  constructor(private loaderService: LoaderService) {\n      this.loaderService.use(this.globalLoader); // set global loader\n  }\n  globalLoader() { // When not passing a loader to .wait, the global loader (set by .use) is used.\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)));\n  }\n  localLoader() {\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)), this.localLoader);\n    // this.localLoader.wait(new Promise((resolve) => setTimeout(resolve, 2000))); // alternative way\n  }\n}The advantage of local loaders is that you can place them in specific places of your template to only \"disable\" a part of your site while loading and not the whole page.\nSee the commented out line in localLoader for a direct way to trigger a loader without the service.\nHow it works\nEach time .wait is called on the LoaderService, the target loader throws the given promise on a stack. When all promises on the stack have been resolved, the loader is hidden. This is better than just a boolean switch because multiple loading activies do not interfere with each other.\n\n    \n\n    \n        import { Component, ElementRef } from '@angular/core';\nimport { Collection } from '@ec.components/core/src/collection/collection';\n\n/** The ec-loader can be plugged into various components to be triggered when they load stuff.\n * https://components.entrecode.de/ui/loader\n*/\n@Component({\n  selector: 'ec-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent {\n  /** The current stack of loading promises.*/\n  private stack: Collection> = new Collection([]);\n  /** The loader's visibility status. */\n  private visible = false;\n  /** The timestamp of the last time a promise has been added to the stack. */\n  private timestamp;\n\n  /** Injects the host element. */\n  constructor(private host: ElementRef) {\n  }\n\n  /** Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, */\n  private show() {\n    this.visible = true; // show loader\n    this.host.nativeElement.classList.add('is-active');\n  }\n\n  /** Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, */\n  private hide() {\n    this.visible = false; // show loader\n    this.host.nativeElement.classList.remove('is-active');\n  }\n\n  /** Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\n   * Make sure the given promise is catched (so the loader will stop loading on error)! */\n  wait(promise: Promise) {\n    this.stack.add(promise); // add promise to stack\n    this.show();\n    const timestamp = Date.now();\n    this.timestamp = timestamp; // get timestamp\n    Promise.all(this.stack.items)\n      .then(() => {\n        if (timestamp === this.timestamp) {\n          this.hide();\n          this.stack.removeAll();\n        }\n      });\n    return promise;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoaderModule.html":{"url":"modules/LoaderModule.html","title":"module - LoaderModule","body":"\n                   \n\n\n\n\n  Modules\n  LoaderModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\n\n\nLoaderModule\n\nLoaderModule\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/loader/loader.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoaderComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     LoaderService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoaderComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\nimport { LoaderService } from './loader.service';\n\n@NgModule({\n  declarations: [\n    LoaderComponent,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    LoaderComponent,\n  ],\n  providers: [LoaderService]\n})\nexport class LoaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/loader/loader.service.ts\n        \n\n            \n                Description\n            \n            \n                The loader service registers promises \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(loader: LoaderComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.service.ts:11\n                            \n                        \n\n\n                \n                    \n                            Sets a global loader that can be triggered without having the reference. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                        \n                                                                    LoaderComponent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nwait(promise: Promise, loader: LoaderComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        promise\n                                                        \n                                                                    Promise\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        loader\n                                                        \n                                                                    LoaderComponent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.loader\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.service.ts:8\n                            \n                        \n\n                \n                    \n                        The global loader that should be used if not loader is passed to wait. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\n\n/** The loader service registers promises */\n@Injectable()\nexport class LoaderService {\n  /** The global loader that should be used if not loader is passed to wait. */\n  loader: LoaderComponent;\n\n  /** Sets a global loader that can be triggered without having the reference. */\n  use(loader: LoaderComponent) {\n    this.loader = loader;\n  }\n\n  /** Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)*/\n  wait(promise: Promise, loader: LoaderComponent = this.loader) {\n    if (!loader || !promise) {\n      // console.warn('cannot trigger loader: no promise or loader given');\n      return;\n    }\n    return loader.wait(promise);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationMapComponent.html":{"url":"components/LocationMapComponent.html","title":"component - LocationMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/location-map.component.ts\n\n\n    \n        Description\n    \n    \n        Shows Google Maps Map \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-map\n            \n\n            \n                styleUrls\n                location-map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                markerDragEnd\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                readOnly\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                    \n                        The desired map center \n\n                            \n                            Type:    literal type\n\n                            \n                        \n                            Default value: { latitude: 48.8093253, longitude: 9.159388100000001 }\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                    \n                        If true, no markers can be changed or set \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        Form input component \n\n                            \n                            Type:    literal type\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        Emits when the marker has been changed \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markerDragEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkerDragEnd(coords: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            changes value on marker dragend \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        coords\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue(value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            sets the value cand changes the center \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/** Shows Google Maps Map */\n@Component({\n    selector: 'ec-location-map',\n    templateUrl: './location-map.component.html',\n    styleUrls: ['./location-map.component.scss']\n})\n\nexport class LocationMapComponent {\n    /** The desired map center */\n    @Input() center: { longitude: any; latitude: any; } = { latitude: 48.8093253, longitude: 9.159388100000001 };\n    /** If true, no markers can be changed or set */\n    @Input() readOnly: boolean;\n    /** Emits when the marker has been changed */\n    @Output() change: EventEmitter = new EventEmitter();\n    /** Form input component */\n    @Input() value: {\n        longitude: number,\n        latitude: number\n    };\n\n    /** sets the value cand changes the center */\n    setValue(value) {\n        this.value = value;\n        if (value) {\n            this.center = value;\n        }\n    }\n    /** changes value on marker dragend */\n    markerDragEnd(coords) {\n        if (!coords) {\n            console.warn('no coords');\n            return;\n        }\n        const position = { longitude: coords.lng, latitude: coords.lat };\n        this.setValue(position);\n        this.change.emit(position);\n    }\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n  Modules\n  LocationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_imports\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/location/src/location.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module holds all location/map related components and services \n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LocationMapComponent\n                            \n                            \n                                LocationPickerComponent\n                            \n                            \n                                LocationSearchComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                LOCATION_COMPONENTS\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     GeocodeService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LocationMapComponent\n                            \n                            \n                                    LocationPickerComponent\n                            \n                            \n                                    LocationSearchComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { AgmCoreModule } from '@agm/core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationPickerComponent } from './location-picker.component';\nimport { LocationSearchComponent } from './location-search.component';\n/** The components of this module */\nconst LOCATION_COMPONENTS = [\n    LocationMapComponent,\n    LocationSearchComponent,\n    LocationPickerComponent,\n];\n/** This module holds all location/map related components and services */\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        UiModule,\n        AgmCoreModule.forRoot({\n            apiKey: 'AIzaSyAdgEUE1Yxo1F-qb1MrO56u5KATpX9j8o4',\n            libraries: ['places']\n        })],\n    exports: LOCATION_COMPONENTS,\n    declarations: LOCATION_COMPONENTS,\n    entryComponents: LOCATION_COMPONENTS,\n    providers: [GeocodeService],\n})\nexport class LocationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationPickerComponent.html":{"url":"components/LocationPickerComponent.html","title":"component - LocationPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/location-picker.component.ts\n\n\n    \n        Description\n    \n    \n        Component with map and autocomplete input to pick a location. Implements ControlValueAccessor \n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-location-picker\n            \n\n            \n                styleUrls\n                location-picker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-picker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                geocodeService\n                            \n                            \n                                input\n                            \n                            \n                                map\n                            \n                            \n                                propagateChange\n                            \n                            \n                                search\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setValue\n                            \n                            \n                                updateAddress\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControl\n                            \n                            \n                                showRawValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/location-picker.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                    GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        The form control that holds the location \n\n                            \n                            Type:    FormControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showRawValue\n                    \n                    \n                        If true, the raw location value will be visible\n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue(value: , fromSearch?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Sets value of map and propagates change \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fromSearch\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateAddress()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            updates the address string by reverse geo lookup  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geocodeService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocodeService:     GeocodeService\n\n                    \n                \n                    \n                        \n                            Type :     GeocodeService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     InputComponent\n\n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     LocationMapComponent\n\n                    \n                \n                    \n                        \n                            Type :     LocationMapComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:28\n                            \n                        \n\n                \n                    \n                        The nested LocationMapComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => { }\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        search:     LocationSearchComponent\n\n                    \n                \n                    \n                        \n                            Type :     LocationSearchComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:30\n                            \n                        \n\n                \n                    \n                        The nested LocationSearchComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationSearchComponent } from './location-search.component';\n\n/** Component with map and autocomplete input to pick a location. Implements ControlValueAccessor */\n@Component({\n    selector: 'ec-location-picker',\n    templateUrl: './location-picker.component.html',\n    styleUrls: ['./location-picker.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LocationPickerComponent),\n            multi: true\n        }\n    ]\n})\n\nexport class LocationPickerComponent extends DefaultInputComponent implements ControlValueAccessor {\n    /** The form control that holds the location */\n    @Input() formControl: FormControl;\n    /** If true, the raw location value will be visible*/\n    @Input() showRawValue = true;\n    /** The nested LocationMapComponent */\n    @ViewChild(LocationMapComponent) map: LocationMapComponent;\n    /** The nested LocationSearchComponent */\n    @ViewChild(LocationSearchComponent) search: LocationSearchComponent;\n    /** Form input component */\n    input: InputComponent;\n\n    constructor(\n        public geocodeService: GeocodeService,\n    ) {\n        super();\n    }\n\n    /** Sets value of map and propagates change */\n    setValue(value, fromSearch?: boolean) {\n        if (!value) {\n            this.search.clear();\n        }\n        this.map.setValue(value);\n        if (!fromSearch) {\n            this.updateAddress();\n        }\n        this.propagateChange(value);\n        if (this.input) {\n            this.input.propagateChange(value);\n        }\n    }\n\n    /** Writes value to editor on outside model change. */\n    writeValue(value: any) {\n        this.map.setValue(value);\n        this.updateAddress();\n    }\n\n    /** updates the address string by reverse geo lookup  */\n    updateAddress() {\n        const value = this.map.value;\n        if (!value) {\n            this.search.searchInput.nativeElement.value = '';\n            return;\n        }\n        this.geocodeService.getNearestAddress(value)\n            .then(results => {\n                if (results.length) {\n                    this.search.searchInput.nativeElement.value = results[0].formatted_address;\n                } else {\n                    this.search.searchInput.nativeElement.value = '';\n                }\n            });\n    }\n\n    propagateChange = (_: any) => { };\n\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() { }\n}\n\n    \n\n    \n        \n\n\n    \n\n{{map.value | json}}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{map.value | json}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationSearchComponent.html":{"url":"components/LocationSearchComponent.html","title":"component - LocationSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/location-search.component.ts\n\n\n    \n        Description\n    \n    \n        Google Maps Location Searchbar \n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-search\n            \n\n\n\n\n            \n                templateUrl\n                ./location-search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/location-search.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                    GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        Placeholder for input \n\n                        \n                            Default value: 'Search Location'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        emits when the coords have been changed (after selecting a match) \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            Clears the searchbar input value \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            subscribes to changes from the inputs autocomplete using geocodeService. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchInput:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:15\n                            \n                        \n\n                \n                    \n                        The search input element \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, EventEmitter, Input, NgZone, Output, ViewChild } from '@angular/core';\nimport { } from 'googlemaps';\nimport { GeocodeService } from './geocode.service';\n\n/** Google Maps Location Searchbar */\n@Component({\n    selector: 'ec-location-search',\n    templateUrl: './location-search.component.html'\n})\n\nexport class LocationSearchComponent implements AfterViewInit {\n    /** Placeholder for input */\n    @Input() placeholder = 'Search Location';\n    /** The search input element */\n    @ViewChild('search') searchInput: ElementRef;\n    /** emits when the coords have been changed (after selecting a match) */\n    @Output() change: EventEmitter = new EventEmitter();\n\n    constructor(\n        private geocodeService: GeocodeService,\n        private ngZone: NgZone\n    ) {\n    }\n    /** Clears the searchbar input value */\n    clear() {\n        if (this.searchInput) {\n            this.searchInput.nativeElement.value = '';\n        }\n    }\n    /** subscribes to changes from the inputs autocomplete using geocodeService. */\n    ngAfterViewInit() {\n        this.geocodeService.autocompleteAddress(this.searchInput.nativeElement)\n            .subscribe(\n                coords => {\n                    this.change.emit(coords);\n                }\n            );\n    }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/auth/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\nhttps://components.entrecode.de/auth/auth\n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login\n            \n\n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     \n\n                    \n                \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:24\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport { LoaderComponent, NotificationsService, WithLoader } from '@ec.components/ui';\nimport { AuthService } from '../auth.service';\nimport { WithNotifications } from '@ec.components/ui/src/notifications/with-notifications.interface';\nimport { Notification } from '@ec.components/ui/src/notifications/notification';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\n\n/** Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\n * https://components.entrecode.de/auth/auth\n*/\n@Component({\n  selector: 'ec-login',\n  templateUrl: 'login.component.html'\n})\n\nexport class LoginComponent implements WithLoader, WithNotifications {\n  /** You can optionally specify PublicAPI instance. Defaults to SdkService#api. */\n  @Input() api: PublicAPI;\n  /** Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The included loader. */\n  @ViewChild(LoaderComponent) loader;\n  /** Error notifications */\n  notifications: Notification[] = [];\n\n  constructor(public auth: AuthService,\n    public notificationService: NotificationsService,\n    public symbol: SymbolService) {\n  }\n  /** Communicates with the AuthService. Handles loader, notifications and success Subject. */\n  login({ email, password }) {\n    const login = this.auth.login({ email, password }, this.api)\n      .then((user) => {\n        this.notificationService.emit({\n          type: 'success',\n          title: this.symbol.resolve('login.success'),\n          hide: this.notifications\n        });\n        this.success.emit(user);\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: this.symbol.resolve('login.error'),\n          error,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications\n        });\n        console.log('could not login', error);\n      });\n    this.loader.wait(login);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/login-form/login-form.component.ts\n\n\n    \n        Description\n    \n    \n        Login Form Component with validation. Fires success event with credentials on submit.\nhttps://components.entrecode.de/ui/login\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login-form\n            \n\n            \n                styleUrls\n                login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                notifications\n                            \n                            \n                                    Private\n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClasses\n                            \n                            \n                                buttonLabel\n                            \n                            \n                                emailLabel\n                            \n                            \n                                emailPlaceholder\n                            \n                            \n                                loader\n                            \n                            \n                                passwordLabel\n                            \n                            \n                                passwordPlaceholder\n                            \n                            \n                                showLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/login-form/login-form.component.ts:44\n                            \n                        \n\n                \n                    \n                            Injects the FormBuilder\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonClasses\n                    \n                    \n                        Additional Button classes \n\n                        \n                            Default value: ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                    \n                        The Label of the submit button. Defaults to Login \n\n                        \n                            Default value: 'Login'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emailLabel\n                    \n                    \n                        The Label of the Mail field \n\n                        \n                            Default value: 'E-Mail'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emailPlaceholder\n                    \n                    \n                        The Placeholder of the mail Field \n\n                        \n                            Default value: 'E-Mail Adresse'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be shown during login \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordLabel\n                    \n                    \n                        The Label of the password field. \n\n                        \n                            Default value: 'Passwort'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordPlaceholder\n                    \n                    \n                        The Placeholder of the password field \n\n                        \n                            Default value: 'Passwort'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showLabels\n                    \n                    \n                        If true, email and password wont have labels \n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                    \n                        Event that emits when calling showError. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Event that emits on succesful submit of the form, passing the login credentials. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Initializes the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showError\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowError(err: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Shows the given error in the form. Clears the password field and emits the error event. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        err\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:22\n                            \n                        \n\n                \n                    \n                        Contains possible error messages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:18\n                            \n                        \n\n                \n                    \n                        The login's form group.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:44\n                            \n                        \n\n                \n                    \n                        Recent error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            submitted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitted:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:20\n                            \n                        \n\n                \n                    \n                        Flips true when submitted. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Login Form\nThe Login Form UI component is meant to be extended by a component that communicates with an API.\n    \n    \n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport { FieldValidators } from '../validators/field-validators';\nimport { LoaderComponent } from '../../loader/loader.component';\nimport { WithLoader } from '../../loader/with-loader.interface';\n\n/** Login Form Component with validation. Fires success event with credentials on submit.\n * https://components.entrecode.de/ui/login\n*/\n@Component({\n  selector: 'ec-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss']\n})\nexport class LoginFormComponent implements OnInit, WithLoader {\n  /** The login's form group.*/\n  public form: FormGroup;\n  /** Flips true when submitted. */\n  private submitted: boolean;\n  /** Contains possible error messages. */\n  public errorMessage: string;\n  /** Event that emits on succesful submit of the form, passing the login credentials. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** Event that emits when calling showError. */\n  @Output() error: EventEmitter = new EventEmitter();\n  /** The loader that should be shown during login */\n  @Input() loader: LoaderComponent;\n  /** If true, email and password wont have labels */\n  @Input() showLabels = true;\n  /** The Label of the Mail field */\n  @Input() emailLabel = 'E-Mail';\n  /** The Placeholder of the mail Field */\n  @Input() emailPlaceholder = 'E-Mail Adresse';\n  /** The Label of the password field. */\n  @Input() passwordLabel = 'Passwort';\n  /** The Placeholder of the password field */\n  @Input() passwordPlaceholder = 'Passwort';\n  /** The Label of the submit button. Defaults to Login */\n  @Input() buttonLabel = 'Login';\n  /** Additional Button classes */\n  @Input() buttonClasses = '';\n  /** Recent error Notifications */\n  notifications: Notification[];\n\n  /** Injects the FormBuilder*/\n  constructor(private fb: FormBuilder) {\n  }\n\n  /** Initializes the form */\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, FieldValidators.email]], // emailAvailable?\n      password: ['', [Validators.required]],\n    });\n  }\n\n  /** Shows the given error in the form. Clears the password field and emits the error event. */\n  showError(err): any {\n    this.errorMessage = err.message;\n    this.form.get('password').setValue('');\n    this.error.emit(err);\n    Observable.throw(err);\n  }\n\n  /** Method that is meant to be overwritten by a subclass to communicate with an API. */\n  login(value) { // meant to be overridden\n    return Promise.resolve(value);\n  }\n\n  /** Is called when the form has been successfully submitted. Calls login and resets the form after. */\n  onSubmit() {\n    this.submitted = true;\n    delete this.errorMessage;\n    if (!this.form.valid) {\n      return;\n    }\n    const login = this.login(this.form.value)\n      .then((res) => {\n        this.form.reset();\n        this.success.emit(res);\n      });\n    if (this.loader) {\n      this.loader.wait(login);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{errorMessage}}\n  \n  \n    {{emailLabel}}\n    \n    \n    \n  \n  \n    Passwort\n    \n    \n  \n  \n    {{buttonLabel}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{errorMessage}}        {{emailLabel}}                    Passwort                {{buttonLabel}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MaxItemsPipe.html":{"url":"pipes/MaxItemsPipe.html","title":"pipe - MaxItemsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  MaxItemsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/max-items.pipe.ts\n        \n\n            \n                Description\n            \n            \n                This pipe slices an array after the nth item \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        maxItems\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(array: Array, maxItems: number, start: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/max-items.pipe.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        maxItems\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        start\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n/** This pipe slices an array after the nth item */\n@Pipe({\n    name: 'maxItems'\n})\n\nexport class MaxItemsPipe implements PipeTransform {\n    transform(array: Array = [], maxItems: number, start: number = 0): any {\n        return array.slice(start, maxItems);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MediumEditorComponent.html":{"url":"components/MediumEditorComponent.html","title":"component - MediumEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MediumEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/medium-editor/src/medium-editor.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps medium-editor to a reactive form component.\nhttps://components.entrecode.de/misc/medium-editor\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-medium-editor\n            \n\n            \n                styleUrls\n                medium-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                medium-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Private\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                modelChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        data model \n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        MediumEditor options \n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        empty placeholder \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:39\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        modelChange\n                    \n                    \n                        change emitter \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            destroys editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            inits editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:43\n                            \n                        \n\n                \n                    \n                        container element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     MediumEditor\n\n                    \n                \n                    \n                        \n                            Type :     MediumEditor\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:47\n                            \n                        \n\n                \n                    \n                        editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:49\n                            \n                        \n\n                \n                    \n                        ready promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:45\n                            \n                        \n\n                \n                    \n                        current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport * as MediumEditor from 'medium-editor/dist/js/medium-editor';\n\n/** Wraps medium-editor to a reactive form component.\n * https://components.entrecode.de/misc/medium-editor\n*/\n@Component({\n  selector: 'ec-medium-editor',\n  styleUrls: ['./medium-editor.component.scss'],\n  templateUrl: 'medium-editor.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MediumEditorComponent),\n      multi: true\n    }\n  ]\n})\nexport class MediumEditorComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  /** data model */\n  @Input() model: any;\n  /** MediumEditor [options](https://github.com/yabwe/medium-editor#mediumeditor-options) */\n  @Input() options: any;\n  /** empty placeholder */\n  @Input() placeholder: string;\n  /** change emitter */\n  @Output() modelChange: EventEmitter = new EventEmitter();\n  /** container element */\n  @ViewChild('container') container: ElementRef;\n  /** current value */\n  value: any;\n  /** editor instance */\n  private editor: MediumEditor;\n  /** ready promise */\n  public ready: Promise;\n\n  /** inits editor */\n  ngOnInit() {\n    this.container.nativeElement.innerHTML = this.model || '';\n    this.options.placeholder = this.placeholder;\n    this.editor = new MediumEditor(this.container.nativeElement, this.options);\n    this.editor.subscribe('editableInput', () => {\n      this.value = this.editor.getContent();\n      this.propagateChange(this.value);\n    });\n    this.ready = Promise.resolve(this.editor);\n  }\n  /** destroys editor */\n  ngOnDestroy(): void {\n    this.editor.destroy();\n  }\n\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    this.ready.then((editor) => {\n      editor.setContent(this.value);\n    });\n  }\n\n  propagateChange = (_: any) => {\n  };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'MediumEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediumModule.html":{"url":"modules/MediumModule.html","title":"module - MediumModule","body":"\n                   \n\n\n\n\n  Modules\n  MediumModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MediumModule\n\n\n\ncluster_MediumModule_declarations\n\n\n\ncluster_MediumModule_MediumEditorComponent_providers\n\n\n\ncluster_MediumModule_exports\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n\n\nMediumModule\n\nMediumModule\n\nMediumModule -->\n\nMediumEditorComponent->MediumModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumModule->MediumEditorComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->MediumEditorComponent -->\n\n{\n    : , : (() => ), : true\n}->MediumEditorComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/medium-editor/src/medium.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MediumEditorComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MediumEditorComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MediumEditorComponent } from './medium-editor.component';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [MediumEditorComponent],\n  declarations: [MediumEditorComponent],\n  providers: [],\n})\nexport class MediumModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/menu/menu.component.ts\n\n\n    \n        Description\n    \n    \n        Renders a nested menu from a given routes Array (the same you would use for angular routing). \n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-menu,[ec-menu]\n            \n\n            \n                styleUrls\n                menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hover\n                            \n                            \n                                    Private\n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelTimeout\n                            \n                            \n                                getColor\n                            \n                            \n                                getItemColor\n                            \n                            \n                                getLevel\n                            \n                            \n                                getPath\n                            \n                            \n                                hasActivePath\n                            \n                            \n                                hoverItem\n                            \n                            \n                                hoverOut\n                            \n                            \n                                isActive\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colors\n                            \n                            \n                                hoverDelay\n                            \n                            \n                                parent\n                            \n                            \n                                route\n                            \n                            \n                                routes\n                            \n                            \n                                title\n                            \n                            \n                                vanishDelay\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                            Injects the Router. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colors\n                    \n                    \n                        Color map of submenus. \n\n                            \n                            Type:    string[]\n\n                            \n                        \n                            Default value: ['#29A9E1', '#00DBF0', '#4A5EA9', '#29A9E1', '#C9C8D4']\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hoverDelay\n                    \n                    \n                        Delay before menu is shown on mouseover. \n\n                        \n                            Default value: 50\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parent\n                    \n                    \n                        Parent Menu (when nested) \n\n                            \n                            Type:    MenuComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        route\n                    \n                    \n                        The currently active route \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        routes\n                    \n                    \n                        Routes that should be used for the menu. You can use your angular router routes here. \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                        The title of the menu \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        vanishDelay\n                    \n                    \n                        Delay before menu is hidden after mouseout. \n\n                        \n                            Default value: 500\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelTimeout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Cancels the current timeout \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetColor(level: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Returns the color for the current level. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getItemColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetItemColor(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Returns the color for the given item. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLevel(level: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Returns the level of nesting (parent=0). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPath\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPath(item: , path: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Returns the full path to an item. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasActivePath\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasActivePath(item: , parent: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item or a child of it is active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        parent\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nhoverItem(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Hovers the item after hoverDelay timeout. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nhoverOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:95\n                            \n                        \n\n\n                \n                    \n                            Hovers out after vanishDelay \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisActive(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item is active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item is selected. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            updates the routes on change of route \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hover\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hover:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:29\n                            \n                        \n\n                \n                    \n                        The currently hovered Route\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeout:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                        The timeout for delay handling \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router'; // TODO cannot import Route...\n\n/** Renders a nested menu from a given routes Array (the same you would use for angular routing). */\n@Component({\n  selector: 'ec-menu,[ec-menu]',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnChanges {\n  /** Routes that should be used for the menu. You can use your angular router routes here. */\n  @Input() routes; // : Route[];\n  /** The currently active route */\n  @Input() route; // : Route;\n  /** The title of the menu */\n  @Input() title: string;\n  /** Parent Menu (when nested) */\n  @Input() parent: MenuComponent;\n  /** Color map of submenus. */\n  @Input() colors: string[] = ['#29A9E1', '#00DBF0', '#4A5EA9', '#29A9E1', '#C9C8D4'];\n  /** Delay before menu is hidden after mouseout. */\n  @Input() vanishDelay = 500;\n  /** Delay before menu is shown on mouseover. */\n  @Input() hoverDelay = 50;\n  /** The currently hovered Route*/\n  public hover; // : Route;\n  /** The timeout for delay handling */\n  private timeout;\n\n  /** Injects the Router. */\n  constructor(private router: Router) {\n  }\n\n  /** updates the routes on change of route */\n  ngOnChanges() {\n    if (this.route) {\n      this.routes = this.route.children\n      .filter(route => route.path && route.path.indexOf(':') === -1)\n      .filter(route => !route.data || !route.data.hidden);\n    }\n  }\n\n  /** Returns true if the item or a child of it is active. */\n  hasActivePath(item, parent = this) { // this.parent\n    return parent.getPath(item) === this.router.url;\n  }\n\n  /** Returns true if the item is selected. */\n  isSelected(item) {\n    const path = this.getPath(item);\n    return path !== '/' && (path === this.router.url || this.router.url.indexOf(path) === 0);\n  }\n\n  /** Returns true if the item is active. */\n  isActive(item) {\n    return this.hover === item || (!this.hover && this.isSelected(item));\n  }\n\n  /** Returns the level of nesting (parent=0). */\n  getLevel(level = 0) {\n    return this.parent ? this.parent.getLevel(++level) : level;\n  }\n\n  /** Returns the color for the current level. */\n  getColor(level = 0) {\n    return this.colors[this.getLevel(level) % this.colors.length];\n  }\n\n  /** Returns the color for the given item. */\n  getItemColor(item) {\n    return this.isActive(item) ? this.getColor(1) : 'initial';\n  }\n\n  /** Hovers the item after hoverDelay timeout. */\n  hoverItem(item) { // : Route\n    if (!this.hover) {\n      this.hover = item;\n    }\n    this.timeout = setTimeout(() => {\n      this.hover = item;\n    }, this.hoverDelay);\n  }\n\n  /** Cancels the current timeout */\n  cancelTimeout() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  /** Hovers out after vanishDelay */\n  hoverOut() {\n    this.timeout = setTimeout(() => {\n      delete this.hover;\n    }, this.vanishDelay)\n  }\n\n  /** Returns the full path to an item. */\n  getPath(item, path: string = '') {\n    path = '/' + item.path + path;\n    if (!this.parent) {\n      return path;\n    }\n    return this.parent.getPath(this.route, path);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{title}}\n    \n    \n      {{item.data?.title || item.path}}\n      {{item.data?.title || item.path}}\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{title}}              {{item.data?.title || item.path}}      {{item.data?.title || item.path}}        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MockupComponent.html":{"url":"components/MockupComponent.html","title":"component - MockupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MockupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/mockup/mockup.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the style prototypes \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-mockup\n            \n\n            \n                styleUrls\n                mockup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./mockup.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n/** This component holds the style prototypes */\n@Component({\n  selector: 'ec-mockup',\n  templateUrl: './mockup.component.html',\n  styleUrls: ['./mockup.component.scss']\n})\nexport class MockupComponent {\n}\n\n    \n\n    \n        \n  \n    ec.list\n\n    ec.list\n    \n      \n        \n          \n            \n          \n          \n            Groupname\n          \n          \n            \n              \n              \n                \n                  delete\n                \n                \n                  dublicate\n                \n              \n            \n          \n        \n        \n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .selected\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .error\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .disabled\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .success\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .info\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .invalid\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .custom-item-class\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n    ec.list.card\n    \n      \n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n      \n    \n    ec.list.simple\n    \n      \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n      \n    \n  \n\n-->\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      ec.list    ec.list                                                                        Groupname                                                                                              delete                                                  dublicate                                                                                                                                                                                                                Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .selected                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .error                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .disabled                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .success                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .info                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .invalid                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .custom-item-class                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                                ec.list.card                                                                                                                                  Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                            ec.list.simple                                                      Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                          -->'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'MockupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfig.html":{"url":"interfaces/ModelConfig.html","title":"interface - ModelConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/model-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig, FieldConfigProperty } from '@ec.components/core';\n\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfig {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelConfigService.html":{"url":"injectables/ModelConfigService.html","title":"injectable - ModelConfigService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ModelConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/model-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The main class for configuring the behaviour of a model.\nBy default, everything is auto generated from the model's schema but can be overriden via the\nset method. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                omittedFields\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSystemPropertiesToFieldConfig\n                            \n                            \n                                generateConfig\n                            \n                            \n                                generateFieldConfig\n                            \n                            \n                                get\n                            \n                            \n                                isSystemProperty\n                            \n                            \n                                parseType\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(crud: CrudService, sdk: SdkService, typeConfig: TypeConfigService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/model-config/model-config.service.ts:27\n                            \n                        \n\n                \n                    \n                            Injects CrudService and SdkService. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        crud\n                                                  \n                                                        \n                                                                    CrudService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                    TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addSystemPropertiesToFieldConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \naddSystemPropertiesToFieldConfig(config: FieldConfig, override: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:68\n                            \n                        \n\n\n                \n                    \n                            Assigns default system fields to given config. Does not override by default \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    FieldConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        override\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateConfig(model: string, fieldConfig?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:179\n                            \n                        \n\n\n                \n                    \n                            Returns the given model's config and generates a field config from the schema if it is not configured. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fieldConfig\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateFieldConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateFieldConfig(model: string, fields?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:130\n                            \n                        \n\n\n                \n                    \n                            Generates a proper fieldConfig for a given model and an optional local fieldConfig.\nOperates in three layers: If a local fieldConfig is given, it will be used.\nIf no local fieldConfig is given, the global model's field config is used.\nIf no global field config is found for that model, it will be generated from the model schema.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fields\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Retrieves the given model config.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            ModelConfig.get(&#39;muffin&#39;); //returns muffin config;\n                                        \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSystemProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSystemProperty(property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Checks if a given property name is a system property (either part of omittedFields or beginning with _).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parseType\n                            \n                            \n                        \n                    \n                \n                \n                    \nparseType(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:113\n                            \n                        \n\n\n                \n                    \n                            Parses the property type (as contained in the property schema's title field). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { raw: string; name: any; relation: any; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(property: string, config: CrudConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Sets the given model config.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    CrudConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            ModelConfig.set(&#39;muffin&#39;, {\nfields: {\ntitle: {\nlabel: &#39;Muffin Titel&#39;\n}\n});\n                                        \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            omittedFields\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        omittedFields:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'id',\n    'private',\n    'created',\n    'creator',\n    'modified'\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:21\n                            \n                        \n\n                \n                    \n                        Array of property names that are omitted by default. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { CrudService } from '../crud/crud.service';\nimport { Config } from '@ec.components/core/src/config/config';\nimport { FieldConfig } from '@ec.components/core/src/config/field-config.interface';\nimport { FieldConfigProperty } from '@ec.components/core/src/config/field-config-property.interface';\nimport { SdkService } from '../sdk/sdk.service';\nimport { TypeConfigService } from './type-config.service';\nimport { ListConfig } from '@ec.components/core/src/list/list-config.interface';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport moment from 'moment-es6';\n\n/** The main class for configuring the behaviour of a model.\n * By default, everything is auto generated from the model's schema but can be overriden via the\n * set method. */\n@Injectable()\nexport class ModelConfigService extends Config {\n  /** Array of property names that are omitted by default. */\n  omittedFields: Array = [\n    'id',\n    'private',\n    'created',\n    'creator',\n    'modified'\n  ];\n\n  /** Injects CrudService and SdkService. */\n  constructor(private crud: CrudService,\n    private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private symbol: SymbolService) {\n    super();\n  }\n\n  /** Retrieves the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.get('muffin'); //returns muffin config;\n   * ```\n   * */\n  get(property: string): CrudConfig {\n    return this.configure('model', property);\n  }\n\n  /** Sets the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.set('muffin', {\n   *  fields: {\n   *    title: {\n   *      label: 'Muffin Titel'\n   *    }\n   *  });\n   * ```\n   * */\n  set(property: string, config: CrudConfig): CrudConfig {\n    return this.configure('model', property, config);\n  }\n\n  /** Checks if a given property name is a system property (either part of omittedFields or beginning with _).*/\n  isSystemProperty(property: string) {\n    return property[0] === '_' || this.omittedFields.indexOf(property) !== -1;\n  }\n\n  /** Assigns default system fields to given config. Does not override by default */\n  addSystemPropertiesToFieldConfig(config: FieldConfig, override = false) {\n    const defaultConfig = {\n      id: {\n        label: this.symbol.resolve('field.label.id'),\n        view: 'string',\n        form: false,\n        immutable: true,\n        hidden: true\n      },\n      _created: {\n        label: this.symbol.resolve('field.label.created'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        form: false,\n        immutable: true,\n        sortable: true,\n        hidden: true,\n        rawFilter: true\n      },\n      _modified: {\n        label: this.symbol.resolve('field.label.modified'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        form: false,\n        immutable: true,\n        sortable: true,\n        hidden: false,\n        rawFilter: true\n      },\n      _creator: {\n        label: this.symbol.resolve('field.label.creator'),\n        display: this.typeConfig.displayAccount(),\n        view: 'account',\n        form: false,\n        immutable: true,\n        hidden: true\n      }\n    };\n    Object.keys(defaultConfig).forEach(property =>\n      Object.assign(config, {\n        [property]: override ? defaultConfig[property] : config[property] || defaultConfig[property]\n      }));\n  }\n\n  /** Parses the property type (as contained in the property schema's title field). */\n  parseType(type: string) {\n    if (!type) {\n      return null;\n    }\n    const match = type.match(/^(\\w*)()?/i);\n    return !match.length ? null : {\n      raw: type,\n      name: match[1],\n      relation: match.length > 2 ? match[3] : null\n    };\n  }\n\n  /** Generates a proper fieldConfig for a given model and an optional local fieldConfig.\n   * Operates in three layers: If a local fieldConfig is given, it will be used.\n   * If no local fieldConfig is given, the global model's field config is used.\n   * If no global field config is found for that model, it will be generated from the model schema.\n   * */\n  generateFieldConfig(model: string, fields?): Promise> {\n    let fieldConfig;\n    return Promise.resolve().then(() => {\n      if (fields) {\n        return fields;\n      }\n      // use global config, if given\n      if (this.get(model) && this.get(model).fields) {\n        return this.get(model).fields;\n      }\n    }).then((config) => {\n      fieldConfig = config;\n      return this.sdk.getSchema(model);\n    }).then((schema) => {\n      schema = schema.allOf[1];\n      const properties = Object.keys(schema.properties)\n        .filter(property => (!fieldConfig && !this.isSystemProperty(property)) || (fieldConfig && !!fieldConfig[property]));\n      fieldConfig = fieldConfig || {};\n      this.addSystemPropertiesToFieldConfig(fieldConfig); // prepends system fields\n      properties.forEach(property => {\n        let type;\n        if (property === '_entryTitle') {\n          type = {\n            raw: 'text',\n            name: 'text',\n            model: null\n          };\n        } else {\n          type = this.parseType(schema.properties[property].title);\n        }\n        if (!type) {\n          console.error('Model Property Schema title ', schema.properties[property].title, ' was unexpected, ignoring property', property)\n          return;\n        }\n        fieldConfig[property] = Object.assign({\n          label: property,\n          schema: schema.properties[property],\n          relation: type.relation,\n          readOnly: schema.properties[property].readOnly || this.isSystemProperty(property),\n          // required: schema.required.indexOf(property) !== -1, // TODO\n          display: ((value) => value)\n        }, this.typeConfig.get(type.name),\n          fieldConfig[property] ? fieldConfig[property] : {});\n      });\n      return fieldConfig;\n    });\n  }\n\n  /** Returns the given model's config and generates a field config from the schema if it is not configured. */\n  generateConfig(model: string, fieldConfig?): Promise> {\n    const config = Object.assign({}, this.get(model) || {}); // clone\n    Object.assign(config, {\n      identifier: 'id',\n      identifierPattern: /^[0-9A-Za-z-_]{7,14}$/, // shortID pattern\n      label: '_entryTitle',\n      onSave: (item: Item, value) => this.crud.save(model, item.getBody(), value)\n    });\n    if (!model) {\n      return Promise.resolve(config);\n    }\n    return this.generateFieldConfig(model, fieldConfig).then((fields) => {\n      Object.assign(config, { fields });\n      return Promise.resolve(config);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfiguration.html":{"url":"interfaces/ModelConfiguration.html","title":"interface - ModelConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/model-configuration.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig, FieldConfigProperty } from '@ec.components/core';\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfiguration {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notification.html":{"url":"classes/Notification.html","title":"class - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/notifications/notification.ts\n        \n\n            \n                Description\n            \n            \n                A Notification is used inside NotificationService and NotificationComponent to display any information to the user.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                append\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                hide\n                            \n                            \n                                    Optional\n                                host\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                replace\n                            \n                            \n                                    Optional\n                                sticky\n                            \n                            \n                                    Optional\n                                time\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notification: Notification)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                            The constructor just looks if an error is set, and if yes, sets the type to error. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                  \n                                                        \n                                                                    Notification\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            append\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        append:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:22\n                            \n                        \n\n                \n                    \n                        If set, the notification will be appended to the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:18\n                            \n                        \n\n                \n                    \n                        If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hide:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:20\n                            \n                        \n\n                \n                    \n                        Notifications that should be hidden when this one gets active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            host\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        host:     NotificationsComponent\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:10\n                            \n                        \n\n                \n                    \n                        The host the is NotificationsComponent that should display the notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:8\n                            \n                        \n\n                \n                    \n                        The message is shown below the title and is meant for further description. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            replace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        replace:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                        If set, the notification will replace all others in the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sticky\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sticky:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:14\n                            \n                        \n\n                \n                    \n                        If true, the notification will stay forever \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            time\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        time:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:12\n                            \n                        \n\n                \n                    \n                        The amount of ms it should be visible \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:6\n                            \n                        \n\n                \n                    \n                        The title is the headline of a notification and the only value that is required. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:16\n                            \n                        \n\n                \n                    \n                        Determines the looks. Currently info, error and success are defined. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotificationsComponent } from './notifications.component';\n\n/** A Notification is used inside NotificationService and NotificationComponent to display any information to the user.*/\nexport class Notification {\n  /** The title is the headline of a notification and the only value that is required. */\n  title?: string;\n  /** The message is shown below the title and is meant for further description. */\n  message?: string;\n  /** The host the is NotificationsComponent that should display the notification. */\n  host?: NotificationsComponent;\n  /** The amount of ms it should be visible */\n  time?: number;\n  /** If true, the notification will stay forever */\n  sticky?: boolean;\n  /** Determines the looks. Currently info, error and success are defined. */\n  type?: string;\n  /** If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.*/\n  error?: any;\n  /** Notifications that should be hidden when this one gets active */\n  hide?: this[];\n  /** If set, the notification will be appended to the given array of Notifications when activated */\n  append?: this[];\n  /** If set, the notification will replace all others in the given array of Notifications when activated */\n  replace?: this[];\n\n  /** The constructor just looks if an error is set, and if yes, sets the type to error. */\n  constructor(notification: Notification) {\n    if (notification.error) {\n      this.type = 'error';\n    }\n    Object.assign(this, notification);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/notifications/notifications.component.ts\n\n\n    \n        Description\n    \n    \n        Displays any kind of Notification inside the DOM.\nIt listens on the notificationService.$emitter for notifications.\nhttps://components.entrecode.de/ui/notifications\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-notifications\n            \n\n            \n                styleUrls\n                notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                time\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/notifications.component.ts:22\n                            \n                        \n\n                \n                    \n                            Listens on the NotificationService and shows each notification that has this component set as host, or none at all. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        time\n                    \n                    \n                        The default time for a notification to be visible. Will be ignored if the notification itself has a time set. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Collection\n\n                    \n                \n                    \n                        \n                            Type :     Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.component.ts:20\n                            \n                        \n\n                \n                    \n                        The current stack of notifications that are visible. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Notifications\nThe Notifications Module is a combination of the NotificationsService and the NotificationsComponent.\nSimple Usage\n\nPlace the component somewhere in your app template:\n\n\nEmit notifications via the service\n\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  showNotification() {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        message: 'Das ist die Beschreibung'\n      });\n  }\n\n  doSomethingRisky() {\n      return Promise.reject('Fehler')\n      .catch((err) => {\n          this.notifications.emit({\n              error: err, // passing the error Object\n              title: 'Fehler!'\n          })\n      })\n  }\n}The given type will be added as class. The classes that are available by default can be looked up here.\nAdvanced Usage\nYou can also use multiple ec-notifications at different places:\n\n\nA\nBAll you have to do, is pass the instance of the component that should display the notification via the host property:\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  emit(host) {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        host: host\n      });\n  }\n}Hiding previous errors\nHere is an example usage of a typical success/error handling.\nIt features hiding previous notifications. We recommended you to use the WithNotifications interface for that case.\nexport class MuffinComponent implements WithNotifications {\n  /** Recent Error notification */\n  notifications: Notification[] = [];\n\nconstructor(\n    public bakery:BakeryService,\n    public notificationService: NotificationsService,\n    )\n\n  bake() {\n    this.bakery.bake().then(()=> {\n        this.notificationService.emit({\n            title: 'Muffin was baken!',\n            hide: this.notifications // this will hide all preceding notifications\n        })\n    }).catch(error=>{\n        this.notificationService.emit({\n            title: 'Error while baking',\n            sticky: true,\n            hide: this.notifications, // this will hide all preceding notifications\n            replace: this.notifications // this will replace the given array with the new notification\n        })\n    });\n  }\n}The hide option is useful to hide obsolete errors. E.g. If you successfully log in after one failiure, the sticky error notification of the first attempt will be hidden. This enables you to keep errors messages as long as they are needed.\nInstead of replace, you could also use append (see notification.component.ts for implementation).\n\n    \n\n    \n        import { Component, Input } from '@angular/core';\nimport { Notification } from './notification';\nimport { Collection } from '@ec.components/core/src/collection/collection';\nimport { NotificationsService } from './notifications.service';\n\n/** Displays any kind of Notification inside the DOM.\n * It listens on the notificationService.$emitter for notifications.\n * https://components.entrecode.de/ui/notifications\n * */\n@Component({\n  selector: 'ec-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent {\n  /** The current stack of notifications that are visible. */\n  notifications: Collection = new Collection([]);\n  /** The default time for a notification to be visible. Will be ignored if the notification itself has a time set. */\n  @Input() time: number;\n\n  /** Listens on the NotificationService and shows each notification that has this component set as host, or none at all. */\n  constructor(private notificationService: NotificationsService) {\n    this.time = this.time || this.notificationService.defaultTime;\n    this.notificationService.emitter$.subscribe((notification: Notification) => {\n      if (notification.hide) {\n        this.notifications.removeAll(notification.hide);\n      }\n      if (!notification.title && !notification.message) {\n        console.warn('tried to emit notification without message and title', notification);\n        return;\n      }\n      if (notification.append) {\n        notification.append.push(notification);\n      }\n      if (notification.replace) {\n        notification.replace.length = 0;\n        notification.replace.push(notification);\n      }\n      if (!notification.host || notification.host === this) {\n        this.notifications.add(notification);\n        if (notification.sticky) {\n          if (notification.time) {\n            console.warn('notification.time is ignored because it was set sticky');\n          }\n          return;\n        }\n        setTimeout(() => this.notifications.remove(notification), notification.time || this.time)\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    {{notification.title}}\n    {{notification.message}}\n    \n    \n    \n      \n        \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{notification.title}}    {{notification.message}}                                                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationsModule.html":{"url":"modules/NotificationsModule.html","title":"module - NotificationsModule","body":"\n                   \n\n\n\n\n  Modules\n  NotificationsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_imports\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\n\nErrorComponent\n\nErrorComponent\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nIconModule\n\nIconModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/notifications/notifications.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ErrorComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     NotificationsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IconModule\n                            \n                            \n                                    PopModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ErrorComponent\n                            \n                            \n                                    NotificationsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NotificationsComponent } from './notifications.component';\nimport { NotificationsService } from './notifications.service';\nimport { PopModule } from '../pop/pop.module';\nimport { ErrorComponent } from './error/error.component';\nimport { IconModule } from '../icon/icon.module';\n\n@NgModule({\n  declarations: [\n    NotificationsComponent,\n    ErrorComponent,\n  ],\n  imports: [\n    CommonModule,\n    PopModule,\n    IconModule,\n  ],\n  exports: [\n    NotificationsComponent,\n    ErrorComponent,\n  ],\n  providers: [\n    {\n      provide: 'useDesktopNotifications',\n      useValue: false\n    }, NotificationsService]\n})\nexport class NotificationsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/notifications/notifications.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the main interaction layer for the developer to show notifications.\nYou can use desktop notifications by default by providing:\n{\nprovide: \"useDesktopNotifications\",\nuseValue: true\n}in your module's providers.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultTime\n                            \n                            \n                                    Private\n                                emitter\n                            \n                            \n                                    Public\n                                emitter$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                desktopNotification\n                            \n                            \n                                emit\n                            \n                            \n                                getPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(useDesktopNotifications: )\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                            The constructors injects the useDesktopNotifications flag from the module.\nIf true, all notifications will be shown as desktop notifications instead. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        useDesktopNotifications\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desktopNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \ndesktopNotification(notification: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Emits a desktop notification after asking for permission (if not already granted). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emit\n                            \n                            \n                        \n                    \n                \n                \n                    \nemit(notification: Notification, desktop?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        desktop\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPermission()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Asks for permission to show desktop notifications, if not already granted. \n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            defaultTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                        The default view time for a notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            emitter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emitter:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:22\n                            \n                        \n\n                \n                    \n                        The emitter subject to fire notifications. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            emitter$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emitter$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.emitter.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:24\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when a new notification comes in. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { Notification } from './notification';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n/** Workaround to get window without typescript complaining */\ndeclare const window;\n\n/** This service is the main interaction layer for the developer to show notifications.\n * You can use desktop notifications by default by providing:\n * ```json\n {\n   provide: \"useDesktopNotifications\",\n   useValue: true\n }```\n * in your module's providers.\n *\n * */\n@Injectable()\nexport class NotificationsService {\n  /** The emitter subject to fire notifications. */\n  private emitter: Subject = new Subject();\n  /** Observable that is nexted when a new notification comes in. */\n  public emitter$: Observable = this.emitter.asObservable();\n  /** The default view time for a notification. */\n  public defaultTime = 5000;\n\n  /** The constructors injects the useDesktopNotifications flag from the module.\n   * If true, all notifications will be shown as desktop notifications instead. */\n  constructor(@Inject('useDesktopNotifications') private useDesktopNotifications) {\n  }\n\n  /** Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.*/\n  emit(notification: Notification, desktop?: boolean) {\n    const instance = new Notification(notification);\n    if (desktop || this.useDesktopNotifications) {\n      this.desktopNotification(instance);\n    } else {\n      this.emitter.next(instance);\n    }\n    return instance;\n  }\n\n  /** Asks for permission to show desktop notifications, if not already granted. */\n  getPermission(): Promise {\n    if (window.Notification.permission === 'granted') {\n      return Promise.resolve();\n    }\n    return window.Notification.requestPermission().then((permission) => {\n      // If the user accepts, let's create a notification\n      if (permission !== 'granted') {\n        return Promise.reject('Desktop Notification Permission Denied!');\n      }\n    });\n  }\n\n  /** Emits a desktop notification after asking for permission (if not already granted). */\n  desktopNotification(notification: Notification) {\n    if (!('Notification' in window)) {\n      console.warn('This browser does not support desktop notification');\n    }\n    this.getPermission().then(() => {\n      const message = new window.Notification(notification.title, { body: notification.message });\n      if (notification.sticky) {\n        if (notification.time) {\n          console.warn('notification.time is ignored because it was set sticky');\n        }\n        return;\n      }\n      setTimeout(() => message.close(), notification.time || this.defaultTime)\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OutputComponent.html":{"url":"components/OutputComponent.html","title":"component - OutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/output/output.component.ts\n\n\n    \n        Description\n    \n    \n        Outputs the given field of the given item, rendering the component dynamically. \n\n    \n\n    \n        Extends\n    \n    \n            DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-output\n            \n\n            \n                styleUrls\n                output.component.scss\n            \n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        The instance of field that should be used in the template \n\n                            \n                            Type:    Field\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/output/output.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                        The belonging item \n\n                            \n                            Type:    Item\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/output/output.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/output/output.component.ts:21\n                            \n                        \n\n\n                \n                    \n                            The component is loade as soon as the field and item are known.\nIf the field has no output property set, the DefaultOutputComponent will be rendered. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, data: Object)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldHost:     SlotHostDirective\n\n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges } from '@angular/core';\nimport { DefaultOutputComponent } from '../../form/default-output/default-output.component';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core/src/item/item';\n\n/** Outputs the given field of the given item, rendering the component dynamically. */\n@Component({\n  selector: 'ec-output',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n  styleUrls: ['./output.component.scss']\n})\nexport class OutputComponent extends DynamicSlotComponent implements OnChanges {\n  /** The instance of field that should be used in the template */\n  @Input() field: Field;\n  /** The belonging item */\n  @Input() item: Item;\n\n  /** The component is loade as soon as the field and item are known.\n   * If the field has no output property set, the DefaultOutputComponent will be rendered. */\n  ngOnChanges() {\n    if (this.field && this.item) {\n      this.loadComponent(this.field.output || DefaultOutputComponent,\n        {\n          item: this.item,\n          field: this.field\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'OutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/pagination/pagination.ts\n        \n\n            \n                Description\n            \n            \n                This class can be used to control the loading behaviour of external data. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                change\n                            \n                            \n                                    Public\n                                change$\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                pages\n                            \n                            \n                                    Protected\n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                first\n                            \n                            \n                                getPage\n                            \n                            \n                                getPages\n                            \n                            \n                                isActive\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                last\n                            \n                            \n                                    Protected\n                                load\n                            \n                            \n                                next\n                            \n                            \n                                params\n                            \n                            \n                                prev\n                            \n                            \n                                select\n                            \n                            \n                                setTotal\n                            \n                            \n                                slice\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: ListConfig, total?: number)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/pagination/pagination.ts:16\n                            \n                        \n\n                \n                    \n                            You can init each Pagination instance with an optional config.\nIf no config is provided, it will default to {page: 1, size: 25}. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ListConfig\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        change:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:14\n                            \n                        \n\n                \n                    \n                        Subject for tracking changes. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            change$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        change$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.change.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:16\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when the pagination has changed. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ListConfig\n\n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:10\n                            \n                        \n\n                \n                    \n                        The pagination config \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pages:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:12\n                            \n                        \n\n                \n                    \n                        Array to iterate over the number of pages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            total\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        total:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:8\n                            \n                        \n\n                \n                    \n                        The total number of items that is being paginated. It can be changed via setTotal. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first\n                            \n                            \n                        \n                    \n                \n                \n                    \nfirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:90\n                            \n                        \n\n\n                \n                    \n                            Loads the first Page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:34\n                            \n                        \n\n\n                \n                    \n                            Retrieves the current page \n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPages\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:39\n                            \n                        \n\n\n                \n                    \n                            Retrieves the number of pages \n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisActive(page: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:104\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given page number is currently active.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:109\n                            \n                        \n\n\n                \n                    \n                            Returns true if the current page is the first one \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLast\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:114\n                            \n                        \n\n\n                \n                    \n                            Returns true if the current page is the last one \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last\n                            \n                            \n                        \n                    \n                \n                \n                    \nlast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:95\n                            \n                        \n\n\n                \n                    \n                            Loads the last page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        load(config?: ListConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:74\n                            \n                        \n\n\n                \n                    \n                            Merges config and fires next on change \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ListConfig\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \nnext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:44\n                            \n                        \n\n\n                \n                    \n                            Loads the next page. Throws error if already on last page. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            params\n                            \n                            \n                        \n                    \n                \n                \n                    \nparams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:127\n                            \n                        \n\n\n                \n                    \n                            Returns an object with all relevant infos about the current state of pagination \n\n\n                            \n                                Returns :     { page: number; pages: number; total: number; from: number; to: any; size: any; }\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prev\n                            \n                            \n                        \n                    \n                \n                \n                    \nprev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:53\n                            \n                        \n\n\n                \n                    \n                            Loads the previous page. Throws error if already on first page. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(page: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:82\n                            \n                        \n\n\n                \n                    \n                            Selects the given page number \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTotal\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTotal(total: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:64\n                            \n                        \n\n\n                \n                    \n                            Sets the total number of items and calculcates the page count.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        total\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slice\n                            \n                            \n                        \n                    \n                \n                \n                    \nslice(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:122\n                            \n                        \n\n\n                \n                    \n                            slices a given array according to the current pagination state \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSize(size: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:138\n                            \n                        \n\n\n                \n                    \n                            updates the size of the pages.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        size\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Pagination\nPagination can be used to keep track of the pages of arbitrary items.\nconst pagination = new Pagination({ size: 10 });\npagination.setTotal(50); //tells the pagination that it should paginate over 50 items.\npagination.getPages(); //5See list.ts/list.component for example usage.\n\n    \n\n    \n        import { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { ListConfig } from '../list/list-config.interface';\n\n/** This class can be used to control the loading behaviour of external data. */\nexport class Pagination {\n  /** The total number of items that is being paginated. It can be changed via setTotal. */\n  protected total: number;\n  /** The pagination config */\n  protected config: ListConfig;\n  /** Array to iterate over the number of pages. */\n  public pages: Array;\n  /** Subject for tracking changes. */\n  private change = new Subject();\n  /** Observable that is nexted when the pagination has changed. */\n  public change$: Observable = this.change.asObservable();\n\n  /** You can init each Pagination instance with an optional config.\n   * If no config is provided, it will default to ```{page: 1, size: 25}```. */\n  constructor(config?: ListConfig, total?: number) {\n    this.config = { page: 1, size: 25 };\n    Object.assign(this.config, config);\n    Object.assign(this.config, {\n      availableSizes: Array.from(new Set([this.config.size]\n        .concat(this.config.availableSizes || [], [10, 25, 50, 100], [this.config.size])\n        .sort(((a, b) => a - b))))\n    });\n    if (total) {\n      this.setTotal(total);\n    }\n  }\n\n  /** Retrieves the current page */\n  getPage(): number {\n    return this.config.page;\n  }\n\n  /** Retrieves the number of pages */\n  getPages(): number {\n    return this.pages ? this.pages.length : 0;\n  }\n\n  /** Loads the next page. Throws error if already on last page. */\n  next(): void {\n    if (this.isLast()) {\n      return; // already last page\n    }\n    this.config.page += 1;\n    this.load();\n  }\n\n  /** Loads the previous page. Throws error if already on first page. */\n  prev(): void {\n    if (this.isFirst()) {\n      return; // already first page\n    }\n    this.config.page -= 1;\n    this.load();\n  }\n\n  /**\n   * Sets the total number of items and calculcates the page count.\n   * */\n  setTotal(total: number) {\n    this.total = total;\n    this.pages = new Array(Math.ceil(this.total / this.config.size));\n    if (this.config.page !== 1 && this.config.page > this.pages.length) {\n      this.config.page = this.pages.length || 1;\n      this.load();\n    }\n  }\n\n  /** Merges config and fires next on change */\n  protected load(config?: ListConfig): void {\n    if (config) {\n      Object.assign(this.config, config);\n    }\n    this.change.next(this.config);\n  }\n\n  /** Selects the given page number */\n  select(page: number): void {\n    if (page === this.config.page) {\n      return;\n    }\n    this.load({ page: page });\n  }\n\n  /** Loads the first Page */\n  first(): void {\n    this.load({ page: 1 });\n  }\n\n  /** Loads the last page */\n  last() {\n    if (!this.pages) {\n      throw new Error(`Cannot load last page without knowing the item count.\n        Call setTotal(itemCount) before loading.`);\n    }\n    this.load({ page: this.pages.length });\n  }\n\n  /** Returns true if the given page number is currently active.*/\n  isActive(page: number): boolean {\n    return this.config.page === page;\n  }\n\n  /** Returns true if the current page is the first one */\n  isFirst(): boolean {\n    return this.config.page === 1;\n  }\n\n  /** Returns true if the current page is the last one */\n  isLast(): boolean {\n    if (!this.pages) {\n      return true;\n    }\n    return this.config.page === this.pages.length;\n  }\n\n  /** slices a given array according to the current pagination state */\n  slice(items: Array): Array {\n    return items.slice((this.config.page - 1) * this.config.size, (this.config.page) * this.config.size);\n  }\n\n  /** Returns an object with all relevant infos about the current state of pagination */\n  params() {\n    return {\n      page: this.getPage(),\n      pages: this.getPages(),\n      total: this.total,\n      from: (this.getPage() - 1) * this.config.size + 1,\n      to: Math.min(this.getPage() * this.config.size, this.total),\n      size: this.config.size\n    }\n  }\n  /** updates the size of the pages.  */\n  updateSize(size: number) {\n    if (!size) {\n      return;\n    }\n    this.load({ size, page: 1 });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/pagination/pagination.component.ts\n\n\n    \n        Description\n    \n    \n        The Pagination component renders a given instance of the Pagination class.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n                AfterViewInit\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pagination\n            \n\n            \n                styleUrls\n                pagination.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                page\n                            \n                            \n                                    Private\n                                pageContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                translateContainer\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                pagination\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        The config that is used \n\n                            \n                            Type:    PaginationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pagination\n                    \n                    \n                        A Pagination Instance \n\n                            \n                            Type:    Pagination\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \nisVisible(page: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Determines if a page should be visible \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            When the view is ready, the container is translated.  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            As soon as the pagination is known, the change$ event is subscribed to translate the container on change.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Init config. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \ntranslateContainer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Translates the page container that the current page is in the middle \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSize(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:18\n                            \n                        \n\n                \n                    \n                        The div container for the pages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            page\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        page:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:22\n                            \n                        \n\n                \n                    \n                        The pages li elements. The first one is used to determine the container translation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pageContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageContainer:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:20\n                            \n                        \n\n                \n                    \n                        The ul around pages \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Pagination\nTODO\n\n    \n\n    \n        import { AfterViewInit, Component, ElementRef, Input, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { Pagination } from '@ec.components/core';\nimport { PaginationConfig } from './pagination-config.interface';\n\n/**\n * The Pagination component renders a given instance of the Pagination class.\n */\n@Component({\n  selector: 'ec-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.scss']\n})\nexport class PaginationComponent implements OnChanges, AfterViewInit, OnInit {\n  /** A Pagination Instance */\n  @Input() pagination: Pagination;\n  /** The div container for the pages*/\n  @ViewChild('container') private container: ElementRef;\n  /** The ul around pages */\n  @ViewChild('pageContainer') private pageContainer: ElementRef;\n  /** The pages li elements. The first one is used to determine the container translation. */\n  @ViewChildren('page') private page: QueryList;\n  /** The config that is used */\n  @Input() config: PaginationConfig;\n  /** Init config. */\n\n  /** Init config. */\n  ngOnInit() {\n    this.config = new PaginationConfig(this.config);\n  }\n\n  /** As soon as the pagination is known, the change$ event is subscribed to translate the container on change.*/\n  ngOnChanges() {\n    if (!this.pagination) {\n      return;\n    }\n    this.pagination.change$.subscribe((config) => {\n      this.translateContainer();\n    });\n    this.config = new PaginationConfig(this.config);\n  }\n  /** When the view is ready, the container is translated.  */\n  ngAfterViewInit() {\n    this.translateContainer();\n  }\n\n  /** Translates the page container that the current page is in the middle */\n  translateContainer() {\n    if (!this.page || !this.pageContainer) {\n      // console.warn('pages not ready');\n      return;\n    }\n    const itemWidth = this.page.first.nativeElement.clientWidth;\n    const page = this.pagination.getPage();\n    let translation = Math.max(0, itemWidth * (page - this.config.range - 1));\n    translation = Math.min(translation, (this.pagination.getPages() - (2 * this.config.range) - 1) * itemWidth);\n    this.pageContainer.nativeElement.style = `transform:translateX(-${translation}px)`;\n    this.container.nativeElement.style = `max-width:${(1 + 2 * this.config.range) * itemWidth}px`;\n  }\n\n  /** Determines if a page should be visible */\n  isVisible(page) {\n    const current = this.pagination.getPage();\n    return Math.abs(current - page) \n    \n\n    \n        \n  \n    1\">\n      \n        \n          {{'pagination.first' | symbol}}\n        \n      \n      \n        \n          {{'pagination.prev' | symbol}}\n        \n      \n    \n    1\">\n      \n        \n          \n            {{i+1}}\n          \n        \n      \n    \n    1\">\n      \n        \n          {{'pagination.next' | symbol}}\n        \n      \n      \n        \n          {{'pagination.last' | symbol}}\n        \n      \n    \n  \n  \n    {{pagination.params().from}} - {{pagination.params().to}} {{ 'pagination.of' | symbol}} {{pagination.params().total}}\n  \n  \n     1\" (change)=\"updateSize($event.target.value)\" class=\"input\">\n      \n        {{size}} {{'pagination.size' | symbol}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      1\">                        {{\\'pagination.first\\' | symbol}}                                      {{\\'pagination.prev\\' | symbol}}                      1\">                                    {{i+1}}                                1\">                        {{\\'pagination.next\\' | symbol}}                                      {{\\'pagination.last\\' | symbol}}                          {{pagination.params().from}} - {{pagination.params().to}} {{ \\'pagination.of\\' | symbol}} {{pagination.params().total}}         1\" (change)=\"updateSize($event.target.value)\" class=\"input\">              {{size}} {{\\'pagination.size\\' | symbol}}            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationConfig.html":{"url":"classes/PaginationConfig.html","title":"class - PaginationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/list/pagination/pagination-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for a pagination component \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideFirstLast\n                            \n                            \n                                hidePages\n                            \n                            \n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: PaginationConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor assigns the config \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    PaginationConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideFirstLast\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hideFirstLast:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:9\n                            \n                        \n\n                \n                    \n                        Hides first and last Link \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hidePages:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                        Hides pages \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            range\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        range:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:7\n                            \n                        \n\n                \n                    \n                        Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\nNOTE: For a smoother UX, there are minimum 2 * range + 1 pages visible.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\n\n/** Configuration for a pagination component */\nexport class PaginationConfig {\n    /** Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\n * NOTE: For a smoother UX, there are minimum ```2 * range + 1``` pages visible.*/\n    range = 2;\n    /** Hides first and last Link */\n    hideFirstLast: boolean;\n    /** Hides pages */\n    hidePages: boolean;\n    /** The constructor assigns the config */\n    constructor(config: PaginationConfig) {\n        Object.assign(this, config);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordResetComponent.html":{"url":"components/PasswordResetComponent.html","title":"component - PasswordResetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordResetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/auth/password-reset/password-reset.component.ts\n\n\n    \n        Description\n    \n    \n        Form to send password reset request. \n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-password-reset\n            \n\n\n\n\n            \n                templateUrl\n                password-reset.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                email\n                            \n                            \n                                loader\n                            \n                            \n                                lockForm\n                            \n                            \n                                    Public\n                                notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                reset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/password-reset/password-reset.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        Optional api to be used (if not using sdk.api instance) \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        Custom placeholder for email field \n\n                        \n                            Default value: 'E-Mail Adresse...'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Event after request was successful \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Sends request through AuthService and shows notifications + loader. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:16\n                            \n                        \n\n                \n                    \n                        The user email \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     \n\n                    \n                \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:24\n                            \n                        \n\n                \n                    \n                        The loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lockForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lockForm:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:14\n                            \n                        \n\n                \n                    \n                        To ensure the user only sends one request, the form is locked after the request has been sent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { LoaderComponent, NotificationsService, WithLoader } from '@ec.components/ui';\nimport { AuthService } from '../auth.service';\n\n/** Form to send password reset request. */\n@Component({\n  selector: 'ec-password-reset',\n  templateUrl: 'password-reset.component.html'\n})\n\nexport class PasswordResetComponent implements WithLoader {\n  /** To ensure the user only sends one request, the form is locked after the request has been sent */\n  lockForm: boolean;\n  /** The user email */\n  email: string;\n  /** Optional api to be used (if not using sdk.api instance) */\n  @Input() api: PublicAPI;\n  /** Custom placeholder for email field */\n  @Input() placeholder = 'E-Mail Adresse...';\n  /** Event after request was successful */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The loader */\n  @ViewChild(LoaderComponent) loader;\n\n  constructor(public auth: AuthService, public notifications: NotificationsService) {\n  }\n  /** Sends request through AuthService and shows notifications + loader. */\n  reset() {\n    const reset = this.auth.resetPassword(this.email, this.api)\n      .then(() => {\n        this.notifications.emit({\n          type: 'success',\n          title: 'Mail versendet',\n          message: 'Sie haben soeben eine Mail mit weiteren Anweisungen erhalten',\n          sticky: true\n        });\n        this.lockForm = true;\n        this.success.emit();\n      }).catch((error) => {\n        this.notifications.emit({\n          title: 'Fehler beim Passwort zurücksetzen',\n          error,\n          sticky: true\n        });\n        console.log('could not reset password', error);\n      });\n    this.loader.wait(reset);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  Passwort zurücksetzen\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Passwort zurücksetzen'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordResetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PopComponent.html":{"url":"components/PopComponent.html","title":"component - PopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PopComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/pop/pop.component.ts\n\n\n    \n        Description\n    \n    \n        A Pop is an area of content whose visibility can be toggled.\nIt can be used e.g as dialog, drawer or dialog.\nhttps://components.entrecode.de/ui/pop\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pop\n            \n\n            \n                styleUrls\n                pop.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pop.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/pop/pop.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                    \n                        If true, .visible is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        Emits the value of visible on change. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. First removes visible and after the delay it removes active. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. First sets active and after the delay it sets visible. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(visible: boolean, emit: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Shows if not visible, hides if visible. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        visible\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                !this.visible\n                                                        \n\n                                                \n                                                \n                                                        emit\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:25\n                            \n                        \n\n                \n                    \n                        The amount of time between setting active and visible. Defaults to 0. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Pop\nA Pop is not just a modal, but a section of markup that appears (pops) anywhere and with any style on your page.\nUsage\n\n    \n        Close\n    \n    \n        Some body content\n    \n    \n        This is the footer\n    \n\nShow popThe default pop classes can be looked up here.\n\n    \n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PopService } from './pop.service';\n\n/** A Pop is an area of content whose visibility can be toggled.\n * It can be used e.g as dialog, drawer or dialog.\n * https://components.entrecode.de/ui/pop\n * */\n@Component({\n  selector: 'ec-pop',\n  templateUrl: './pop.component.html',\n  styleUrls: ['./pop.component.scss']\n})\nexport class PopComponent {\n  /** If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  */\n  @Input() active: boolean;\n  /** If true, .visible is set on .ec-pop-container.  */\n  @Input() visible: boolean;\n  /** Emits the value of visible on change. */\n  // tslint:disable-next-line:no-output-rename\n  @Output('toggle') _toggle: EventEmitter = new EventEmitter();\n  /** The amount of time between setting active and visible. Defaults to 0. */\n  delay = 0;\n\n  constructor(protected popService: PopService) {\n  }\n\n  /** Shows if not visible, hides if visible. */\n  public toggle(visible: boolean = !this.visible, emit: boolean = false) {\n    if (!visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n    if (emit) {\n      this._toggle.emit(visible);\n    }\n  }\n\n  /** Shows the pop. First sets active and after the delay it sets visible. */\n  public show() {\n    this.active = true;\n    this.popService.stack.add(this);\n    setTimeout(() => {\n      this.visible = true;\n    }, this.delay);\n  }\n\n  /** Hides the pop. First removes visible and after the delay it removes active. */\n  public hide() {\n    this.visible = false;\n    this.popService.stack.remove(this);\n    if (!this.delay) {\n      return;\n    }\n    setTimeout(() => {\n      this.active = false;\n    }, this.delay);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'PopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PopModule.html":{"url":"modules/PopModule.html","title":"module - PopModule","body":"\n                   \n\n\n\n\n  Modules\n  PopModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\n\nPopComponent\n\nPopComponent\n\n\n\nPopModule\n\nPopModule\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/pop/pop.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PopComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     PopService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    PopComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PopComponent } from './pop.component';\nimport { PopService } from './pop.service';\n\n@NgModule({\n  declarations: [\n    PopComponent\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    PopComponent\n  ],\n  providers: [PopService]\n})\nexport class PopModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PopService.html":{"url":"injectables/PopService.html","title":"injectable - PopService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PopService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/pop/pop.service.ts\n        \n\n            \n                Description\n            \n            \n                Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stack\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/pop/pop.service.ts:9\n                            \n                        \n\n                \n                    \n                            Listens for escape keys and hides latest pop + removes the pop from stack \n\n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stack:     Collection\n\n                    \n                \n                    \n                        \n                            Type :     Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.service.ts:9\n                            \n                        \n\n                \n                    \n                        Stack of current opened pops \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Collection } from '@ec.components/core';\nimport { PopComponent } from './pop.component';\n\n/** Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. */\n@Injectable()\nexport class PopService {\n    /** Stack of current opened pops */\n    stack: Collection = new Collection();\n    /** Listens for escape keys and hides latest pop + removes the pop from stack */\n    constructor() {\n        window.addEventListener('keydown', (event) => {\n            if ((event.keyCode === 27 || event.key === 'Escape') && this.stack.items.length) {\n                const latestPop = this.stack.items[this.stack.items.length - 1];\n                latestPop.hide();\n                this.stack.remove(latestPop);\n            }\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceConfig.html":{"url":"injectables/ResourceConfig.html","title":"injectable - ResourceConfig","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ResourceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/resource-config/resource-config.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                base64uuid\n                            \n                            \n                                created\n                            \n                            \n                                get\n                            \n                            \n                                hexColor\n                            \n                            \n                                shortID\n                            \n                            \n                                stringField\n                            \n                            \n                                tagsField\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService, typeConfig: TypeConfigService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-config/resource-config.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                    TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            base64uuid\n                            \n                            \n                        \n                    \n                \n                \n                    \nbase64uuid()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            regex for base64 uuid \n\n\n                            \n                                Returns :     RegExp\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreated(label: string, symbol: SymbolService)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            returns the config for a created field \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'Date'\n                                                        \n\n                                                \n                                                \n                                                        symbol\n                                                        \n                                                                    SymbolService\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { label: string; sortable: boolean; view: string; display: any; group: any; form: boolean; immuta...\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(relationName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:15\n                            \n                        \n\n\n                \n                    \n                            Returns the CrudConfig for the given relation name. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relationName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hexColor\n                            \n                            \n                        \n                    \n                \n                \n                    \nhexColor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            returns the config for a hexColor field \n\n\n                            \n                                Returns :     { label: string; view: string; prefill: string; }\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shortID\n                            \n                            \n                        \n                    \n                \n                \n                    \nshortID()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            returns regex for a shortID \n\n\n                            \n                                Returns :     RegExp\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stringField\n                            \n                            \n                        \n                    \n                \n                \n                    \nstringField(label: , filterable: , sortable: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            returns the config for a string field \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        filterable\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                                \n                                                        sortable\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { label: any; view: string; filterable: boolean; sortable: boolean; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagsField\n                            \n                            \n                        \n                    \n                \n                \n                    \ntagsField(label: , list: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            returns the config for a tags field \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        list\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { label: any; view: string; display: (value: any) => any; list: boolean; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuid\n                            \n                            \n                        \n                    \n                \n                \n                    \nuuid()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            returns regex for a uuid \n\n\n                            \n                                Returns :     RegExp\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n                \n                    \n                        getconfig()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:76\n                                \n                            \n                    \n                        \n                                Returns the whole resource-config, which maps a resource relation name to a CrudConfig. \n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DefaultEntryInputComponent } from '@ec.components/data/src/entry-form/default-entry-input.component';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { AdminEntryInputComponent } from '../entry-form/admin-entry-input.component';\nimport { TypeConfigService } from '../model-config/type-config.service';\n\n@Injectable()\n/** Contains default configurations for all kinds of resources. Used by ResourceList and ResourceForm.  */\nexport class ResourceConfig {\n\n  constructor(private symbol: SymbolService, private typeConfig: TypeConfigService) { }\n  /** Returns the CrudConfig for the given relation name. */\n  get(relationName: string): CrudConfig {\n    if (!this.config[relationName]) {\n      console.error(`${relationName} could not be found in the resource-config.\n      Use one of ${Object.keys(this.config[relationName])}`);\n      return;\n    } // TODO enrich fields with type with type-config?\n    return this.config[relationName];\n  }\n\n  /** returns the config for a created field */\n  created(label = 'Date', symbol: SymbolService) {\n    return {\n      label,\n      sortable: true,\n      view: 'date',\n      display: this.typeConfig.displayDate(),\n      group: this.typeConfig.groupDate(),\n      form: false,\n      immutable: true\n    }\n  };\n  /** returns the config for a hexColor field */\n  hexColor() {\n    return {\n      label: '#',\n      view: 'color',\n      prefill: '#ffffff'\n    }\n  };\n  /** returns the config for a tags field */\n  tagsField(label, list = true) {\n    return {\n      label,\n      view: 'tags',\n      display: (value) => value || [],\n      list\n    };\n  }\n  /** returns the config for a string field */\n  stringField(label, filterable = true, sortable = true) {\n    return {\n      label,\n      view: 'string',\n      filterable,\n      sortable\n    };\n  }\n  /** returns regex for a shortID */\n  shortID(): RegExp {\n    return /^[0-9A-Za-z-_]{7,14}$/;\n  }\n  /** returns regex for a uuid */\n  uuid(): RegExp {\n    return /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\n  }\n  /** regex for base64 uuid */\n  base64uuid(): RegExp {\n    return /^[a-zA-Z0-9\\\\-_]{22}$/;\n  }\n\n  /** Returns the whole resource-config, which maps a resource relation name to a CrudConfig. */\n  get config(): { [key: string]: CrudConfig } {\n    return {\n      dataManager: {\n        identifier: 'dataManagerID',\n        identifierPattern: this.uuid(),\n        label: 'title',\n        permissions: {\n          post: 'dm-create',\n          put: 'dm::edit',\n          delete: 'dm::delete',\n          get: true\n        },\n        fields: {\n          hexColor: this.hexColor(),\n          shortID: {\n            immutable: true,\n            list: false\n          },\n          title: Object.assign(this.stringField('Name'), { required: true }),\n          description: {\n            label: this.symbol.resolve('field.label.description'),\n            view: 'string',\n            filterable: true\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            view: 'json',\n            list: false,\n            immutable: true\n          },\n          defaultLocale: {\n            list: false,\n            immutable: true\n          },\n          locales: this.tagsField(this.symbol.resolve('field.label.locales'), false),\n          publicAssetRights: Object.assign(\n            this.tagsField(this.symbol.resolve('datamanager.field.label.publicAssetRights'), false),\n            { immutable: true }),\n          rights: Object.assign(this.tagsField('rights', false), { immutable: true }),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      model: {\n        identifier: 'modelID',\n        identifierPattern: this.uuid(),\n        label: 'title',\n        fields: {\n          hexColor: this.hexColor(),\n          title: Object.assign(this.stringField('Model'), { required: true }),\n          description: {\n            label: this.symbol.resolve('field.label.description'),\n            view: 'string',\n            filterable: true,\n          },\n          locales: {\n            list: false,\n            prefill: []\n          },\n          fields: {\n            view: 'tags',\n            display: (value) => {\n              return (value || []).map(field => field.title).filter(field => field[0] !== '_')\n            },\n            prefill: []\n          },\n          titleField: {\n            view: 'string',\n            list: false\n          },\n          config: {\n            list: false,\n            view: 'json'\n          },\n          hasEntries: {\n            immutable: true,\n            view: 'boolean'\n          },\n          hooks: {\n            display: (value) => {\n              return (value || []).map(hook => (hook.methods || []).join(', '))\n            },\n            view: 'tags'\n          },\n          policies: {\n            display: (value) => {\n              return (value || []).map(policy => policy.method)\n            },\n            view: 'tags'\n          },\n          sync: {\n            list: false,\n            view: 'json',\n            immutable: true\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      // ec accounts\n      account: {\n        identifier: 'accountID',\n        identifierPattern: this.uuid(),\n        label: 'email',\n        permissions: {\n          get: 'acc:list',\n          put: 'acc:edit:'\n        },\n        fields: {\n          name: this.stringField(this.symbol.resolve('field.label.name')),\n          email: {\n            label: this.symbol.resolve('field.label.email'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          hasPassword: {\n            label: this.symbol.resolve('field.label.password'),\n            view: 'boolean',\n            filterable: true,\n            sortable: true,\n            readOnly: true\n          },\n          hasPendingEmail: {\n            label: this.symbol.resolve('account.field.label.hasPendingEmail'),\n            view: 'boolean',\n            filterable: true,\n            sortable: true,\n            readOnly: true\n          },\n          language: {\n            label: this.symbol.resolve('account.field.label.language'),\n            view: 'string',\n            list: false\n          },\n          openID: {\n            list: false\n          },\n          permissions: this.tagsField(this.symbol.resolve('account.field.label.permissions'), false),\n          groups: {\n            label: this.symbol.resolve('account.field.label.groups'),\n            type: 'groups',\n            input: DefaultEntryInputComponent,\n            list: false,\n            display: (value) => value ? value.map(group => group.name) : []\n          },\n          state: {\n            label: this.symbol.resolve('account.field.label.state')\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dmAccount: {\n        identifier: 'accountID',\n        identifierPattern: this.uuid(),\n        label: 'title',\n        permissions: {\n          get: 'acc:list',\n          put: 'acc:edit:'\n        },\n        methods: ['get', 'put', 'delete'],\n        fields: {\n          accountID: {\n            label: this.symbol.resolve('field.label.id'),\n            view: 'string'\n          },\n          email: {\n            label: this.symbol.resolve('field.label.email'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          hasPassword: {\n            label: this.symbol.resolve('dmAccount.field.label.hasPassword'),\n            view: 'boolean',\n            filterable: true,\n            readOnly: true\n          },\n          pending: {\n            label: this.symbol.resolve('dmAccount.field.label.pending'),\n            view: 'boolean',\n            filterable: true,\n            readOnly: true\n          },\n          oauth: {\n            list: false\n          }\n        }\n      },\n      template: {\n        identifier: 'templateID',\n        identifierPattern: this.uuid(),\n        label: 'name',\n        permissions: {\n          post: 'dm-template-create',\n          get: 'dm-template::view'\n        },\n        fields: {\n          name: {\n            label: this.symbol.resolve('template.field.label.template'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          version: {\n            label: this.symbol.resolve('template.field.label.version'),\n            display: this.typeConfig.displayDate(),\n            group: this.typeConfig.groupDate(),\n            form: false\n          }\n        }\n      },\n      app: {\n        identifier: 'appID',\n        identifierPattern: this.uuid(),\n        permissions: {\n          post: 'app-create',\n          delete: 'app::delete',\n          put: 'app::edit'\n        },\n        fields: {\n          hexColor: this.hexColor(),\n          shortID: {\n            label: this.symbol.resolve('field.label.shortID'),\n            list: false\n          },\n          title: {\n            label: this.symbol.resolve('app.field.label.app'),\n            view: 'string',\n            filterable: true,\n            sortable: true,\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      platform: {\n        identifier: 'platformID',\n        identifierPattern: this.uuid(),\n        fields: {\n          title: {\n            label: this.symbol.resolve('platform.field.label.platform'),\n            view: 'string'\n          },\n          platformType: {\n            label: this.symbol.resolve('platform.field.label.platformType'),\n            view: 'string'\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            view: 'json',\n            list: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      asset: { // old ec.asset\n        identifier: 'assetID',\n        identifierPattern: this.uuid(),\n        fields: {\n          thumb: {\n            form: false,\n            label: this.symbol.resolve('asset.field.label.thumb'),\n            view: 'preview',\n            resolve: (asset) => {\n              if (asset.type !== 'image') {\n                return '';\n              }\n              return asset.getImageUrl(200);\n            },\n            immutable: true\n          },\n          assetID: {\n            label: 'assetID',\n            list: false,\n            form: false,\n            immutable: true\n          },\n          title: {\n            label: this.symbol.resolve('field.label.title'),\n            view: 'string',\n            sortable: true,\n            filterable: true\n          },\n          files: {\n            label: this.symbol.resolve('asset.field.label.files'),\n            view: 'tag',\n            form: false,\n            display: value => value.length,\n            immutable: true\n          },\n          tags: this.tagsField(this.symbol.resolve('asset.field.label.tags')),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      legacyAsset: { // old public assets\n        identifier: 'assetID',\n        identifierPattern: this.uuid(),\n        fields: {\n          thumb: {\n            form: false,\n            label: this.symbol.resolve('asset.field.label.thumb'),\n            view: 'preview',\n            resolve: (asset) => {\n              if (asset.type !== 'image') {\n                return '';\n              }\n              return asset.getImageUrl(200);\n            },\n            immutable: true\n          },\n          assetID: {\n            label: 'assetID',\n            list: false,\n            form: false,\n            immutable: true\n          },\n          title: {\n            label: this.symbol.resolve('field.label.title'),\n            view: 'string',\n            sortable: true,\n            filterable: true\n          },\n          files: {\n            label: this.symbol.resolve('asset.field.label.files'),\n            view: 'tag',\n            form: false,\n            display: value => value.length,\n            immutable: true\n          },\n          tags: this.tagsField(this.symbol.resolve('asset.field.label.tags')),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      // https://doc.entrecode.de/en/develop/resources/dm-assetgroup/\n      assetGroup: {\n        identifier: 'assetGroupID',\n        fields: {\n          assetGroupID: {\n            label: this.symbol.resolve('asset.field.label.assetGroupID'),\n            view: 'string',\n            filterable: true\n          },\n          public: {\n            view: 'boolean',\n            prefill: false\n          },\n          settings: {\n            view: 'json',\n            display: (json) => JSON.stringify(json),\n            prefill: {}\n            /*\n            urlExpiration: string\n            disabledTypes: Array\n            imageSizes: Array\n            thumbSizes: Array\n            */\n          },\n          policies: {\n            view: 'tags',\n            display: (policies) => (policies || []).map(p => p.method),\n            prefill: []\n            /*\n            method: get, put, post, delete\n            user: public, dmUser\n            conditions: JSON or null (https://entrecode.de/schema/dm-assetgroup#definitions/conditions)\n            */\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dmAsset: { // new assets\n        identifier: 'assetID',\n        identifierPattern: this.base64uuid(),\n        fields: {\n          file: {\n            label: this.symbol.resolve('dmAsset.field.label.file'),\n            display: value => value.url,\n            view: 'preview',\n            immutable: true,\n            form: false\n          },\n          thumb: {\n            form: false,\n            list: false,\n            label: this.symbol.resolve('asset.field.label.thumb'),\n            view: 'preview',\n            resolve: (asset) => {\n              if (asset.type !== 'image' || !asset.thumbnails || !asset.thumbnails.length) {\n                return '';\n              }\n              return asset.thumbnails[0].url;\n            },\n            immutable: true\n          },\n          assetID: {\n            label: this.symbol.resolve('dmAsset.field.label.assetID'),\n            list: false,\n            form: false,\n            immutable: true\n          },\n          title: {\n            label: this.symbol.resolve('field.label.title'),\n            view: 'string',\n            sortable: true,\n            filterable: true\n          },\n          caption: {\n            label: this.symbol.resolve('dmAsset.field.label.caption'),\n            view: 'string'\n          },\n          duplicates: {\n            label: this.symbol.resolve('dmAsset.field.label.duplicates'),\n            view: 'number',\n            list: false,\n            form: false\n          },\n          thumbnails: {\n            label: this.symbol.resolve('dmAsset.field.label.thumbnails'),\n            display: values => values.map(value => value.url),\n            list: false,\n            form: false\n          },\n          type: {\n            label: this.symbol.resolve('dmAsset.field.label.type'),\n            view: 'string',\n            immutable: true,\n            form: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dmClient: {\n        identifier: 'clientID',\n        fields: {\n          clientID: {\n            label: this.symbol.resolve('client.field.label.clientID'),\n            view: 'string'\n          },\n          callbackURL: {\n            label: this.symbol.resolve('client.field.label.callbackURL'),\n            view: 'string',\n          },\n          tokenMethod: this.tagsField(this.symbol.resolve('client.field.label.tokenMethod')),\n          disableStrategies: this.tagsField(this.symbol.resolve('client.field.label.disableStrategies')),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      role: {\n        identifier: 'roleID',\n        identifierPattern: this.uuid(),\n        label: 'name',\n        fields: {\n          name: {\n            label: this.symbol.resolve('field.label.name'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          label: {\n            label: this.symbol.resolve('field.label.label'),\n            view: 'string'\n          },\n          accounts: {\n            label: this.symbol.resolve('role.field.label.accounts'),\n            type: 'accounts',\n            prefill: [],\n            list: false,\n            display: (value) => value ? value.title : '',\n            input: AdminEntryInputComponent,\n            filterPopClass: 'ec-pop_dialog'\n          },\n          addRegistered: {\n            label: this.symbol.resolve('role.field.label.addRegistered'),\n            view: 'boolean'/* ,\n        prefill: false */\n          },\n          addUnregistered: {\n            label: this.symbol.resolve('role.field.label.addUnregistered'),\n            view: 'boolean'/* ,\n        prefill: false */\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      codeSource: {\n        identifier: 'codeSourceID',\n        identifierPattern: this.uuid(),\n        fields: {\n          codeSourceID: {\n            label: this.symbol.resolve('field.label.id'),\n          },\n          codeSourceType: {\n            label: this.symbol.resolve('field.label.type'),\n            view: 'tag'\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            list: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dataSource: {\n        identifier: 'dataSourceID',\n        identifierPattern: this.uuid(),\n        fields: {\n          dataSourceID: {\n            label: this.symbol.resolve('field.label.id'),\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      target: {\n        identifier: 'targetID',\n        identifierPattern: this.uuid(),\n        fields: {\n          targetType: {\n            label: this.symbol.resolve('field.label.type'),\n            view: 'tag'\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            list: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      group: {\n        identifier: 'groupID',\n        identifierPattern: this.uuid(),\n        label: 'name',\n        fields: {\n          name: {\n            label: this.symbol.resolve('field.label.name'),\n          },\n          permissions: {\n            view: 'tags',\n            display: (value) => value || [],\n            list: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceCrudComponent.html":{"url":"components/ResourceCrudComponent.html","title":"component - ResourceCrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceCrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/resource-crud/resource-crud.component.ts\n\n\n    \n        Description\n    \n    \n        The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-crud\n            \n\n            \n                styleUrls\n                resource-crud.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./resource-crud.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                pop\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                getPopClass\n                            \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                initMethods\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                config\n                            \n                            \n                                relation\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                createClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, notificationService: NotificationsService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-crud/resource-crud.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                            \n                            Type:    Core\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                            \n                            Type:    CrudConfig\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection that should be used \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:39\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Emits when a list element is clicked \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        createClicked\n                    \n                    \n                        Output that is nexted when pressing the create button \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Emits when the selection has changed \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:49\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPopClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPopClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Returns the pop class that should be used, either uses config.popClass or defaults to ec-pop_drawer-left. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasMethod(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitMethods()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Called on list columnClicked \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        list:     ResourceListComponent\n\n                    \n                \n                    \n                        \n                            Type :     ResourceListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:41\n                            \n                        \n\n                \n                    \n                        The ResourceListComponent inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:45\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pop:     ResourcePopComponent\n\n                    \n                \n                    \n                        \n                            Type :     ResourcePopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:43\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core/src/selection/selection';\nimport { LoaderComponent } from '@ec.components/ui/src/loader/loader.component';\nimport { LoaderService } from '@ec.components/ui/src/loader/loader.service';\nimport { NotificationsService } from '@ec.components/ui/src/notifications/notifications.service';\nimport 'rxjs/add/operator/switchMap';\nimport { merge } from 'rxjs/observable/merge';\nimport { AuthService } from '../auth/auth.service';\nimport { WithLoader } from '@ec.components/ui';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport Core from 'ec.sdk/lib/Core';\nimport { ResourceFormComponent } from '../resource-form/resource-form.component';\n\n/** The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * */\n@Component({\n    selector: 'ec-resource-crud',\n    templateUrl: './resource-crud.component.html',\n    styleUrls: ['./resource-crud.component.scss']\n})\nexport class ResourceCrudComponent implements OnInit, WithLoader {\n    /** The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors */\n    @Input() api: Core; // sdk api connector\n    /** The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) */\n    @Input() relation: string;\n    /** CrudConfig for customization of the crud's UI.*/\n    @Input() config: CrudConfig = {};\n    /** The selection that should be used */\n    @Input() selection: Selection;\n    /** The ResourceListComponent inside the template. */\n    @ViewChild(ResourceListComponent) list: ResourceListComponent;\n    /** The Pop inside the template. */\n    @ViewChild(ResourcePopComponent) pop: ResourcePopComponent;\n    /** The lists loader */\n    @ViewChild(LoaderComponent) loader: LoaderComponent;\n    /** Emits when a list element is clicked */\n    @Output() columnClicked: EventEmitter = new EventEmitter();\n    /** Emits when the selection has changed */\n    @Output() selected: EventEmitter = new EventEmitter();\n    /** Output that is nexted when pressing the create button */\n    @Output() createClicked: EventEmitter = new EventEmitter();\n\n    constructor(private sdk: SdkService,\n        private auth: AuthService,\n        private loaderService: LoaderService,\n        private notificationService: NotificationsService,\n        @Optional() public router: Router,\n        @Optional() public route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.initMethods();\n    }\n\n    initMethods() {\n        if (!this.relation) {\n            return;\n        }\n        this.auth.getAllowedResourceMethods(this.relation, {}, this.config.methods)\n            .then((methods) => {\n                this.config.methods = methods;\n            });\n    }\n\n    /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n    public hasMethod(method: string) {\n        return this.config.methods && this.config.methods.indexOf(method) !== -1;\n    }\n\n    /** Called on list columnClicked */\n    select(item) {\n        if (!item) {\n            return;\n        }\n        if (this.columnClicked.observers.length) {\n            this.columnClicked.emit(item);\n            return;\n        }\n        this.pop.edit(item.getBody());\n        // TODO: check CrudComponent#loadEntry for further inspiration\n    }\n\n    /** Returns the pop class that should be used, either uses config.popClass or defaults to ec-pop_drawer-left. */\n    getPopClass() {\n        return this.config && this.config.popClass ? this.config.popClass : 'ec-pop_dialog';\n    }\n    /** Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. */\n    create() {\n        if (this.createClicked.observers.length) {\n            this.createClicked.next();\n        } else if (this.pop) {\n            this.pop.create()\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{config?.createLabel}}\n                \n                    \n                \n            \n            \n                \n            \n        \n    \n    \n        \n    \n    \n    \n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{config?.createLabel}}                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceCrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceDeletePopComponent.html":{"url":"components/ResourceDeletePopComponent.html","title":"component - ResourceDeletePopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceDeletePopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/resource-delete-pop/resource-delete-pop.component.ts\n\n\n    \n        Description\n    \n    \n        This component can be used to delete all kinds of resources with a confirmation pop.\n\nLÖSCHEN!\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-delete-pop\n            \n\n            \n                styleUrls\n                resource-delete-pop.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./resource-delete-pop.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loader\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                pop\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirm\n                            \n                            \n                                delete\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                relation\n                            \n                            \n                                resource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService, loader: LoaderService, resourceService: ResourceService, notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:27\n                            \n                        \n\n                \n                    \n                            Injects SymbolService and LoaderService \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        relation\n                    \n                    \n                        The relation where it happened \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resource\n                    \n                    \n                        The resource to delete \n\n                            \n                            Type:    Resource\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleted\n                    \n                    \n                        Output that is after the deletion was successful. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirm\n                            \n                            \n                        \n                    \n                \n                \n                    \nconfirm(resource: Resource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            The confirm method sets a given resource and shows the confirmation pop. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.resource\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(resource: Resource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            The delete method calls del() of the given resource. You can also pass a resource to delete directly to set it.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.resource\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderService\n\n                    \n                \n                    \n                        \n                            Type :     LoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pop:     PopComponent\n\n                    \n                \n                    \n                        \n                            Type :     PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:21\n                            \n                        \n\n                \n                    \n                        The pop inside the view. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, Output, EventEmitter, Input } from '@angular/core';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport { PopComponent, LoaderService, NotificationsService } from '@ec.components/ui';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { ResourceService } from '../resource-config/resource.service';\n/** This component can be used to delete all kinds of resources with a confirmation pop.\n *\n * ```html\n * \n * LÖSCHEN!\n * ```\n *\n */\n@Component({\n    selector: 'ec-resource-delete-pop',\n    templateUrl: './resource-delete-pop.component.html',\n    styleUrls: ['./resource-delete-pop.component.scss']\n})\nexport class ResourceDeletePopComponent {\n    /** The pop inside the view. */\n    @ViewChild(PopComponent) pop: PopComponent;\n    /** The resource to delete */\n    @Input() resource: Resource;\n    /** The relation where it happened */\n    @Input() relation: string;\n    /** Output that is after the deletion was successful. */\n    @Output() deleted: EventEmitter = new EventEmitter();\n    /** Injects SymbolService and LoaderService */\n    constructor(public symbol: SymbolService,\n        public loader: LoaderService,\n        private resourceService: ResourceService,\n        public notificationService: NotificationsService) { }\n    /** The delete method calls del() of the given resource. You can also pass a resource to delete directly to set it.  */\n    delete(resource: Resource = this.resource) {\n        if (!resource) {\n            console.error('cannot delete: no resource given!');\n            return;\n        }\n        const deletion = this.resourceService.del(this.relation, this.resource)\n            .then(res => {\n                this.notificationService.emit({\n                    title: this.symbol.resolve('success.delete'),\n                    type: 'success',\n                });\n                this.pop.hide();\n                this.deleted.next(res);\n            }).catch(error => {\n                this.notificationService.emit({\n                    title: this.symbol.resolve('error.delete'),\n                    error\n                });\n            });\n        this.loader.wait(deletion);\n    }\n    /** The confirm method sets a given resource and shows the confirmation pop. */\n    confirm(resource: Resource = this.resource) {\n        this.resource = resource;\n        this.pop.show();\n    }\n}\n\n    \n\n    \n        \n    {{'resource.delete.question' | symbol}}\n    \n        {{'resource.delete.yes' | symbol}}\n    \n    \n        {{'resource.delete.no' | symbol}}\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{\\'resource.delete.question\\' | symbol}}            {{\\'resource.delete.yes\\' | symbol}}                {{\\'resource.delete.no\\' | symbol}}    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceDeletePopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceForm.html":{"url":"classes/ResourceForm.html","title":"class - ResourceForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/resource-form/resource-form.ts\n        \n\n            \n                Description\n            \n            \n                Form for any kind of SDK Resource. \n\n            \n\n            \n                Extends\n            \n            \n                    Form\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                api\n                            \n                            \n                                    Public\n                                relation\n                            \n                            \n                                    Public\n                                resourceService\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                fields\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                save\n                            \n                            \n                                createField\n                            \n                            \n                                getField\n                            \n                            \n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(body: Resource, config: FormConfig, api: Core, relation: string, resourceService: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-form/resource-form.ts:8\n                            \n                        \n\n                \n                    \n                            Constructs the form. Can be given an api (Core) and a fitting relation name. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                    Resource\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    FormConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    Core\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        relation\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     Core\n\n                    \n                \n                    \n                        \n                            Type :     Core\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-form/resource-form.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            relation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        relation:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-form/resource-form.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceService:     ResourceService\n\n                    \n                \n                    \n                        \n                            Type :     ResourceService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-form/resource-form.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     FormConfig\n\n                    \n                \n                    \n                        \n                            Type :     FormConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Form\n\n                                \n                            \n                        \n                            \n                                    Defined in Form:13\n                            \n                        \n\n                \n                    \n                        The configuration of the form. It is an extension of ItemConfig. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fields\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fields:     Field[]\n\n                    \n                \n                    \n                        \n                            Type :     Field[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Form\n\n                                \n                            \n                        \n                            \n                                    Defined in Form:11\n                            \n                        \n\n                \n                    \n                        Array of fields. It will be populated automatically when the form is constructed. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-form/resource-form.ts:17\n                            \n                        \n\n\n                \n                    \n                            Saves the given value. Run serializers before assigning the new value. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createField\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateField(property: string, config: FieldConfigProperty)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Form\n\n                                \n                            \n                        \n                            \n                                    Defined in Form:31\n                            \n                        \n\n\n                \n                    \n                            creates and adds a single field to the form \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Field | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getField\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetField(property: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Form\n\n                                \n                            \n                        \n                            \n                                    Defined in Form:49\n                            \n                        \n\n\n                \n                    \n                            returns the field instance of the given property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValue(property: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Form\n\n                                \n                            \n                        \n                            \n                                    Defined in Form:54\n                            \n                        \n\n\n                \n                    \n                            Returns the original value of the property, if any. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import Resource from 'ec.sdk/lib/resources/Resource';\nimport { Form, FormConfig } from '@ec.components/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport Core from 'ec.sdk/lib/Core';\nimport { ResourceService } from '../resource-config/resource.service';\n\n/** Form for any kind of SDK Resource. */\nexport class ResourceForm extends Form {\n    /** Constructs the form. Can be given an api (Core) and a fitting relation name. */\n    constructor(body: Resource, config: FormConfig = {},\n        public api: Core,\n        public relation: string,\n        public resourceService: ResourceService) {\n        super(body, config);\n    }\n    /** Saves the given value. Run serializers before assigning the new value. */\n    save(value: Object): Promise> {\n        return this.resourceService.save(this, value, this.relation, this.api)\n            .then(resource => new Item(resource, this.config));\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResourceModule.html":{"url":"modules/ResourceModule.html","title":"module - ResourceModule","body":"\n                   \n\n\n\n\n  Modules\n  ResourceModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_imports\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/resource/resource.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ResourceCrudComponent\n                            \n                            \n                                ResourceDeletePopComponent\n                            \n                            \n                                ResourceFormComponent\n                            \n                            \n                                ResourceListComponent\n                            \n                            \n                                ResourcePopComponent\n                            \n                            \n                                ResourceSelectComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ResourceListComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ResourceConfig\n                            \n                            \n                                     ResourceService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ResourceCrudComponent\n                            \n                            \n                                    ResourceDeletePopComponent\n                            \n                            \n                                    ResourceFormComponent\n                            \n                            \n                                    ResourceListComponent\n                            \n                            \n                                    ResourcePopComponent\n                            \n                            \n                                    ResourceSelectComponent\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { UiModule } from '@ec.components/ui';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourceFormComponent } from '../resource-form/resource-form.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport { ResourceCrudComponent } from '../resource-crud/resource-crud.component';\nimport { ResourceDeletePopComponent } from '../resource-delete-pop/resource-delete-pop.component';\nimport { ResourceSelectComponent } from '../resource-select/resource-select.component';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\n\n@NgModule({\n  entryComponents: [\n    ResourceListComponent,\n  ],\n  declarations: [\n    ResourceListComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    SdkModule,\n  ],\n  exports: [\n    UiModule,\n    SdkModule,\n    ResourceListComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n  ],\n  providers: [\n    ResourceService,\n    ResourceConfig,\n  ],\n})\nexport class ResourceModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceService.html":{"url":"injectables/ResourceService.html","title":"injectable - ResourceService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ResourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/resource-config/resource.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changes\n                            \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                matches\n                            \n                            \n                                save\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, config: ResourceConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-config/resource.service.ts:34\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(filter?: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Yields an observable that emits for all updates that match the given filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clean\n                            \n                            \n                        \n                    \n                \n                \n                    \nclean(value: Object, setEmptyStringsToNull: , deleteNullProperties: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Removes all null or undefined values from the given object \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        setEmptyStringsToNull\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                                \n                                                        deleteNullProperties\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(relation: string, value: Object, api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:113\n                            \n                        \n\n\n                \n                    \n                            Creates a new resource with the given value for the given relation. Fires the \"create\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            del\n                            \n                            \n                        \n                    \n                \n                \n                    \ndel(relation: string, resource: Resource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:124\n                            \n                        \n\n\n                \n                    \n                            deletes the given resource and emits the \"delete\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImmutableProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisImmutableProperty(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:89\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given field key is an immutable system property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatches(change: Update, filter: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Gives true if the given change fits all property values of the filter. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        change\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(item: Item, value: Object, relation: string, api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Saves the given resource with the given value. If the resource is not yet existing,\nit will be created.Otherwise it will be updated. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(relation: , resource: Resource, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Updates the given resource with the new value. Fires the \"update\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changes:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:34\n                            \n                        \n\n                \n                    \n                        The changes event is emitted everytime an resource is created or updated. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ResourceConfig\n\n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/filter';\nimport { Subject } from 'rxjs/Subject';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { ResourceList } from '../resource-list/resource-list';\nimport Core from 'ec.sdk/lib/Core';\nimport { Item } from '@ec.components/core';\nimport { ResourceConfig } from './resource-config.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Update {\n    /** The relation that has been updated. */\n    relation: string | string[],\n    /** The relevant resource. */\n    resource?: Resource,\n    /** The list where it happened. */\n    list?: ResourceList,\n    /** The type of update. (create/read/update/delete) */\n    type?: 'post' | 'get' | 'put' | 'delete',\n    /** An identifier associated with the update e.g. an entryID */\n    identifier?: string\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class ResourceService {\n    /** The changes event is emitted everytime an resource is created or updated. */\n    public changes: Subject = new Subject();\n\n    /** Injects sdk */\n    constructor(private sdk: SdkService, public config: ResourceConfig) {\n    }\n\n    /** Gives true if the given change fits all property values of the filter. */\n    matches(change: Update, filter: Update): boolean {\n        return Object.keys(filter)\n            .reduce((match, key) => match && change[key] === filter[key], true);\n    }\n\n    /** Yields an observable that emits for all updates that match the given filter */\n    change(filter?: Update): Observable {\n        if (!filter) {\n            return this.changes.asObservable();\n        }\n        return this.changes.asObservable().filter((change: Update) => this.matches(change, filter));\n    }\n\n    /** Saves the given resource with the given value. If the resource is not yet existing,\n     * it will be created.Otherwise it will be updated. */\n    save(item: Item, value: Object, relation: string, api: Core): Promise {\n        const resource = item.getBody();\n        if (item.config.onSave) {\n            return Promise.resolve(item.config.onSave(item, value))\n        }\n        item.deleteImmutableProperties(value);\n        if (resource && resource.save) {\n            return this.update(relation, resource, value);\n        }\n        return this.create(relation, value, api)\n            .then((_resource) => {\n                return _resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** Updates the given resource with the new value. Fires the \"update\" change. */\n    update(relation, resource: Resource, value: Object): Promise {\n        const oldValues = {}; // save old values\n        Object.keys(value).forEach((key) => oldValues[key] = resource[key]);\n        Object.assign(resource, this.clean(value, false, false)); // assign new form values\n        return resource.save().then((_resource) => {\n            this.changes.next({ relation, resource: _resource, type: 'put' });\n            return _resource;\n        })\n            .catch((err) => {\n                Object.assign(resource, this.clean(oldValues, false, false)); // fall back to old values\n                return Promise.reject(err);\n            });\n    }\n\n    /** Returns true if the given field key is an immutable system property */\n    isImmutableProperty(key: string) {\n        return key[0] === '_' ||\n            ['id', 'created', 'modified'].indexOf(key) !== -1;\n    }\n\n    /** Removes all null or undefined values from the given object */\n    clean(value: Object, setEmptyStringsToNull = true, deleteNullProperties = true): Object {\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                if (setEmptyStringsToNull && value[key] === '') { // clear empty strings\n                    value[key] = null;\n                }\n                if (deleteNullProperties && value[key] === null) {\n                    delete value[key];\n                }\n                if (this.isImmutableProperty(key)) { // filter system properties\n                    delete value[key];\n                }\n            }\n        }\n        return value;\n    }\n\n    /** Creates a new resource with the given value for the given relation. Fires the \"create\" change. */\n    create(relation: string, value: Object, api: Core): Promise {\n        return api.create(relation, this.clean(value))\n            .then((resource: Resource) => {\n                this.changes.next({ relation, resource, type: 'post' });\n                return resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** deletes the given resource and emits the \"delete\" change. */\n    del(relation: string, resource: Resource) {\n        return resource.del().then((res) => {\n            this.changes.next({ relation, resource, type: 'delete' });\n            return res;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafeHtmlPipe.html":{"url":"pipes/SafeHtmlPipe.html","title":"pipe - SafeHtmlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  SafeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/vc/src/safe-html.pipe.ts\n        \n\n            \n                Description\n            \n            \n                trusts the incoming html as safe. uses bypassSecurityTrustHtml \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        safeHtml\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/vc/src/safe-html.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n                            Transforms the html value \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n/** trusts the incoming html as safe. uses bypassSecurityTrustHtml */\n@Pipe({ name: 'safeHtml' })\nexport class SafeHtmlPipe implements PipeTransform {\n  /** Injects DomSanitizer */\n  constructor(private sanitized: DomSanitizer) {\n  }\n  /** Transforms the html value */\n  transform(value) {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SdkModule.html":{"url":"modules/SdkModule.html","title":"module - SdkModule","body":"\n                   \n\n\n\n\n  Modules\n  SdkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\n\nSdkService\n\nSdkService\n\n\n\nSdkModule\n\nSdkModule\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/sdk/sdk.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     SdkService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SdkService } from './sdk.service';\n\n@NgModule({\n  entryComponents: [],\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [\n    SdkService\n  ],\n})\nexport class SdkModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SdkService.html":{"url":"injectables/SdkService.html","title":"injectable - SdkService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SdkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/sdk/sdk.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\n{\nprovide: \"environment\",\nuseValue: {\ndatamanagerID: \"83cc6374\",\nenvironment: \"stage\",\nclientID: \"rest\"\n}\n}The environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _api\n                            \n                            \n                                    Public\n                                accounts\n                            \n                            \n                                apiResolved\n                            \n                            \n                                    Public\n                                datamanager\n                            \n                            \n                                    Public\n                                environment\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                roots\n                            \n                            \n                                    Private\n                                schemaRequests\n                            \n                            \n                                    Public\n                                session\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAccount\n                            \n                            \n                                getSchema\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                noApi\n                            \n                            \n                                useDatamanager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(environment: )\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/sdk/sdk.service.ts:72\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAccount(api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:121\n                            \n                        \n\n\n                \n                    \n                            Returns the current account. Works for all apis \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.accounts\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSchema\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSchema(model: , api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:110\n                            \n                        \n\n\n                \n                    \n                            Returns a schema for the given model. Caches the promise. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this._api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init(environment: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:80\n                            \n                        \n\n\n                \n                    \n                            Creates all the API instances and determines the current user. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.environment\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noApi\n                            \n                            \n                        \n                    \n                \n                \n                    \nnoApi(api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:133\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this._api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useDatamanager\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseDatamanager(shortID: string, environment: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:100\n                            \n                        \n\n\n                \n                    \n                            Uses the given datamanager and optional short id to init api. \nIf you set \"datamanagerID\" in your environment, this method is called automatically. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        shortID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        environment\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.environment\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _api:     PublicAPI\n\n                    \n                \n                    \n                        \n                            Type :     PublicAPI\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:47\n                            \n                        \n\n                \n                    \n                        Current Public API instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accounts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        accounts:     Accounts\n\n                    \n                \n                    \n                        \n                            Type :     Accounts\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:45\n                            \n                        \n\n                \n                    \n                        Current Accounts instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiResolved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        apiResolved:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:30\n                            \n                        \n\n                \n                    \n                        Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datamanager\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        datamanager:     DataManager\n\n                    \n                \n                    \n                        \n                            Type :     DataManager\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:61\n                            \n                        \n\n                \n                    \n                        Current DataManager instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:72\n                            \n                        \n\n                \n                    \n                        Promise that should be used before using any auth related stuff:\nthis.sdk.ready.then(account => {});\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roots\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roots:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:32\n                            \n                        \n\n                \n                    \n                        Collects different datamanager root instances \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            schemaRequests\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        schemaRequests:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:65\n                            \n                        \n\n                \n                    \n                        Pending schema requests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     Session\n\n                    \n                \n                    \n                        \n                            Type :     Session\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:43\n                            \n                        \n\n                \n                    \n                        Current Session instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     AccountResource\n\n                    \n                \n                    \n                        \n                            Type :     AccountResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:63\n                            \n                        \n\n                \n                    \n                        Current User \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        root\n                    \n                \n\n                \n                    \n                        getroot()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/sdk/sdk.service.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/sdk/sdk.service.ts:49\n                                \n                            \n                    \n                        \n                                getter for api. Throws error if no api present. \n\n\n                                \n                                    Returns :     PublicAPI\n\n                                \n                        \n                    \n\n                \n                    \n                        setapi(api: )\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/sdk/sdk.service.ts:56\n                                \n                            \n                    \n                        \n                                Sets the public api \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            api\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport Accounts from 'ec.sdk/lib/Accounts';\nimport Core, { environment as env } from 'ec.sdk/lib/Core';\nimport DataManager from 'ec.sdk/lib/DataManager';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport Session from 'ec.sdk/lib/Session';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: \"environment\",\n   useValue: {\n     datamanagerID: \"83cc6374\",\n     environment: \"stage\",\n     clientID: \"rest\"\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class SdkService {\n  /** Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) */\n  apiResolved: boolean;\n  /** Collects different datamanager root instances */\n  roots: { [id: string]: Promise } = {};\n  get root(): Promise {\n    if (!this._api) {\n      throw new Error('no api');\n    }\n    if (!this.roots[this._api.dataManagerID]) {\n      this.roots[this._api.dataManagerID] = this.ready.then(() => this.datamanager.dataManager(this._api.dataManagerID));\n    }\n    return this.roots[this._api.dataManagerID];\n  };\n  /** Current Session instance */\n  public session: Session;\n  /** Current Accounts instance */\n  public accounts: Accounts;\n  /** Current Public API instance */\n  public _api: PublicAPI;\n  /** getter for api. Throws error if no api present. */\n  get api(): PublicAPI {\n    if (this.noApi()) {\n      throw new Error('get api: ' + this.noApi());\n    }\n    return this._api;\n  }\n  /** Sets the public api */\n  set api(api: PublicAPI) {\n    this._api = api;\n    this._api.resolve().then(() => this.apiResolved = true);\n  }\n  /** Current DataManager instance */\n  public datamanager: DataManager;\n  /** Current User */\n  public user: AccountResource;\n  /** Pending schema requests */\n  private schemaRequests = {};\n  /** Promise that should be used before using any auth related stuff:\n   *\n   * ```ts\n   * this.sdk.ready.then(account => {});\n   * ```\n   * */\n  public ready: Promise;\n\n  /** Calls init and sets ready to true when finished. */\n  constructor(@Inject('environment') public environment) {\n    this.init();\n  }\n\n  /** Creates all the API instances and determines the current user. */\n  public init(environment = this.environment): Promise {\n    this.environment = environment;\n    this.session = new Session(environment.environment);\n    if (environment.clientID) {\n      this.session.setClientID(environment.clientID);\n    }\n    this.accounts = new Accounts(environment.environment);\n    if (environment.datamanagerID) {\n      this.useDatamanager(environment.datamanagerID, environment);\n    }\n    this.ready = this.getAccount()\n      .then((user) => {\n        this.user = user;\n        this.datamanager = new DataManager(environment.environment);\n        return this.user;\n      });\n    return this.ready;\n  }\n  /** Uses the given datamanager and optional short id to init api. \n   * If you set \"datamanagerID\" in your environment, this method is called automatically. */\n  useDatamanager(shortID: string, environment = this.environment) {\n    this.apiResolved = false;\n    this._api = new PublicAPI(shortID, environment.environment, true);\n    this._api.resolve().then(api => this.apiResolved = true);\n    if (environment.clientID) {\n      this._api.setClientID(environment.clientID);\n    }\n  }\n\n  /** Returns a schema for the given model. Caches the promise. */\n  getSchema(model, api = this._api) {\n    if (this.noApi(api)) {\n      return Promise.reject('getSchema: ' + this.noApi(api));\n    }\n    if (!this.schemaRequests[model]) {\n      this.schemaRequests[model] = api.getSchema(model);\n    }\n    return this.schemaRequests[model];\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.accounts) {\n    if (this.noApi(api)) {\n      /* return Promise.reject('getAccount: ' + this.noApi(api)); */\n      return Promise.resolve();\n    }\n    return api.me().then((account) => {\n      return account || this._api.me();\n    }).catch((err) => {\n      return null;\n    });\n  }\n\n  noApi(api: Core = this._api) {\n    if (!api) {\n      return `No API was initialized. Either set datamanagerID in your environment or call useDatamanager with your shortID`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/select/select.component.ts\n\n\n    \n        Description\n    \n    \n        The SelectComponent will render a dropdown of a given list.\nhttps://components.entrecode.de/ui/select\n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-select\n            \n\n            \n                styleUrls\n                select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pop\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                clickInside\n                            \n                            \n                                    Private\n                                clickItem\n                            \n                            \n                                initSelection\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                removeItem\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                use\n                            \n                            \n                                useConfig\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                list\n                            \n                            \n                                placeholder\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                            \n                                value\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                itemClick\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        Configuration Object for List \n\n                            \n                            Type:    ListConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The Instance of the List \n\n                            \n                            Type:    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        Input placeholder \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The used selection \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        Wether or not the selection should be solo \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        The visible items \n\n                            \n                            Type:    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        values\n                    \n                    \n                        Available Items \n\n                            \n                            Type:    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:41\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        Event emitter on item selection \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemClick\n                    \n                    \n                        Event emitter on selected item click \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:37\n                            \n                        \n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:47\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changed\n                            \n                            \n                        \n                    \n                \n                \n                    \nchanged()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:137\n                            \n                        \n\n\n                \n                    \n                            Fires on selection change. Hides pop if solo \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickInside\n                            \n                            \n                        \n                    \n                \n                \n                    \nclickInside(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            is intended to be called when clicking inside and the dropdown should not toggle \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            clickItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clickItem(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:120\n                            \n                        \n\n\n                \n                    \n                            Is called when a selected item is clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitSelection()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            creates the collection from the config \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:148\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:152\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveItem(item: Item, e?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Removes the given item from selection + triggers clickInside \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        select(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:125\n                            \n                        \n\n\n                \n                    \n                            Select handler. Toggles selection. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(value: , event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Uses the given value as selection items \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseConfig(config: ListConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:113\n                            \n                        \n\n\n                \n                    \n                            Initializes either with values, collection or list. Creates Selection with config. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ListConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Called when the model changes \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pop:     PopComponent\n\n                    \n                \n                    \n                        \n                            Type :     PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:45\n                            \n                        \n\n                \n                    \n                        The selection pop \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/select/select.component.ts:145\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Select\nYou can pass an array of items that will be used for a selection instance.\n\n\n{{values | json}}TODO: update\n\n    \n\n    \n        import { Component, EventEmitter, forwardRef, Input, OnChanges, OnInit, Output, ViewChild, ViewEncapsulation, HostListener } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { List, ListConfig, Selection } from '@ec.components/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport { PopComponent } from '../pop/pop.component';\n\n/**\n * The SelectComponent will render a dropdown of a given list.\n *\n * https://components.entrecode.de/ui/select\n * */\n@Component({\n  selector: 'ec-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => SelectComponent),\n      multi: true\n    }\n  ]\n})\nexport class SelectComponent implements ControlValueAccessor, OnInit, OnChanges {\n  /** Configuration Object for List */\n  @Input() config: ListConfig;\n  /** The visible items */\n  @Input() value: Array;\n  /** The used selection */\n  @Input() selection: Selection;\n  /** Input placeholder */\n  @Input() placeholder: string;\n  /** Event emitter on item selection */\n  @Output() change: EventEmitter> = new EventEmitter();\n  /** Event emitter on selected item click */\n  @Output() itemClick: EventEmitter> = new EventEmitter();\n  /** The Instance of the List */\n  @Input() list: List;\n  /** Available Items */\n  @Input() values: Array;\n  /** Wether or not the selection should be solo */\n  @Input() solo: boolean;\n  /** The selection pop */\n  @ViewChild(PopComponent) pop: PopComponent;\n\n  @HostListener('document:click', ['$event']) clickedOutside($event) {\n    if (this.pop) {\n      this.pop.hide();\n    }\n  }\n  /** is intended to be called when clicking inside and the dropdown should not toggle */\n  clickInside(e) {\n    if (!e) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  ngOnInit() {\n    this.initSelection();\n  }\n\n  ngOnChanges() {\n    this.initSelection();\n  }\n\n  /** creates the collection from the config */\n  initSelection() {\n    if (this.values) {\n      if (this.list) {\n        console.warn('ec-select: list is overwritten by values', this.list);\n      }\n      this.list = new List(this.values, this.config);\n    }\n    if (this.list && !this.config) {\n      this.config = this.list.config;\n    }\n    if (!this.config) { // || !this.config.selectMode\n      return;\n    }\n    this.config = Object.assign({ solo: this.solo }, this.config);\n    this.selection = new Selection(this.value || [], this.config);\n    this.selection.update$.subscribe(() => {\n      this.changed();\n    });\n  }\n\n  /** Called when the model changes */\n  writeValue(value: any) {\n    this.use(value, false);\n  }\n\n  /** Removes the given item from selection + triggers clickInside */\n  removeItem(item: Item, e?) {\n    this.selection.remove(item);\n    this.clickInside(e);\n  }\n\n  /** Uses the given value as selection items */\n  use(value, event = true) {\n    this.value = Array.isArray(value) ? value : (value ? [value] : []);\n    Object.assign(this.config || {}, { solo: this.solo });\n    if (this.selection && this.value && this.value.length) {\n      Object.assign(this.config, { selection: this.selection });\n      const list = new List(this.value, this.config);\n      this.selection.replaceWith(list.items, event);\n    }\n  }\n\n  /** Initializes either with values, collection or list. Creates Selection with config. */\n  useConfig(config: ListConfig = {}) {\n    this.config = Object.assign(this.config || {}, config);\n    this.initSelection();\n    this.writeValue(this.value);\n  }\n\n  /** Is called when a selected item is clicked*/\n  private clickItem(item) {\n    this.itemClick.emit(item);\n  }\n\n  /** Select handler. Toggles selection. */\n  public select(item) {\n    this.selection.toggle(item);\n  }\n\n  public toggle(e) {\n    if (this.pop) {\n      this.pop.toggle();\n    }\n    this.clickInside(e);\n  }\n\n  /** Fires on selection change. Hides pop if solo */\n  changed() {\n    this.change.emit(this.selection);\n    if (this.config.solo && this.pop) {\n      this.pop.hide();\n    }\n    return this.propagateChange(this.selection.getValue());\n  }\n\n  propagateChange = (_: any) => {\n  };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n  \n  \n    {{placeholder||'Auswählen'}}\n  \n  \n    \n      \n        {{selected.display()}}\n        &times;\n      \n    \n  \n  \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{placeholder||\\'Auswählen\\'}}                      {{selected.display()}}        ×                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SelectModule.html":{"url":"modules/SelectModule.html","title":"module - SelectModule","body":"\n                   \n\n\n\n\n  Modules\n  SelectModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_SelectComponent_providers\n\n\n\ncluster_SelectModule_imports\n\n\n\ncluster_SelectModule_exports\n\n\n\n\nSelectComponent\n\nSelectComponent\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->SelectComponent -->\n\n{\n    : , : (() => ), : true\n}->SelectComponent\n\n\n\n\n\nListModule\n\nListModule\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/select/select.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                SelectComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ListModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ListModule\n                            \n                            \n                                    SelectComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SelectComponent } from './select.component';\nimport { ListModule } from '../list/list.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ListModule\n  ],\n  declarations: [SelectComponent],\n  exports: [ListModule, SelectComponent],\n  providers: [],\n})\nexport class SelectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SlotHostDirective.html":{"url":"directives/SlotHostDirective.html","title":"directive - SlotHostDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  SlotHostDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/io/slot-host.directive.ts\n        \n\n            \n                Description\n            \n            \n                The field host is a helper to load components inside its view container.\nsee https://angular.io/guide/dynamic-component-loader\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ec-slot-host]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/slot-host.directive.ts:9\n                            \n                        \n\n                \n                    \n                            The constructor exposes the viewContainer that is used to load components into from outside.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewContainerRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/slot-host.directive.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } from '@angular/core';\n\n/** The field host is a helper to load components inside its view container.\n * see https://angular.io/guide/dynamic-component-loader\n * */\n@Directive({\n  selector: '[ec-slot-host]',\n})\nexport class SlotHostDirective {\n  /** The constructor exposes the viewContainer that is used to load components into from outside.*/\n  constructor(public viewContainerRef: ViewContainerRef) {\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sorter.html":{"url":"classes/Sorter.html","title":"class - Sorter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sorter\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/sorter/sorter.ts\n        \n\n            \n                Description\n            \n            \n                The Sorter is a singleton that handles all kinds of sorting operations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sortType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getAlgorithm\n                            \n                            \n                                    Static\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sortType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortType:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'string': sortString,\n    'number': sortNumber,\n    'boolean': sortBoolean\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/sorter/sorter.ts:25\n                            \n                        \n\n                \n                    \n                        Contains sorting methods for different value types. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getAlgorithm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAlgorithm(items: Array>, property?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/sorter/sorter.ts:32\n                            \n                        \n\n\n                \n                    \n                            Returns the sorting algorithm for the given item array. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sort(items: Array>, property?: string, desc?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/sorter/sorter.ts:62\n                            \n                        \n\n\n                \n                    \n                            Sorts a given Array of items after a given property.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Array of arbitrary content.\n\n                                                        \n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional property to sort after (For Objects)\n\n                                                        \n                                                \n                                                \n                                                        desc\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional Flag that will reverse sort the result (descending).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Sorter\nThe Sorter is a static class that acts as a helper to sort different primitive types. See the tests for example usage.\n\n    \n\n    \n        import { Item } from '../item/item';\n\n/** Used for natural sorting of strings */\nconst collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n\n/** Sorts strings (naturally) */\nexport function sortString(a, b) {\n  return collator.compare(a, b);\n}\n\n/** Sorts numbers */\nexport function sortNumber(a, b) {\n  return a - b;\n}\n\n/** Sorts booleans */\nexport function sortBoolean(a, b) {\n  return a ? -1 : 1;\n}\n\n/** The Sorter is a singleton that handles all kinds of sorting operations. */\nexport abstract class Sorter {\n\n  /** Contains sorting methods for different value types. */\n  static sortType = {\n    'string': sortString,\n    'number': sortNumber,\n    'boolean': sortBoolean\n  };\n\n  /** Returns the sorting algorithm for the given item array. */\n  private static getAlgorithm(items: Array>, property?: string): (a, b) => number {\n    if (!items.length) {\n      return;\n    }\n    if (property && !items\n      .reduce((has, item) => has && item.sort(property) !== undefined, true)) {\n      console.warn('cannot sort property \"' + property + '\" because not all items have that property', items);\n      return;\n    }\n    const types = items\n      .map(item => typeof item.sort(property))\n      .filter((item, index, _items) => _items.indexOf(item) === index);\n    if (types.length > 1) {\n      console.warn('cannot sort items because they contain multiple types:', types);\n      return;\n    }\n    if (!this.sortType[types[0]]) {\n      console.warn('cannot sort items because no algorithm was found for type', types[0]);\n      return;\n    }\n    return this.sortType[types[0]];\n  }\n\n  /** Sorts a given Array of items after a given property.\n   * @param items Array of arbitrary content.\n   * @param property Optional property to sort after (For Objects)\n   * @param desc Optional Flag that will reverse sort the result (descending).\n   * @param resolve Optional resolve function to expose relevant the part of object that contains\n   *   the given property. */\n\n  static sort(items: Array>, property?: string, desc?: boolean): Array {\n    const algorithm = this.getAlgorithm(items, property);\n    if (!algorithm) {\n      return;\n    }\n    items.sort((a, b) => {\n      if (!property) {\n        return algorithm(a.resolve(), b.resolve());\n      }\n      return algorithm(a.sort(property), b.sort(property));\n    });\n    if (desc) {\n      items.reverse();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Symbol.html":{"url":"interfaces/Symbol.html","title":"interface - Symbol","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Symbol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.interface.ts\n        \n\n            \n                Description\n            \n            \n                A Symbol is specified with a unique name and an optional string content.  \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        content\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name under which the symbol is accessible. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Symbol {\n    /** The name under which the symbol is accessible. */\n    name: string\n    /** Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. */\n    content?: string\n};\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SymbolModule.html":{"url":"modules/SymbolModule.html","title":"module - SymbolModule","body":"\n                   \n\n\n\n\n  Modules\n  SymbolModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_providers\n\n\n\n\nSymbolService\n\nSymbolService\n\n\n\nSymbolModule\n\nSymbolModule\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     SymbolService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SymbolService } from './symbol.service';\nimport { SymbolPipe } from './symbol.pipe';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [SymbolPipe],\n    exports: [SymbolPipe],\n    providers: [SymbolService],\n})\nexport class SymbolModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolPipe.html":{"url":"injectables/SymbolPipe.html","title":"injectable - SymbolPipe","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SymbolPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The symbol pipe translates Symbol names to their content.\n{{ 'entry.saved' | symbol }}See SymbolService for more info about Symbols.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.pipe.ts:21\n                            \n                        \n\n\n                \n                    \n                            Calls SymbolService.resolve with the given name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, Injectable, PipeTransform } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport { SymbolService } from './symbol.service';\n\n/** The symbol pipe translates Symbol names to their content.\n *\n * ```html\n * {{ 'entry.saved' | symbol }}\n * ```\n *\n * See SymbolService for more info about Symbols.\n */\n@Pipe({\n    name: 'symbol'\n})\n@Injectable()\nexport class SymbolPipe implements PipeTransform {\n    /** Depends on the SymbolService */\n    constructor(private symbol: SymbolService) { }\n    /** Calls SymbolService.resolve with the given name */\n    transform(name: string): string {\n        if (!name) {\n            return '';\n        }\n        return this.symbol.resolve(name) || '';\n    }\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolService.html":{"url":"injectables/SymbolService.html","title":"injectable - SymbolService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SymbolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register symbols for localization. The default set is de. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registry\n                            \n                            \n                                    Public\n                                sets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                resolve\n                            \n                            \n                                set\n                            \n                            \n                                use\n                            \n                            \n                                useSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/symbol/symbol.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            finds a symbol in the registry by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Symbol\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:36\n                            \n                        \n\n\n                \n                    \n                            resolves a symbols content by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(symbols: Symbol[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set to enhance the current registry.\nAll duplicates will be overriden. Non specified symbols will stay in the registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(symbols: Symbol[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set. Replaces registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useSet\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseSet(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:23\n                            \n                        \n\n\n                \n                    \n                            uses the set with the given key \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registry:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:9\n                            \n                        \n\n                \n                    \n                        The current symbol set that is registered to the service. It will be used to resolve strings from. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sets:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        en, de\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport de from './de';\nimport en from './en';\n/** Service to register symbols for localization. The default set is de. */\n@Injectable()\nexport class SymbolService {\n    /** The current symbol set that is registered to the service. It will be used to resolve strings from. */\n    public registry: Symbol[];\n    public sets: { [key: string]: Symbol[] } = {\n        en, de\n    }\n    constructor() {\n        this.registry = Object.keys(this.sets).length ? this.sets[Object.keys(this.sets)[0]] : [];\n    }\n\n    /** Uses the given symbol set. Replaces registry. */\n    use(symbols: Symbol[]) {\n        this.registry = symbols;\n    }\n\n    /** uses the set with the given key */\n    useSet(key: string) {\n        if (!this.sets[key]) {\n            throw new Error('the symbol set with the key \"' + key + '\" does not exist');\n        }\n        this.use(this.sets[key]);\n    }\n\n    /** finds a symbol in the registry by name */\n    get(name: string): Symbol {\n        return this.registry.find(symbol => symbol.name === name);\n    }\n\n    /** resolves a symbols content by name */\n    resolve(name: string): string {\n        const symbol = this.get(name);\n        if (symbol) {\n            return symbol.content;\n        }\n        return null;\n    }\n\n    /** Uses the given symbol set to enhance the current registry.\n     * All duplicates will be overriden. Non specified symbols will stay in the registry. */\n    set(symbols: Symbol[] = []) {\n        symbols.map(symbol => {\n            const index = this.registry.indexOf(this.get(symbol.name));\n            if (index === -1) {\n                this.registry.push(symbol);\n            } else {\n                this.registry[index] = symbol;\n            }\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabComponent.html":{"url":"components/TabComponent.html","title":"component - TabComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/tab/tab.component.ts\n\n\n    \n        Description\n    \n    \n        A Tab is meant to be placed inside TabsComponent \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tab\n            \n\n            \n                styleUrls\n                tab.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tab.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                route\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                deactivated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/tab/tab.component.ts:22\n                            \n                        \n\n                \n                    \n                            The constructor adds the tab itself to its TabsComponent parent. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                    \n                        The tab's label \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        route\n                    \n                    \n                        If set, the tab will be selected when the given (relative) route is active. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        If set to true, the tab will be selected at start. \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        activated\n                    \n                    \n                        Output that emits when the tab is activated \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deactivated\n                    \n                    \n                        Output that emits when the tab is deactivated \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activate\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Selects the tab and nexts activated \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Deselects the tab and nexts activated \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parent:     TabsComponent\n\n                    \n                \n                    \n                        \n                            Type :     TabsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:22\n                            \n                        \n\n                \n                    \n                        The parent TabsComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { TabsComponent } from '../tabs/tabs.component';\n\n/** A Tab is meant to be placed inside TabsComponent */\n@Component({\n  selector: 'ec-tab',\n  templateUrl: './tab.component.html',\n  styleUrls: ['./tab.component.scss']\n})\nexport class TabComponent {\n  /** The tab's label */\n  @Input() label: string;\n  /** If set to true, the tab will be selected at start. */\n  @Input() selected: boolean;\n  /** If set, the tab will be selected when the given (relative) route is active. */\n  @Input() route: string;\n  /** Output that emits when the tab is activated */\n  @Output() activated: EventEmitter = new EventEmitter();\n  /** Output that emits when the tab is deactivated */\n  @Output() deactivated: EventEmitter = new EventEmitter();\n  /** The parent TabsComponent */\n  parent: TabsComponent;\n\n  /** The constructor adds the tab itself to its TabsComponent parent. */\n  constructor(public el: ElementRef) {\n  }\n  /** Selects the tab and nexts activated */\n  activate() {\n    this.selected = true;\n    this.activated.next();\n  }\n  /** Deselects the tab and nexts activated */\n  deactivate() {\n    this.selected = false;\n    this.deactivated.next();\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/tabs/tabs.component.ts\n\n\n    \n        Description\n    \n    \n        The TabsComponent holds serveral instances of TabComponent.\nhttps://components.entrecode.de/ui/tabs\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tabs\n            \n\n            \n                styleUrls\n                tabs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initTabs\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                select\n                            \n                            \n                                selectByUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/tabs/tabs.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) \n\n                            \n                            Type:    TabComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTabs\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitTabs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterContentInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterContentInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(tab: TabComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Selects the given tab (Component). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                        \n                                                                    TabComponent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectByUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectByUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Selects the tab associated with the route present in the given url \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabs:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChildren\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:15\n                            \n                        \n\n                \n                    \n                        The nested Tabs \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Tabs\nThis is how you use Tabs:\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \nTODO:\n\n*ngIf\nSlot for templated Tab Header\n\n\n    \n\n    \n        import { Component, ContentChildren, Input, QueryList, AfterContentInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { TabComponent } from '../tab/tab.component';\n\n/** The TabsComponent holds serveral instances of TabComponent.\n * https://components.entrecode.de/ui/tabs\n*/\n@Component({\n  selector: 'ec-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.scss']\n})\nexport class TabsComponent implements AfterContentInit {\n  /** The nested Tabs */\n  @ContentChildren(TabComponent) tabs: QueryList;\n  /** You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) */\n  @Input() selected: TabComponent;\n\n  constructor(private router: Router, private route: ActivatedRoute) {\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.selectByUrl(event.url);\n      }\n    });\n  }\n\n  /** Selects the tab associated with the route present in the given url */\n  selectByUrl(url: string) {\n    if (!url || !this.tabs) {\n      return;\n    }\n    const paths = url.split('/');\n    const match = this.tabs.find((tab) => tab.route === paths[paths.length - 1]);\n    if (match) {\n      this.select(match);\n    }\n  }\n\n  initTabs() {\n    this.tabs.forEach((tab) => {\n      tab.parent = this;\n      if (tab.el.nativeElement.getAttribute('selected') !== null) {\n        this.select(tab);\n      }\n    });\n    this.selectByUrl(this.router.url);\n  }\n\n  ngAfterContentInit() {\n    this.initTabs();\n  }\n\n  /** Selects the given tab (Component). */\n  select(tab: TabComponent) {\n    if (this.selected) {\n      this.selected.deactivate();\n    }\n    this.selected = tab;\n    tab.activate();\n    if (tab.route) {\n      this.router.navigate([tab.route], { relativeTo: this.route });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{tab.label}}\n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{tab.label}}                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TinymceComponent.html":{"url":"components/TinymceComponent.html","title":"component - TinymceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TinymceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/tinymce/src/tinymce/tinymce.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps tinymce as a control input.\nhttps://components.entrecode.de/misc/tinymce\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-tinymce\n            \n\n            \n                styleUrls\n                tinymce.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tinymce.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Public\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                update\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                debounce\n                            \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in packages/tinymce/src/tinymce/tinymce.component.ts:67\n                            \n                        \n\n                \n                    \n                            Subscribes for changes and propagates them + calling application tick manually :( \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                    \n                        Debounce time for value change processing \n\n                        \n                            Default value: 200\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settings\n                    \n                    \n                        TinyMCE Settings. Get Object.assigned to the default settings \n\n                            \n                            Type:    any\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:63\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        Output that emits when the value has been changed by the user \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:65\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Initializes the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            Destroys the editor. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:133\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:57\n                            \n                        \n\n                \n                    \n                        The container where the editor is rendered \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:55\n                            \n                        \n\n                \n                    \n                        The current editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => { }\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:127\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:53\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:59\n                            \n                        \n\n                \n                    \n                        Subject that is nexted on editor change \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:67\n                            \n                        \n\n                \n                    \n                        Current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  ApplicationRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  AfterViewInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/debounceTime';\nimport * as tinymce from 'tinymce';\nimport 'tinymce/themes/modern';\nimport 'tinymce/plugins/fullscreen';\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/template';\nimport 'tinymce/plugins/autoresize';\nimport 'tinymce/plugins/code';\nimport 'tinymce/plugins/link';\nimport 'tinymce/plugins/table';\nimport 'tinymce/plugins/visualblocks';\nimport 'tinymce/plugins/autolink';\nimport 'tinymce/plugins/lists';\nimport 'tinymce/plugins/contextmenu';\nimport 'tinymce/plugins/textcolor';\nimport 'tinymce/plugins/colorpicker';\nimport { editorSettings } from './tinymce-settings';\n\n/** Wraps tinymce as a control input.\n * https://components.entrecode.de/misc/tinymce\n*/\n@Component({\n  selector: 'ec-tinymce',\n  templateUrl: './tinymce.component.html',\n  styleUrls: ['./tinymce.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TinymceComponent),\n      multi: true\n    }\n  ]\n})\nexport class TinymceComponent\n  implements AfterViewInit, OnDestroy, ControlValueAccessor {\n  /** Promise that resolves when the editor has been initialized */\n  ready: Promise;\n  /** The current editor instance */\n  public editor: any;\n  /** The container where the editor is rendered */\n  @ViewChild('container') container: ElementRef;\n  /** Subject that is nexted on editor change */\n  update: Subject = new Subject();\n  /** Debounce time for value change processing */\n  @Input() debounce = 200;\n  /** TinyMCE Settings. Get Object.assigned to the default settings */\n  @Input() settings: any = {};\n  /** Output that emits when the value has been changed by the user */\n  @Output() change: EventEmitter = new EventEmitter();\n  /** Current value */\n  public value = '';\n\n  /** Subscribes for changes and propagates them + calling application tick manually :( */\n  constructor(private app: ApplicationRef) {\n    this.update\n      .asObservable()\n      .debounceTime(this.debounce)\n      .subscribe(editor => {\n        this.value = editor.getContent();\n        this.propagateChange(this.value);\n        this.change.emit(this.value);\n        this.app.tick();\n      });\n  }\n\n  /** Initializes the editor */\n  ngAfterViewInit() {\n    this.ready = Promise.resolve(\n      tinymce.init(\n        Object.assign(\n          editorSettings,\n          {\n            target: this.container.nativeElement\n          },\n          this.settings\n        )\n      )\n    ).then(editor => {\n      this.editor = editor[0];\n      this.editor.setContent(this.value || '');\n      this.editor.on('dblclick', e => {\n        if (e.target.localName === 'img') {\n          this.editor.buttons.image.onclick(true, e.toElement);\n        }\n      });\n      this.editor.on('change keyup', res => this.update.next(this.editor));\n      return this.editor;\n    });\n  }\n\n  /** Destroys the editor. */\n  ngOnDestroy() {\n    if (this.editor) {\n      this.ready.then(editor => {\n        editor.destroy();\n      });\n    }\n  }\n\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    if (!this.ready) {\n      return;\n    }\n    this.ready.then(editor => {\n      editor.setContent(this.value);\n    });\n  }\n\n  propagateChange = (_: any) => { };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() { }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'TinymceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TinymceModule.html":{"url":"modules/TinymceModule.html","title":"module - TinymceModule","body":"\n                   \n\n\n\n\n  Modules\n  TinymceModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/tinymce/src/tinymce.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TinymceComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TinymceComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TinymceComponent } from './tinymce/tinymce.component';\n\n@NgModule({\n  declarations: [TinymceComponent],\n  exports: [TinymceComponent]\n})\nexport class TinymceModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/toggle/toggle.component.ts\n\n\n    \n        Description\n    \n    \n        The toggle component is an alternative to the default boolean checkbox with fancier style.\nIt is used in the default input template for the view 'toggle'. \n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-toggle\n            \n\n            \n                styleUrls\n                toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propagateChange\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                toggle\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        The toggles placeholder (currently not in use) \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Register Touch \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            Toggles the value \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            writes incoming value \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:20\n                            \n                        \n\n                \n                    \n                        The current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/** The toggle component is an alternative to the default boolean checkbox with fancier style.\n * It is used in the default input template for the view 'toggle'. */\n@Component({\n  selector: 'ec-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ToggleComponent),\n      multi: true\n    }\n  ]\n})\nexport class ToggleComponent implements ControlValueAccessor {\n  /** The current value */\n  value: boolean;\n  /** The toggles placeholder (currently not in use) */\n  @Input() placeholder: string;\n\n  /** Toggles the value */\n  toggle() {\n    this.value = !this.value;\n    this.propagateChange(this.value);\n  }\n  /** writes incoming value */\n  writeValue(value: boolean) {\n    this.value = value;\n  }\n  /* Propagates change*/\n  propagateChange = (_: any) => {\n  };\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n  /** Register Touch */\n  registerOnTouched() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/vc/src/toolbar/toolbar.component.ts\n\n\n    \n        Description\n    \n    \n        ecvc toolbar containing editing tools. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-vc-toolbar\n            \n\n            \n                styleUrls\n                toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                editor\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                focusout\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        editor\n                    \n                    \n                        The editor to control \n\n                            \n                            Type:    EditorComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/vc/src/toolbar/toolbar.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nclick(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/vc/src/toolbar/toolbar.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            host click \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusout\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nfocusout(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/vc/src/toolbar/toolbar.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Blocks event on focus out \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                \n                    \nclick(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/vc/src/toolbar/toolbar.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            blocks event on click \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, HostListener, Input } from '@angular/core';\nimport { EditorComponent } from '../editor/editor.component';\n\n/** ecvc toolbar containing editing tools. */\n@Component({\n  selector: 'ec-vc-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent {\n\n  /** The editor to control */\n  @Input() editor: EditorComponent;\n  /** host click */\n  @HostListener('click', ['$event'])\n  /** Blocks the incoming event from propagating. */\n  blockEvent(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    return false;\n  }\n  /** blocks event on click */\n  click(e: any) {\n    return this.blockEvent(e);\n  }\n  /** Blocks event on focus out */\n  @HostListener('focusout', ['$event'])\n  focusOut(e: any) {\n    return this.blockEvent(e);\n  }\n}\n\n    \n\n    \n        {{editor?.caret?.phrasing?.type || '-'}}\n\n  \n    \n      \n        {{el.tag}}\n      \n    \n  \n  \n    \n      \n        {{el.tag}}\n      \n    \n  \n\n\n\n  {{editor.caret?.flow?.type || '-'}} >\n  {{editor.caret?.phrasing?.type || '-'}}\n\n-->\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{editor?.caret?.phrasing?.type || \\'-\\'}}                    {{el.tag}}                                {{el.tag}}              {{editor.caret?.flow?.type || \\'-\\'}} >  {{editor.caret?.phrasing?.type || \\'-\\'}}-->'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeConfigService.html":{"url":"injectables/TypeConfigService.html","title":"injectable - TypeConfigService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TypeConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/type-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The TypeConfig holds each field type's specific behaviour in certain situations \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                nestedCrudConfig\n                            \n                            \n                                    Private\n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayAccount\n                            \n                            \n                                displayDate\n                            \n                            \n                                get\n                            \n                            \n                                groupDate\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/model-config/type-config.service.ts:137\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayAccount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:172\n                            \n                        \n\n\n                \n                    \n                            Returns an account display function \n\n\n                            \n                                Returns :     (value: any, entry: any, property: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayDate(time: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:166\n                            \n                        \n\n\n                \n                    \n                            Returns a date display function. If time is true, the time will be displayed too. Usese 'moment.format.date' and 'moment.format.time' symbols. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (value: any) => any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:141\n                            \n                        \n\n\n                \n                    \n                            Returns the base FieldConfig for the given type. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FieldConfigProperty\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngroupDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:177\n                            \n                        \n\n\n                \n                    \n                            Returns a date group function. Uses 'moment.format.month' symbol \n\n\n                            \n                                Returns :     (value: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(type: string, config: FieldConfigProperty)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:157\n                            \n                        \n\n\n                \n                    \n                            Assigns the given config to the type, e.g. to change the default template of a type. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nestedCrudConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nestedCrudConfig:     CrudConfig\n\n                    \n                \n                    \n                        \n                            Type :     CrudConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    size: 10,\n    // methods: ['get'],\n    popClass: 'ec-pop_fullscreen'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:18\n                            \n                        \n\n                \n                    \n                        The default config for nested crud lists, as passed to entry-select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            types\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        types:     FieldConfig\n\n                    \n                \n                    \n                        \n                            Type :     FieldConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    id: {\n      view: 'label'\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true,\n    },\n    boolean: {\n      prefill: false,\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact'\n    },\n    decimal: {\n      view: 'number',\n      sortable: true,\n    },\n    url: {\n      sortable: true,\n      filterable: true,\n    },\n    asset: {\n      view: 'asset',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    assets: {\n      view: 'assets',\n      input: DefaultEntryInputComponent,\n      /* display: (value, entry, property) => entry.getImageThumbUrl(property, 100), */\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    email: {},\n    phone: {\n      view: 'string'\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: (value) => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(this.symbol.resolve('moment.format.date'))\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    entries: {\n      view: 'tags',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => value ? JSON.stringify(value) : ''\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => value ? value.longitude + ',' + value.latitude : '',\n      filterPopClass: 'ec-pop_dialog'\n    },\n    account: {\n      display: (value) => value ? value.title : '',\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    },\n    role: {\n      display: (value) => value ? value.name : '',\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:25\n                            \n                        \n\n                \n                    \n                        Defines the base configuration of each type.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FieldConfigProperty } from '@ec.components/core/src/config/field-config-property.interface';\nimport { FieldConfig } from '@ec.components/core/src/config/field-config.interface';\nimport { DefaultInputComponent } from '@ec.components/ui/src/form/default-input/default-input.component';\nimport { DefaultOutputComponent } from '@ec.components/ui/src/form/default-output/default-output.component';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport moment from 'moment-es6';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { AdminEntryInputComponent } from '../entry-form/admin-entry-input.component';\nimport { DefaultEntryInputComponent } from '../entry-form/default-entry-input.component';\nimport { DefaultEntryOutputComponent } from '../entry-form/default-entry-output.component';\n\n/** The TypeConfig holds each field type's specific behaviour in certain situations */\n@Injectable()\nexport class TypeConfigService {\n  /** The default config for nested crud lists, as passed to entry-select */\n  private nestedCrudConfig: CrudConfig = {\n    size: 10,\n    // methods: ['get'],\n    popClass: 'ec-pop_fullscreen'\n  };\n\n  /** Defines the base configuration of each type.*/\n  private types: FieldConfig = {\n    id: {\n      view: 'label'\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true,\n    },\n    boolean: {\n      prefill: false,\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact'\n    },\n    decimal: {\n      view: 'number',\n      sortable: true,\n    },\n    url: {\n      sortable: true,\n      filterable: true,\n    },\n    asset: {\n      view: 'asset',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    assets: {\n      view: 'assets',\n      input: DefaultEntryInputComponent,\n      /* display: (value, entry, property) => entry.getImageThumbUrl(property, 100), */\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    email: {},\n    phone: {\n      view: 'string'\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: (value) => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(this.symbol.resolve('moment.format.date'))\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    entries: {\n      view: 'tags',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => value ? JSON.stringify(value) : ''\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => value ? value.longitude + ',' + value.latitude : '',\n      filterPopClass: 'ec-pop_dialog'\n    },\n    account: {\n      display: (value) => value ? value.title : '',\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    },\n    role: {\n      display: (value) => value ? value.name : '',\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    }\n  };\n  constructor(private symbol: SymbolService) { }\n\n  /** Returns the base FieldConfig for the given type. */\n  get(type: string): FieldConfigProperty {\n    const config = this.types[type];\n    if (!config) {\n      console.error('missing config for type', type);\n      return {};\n    }\n    Object.assign(config, {\n      type,\n      view: config.view || type,\n      input: config.input || DefaultInputComponent,\n      output: config.output || DefaultOutputComponent,\n    });\n    return config;\n  }\n\n  /** Assigns the given config to the type, e.g. to change the default template of a type. */\n  set(type: string, config: FieldConfigProperty) {\n    if (!this.types[type]) {\n      console.error('cannot configure non existing type', type);\n      return;\n    }\n    Object.assign(this.types[type], config);\n  }\n\n  /** Returns a date display function. If time is true, the time will be displayed too. Usese 'moment.format.date' and 'moment.format.time' symbols. */\n  displayDate(time = true) {\n    const format = this.symbol.resolve('moment.format.date') + (time ? ' ' + this.symbol.resolve('moment.format.time') : '');\n    return (value) => value ? moment(value).format(format) : '';\n  }\n\n  /** Returns an account display function */\n  displayAccount() {\n    return (value, entry, property) => entry.getTitle(property) || this.symbol.resolve('field.creator.ecuser');\n  }\n\n  /** Returns a date group function. Uses 'moment.format.month' symbol */\n  groupDate() {\n    return (value) => moment(value).format(this.symbol.resolve('moment.format.month'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n  Modules\n  UiModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiModule\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_exports\n\n\n\n\nFormModule\n\nFormModule\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\n\n\nListModule\n\nListModule\n\nUiModule -->\n\nListModule->UiModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\n\n\nSelectModule\n\nSelectModule\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/ui.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    IconModule\n                            \n                            \n                                    ListModule\n                            \n                            \n                                    LoaderModule\n                            \n                            \n                                    NotificationsModule\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    SelectModule\n                            \n                            \n                                    SymbolModule\n                            \n                            \n                                    UtilityModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    IconModule\n                            \n                            \n                                    ListModule\n                            \n                            \n                                    LoaderModule\n                            \n                            \n                                    NotificationsModule\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    SelectModule\n                            \n                            \n                                    SymbolModule\n                            \n                            \n                                    UtilityModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ListModule } from './list/list.module';\nimport { FormModule } from './form/form.module';\nimport { PopModule } from './pop/pop.module';\nimport { LoaderModule } from './loader/loader.module';\nimport { NotificationsModule } from './notifications/notifications.module';\nimport { UtilityModule } from './utility/utility.module';\nimport { SelectModule } from './select/select.module';\nimport { IconModule } from './icon/icon.module';\nimport { SymbolModule } from './symbol/symbol.module';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    UtilityModule,\n    NotificationsModule,\n    PopModule,\n    LoaderModule,\n    FormModule,\n    ListModule,\n    SelectModule,\n    IconModule,\n    SymbolModule\n  ],\n  exports: [\n    ReactiveFormsModule,\n    FormsModule,\n    UtilityModule,\n    PopModule,\n    NotificationsModule,\n    LoaderModule,\n    ListModule,\n    FormModule,\n    SelectModule,\n    IconModule,\n    SymbolModule\n  ]\n})\nexport class UiModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Update.html":{"url":"interfaces/Update.html","title":"interface - Update","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Update\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/crud/crud.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the CrudService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        entry\n                                \n                                \n                                            Optional\n                                        list\n                                \n                                \n                                        model\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entry\n                                    \n                                \n                                \n                                    \n                                        entry:     EntryResource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EntryResource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant entry. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     EntryList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EntryList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The model that has been updated. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of update. (create/read/update/delete) \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport EntryList from 'ec.sdk/lib/resources/publicAPI/EntryList';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/filter';\nimport { Subject } from 'rxjs/Subject';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Update {\n  /** The model that has been updated. */\n  model: string | string[],\n  /** The relevant entry. */\n  entry?: EntryResource,\n  /** The list where it happened. */\n  list?: EntryList,\n  /** The type of update. (create/read/update/delete) */\n  type?: 'post' | 'get' | 'put' | 'delete'\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class CrudService {\n  /** The changes event is emitted everytime an entry is created or updated. */\n  private changes: Subject = new Subject();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService) {\n  }\n\n  /** Gives true if the given change fits all property values of the filter. */\n  matches(change: Update, filter: Update): boolean {\n    return Object.keys(filter)\n      .reduce((match, key) => match && change[key] === filter[key], true);\n  }\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: Update): Observable {\n    if (!filter) {\n      return this.changes.asObservable();\n    }\n    return this.changes.asObservable().filter((change: Update) => this.matches(change, filter));\n  }\n\n  /** Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. */\n  save(model: string, entry: EntryResource, value: Object) {\n    if (entry && entry.save) {\n      return this.update(model, entry, value);\n    }\n    return this.create(model, value)\n      .then((_entry) => {\n        return _entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given entry with the new value. Fires the \"update\" change. */\n  update(model, entry: EntryResource, value: Object): Promise {\n    const oldValues = {}; // save old values\n    Object.keys(value).forEach((key) => oldValues[key] = entry[key]);\n    Object.assign(entry, this.clean(value)); // assign new form values\n    return entry.save().then((_entry) => {\n      this.changes.next({ model, entry: _entry, type: 'put' });\n      return _entry;\n    })\n      .catch((err) => {\n        Object.assign(entry, this.clean(oldValues)); // fall back to old values\n        return Promise.reject(err);\n      });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' ||\n      ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (value[key] === '') { // clear empty strings\n          value[key] = null;\n        }\n        if (this.isImmutableProperty(key)) { // filter system properties\n          delete value[key];\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new entry with the given value for the given model. Fires the \"create\" change. */\n  create(model: string, value: Object): Promise {\n    return this.sdk.api.createEntry(model, this.clean(value))\n      .then((entry: EntryResource) => {\n        // console.log('created entry', entry);\n        // TODO make sure leveled entries are returned leveled\n        this.changes.next({ model, entry, type: 'post' });\n        return entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given entry and emits the \"delete\" change. */\n  del(model: string, entry: EntryResource) {\n    return entry.del().then((res) => {\n      this.changes.next({ model, entry, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Upload.html":{"url":"interfaces/Upload.html","title":"interface - Upload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Upload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the CrudService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        asset\n                                \n                                \n                                            Optional\n                                        assets\n                                \n                                \n                                            Optional\n                                        item\n                                \n                                \n                                            Optional\n                                        items\n                                \n                                \n                                            Optional\n                                        list\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asset\n                                    \n                                \n                                \n                                    \n                                        asset:     PublicAssetResource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant asset. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assets\n                                    \n                                \n                                \n                                    \n                                        assets:     PublicAssetResource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant assets (when uploading multiple). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     Item\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Item\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     ResourceList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ResourceList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport { SdkService } from '../sdk/sdk.service';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport moment from 'moment-es6';\nimport { Item } from '@ec.components/core/src/item/item';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource,\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[],\n  /** The uploaded asset as item */\n  item?: Item\n  /** The uploaded asset as item */\n  items?: Array>\n  /** The list where it happened. */\n  list?: ResourceList,\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  customNames?: string[]\n  /** Custom file form fieldName */\n  fieldName?: string\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n\n  public newAssetListConfig = { // TODO: dont use\n    label: 'title',\n    identifier: 'assetID',\n    fields: {\n      title: {\n        label: 'Titel',\n        sortable: true,\n        filterable: true,\n        type: 'text',\n        view: 'string',\n      },\n    }\n  }\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig) {\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset) {\n    if (Array.isArray(asset)) {\n      return asset.length ? this.isNewAsset(asset[0]) : false;\n    }\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(asset.assetID)\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n    const files = e.target.files || e.dataTransfer.files;\n    if (!files.length) {\n      return;\n    }\n    return api.createDMAssets(assetGroupID, this.getFormData(files, options))\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.newAssetListConfig),\n          items: assets.map(asset => new Item(asset, this.newAssetListConfig))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(e): Promise {\n    const files = e.target.files || e.dataTransfer.files;\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve().then((): Promise Promise> => {\n      if (files.length === 1) {\n        return this.sdk.api.createAsset(data, {})\n      }\n      return this.sdk.api.createAssets(data, {})\n    })\n      .then(res => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      }).then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('legacyAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(assets: Array): Promise> {\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (unresolved.length === 1) {\n      unresolved.push(unresolved[0]); // :) TODO remove when backend bug is fixed\n    }\n    return this.sdk.api.assetList({ assetID: { any: unresolved } })\n      .then((assetList) => {\n        const resolved = assetList.getAllItems();\n        return assets.map((asset) =>\n          typeof asset === 'string' ?\n            resolved.find((resource) => resource.assetID === asset) : asset)\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadComponent.html":{"url":"components/UploadComponent.html","title":"component - UploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/files/upload/upload.component.ts\n\n\n    \n        Description\n    \n    \n        This component will render an input field to upload files to the datamanager. \n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-upload\n            \n\n\n\n\n            \n                templateUrl\n                ./upload.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                fileInput\n                            \n                            \n                                    Public\n                                filesToUpload\n                            \n                            \n                                notifications\n                            \n                            \n                                pop\n                            \n                            \n                                uploadPromise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clear\n                            \n                            \n                                trigger\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetGroup\n                            \n                            \n                                assetGroupID\n                            \n                            \n                                custom\n                            \n                            \n                                loader\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, fileService: FileService, loaderService: LoaderService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/upload/upload.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The api to use for the upload. Defaults to sdk.api \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroup\n                    \n                    \n                        The asset group to upload into. If not defined, old assets will be used! DEPRECATED! \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                    \n                        The asset group to upload into. If not defined, old assets will be used! \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        custom\n                    \n                    \n                        If true, a pop to rename files + customize flags will appear before uploading. \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be used while uploading\n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        Upload options \n\n                            \n                            Type:    FileOptions\n\n                            \n                        \n                            Default value: {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    customNames: []\n  }\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        The input placeholder\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Emits when an upload is complete. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(e: , api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Uploads the files from the input event. Handles loader and notifications. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            clears the file input \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trigger\n                            \n                            \n                        \n                    \n                \n                \n                    \ntrigger()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            opens the system upload window by triggering the input \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upload\n                            \n                            \n                        \n                    \n                \n                \n                    \nupload(e: , api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Triggers upload of current selected files \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileInput:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:43\n                            \n                        \n\n                \n                    \n                        Reference to the input[type=file] element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filesToUpload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filesToUpload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:47\n                            \n                        \n\n                \n                    \n                        Error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pop:     PopComponent\n\n                    \n                \n                    \n                        \n                            Type :     PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:45\n                            \n                        \n\n                \n                    \n                        Pop child for new asset options. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadPromise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uploadPromise:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { PopComponent } from '@ec.components/ui/src/pop/pop.component';\nimport { FileOptions } from './../file.service';\nimport { Component, EventEmitter, Input, Output, ElementRef, ViewChild } from '@angular/core';\nimport { SdkService } from '../../sdk/sdk.service';\nimport { FileService, Upload } from '../file.service';\nimport { LoaderComponent, WithLoader, LoaderService, NotificationsService } from '@ec.components/ui';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { WithNotifications } from '@ec.components/ui/src/notifications/with-notifications.interface';\nimport { Notification } from '@ec.components/ui/src/notifications/notification';\n\n/** This component will render an input field to upload files to the datamanager. */\n@Component({\n  selector: 'ec-upload',\n  templateUrl: './upload.component.html',\n})\nexport class UploadComponent implements WithLoader, WithNotifications {\n  event: any;\n  uploadPromise: Promise;\n  public filesToUpload: any;\n  /** The input placeholder*/\n  @Input() placeholder: string;\n  /** The loader that should be used while uploading*/\n  @Input() loader: LoaderComponent;\n  /** The asset group to upload into. If not defined, old assets will be used! */\n  @Input() assetGroupID: string;\n  /** The asset group to upload into. If not defined, old assets will be used! DEPRECATED! */\n  @Input() assetGroup: string;\n  /** If true, a pop to rename files + customize flags will appear before uploading. */\n  @Input() custom: boolean;\n  /** Upload options */\n  @Input() options: FileOptions = {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    customNames: []\n  };\n  /** The api to use for the upload. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Emits when an upload is complete. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** Reference to the input[type=file] element */\n  @ViewChild('fileInput') fileInput: ElementRef;\n  /** Pop child for new asset options. */\n  @ViewChild(PopComponent) pop: PopComponent;\n  /** Error Notifications */\n  notifications: Notification[] = [];\n\n  constructor(private sdk: SdkService,\n    private fileService: FileService,\n    private loaderService: LoaderService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService) {\n  }\n  /** opens the system upload window by triggering the input */\n  trigger() {\n    if (!this.fileInput) {\n      console.error('cannot trigger upload: file input element not found!');\n      return;\n    }\n    /* this.clear(); */\n    this.fileInput.nativeElement.click();\n  }\n\n  /** Uploads the files from the input event. Handles loader and notifications. */\n  change(e, api = this.sdk.api) {\n    if (!e || !e.target || !e.target.files || !e.target.files.length) {\n      return;\n    }\n    this.filesToUpload = e.target.files;\n    if (this.custom) {\n      this.event = e;\n      this.pop.show();\n      return;\n    }\n    return this.upload(e, api);\n  }\n\n  /** clears the file input */\n  clear() {\n    if (!this.fileInput) {\n      return;\n    }\n    this.fileInput.nativeElement.value = ''; // clear input to eventually trigger change on same file\n  }\n\n  /** Triggers upload of current selected files */\n  upload(e, api = this.sdk.api) {\n    e.preventDefault();\n    e.stopPropagation();\n    const assetGroupID = this.assetGroupID || this.assetGroup;\n    this.uploadPromise = (assetGroupID ?\n      this.fileService.uploadAssets(e, assetGroupID, this.options, api) :\n      this.fileService.uploadFiles(e))\n      .then((_upload) => {\n        this.success.emit(_upload);\n        this.notificationService.emit({\n          title: this.symbol.resolve('success.upload'),\n          type: 'success',\n          hide: this.notifications\n        });\n        this.pop.hide();\n        return _upload;\n      }).catch((err) => {\n        console.error(err);\n        this.notificationService.emit({\n          title: this.symbol.resolve('error.upload'),\n          error: err,\n          sticky: true,\n          hide: this.notifications,\n          append: this.notifications\n        });\n      });\n    this.loaderService.wait(this.uploadPromise, this.loader);\n    this.uploadPromise.then(() => {\n      delete this.uploadPromise;\n    })\n    return this.uploadPromise;\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n        \n    \n    \n        \n            \n            \n                \n                {{'upload.preserveFilenames' | symbol}}\n            \n        \n        \n            \n            \n                \n                {{'upload.includeAssetIDInPath' | symbol}}\n            \n        \n        \n            \n            \n                \n                {{'upload.ignoreDuplicates' | symbol}}\n            \n        \n        \n            {{ f.name }}\n            \n                \n            \n        \n        Upload\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                        {{\\'upload.preserveFilenames\\' | symbol}}                                                                                    {{\\'upload.includeAssetIDInPath\\' | symbol}}                                                                                    {{\\'upload.ignoreDuplicates\\' | symbol}}                                        {{ f.name }}                                                        Upload    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilityModule.html":{"url":"modules/UtilityModule.html","title":"module - UtilityModule","body":"\n                   \n\n\n\n\n  Modules\n  UtilityModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_imports\n\n\n\ncluster_UtilityModule_exports\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUtilityModule -->\n\nMenuComponent->UtilityModule\n\n\n\n\n\nMockupComponent\n\nMockupComponent\n\nUtilityModule -->\n\nMockupComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nUtilityModule->IoModule \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nUtilityModule->MenuComponent \n\n\n\n\n\nMockupComponent \n\nMockupComponent \n\nMockupComponent  -->\n\nUtilityModule->MockupComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nIoModule\n\nIoModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/utility/utility.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginFormComponent\n                            \n                            \n                                MenuComponent\n                            \n                            \n                                MockupComponent\n                            \n                            \n                                TabComponent\n                            \n                            \n                                TabsComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IoModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    IoModule\n                            \n                            \n                                    LoginFormComponent\n                            \n                            \n                                    MenuComponent\n                            \n                            \n                                    MockupComponent\n                            \n                            \n                                    TabComponent\n                            \n                            \n                                    TabsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { TabsComponent } from './tabs/tabs.component';\nimport { TabComponent } from './tab/tab.component';\nimport { MockupComponent } from './mockup/mockup.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { IoModule } from '../io/io.module';\n\n@NgModule({\n  entryComponents: [],\n  declarations: [\n    TabsComponent,\n    TabComponent,\n    MockupComponent,\n    MenuComponent,\n    LoginFormComponent,\n  ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    IoModule,\n    CommonModule,\n    RouterModule,\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    IoModule,\n    TabsComponent,\n    TabComponent,\n    MockupComponent,\n    MenuComponent,\n    LoginFormComponent,\n    RouterModule,\n  ],\n  providers: [],\n})\nexport class UtilityModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcModule.html":{"url":"modules/VcModule.html","title":"module - VcModule","body":"\n                   \n\n\n\n\n  Modules\n  VcModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcModule\n\n\n\ncluster_VcModule_declarations\n\n\n\ncluster_VcModule_exports\n\n\n\n\nEditorComponent\n\nEditorComponent\n\n\n\nVcModule\n\nVcModule\n\nVcModule -->\n\nEditorComponent->VcModule\n\n\n\n\n\nSafeHtmlPipe\n\nSafeHtmlPipe\n\nVcModule -->\n\nSafeHtmlPipe->VcModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nVcModule -->\n\nToolbarComponent->VcModule\n\n\n\n\n\nEditorComponent \n\nEditorComponent \n\nEditorComponent  -->\n\nVcModule->EditorComponent \n\n\n\n\n\nSafeHtmlPipe \n\nSafeHtmlPipe \n\nSafeHtmlPipe  -->\n\nVcModule->SafeHtmlPipe \n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nVcModule->ToolbarComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/vc/src/vc.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                EditorComponent\n                            \n                            \n                                SafeHtmlPipe\n                            \n                            \n                                ToolbarComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                EditorComponent\n                            \n                            \n                                ToolbarComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    EditorComponent\n                            \n                            \n                                    SafeHtmlPipe\n                            \n                            \n                                    ToolbarComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\n\nimport { NgModule } from '@angular/core';\nimport { SafeHtmlPipe } from './safe-html.pipe';\nimport { EditorComponent } from './editor/editor.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\n\n@NgModule({\n  entryComponents: [\n    EditorComponent,\n    ToolbarComponent,\n  ],\n  declarations: [\n    EditorComponent,\n    ToolbarComponent,\n    SafeHtmlPipe,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    EditorComponent,\n    ToolbarComponent,\n    SafeHtmlPipe,\n  ],\n  providers: [],\n})\nexport class VcModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/VisibleFieldsPipe.html":{"url":"pipes/VisibleFieldsPipe.html","title":"pipe - VisibleFieldsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  VisibleFieldsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/visible-fields.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        visibleFields\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(fields: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/visible-fields.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n                            Filters out all fields that should not be displayed in a regular form \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fields\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Field } from '@ec.components/core/src/field/field';\n\n/** The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. */\n@Pipe({\n  name: 'visibleFields'\n})\nexport class VisibleFieldsPipe implements PipeTransform {\n  /** Filters out all fields that should not be displayed in a regular form */\n  transform(fields: Array): any {\n    return fields.filter((field) => {\n      return field.form !== false;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithLoader.html":{"url":"interfaces/WithLoader.html","title":"interface - WithLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/loader/with-loader.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses a loader. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:     LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoaderComponent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The loader that is contacted on any kind of loading operation. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { LoaderComponent } from './loader.component';\n/** This interface can be used on a component that uses a loader. */\nexport interface WithLoader {\n  /** The loader that is contacted on any kind of loading operation. */\n  loader: LoaderComponent\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithNotifications.html":{"url":"interfaces/WithNotifications.html","title":"interface - WithNotifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithNotifications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/notifications/with-notifications.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses notifications. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        silent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:     Notification[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Notification[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Stores notification history for later access. E.g. stores errors that should be hidden later. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        silent\n                                    \n                                \n                                \n                                    \n                                        silent:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no notifications will be emitted \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Notification } from './notification';\n\n\n/** This interface can be used on a component that uses notifications. */\nexport interface WithNotifications {\n    /** Stores notification history for later access. E.g. stores errors that should be hidden later. */\n    notifications?: Notification[];\n    /** If true, no notifications will be emitted */\n    silent?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\n\n0.17.0\n\nadded resource module with all resource related components and services\ncan now add delete and modify entries and resource through the selects\nasset select now supports old and new assets. When you pass [assetGroupID] to select (or list/upload), new assets will be used.\ndeprecated asset-list, because ec.sdk now supports public api relations.\n\nBREAKING CHANGE:\n\nremoved [field] input from selects\n\n\n0.15.0\n\ncan now use SdkService without datamanagerID.\nadded resource-delete-pop\nremoved labels config from pagination-config. now using symbol.service\nadded ec-resource-select\nadded support for new assets\n\n\n0.14.0\n\nadded ready event to FormComponent when initialization is complete.\nadded ResourcePopComponent for creating and editing resources.\nadded permissions option to resource-config to automatically show only allowed actions.\nadded ResourceCrudComponent for easy create/read/update/delete of any resource.\ncan now set field config label to false to show an empty label. (COM-89)\noptimized ec-select toggle behaviour (COM-92, COM-93)\ncan now set placeholder for ec-password-reset (COM-101)\nadded SymbolService for localization\n\n\n0.13.0\n\ncan now configure the maximum visible items for 'tags' view via the maxItems option in the field config. The default value is 10.\nadded auto generated id to all fields. Those ids are used in label#for and input#id. You should also reference this id in custom inputs to make the label clickable.\nadded ec-icon component for more flexible icons.\nadded paginationConfig Input to ListComponent (+ all children like ResourceListComponent)\nadded maxColumns option to list-config.\n\nBREAKING CHANGES:\n\nCOM-98: active/visible classes: renamed active to is-active, visible to is-visible and disabled to is-disabled\nCOM-95: renamed is-sortable-active to is-sorted + added is-sorted-asc and is-sorted-desc\nCOM-96: replaced all usages of ec-icon with new ec-icon component (nests one level deeper)\nCOM-45: removed range input from pagination, replaced with PaginationConfig with additional options (see docs)\nremoved [host] input from ListItemsComponent due to incompatibilities.\nrenamed list config property disableSelection to selectMode and inverted its value meaning. When selectMode is true, the checkboxes are shown and the columnClicked event is ignored as long as selectMode is active. You can toggle the selectMode via list#toggleSelectMode.\nremoved DatamanagerListComponent and ModelListComponent. You can use ResourceList for both now.\n\n\n0.12.0\nBREAKING CHANGE:\n\nform.component (and all children): renamed (submit) output to (submitted)\n\n\n0.10.0\nBREAKING CHANGES:\n\nlist.component (and all extending components): renamed select output to columnClicked. (Global replace \"(select)\" to \"(columnClicked)\").\nmonth.component: renamed select output to dayClicked (similar to list.component)\n\n\n0.9.0\n\nadded use method to selection.component to write the model from outside\nBREAKING CHANGES:\necPublicAsset has been renamed to ecAsset and now supports direct id binding to directive.\n\n\n0.8.2\n\nadded ec-toggle to default inputs (use view: 'toggle' in field config)\nadded ec-calendar\nsystem fields (id, created, modified etc) are now readOnly by default\n\n\n0.8.1\n\nadded ec-entry-pop\n\n\n0.8.0\nBREAKING CHANGES:\n\nremoved PublicService and AdminService, you should use sdk methods instead.\nlogin/signup + more auth methods have been moved from SdkService to new AuthService\nformer ec-login has been renamed to ec-login-form, the new ec-login handles login automatically.\ncrud methods have been renamend to 'get', 'put', 'post', 'delete'\nec-entry and ec-entries are now directives ecEntry and ecEntries\n\n\n0.7.0\nBREAKING CHANGES:\n\npop classes have been completely changed to:\n.ec-pop_fullscreen\n.ec-pop_dialog\n.ec-pop_drawer-left\n.ec-pop_drawer-top\n.ec-pop_drawer-right\n.ec-pop_drawer-bottom\n.ec-pop_toast-top\n.ec-pop_toast-bottom\n\n\nadded @ec.components/style package\n\n\n0.6.0\n\nEntryFormComponent.deleteEntry now returns the deletion promise.\nfix: SdkService.ready promise was not renewed after login\nLoginComponent now accepts a loader as input\nBREAKING CHANGES:\nFormComponent.submitted now emits the instance of Form and not the group\n\n\n0.5.3\n\nfeature: asset-select is now capable of using ngModel with two way binding\n\n\n0.5.2\n\nremoved DataRoutingModule from DataModule\nfeature: asset-select can now resolve assetID's.\nfeature: added filterPopClass config option to field-property-config.\nfurther styling\n\n\n0.5.1\n\nfurther styling\nfix: could not set custom inputs/outputs for entry fields\nnow using ec.sdk 0.8.6\n\n\n0.5.0\n\nfurther styling\nBREAKING CHANGES:\nview: 'label' must now be view: 'tag'\nview: 'labels' must now be view: 'tags'\nselection is now a direct input of ec-crud instead of a config property\n\n\n0.4.1\n\nfixed tests after refactoring\nwrote project setup tutorial\nfurther styling\n\n\n0.4.0\n\nnow using ec.sdk 0.8.5\n\nBREAKING CHANGES:\n\nall imports from '@ec.components/_/' must now lead to '@ec.components//src/_'\nimports from '@ec.components/*' can stay the same and should generally be preferred.\n\n\n0.3.1\n\nrefactored typings to be aot compatible\nrefactored imports\nbegan styling\n\n\n0.3.0\n\nnow using ec.sdk 0.8.1\nnow supporting default routes for filtering and more\nAssetInput is now default for asset/assets fields\n\n\n0.2.0\n\nnow using ec.sdk 0.7.1\nentry-form now supports lvl1 entries even with nested resources\nec-datetime now supports iso dates\n\n\n0.1.1\n\nchanged src folder and module structure\nec-model-list\nec-asset-select\nec-upload\nec-datetime input\n\n\n0.1.0 (2017-08-23)\n\nthe most important basic components are now implemented\ndynamic input/output templates\nec-entry, ec-entries\nadded demo with multiple routes\nec-form\nmuch more\n\n\n0.0.2 (2017-05-11)\n\nimproved list\nimproved imports\n\n\n0.0.1 (2017-05-10)\n\ninitial release\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    packages/ace/src/ace.component.ts\n            \n            \n                component\n            \n            \n                AceComponent\n            \n            \n                90 %\n                (19/21)\n            \n        \n        \n            \n                \n                    packages/ace/src/ace.component.ts\n            \n            \n                variable\n            \n            \n                ace\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/collection/collection.ts\n            \n            \n                class\n            \n            \n                Collection\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    packages/core/src/config/config.ts\n            \n            \n                class\n            \n            \n                Config\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/core/src/config/field-config-property.interface.ts\n            \n            \n                interface\n            \n            \n                FieldConfigProperty\n            \n            \n                100 %\n                (36/36)\n            \n        \n        \n            \n                \n                    packages/core/src/config/field-config.interface.ts\n            \n            \n                interface\n            \n            \n                FieldConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/field/field.ts\n            \n            \n                class\n            \n            \n                Field\n            \n            \n                95 %\n                (22/23)\n            \n        \n        \n            \n                \n                    packages/core/src/form/form-config.interface.ts\n            \n            \n                interface\n            \n            \n                FormConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/form/form.ts\n            \n            \n                class\n            \n            \n                Form\n            \n            \n                92 %\n                (26/28)\n            \n        \n        \n            \n                \n                    packages/core/src/item/item-config.interface.ts\n            \n            \n                interface\n            \n            \n                ItemConfig\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    packages/core/src/item/item.ts\n            \n            \n                class\n            \n            \n                Item\n            \n            \n                91 %\n                (21/23)\n            \n        \n        \n            \n                \n                    packages/core/src/list/list-config.interface.ts\n            \n            \n                interface\n            \n            \n                ListConfig\n            \n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                    packages/core/src/list/list.ts\n            \n            \n                class\n            \n            \n                List\n            \n            \n                100 %\n                (35/35)\n            \n        \n        \n            \n                \n                    packages/core/src/pagination/pagination.ts\n            \n            \n                class\n            \n            \n                Pagination\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                    packages/core/src/selection/selection.ts\n            \n            \n                class\n            \n            \n                Selection\n            \n            \n                100 %\n                (40/40)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                class\n            \n            \n                Sorter\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                function\n            \n            \n                sortBoolean\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                function\n            \n            \n                sortNumber\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                function\n            \n            \n                sortString\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                variable\n            \n            \n                collator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/auth-guard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuard\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/auth.module.ts\n            \n            \n                function\n            \n            \n                cookieFactory\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/email-available.validator.ts\n            \n            \n                variable\n            \n            \n                emailAvailable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/errors.ts\n            \n            \n                variable\n            \n            \n                backendErrorCodes\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/errors.ts\n            \n            \n                variable\n            \n            \n                errors\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/password-reset/password-reset.component.ts\n            \n            \n                component\n            \n            \n                PasswordResetComponent\n            \n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                    packages/data/src/crud/crud-config.interface.ts\n            \n            \n                interface\n            \n            \n                CrudConfig\n            \n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                    packages/data/src/crud/crud.component.ts\n            \n            \n                component\n            \n            \n                CrudComponent\n            \n            \n                78 %\n                (15/19)\n            \n        \n        \n            \n                \n                    packages/data/src/crud/crud.service.ts\n            \n            \n                injectable\n            \n            \n                CrudService\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    packages/data/src/crud/crud.service.ts\n            \n            \n                interface\n            \n            \n                Update\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    packages/data/src/entries/entries.directive.ts\n            \n            \n                directive\n            \n            \n                EntriesDirective\n            \n            \n                66 %\n                (12/18)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/admin-entry-input.component.ts\n            \n            \n                component\n            \n            \n                AdminEntryInputComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/default-entry-input.component.ts\n            \n            \n                component\n            \n            \n                DefaultEntryInputComponent\n            \n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/default-entry-output.component.ts\n            \n            \n                component\n            \n            \n                DefaultEntryOutputComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/entry-form.component.ts\n            \n            \n                component\n            \n            \n                EntryFormComponent\n            \n            \n                97 %\n                (35/36)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-list/entry-list.component.ts\n            \n            \n                component\n            \n            \n                EntryListComponent\n            \n            \n                71 %\n                (15/21)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-list/entry-list.ts\n            \n            \n                class\n            \n            \n                EntryList\n            \n            \n                88 %\n                (23/26)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-pop/entry-pop.component.ts\n            \n            \n                component\n            \n            \n                EntryPopComponent\n            \n            \n                92 %\n                (25/27)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-select/entry-select.component.ts\n            \n            \n                component\n            \n            \n                EntrySelectComponent\n            \n            \n                82 %\n                (38/46)\n            \n        \n        \n            \n                \n                    packages/data/src/entry/entry.directive.ts\n            \n            \n                directive\n            \n            \n                EntryDirective\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    packages/data/src/files/asset-list-pop/asset-list-pop.component.ts\n            \n            \n                component\n            \n            \n                AssetListPopComponent\n            \n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                    packages/data/src/files/asset-select/asset-select.component.ts\n            \n            \n                component\n            \n            \n                AssetSelectComponent\n            \n            \n                73 %\n                (30/41)\n            \n        \n        \n            \n                \n                    packages/data/src/files/asset/asset.directive.ts\n            \n            \n                directive\n            \n            \n                AssetDirective\n            \n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                    packages/data/src/files/dropzone/dropzone.directive.ts\n            \n            \n                directive\n            \n            \n                DropzoneDirective\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                    packages/data/src/files/file.service.ts\n            \n            \n                injectable\n            \n            \n                FileService\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    packages/data/src/files/file.service.ts\n            \n            \n                interface\n            \n            \n                FileOptions\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    packages/data/src/files/file.service.ts\n            \n            \n                interface\n            \n            \n                Upload\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    packages/data/src/files/image/image.directive.ts\n            \n            \n                directive\n            \n            \n                ImageDirective\n            \n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                    packages/data/src/files/upload/upload.component.ts\n            \n            \n                component\n            \n            \n                UploadComponent\n            \n            \n                80 %\n                (16/20)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/model-config.interface.ts\n            \n            \n                interface\n            \n            \n                ModelConfig\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/model-config.service.ts\n            \n            \n                injectable\n            \n            \n                ModelConfigService\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/model-configuration.interface.ts\n            \n            \n                interface\n            \n            \n                ModelConfiguration\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/type-config.service.ts\n            \n            \n                injectable\n            \n            \n                TypeConfigService\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-config/resource-config.service.ts\n            \n            \n                injectable\n            \n            \n                ResourceConfig\n            \n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-config/resource.service.ts\n            \n            \n                injectable\n            \n            \n                ResourceService\n            \n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-config/resource.service.ts\n            \n            \n                interface\n            \n            \n                Update\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-crud/resource-crud.component.ts\n            \n            \n                component\n            \n            \n                ResourceCrudComponent\n            \n            \n                75 %\n                (15/20)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-delete-pop/resource-delete-pop.component.ts\n            \n            \n                component\n            \n            \n                ResourceDeletePopComponent\n            \n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-form/resource-form.component.ts\n            \n            \n                component\n            \n            \n                ResourceFormComponent\n            \n            \n                92 %\n                (35/38)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-form/resource-form.ts\n            \n            \n                class\n            \n            \n                ResourceForm\n            \n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-list/resource-list.component.ts\n            \n            \n                component\n            \n            \n                ResourceListComponent\n            \n            \n                90 %\n                (29/32)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-list/resource-list.ts\n            \n            \n                class\n            \n            \n                ResourceList\n            \n            \n                93 %\n                (40/43)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-pop/resource-pop.component.ts\n            \n            \n                component\n            \n            \n                ResourcePopComponent\n            \n            \n                92 %\n                (24/26)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-select/resource-select.component.ts\n            \n            \n                component\n            \n            \n                ResourceSelectComponent\n            \n            \n                79 %\n                (39/49)\n            \n        \n        \n            \n                \n                    packages/data/src/sdk/history.service.ts\n            \n            \n                injectable\n            \n            \n                HistoryService\n            \n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                    packages/data/src/sdk/sdk.service.ts\n            \n            \n                injectable\n            \n            \n                SdkService\n            \n            \n                88 %\n                (15/17)\n            \n        \n        \n            \n                \n                    packages/location/src/geocode.service.ts\n            \n            \n                injectable\n            \n            \n                GeocodeService\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    packages/location/src/geocode.service.ts\n            \n            \n                variable\n            \n            \n                google\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/location/src/location-map.component.ts\n            \n            \n                component\n            \n            \n                LocationMapComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    packages/location/src/location-picker.component.ts\n            \n            \n                component\n            \n            \n                LocationPickerComponent\n            \n            \n                72 %\n                (13/18)\n            \n        \n        \n            \n                \n                    packages/location/src/location-search.component.ts\n            \n            \n                component\n            \n            \n                LocationSearchComponent\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                    packages/location/src/location.module.ts\n            \n            \n                variable\n            \n            \n                LOCATION_COMPONENTS\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/medium-editor/src/medium-editor.component.ts\n            \n            \n                component\n            \n            \n                MediumEditorComponent\n            \n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                    packages/tinymce/src/tinymce/tinymce-settings.ts\n            \n            \n                variable\n            \n            \n                editorSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/tinymce/src/tinymce/tinymce.component.ts\n            \n            \n                component\n            \n            \n                TinymceComponent\n            \n            \n                81 %\n                (13/16)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/calendar.component.ts\n            \n            \n                component\n            \n            \n                CalendarComponent\n            \n            \n                76 %\n                (40/52)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/daterange.component.ts\n            \n            \n                component\n            \n            \n                DaterangeComponent\n            \n            \n                65 %\n                (23/35)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/datetime.component.ts\n            \n            \n                component\n            \n            \n                DatetimeComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/datetime.pipe.ts\n            \n            \n                pipe\n            \n            \n                DatetimePipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/heatmap.component.ts\n            \n            \n                component\n            \n            \n                HeatmapComponent\n            \n            \n                63 %\n                (26/41)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/month.component.ts\n            \n            \n                component\n            \n            \n                MonthComponent\n            \n            \n                66 %\n                (22/33)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/month.component.ts\n            \n            \n                interface\n            \n            \n                Day\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/default-input/default-input.component.ts\n            \n            \n                component\n            \n            \n                DefaultInputComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/default-output/default-output.component.ts\n            \n            \n                component\n            \n            \n                DefaultOutputComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/form.component.ts\n            \n            \n                component\n            \n            \n                FormComponent\n            \n            \n                96 %\n                (27/28)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/form.service.ts\n            \n            \n                injectable\n            \n            \n                FormService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/max-items.pipe.ts\n            \n            \n                pipe\n            \n            \n                MaxItemsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/toggle/toggle.component.ts\n            \n            \n                component\n            \n            \n                ToggleComponent\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/visible-fields.pipe.ts\n            \n            \n                pipe\n            \n            \n                VisibleFieldsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/ec-icons.ts\n            \n            \n                variable\n            \n            \n                ecIcons\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/emoji-icons.ts\n            \n            \n                variable\n            \n            \n                emojiIcons\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/icon.component.ts\n            \n            \n                component\n            \n            \n                IconComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/icon.service.ts\n            \n            \n                injectable\n            \n            \n                IconService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/dynamic-rack/dynamic-rack.component.ts\n            \n            \n                component\n            \n            \n                DynamicRackComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts\n            \n            \n                component\n            \n            \n                DynamicSlotComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/input-errors/input-errors.component.ts\n            \n            \n                component\n            \n            \n                InputErrorsComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/input/input.component.ts\n            \n            \n                component\n            \n            \n                InputComponent\n            \n            \n                82 %\n                (14/17)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/output/output.component.ts\n            \n            \n                component\n            \n            \n                OutputComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/slot-host.directive.ts\n            \n            \n                directive\n            \n            \n                SlotHostDirective\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/group.pipe.ts\n            \n            \n                pipe\n            \n            \n                GroupPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/list-header/list-header.component.ts\n            \n            \n                component\n            \n            \n                ListHeaderComponent\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/list-items/list-items.component.ts\n            \n            \n                component\n            \n            \n                ListItemsComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/list.component.ts\n            \n            \n                component\n            \n            \n                ListComponent\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/pagination/pagination-config.interface.ts\n            \n            \n                class\n            \n            \n                PaginationConfig\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/pagination/pagination.component.ts\n            \n            \n                component\n            \n            \n                PaginationComponent\n            \n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                    packages/ui/src/loader/loader.component.ts\n            \n            \n                component\n            \n            \n                LoaderComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/loader/loader.service.ts\n            \n            \n                injectable\n            \n            \n                LoaderService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    packages/ui/src/loader/with-loader.interface.ts\n            \n            \n                interface\n            \n            \n                WithLoader\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/error/error.component.ts\n            \n            \n                component\n            \n            \n                ErrorComponent\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notification.ts\n            \n            \n                class\n            \n            \n                Notification\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notifications.component.ts\n            \n            \n                component\n            \n            \n                NotificationsComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notifications.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationsService\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notifications.service.ts\n            \n            \n                variable\n            \n            \n                window\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/with-notifications.interface.ts\n            \n            \n                interface\n            \n            \n                WithNotifications\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/pop/pop.component.ts\n            \n            \n                component\n            \n            \n                PopComponent\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    packages/ui/src/pop/pop.service.ts\n            \n            \n                injectable\n            \n            \n                PopService\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/select/select.component.ts\n            \n            \n                component\n            \n            \n                SelectComponent\n            \n            \n                74 %\n                (20/27)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.interface.ts\n            \n            \n                interface\n            \n            \n                Symbol\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.pipe.ts\n            \n            \n                injectable\n            \n            \n                SymbolPipe\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.pipe.ts\n            \n            \n                injectable\n            \n            \n                SymbolPipe\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.service.ts\n            \n            \n                injectable\n            \n            \n                SymbolService\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/login-form/login-form.component.ts\n            \n            \n                component\n            \n            \n                LoginFormComponent\n            \n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/menu/menu.component.ts\n            \n            \n                component\n            \n            \n                MenuComponent\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/mockup/mockup.component.ts\n            \n            \n                component\n            \n            \n                MockupComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/tab/tab.component.ts\n            \n            \n                component\n            \n            \n                TabComponent\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/tabs/tabs.component.ts\n            \n            \n                component\n            \n            \n                TabsComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/validators/email.validator.ts\n            \n            \n                variable\n            \n            \n                emailValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/validators/field-validators.ts\n            \n            \n                variable\n            \n            \n                FieldValidators\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/vc/src/editor/editor.component.ts\n            \n            \n                component\n            \n            \n                EditorComponent\n            \n            \n                9 %\n                (6/62)\n            \n        \n        \n            \n                \n                    packages/vc/src/editor/editor.component.ts\n            \n            \n                variable\n            \n            \n                document\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/vc/src/safe-html.pipe.ts\n            \n            \n                pipe\n            \n            \n                SafeHtmlPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/vc/src/toolbar/toolbar.component.ts\n            \n            \n                component\n            \n            \n                ToolbarComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/compiler : ^5.2.2\n        \n            @angular/core : ^5.2.2\n        \n            @angular/forms : ^5.2.2\n        \n            @angular/http : ^5.2.2\n        \n            @angular/platform-browser : ^5.2.2\n        \n            @angular/platform-browser-dynamic : ^5.2.2\n        \n            @angular/router : ^5.2.2\n        \n            @ec.components/data : ^0.21.0\n        \n            @ec.components/medium-editor : ^0.2.0\n        \n            @ec.components/style : ^0.10.0\n        \n            @ec.components/tinymce : ^0.2.0\n        \n            @ec.components/location : ^0.3.0\n        \n            ace-builds : ^1.2.9\n        \n            core-js : ^2.5.3\n        \n            moment-es6 : ^1.0.0\n        \n            ngx-cookie : ^2.0.1\n        \n            rxjs : ^5.5.6\n        \n            stream : 0.0.2\n        \n            tinymce : ^4.7.6\n        \n            x.ui : ^8.0.0-beta.4\n        \n            zone.js : ^0.8.20\n        \n            ec.sdk : ^0.16.1\n        \n            @agm/core : ^1.0.0-beta.2\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cookieFactory   (packages/.../auth.module.ts)\n                        \n                        \n                            sortBoolean   (packages/.../sorter.ts)\n                        \n                        \n                            sortNumber   (packages/.../sorter.ts)\n                        \n                        \n                            sortString   (packages/.../sorter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/data/src/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cookieFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \ncookieFactory()\n                    \n                \n\n\n\n\n                \n                    \n                            loads CookieModule \n\n\n                    \n                \n            \n        \n\n    packages/core/src/sorter/sorter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sortBoolean\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBoolean(a: , b: )\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts booleans \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortNumber(a: , b: )\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts numbers \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortString\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortString(a: , b: )\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts strings (naturally) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nec.components\nThis is the main project for ec.components, written in Typescript and Angular.\nModules\nThere are three main modules:\n\n*@ec.components/core*: contains core typescript classes (no angular, no datamanager)\n*@ec.components/ui*: contains core ui components (angular, no datamanager)\n*@ec.components/data*: contains ui components for datamanager (angular+datamanager)\n\nThe dependencies stack up from core to data (data > ui > core).\nThe packages sources are located at src/packages.\nThere is also a fourth module called ```*@ec.components/style*`.\nIt contains more sophisticated styles for ui components using x.ui.\nDocumentation\nThe main documentation is located at https://entrecode.github.io/ec.components/.\nYou can find a getting started guide there\nDemo\nA Demo is available at https://components.entrecode.de/.\nDevelopment\nThis project was generated with Angular CLI version 1.0.0-rc.0.\nLerna\nThe repository is a monorepo, managed by lerna.\nDeveloping with Symlinks\nThe start npm script will automatically use the symlinks from src/packages for @ec.components.\nIt also deletes eventually existing node_modules folders inside the packages.\nThis enables you to always use imports like: import  from '@ec.components/'.\nPublishing\n\nRun bootstrap task, this will call lerna bootstrap for core/ui/data packages and their prepublish scripts:npm run bootstrap\nRun publish task and select versions:npm run publish\n\nTo publish a new package, make sure you run npm publish --access=public before running lerna.\nMake sure you update the symlinks.sh and delete-modules.sh scripts to make it work for the demo server.\nImport Structure\nAll imports inside src/packages that import from the same package or another ec.components package must be relative.\n\nImports from the same package should always import the index file \"from '..'\"\nThis implies that all components/classes etc are placed inside a flat subfolder structure.\nThe relative path '..' therefore links to the index.ts where all package exports are defined.\n\n\nImports from another package should always import the relative path to the package index (e.g. ../../packages/core)\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive/pipe/service/class/module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nUse the --env=prod or --env=stag for environment builds.\nCAUTION: you may have to \"es2015\" in tsconfig.json / lib to make UglifyJS work\nsee https://github.com/mishoo/UglifyJS2/issues/659\nBuild Trouble Shooting\nErrors like this (or similar):\nERROR in ./node_modules/@ec.components/data/src/auth/auth.service.ts\nModule build failed: Error: /Users/kon/workspace/0.entrecode/nwb.admin/node_modules/@ec.components/data/src/auth/auth.service.ts is missing from the TypeScript compilation. Please make sure it is in your tsconfig via the 'files' or 'include' property.can be fixed by including the ec.components files explicitly (+excluding the test files):\n{\n  \"extends\": \"../tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"../out-tsc/app\",\n    \"baseUrl\": \"./\",\n    \"module\": \"es2015\",\n    \"types\": []\n  },\n  \"exclude\": [\n    \"test.ts\",\n    \"**/*.spec.ts\",\n    \"../node_modules/@ec.components/**/*.spec.ts\"\n  ],\n  \"include\": [\n    \"**/*.ts\",\n    \"../node_modules/@ec.components/**/*.ts\"\n  ]\n}Running unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nBefore running the tests make sure you are serving the app via ng serve.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nImpressum & Datenschutz\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AceModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IconModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IoModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ListModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoaderModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediumModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PopModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResourceModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SdkModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SelectModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SymbolModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TinymceModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilityModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_exports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_exports\n\n\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_MediumModule\n\n\n\ncluster_MediumModule_declarations\n\n\n\ncluster_MediumModule_exports\n\n\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_exports\n\n\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_providers\n\n\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\ncluster_UiModule\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_exports\n\n\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_exports\n\n\n\ncluster_VcModule\n\n\n\ncluster_VcModule_declarations\n\n\n\ncluster_VcModule_exports\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->AceComponent -->\n\n{\n    : , : (() => ), : true\n}->AceComponent\n\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n ), : true\n}->MediumEditorComponent -->\n\n{\n    : , : (() => ), : true\n}->MediumEditorComponent\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\n ), : true\n}->SelectComponent -->\n\n{\n    : , : (() => ), : true\n}->SelectComponent\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\n()\n\n()\n\nAuthModule -->\n\n()->AuthModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAuthModule -->\n\nAuthGuard->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nCrudService\n\nCrudService\n\nDataModule -->\n\nCrudService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\nAssetDirective\n\nAssetDirective\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nCalendarComponent->FormModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nFormModule -->\n\nDaterangeComponent->FormModule\n\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nFormModule -->\n\nDatetimePipe->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nFormModule -->\n\nHeatmapComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nFormModule -->\n\nMonthComponent->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nFormModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nFormModule->DaterangeComponent \n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nFormModule->DatetimePipe \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nFormModule->HeatmapComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nFormModule->MonthComponent \n\n\n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nPopModule\n\nPopModule\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nGroupPipe\n\nGroupPipe\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\nUiModule -->\n\nListModule->UiModule\n\n\n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\nMediumModule\n\nMediumModule\n\nMediumModule -->\n\nMediumEditorComponent->MediumModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumModule->MediumEditorComponent \n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\nPopComponent\n\nPopComponent\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\nSdkService\n\nSdkService\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n\n\nSymbolService\n\nSymbolService\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\nIoModule  -->\n\nUtilityModule->IoModule \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nUtilityModule->MenuComponent \n\n\n\n\n\nMockupComponent \n\nMockupComponent \n\nMockupComponent  -->\n\nUtilityModule->MockupComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUtilityModule -->\n\nMenuComponent->UtilityModule\n\n\n\n\n\nMockupComponent\n\nMockupComponent\n\nUtilityModule -->\n\nMockupComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\nEditorComponent\n\nEditorComponent\n\n\n\nVcModule\n\nVcModule\n\nVcModule -->\n\nEditorComponent->VcModule\n\n\n\n\n\nSafeHtmlPipe\n\nSafeHtmlPipe\n\nVcModule -->\n\nSafeHtmlPipe->VcModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nVcModule -->\n\nToolbarComponent->VcModule\n\n\n\n\n\nEditorComponent \n\nEditorComponent \n\nEditorComponent  -->\n\nVcModule->EditorComponent \n\n\n\n\n\nSafeHtmlPipe \n\nSafeHtmlPipe \n\nSafeHtmlPipe  -->\n\nVcModule->SafeHtmlPipe \n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nVcModule->ToolbarComponent \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            21 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        56 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        19 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        14 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        16 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ace   (packages/.../ace.component.ts)\n                        \n                        \n                            backendErrorCodes   (packages/.../errors.ts)\n                        \n                        \n                            collator   (packages/.../sorter.ts)\n                        \n                        \n                            document   (packages/.../editor.component.ts)\n                        \n                        \n                            ecIcons   (packages/.../ec-icons.ts)\n                        \n                        \n                            editorSettings   (packages/.../tinymce-settings.ts)\n                        \n                        \n                            emailAvailable   (packages/.../email-available.validator.ts)\n                        \n                        \n                            emailValidator   (packages/.../email.validator.ts)\n                        \n                        \n                            emojiIcons   (packages/.../emoji-icons.ts)\n                        \n                        \n                            errors   (packages/.../errors.ts)\n                        \n                        \n                            FieldValidators   (packages/.../field-validators.ts)\n                        \n                        \n                            google   (packages/.../geocode.service.ts)\n                        \n                        \n                            LOCATION_COMPONENTS   (packages/.../location.module.ts)\n                        \n                        \n                            window   (packages/.../notifications.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ace/src/ace.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ace:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround that expects ace to be imported somewhere else... \n\n                    \n                \n\n            \n        \n\n    packages/data/src/auth/errors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            backendErrorCodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backendErrorCodes:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  2460: {\n    'account_not_found': 'Der Login war ungültig.'\n  }\n}\n                        \n                    \n\n                \n                    \n                        Maps error messages to error codes that come from the backend. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errors:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  emailUnavailable: 'Diese Email ist schon vergeben',\n  required: 'Dieses Feld ist ein Pflichtfeld',\n  pattern: 'Ungültige Eingabe',\n  minlength: 'Die Eingabe ist kurz'\n}\n                        \n                    \n\n                \n                    \n                        Error Messages to show in notifications. \n\n                    \n                \n\n            \n        \n\n    packages/core/src/sorter/sorter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            collator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        collator:     \n\n                    \n                \n                    \n                        \n                            Default value : new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' })\n                        \n                    \n\n                \n                    \n                        Used for natural sorting of strings \n\n                    \n                \n\n            \n        \n\n    packages/vc/src/editor/editor.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        document:     \n\n                    \n                \n\n                \n                    \n                        declares document \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/icon/ec-icons.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ecIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ecIcons:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  { name: 'add' },\n  { name: 'add-circle' },\n  { name: 'alarm' },\n  { name: 'alarm-clock' },\n  { name: 'alarm-silent' },\n  { name: 'align-center' },\n  { name: 'align-justify' },\n  { name: 'align-left' },\n  { name: 'align-right' },\n  { name: 'all-caps' },\n  { name: 'brackets' },\n  { name: 'angle-tool' },\n  { name: 'arrange-1-to-9' },\n  { name: 'arrange-9-to-1' },\n  { name: 'arrange-a-to-z' },\n  { name: 'arrange-z-to-a' },\n  { name: 'arrow-down' },\n  { name: 'arrow-down-left' },\n  { name: 'arrow-down-right' },\n  { name: 'arrow-left' },\n  { name: 'arrow-return' },\n  { name: 'arrow-right' },\n  { name: 'arrow-up' },\n  { name: 'arrow-up-left' },\n  { name: 'arrow-up-right' },\n  { name: 'artboard' },\n  { name: 'asterisk' },\n  { name: 'at-sign' },\n  { name: 'bank' },\n  { name: 'bank-note' },\n  { name: 'banking-debit-machine' },\n  { name: 'barcode' },\n  { name: 'trash' },\n  { name: 'binoculars' },\n  { name: 'bitcoin-coin' },\n  { name: 'bookmark' },\n  { name: 'border-bottom' },\n  { name: 'border-inside' },\n  { name: 'border-inside-vertical' },\n  { name: 'border-inside-horizontal' },\n  { name: 'border-left' },\n  { name: 'border-none' },\n  { name: 'border-outside' },\n  { name: 'border-right' },\n  { name: 'border-top' },\n  { name: 'box' },\n  { name: 'briefcase' },\n  { name: 'bus' },\n  { name: 'graph-pie' },\n  { name: 'scale' },\n  { name: 'whiteboard' },\n  { name: 'graph-plot' },\n  { name: 'calculator' },\n  { name: 'calculator-2' },\n  { name: 'calendar' },\n  { name: 'calendar-check' },\n  { name: 'calendar-close' },\n  { name: 'calendar-pencil' },\n  { name: 'calendar-refresh-2' },\n  { name: 'camera' },\n  { name: 'brightness-1' },\n  { name: 'camera-off' },\n  { name: 'camera-pin' },\n  { name: 'camera-refresh' },\n  { name: 'car-6' },\n  { name: 'dashboard' },\n  { name: 'tape' },\n  { name: 'center-point' },\n  { name: 'chat-bubble-circle' },\n  { name: 'chat-bubble-circle-active' },\n  { name: 'chat-bubble-square' },\n  { name: 'chat-bubble-square-active' },\n  { name: 'chat-bubble-square-2' },\n  { name: 'chat-bubbles-square' },\n  { name: 'check-box' },\n  { name: 'cloud' },\n  { name: 'cloud-disable' },\n  { name: 'cloud-download' },\n  { name: 'cloud-refresh' },\n  { name: 'cloud-upload' },\n  { name: 'cloud-wifi' },\n  { name: 'color-contrast-off' },\n  { name: 'color-contrast-on' },\n  { name: 'color-palette' },\n  { name: 'computer-screen' },\n  { name: 'contact-book' },\n  { name: 'content-book' },\n  { name: 'content-bookmark' },\n  { name: 'filter' },\n  { name: 'layers-hide' },\n  { name: 'layers-show' },\n  { name: 'note' },\n  { name: 'content-view-array' },\n  { name: 'content-view-content' },\n  { name: 'content-view-list' },\n  { name: 'content-view-module' },\n  { name: 'crop' },\n  { name: 'cursor-arrow' },\n  { name: 'cursor-hand' },\n  { name: 'cursor-move' },\n  { name: 'cursor-select-area' },\n  { name: 'cursor-tap' },\n  { name: 'cursor-target' },\n  { name: 'data-download' },\n  { name: 'data-syncing' },\n  { name: 'data-transfer' },\n  { name: 'data-upload' },\n  { name: 'delete' },\n  { name: 'dial-pad' },\n  { name: 'diamond' },\n  { name: 'divide' },\n  { name: 'email' },\n  { name: 'email-read' },\n  { name: 'envelope' },\n  { name: 'equaliser' },\n  { name: 'eraser' },\n  { name: 'expand' },\n  { name: 'expand-2' },\n  { name: 'expand-vertical' },\n  { name: 'expand-horizontal' },\n  { name: 'exposure-level' },\n  { name: 'file-add' },\n  { name: 'file-copy' },\n  { name: 'file-new' },\n  { name: 'file-notes-document' },\n  { name: 'file-notes-new' },\n  { name: 'files' },\n  { name: 'files-thumbs' },\n  { name: 'flash' },\n  { name: 'flash-off' },\n  { name: 'flip-down' },\n  { name: 'flip-left' },\n  { name: 'flip-right' },\n  { name: 'flip-up' },\n  { name: 'focus' },\n  { name: 'focus-off' },\n  { name: 'folder-new' },\n  { name: 'folders' },\n  { name: 'font-color' },\n  { name: 'font-size' },\n  { name: 'format-clear' },\n  { name: 'frame' },\n  { name: 'gradient' },\n  { name: 'hash' },\n  { name: 'health-blood-drop' },\n  { name: 'eye-closed' },\n  { name: 'highlight' },\n  { name: 'hourglass' },\n  { name: 'id-card' },\n  { name: 'inbox' },\n  { name: 'indent-decrease' },\n  { name: 'indent-increase' },\n  { name: 'infinity-loop' },\n  { name: 'interface-alert-circle' },\n  { name: 'interface-information' },\n  { name: 'interface-question-mark' },\n  { name: 'intersect' },\n  { name: 'italic' },\n  { name: 'key' },\n  { name: 'laptop' },\n  { name: 'square' },\n  { name: 'lightbulb' },\n  { name: 'link' },\n  { name: 'link-broken' },\n  { name: 'list-bullets' },\n  { name: 'list-number' },\n  { name: 'location-direction' },\n  { name: 'location-globe' },\n  { name: 'location-gps-off' },\n  { name: 'location-gps-on' },\n  { name: 'location-plan' },\n  { name: 'location-map' },\n  { name: 'location-pin-1' },\n  { name: 'location-pin-2' },\n  { name: 'lock-closed' },\n  { name: 'lock-open' },\n  { name: 'leave' },\n  { name: 'harry-potter' },\n  { name: 'measuring-tool' },\n  { name: 'minus-front' },\n  { name: 'mobile-phone' },\n  { name: 'money-note-coin' },\n  { name: 'move-down' },\n  { name: 'move-left' },\n  { name: 'move-right' },\n  { name: 'move-to-back' },\n  { name: 'move-to-front' },\n  { name: 'move-up' },\n  { name: 'music-note' },\n  { name: 'hamburger' },\n  { name: 'more-horizontal' },\n  { name: 'more-vertical' },\n  { name: 'new-square' },\n  { name: 'outbox' },\n  { name: 'paint-brush' },\n  { name: 'paint-bucket' },\n  { name: 'paint-palette' },\n  { name: 'paint-roll' },\n  { name: 'paperclip' },\n  { name: 'paperplane' },\n  { name: 'paragraph' },\n  { name: 'paragraph-left-to-right' },\n  { name: 'paragraph-right-to-left' },\n  { name: 'paragraph-spacing' },\n  { name: 'pen-tool' },\n  { name: 'pencil' },\n  { name: 'percent' },\n  { name: 'bug' },\n  { name: 'photo-landscape' },\n  { name: 'photo-portrait' },\n  { name: 'photo-view-all' },\n  { name: 'picture-layer' },\n  { name: 'pin' },\n  { name: 'home' },\n  { name: 'power' },\n  { name: 'printer' },\n  { name: 'qr-code' },\n  { name: 'quote-closing' },\n  { name: 'quote-opening' },\n  { name: 'reflect-left' },\n  { name: 'reflect-right' },\n  { name: 'close-x-big' },\n  { name: 'ruler' },\n  { name: 'scale-vertical' },\n  { name: 'scissors' },\n  { name: 'select-area' },\n  { name: 'send-to-back' },\n  { name: 'send-to-front' },\n  { name: 'database' },\n  { name: 'settings-slider' },\n  { name: 'share' },\n  { name: 'megaphone' },\n  { name: 'rss' },\n  { name: 'signal' },\n  { name: 'signal-tower' },\n  { name: 'shear-left' },\n  { name: 'shear-right' },\n  { name: 'shopping-bag-alt' },\n  { name: 'shopping-basket' },\n  { name: 'shopping-cart' },\n  { name: 'shrink' },\n  { name: 'shrink-diagonal' },\n  { name: 'shrink-horizontal' },\n  { name: 'shrink-vertical' },\n  { name: 'command' },\n  { name: 'sign-euro' },\n  { name: 'sign-ramp-left' },\n  { name: 'sign-ramp-right' },\n  { name: 'skull' },\n  { name: 'sliders' },\n  { name: 'slider' },\n  { name: 'small-caps' },\n  { name: 'speaker-volume-decrease' },\n  { name: 'speaker-volume-high' },\n  { name: 'speaker-volume-increase' },\n  { name: 'speaker-volume-low' },\n  { name: 'speaker-volume-off' },\n  { name: 'spelling-check' },\n  { name: 'spray-paint' },\n  { name: 'strike-through' },\n  { name: 'subscript' },\n  { name: 'substract' },\n  { name: 'sunny' },\n  { name: 'superscript' },\n  { name: 'switch-left' },\n  { name: 'switch-right' },\n  { name: 'switches' },\n  { name: 'bluetooth' },\n  { name: 'wifi' },\n  { name: 'repeat' },\n  { name: 'synchronize' },\n  { name: 'switch' },\n  { name: 'price-tag' },\n  { name: 'tank' },\n  { name: 'text' },\n  { name: 'text-eraser' },\n  { name: 'rotate-right' },\n  { name: 'rotate-left' },\n  { name: 'text-vector' },\n  { name: 'toolbox' },\n  { name: 'underline' },\n  { name: 'unite' },\n  { name: 'user' },\n  { name: 'vector-circle' },\n  { name: 'vector-line' },\n  { name: 'vector-square' },\n  { name: 'video-call' },\n  { name: 'video-clip' },\n  { name: 'eject' },\n  { name: 'next' },\n  { name: 'pause' },\n  { name: 'play' },\n  { name: 'previous' },\n  { name: 'stop' },\n  { name: 'heart-outlined' },\n  { name: 'star-outlined' },\n  { name: 'thumbs-down' },\n  { name: 'thumbs-up' },\n  { name: 'zoom-in' },\n  { name: 'zoom-out' },\n  { name: 'glasses' },\n  { name: 'save' },\n  { name: 'chevron-left' },\n  { name: 'chevron-right' },\n  { name: 'move-vertical' },\n  { name: 'drag-handle' },\n  { name: 'user-chat' },\n  { name: 'text-input' },\n  { name: 'tablet' },\n  { name: 'company' },\n  { name: 'android' },\n  { name: 'apple' },\n  { name: 'facebook' },\n  { name: 'google' },\n  { name: 'linkedin' },\n  { name: 'twitter' },\n  { name: 'xing' },\n  { name: 'youtube' },\n  { name: 'find' },\n  { name: 'business-man' },\n  { name: 'factory' },\n  { name: 'building' },\n  { name: 'fax' },\n  { name: 'globe' },\n  { name: 'phone' },\n  { name: 'close-x-circle' },\n  { name: 'ticket' },\n  { name: 'key-enter' },\n  { name: 'key-left' },\n  { name: 'key-right' },\n  { name: 'key-shift' },\n  { name: 'img' },\n  { name: 'smiley' },\n  { name: 'arrow-next' },\n  { name: 'arrow-prev' },\n  { name: 'wand' },\n  { name: 'h-align-left' },\n  { name: 'h-align-middle' },\n  { name: 'h-align-right' },\n  { name: 'v-align-bottom' },\n  { name: 'v-align-middle' },\n  { name: 'v-align-top' },\n  { name: 'flip-h' },\n  { name: 'flip-v' },\n  { name: 'graph-bar' },\n  { name: 'check' },\n  { name: 'layer-down' },\n  { name: 'layer-up' },\n  { name: 'undo' },\n  { name: 'redo' },\n  { name: 'stackoverflow' },\n  { name: 'kununu' },\n  { name: 'totop' },\n  { name: 'shopping-bag' },\n  { name: 'profile-circle' },\n  { name: 'heart-filled' },\n  { name: 'github' },\n  { name: 'glue' },\n  { name: 'adhesive-tape' },\n  { name: 'transparent' },\n  { name: 'recycling' },\n  { name: 'dumbbell' },\n  { name: 'instagram' },\n  { name: 'eye-open' },\n  { name: 'water-bottle' },\n  { name: 'close-x' },\n  { name: 'star-filled' },\n  { name: 'clock' },\n  { name: 'appointment' },\n  { name: 'save-date' },\n  { name: 'whistle' },\n  { name: 'weight' },\n  { name: 'share-alt' },\n  { name: 'coin-transfer' },\n  { name: 'toggle-caret' },\n  { name: 'config' },\n  { name: 'server' },\n  { name: 'undo-2' },\n  { name: 'filter-2' },\n  { name: 'article' },\n  { name: 'bold' },\n  { name: 'bigger-text' },\n  { name: 'checkmark' },\n  { name: 'cross' },\n  { name: 'img-center' },\n  { name: 'img-full' },\n  { name: 'img-left' },\n  { name: 'smaller-text' },\n  { name: 'checkmark-2' }\n]\n                        \n                    \n\n                \n                    \n                        Contains all icons that are available in ec-icons font. \n\n                    \n                \n\n            \n        \n\n    packages/tinymce/src/tinymce/tinymce-settings.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            editorSettings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorSettings:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  theme: 'modern',\n  menubar: false,\n  branding: false,\n  resize: true,\n  skin: false,\n  plugins: [\n    'paste template autoresize fullscreen code link table visualblocks autolink lists contextmenu textcolor colorpicker'\n  ],\n  autoresize_min_height: 300,\n  autoresize_max_height: 800,\n  content_css: [\n    'https://icons.entrecode.de/ec-icons-3.0.0.min.css'\n  ],\n  paste_as_text: true,\n  table_toolbar: false,\n  table_default_attributes: {\n    class: 'table-grid'\n  },\n  table_class_list: [\n    { title: 'grid', value: 'table-grid' },\n  ],\n  // templates: [],\n  textcolor_map: [\n    '37474F', 'Text',\n    '879195', 'Text Light',\n    '00B0FF', 'Link',\n    'FF5353', 'Super',\n    'FFFF8D', 'Highlight',\n    'FFFFFF', 'Weiß'\n  ],\n  link_class_list: [\n    { title: 'einfacher link', value: '' },\n    { title: 'Normaler Button', value: 'btn' },\n    { title: 'Super Button', value: 'btn super' },\n    { title: 'Sekundärer Button', value: 'btn minor' }\n  ],\n  style_formats: [\n    { title: 'H2 - Titel', block: 'h2' },\n    { title: 'H3 - Untertitel', block: 'h3' },\n    { title: 'H4 - Überschrift 1', block: 'h4' },\n    { title: 'H5 - Überschrift 2', block: 'h5' },\n    { title: 'Einfacher Absatz', block: 'p' },\n    { title: 'Einleitung', block: 'p', classes: 'lead' },\n    { title: 'Quellenangabe', inline: 'small' },\n    { title: 'Checkliste', selector: 'ul', classes: 'v-checklist' },\n    { title: 'Frage', selector: 'p', classes: 'v-question' },\n    { title: 'Antwort', selector: 'p', classes: 'v-reply' }\n  ],\n  formats: {\n    alignleft: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-left'\n    },\n    aligncenter: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-center'\n    },\n    alignright: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-right'\n    },\n    alignjustify: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-full'\n    }\n  },\n  toolbar: 'undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | forecolor | table | template | bullist numlist | link internal image youtube | removeformat | code | fullscreen',\n  setup: (editor) => {\n\n    editor.addButton('youtube', {\n      icon: 'media',\n      onclick: function (edit, element) {\n        const window = editor.windowManager.open({\n          title: 'Youtube einfügen',\n          body: [{\n            type: 'textbox',\n            name: 'yt',\n            label: 'Youtube-Url/ID'\n          }],\n          onsubmit: function (e) {\n            const yt = e.data.yt;\n\n            if (yt) {\n              const ytUrl = /(?:https?:\\/\\/(?:[a-z]+.)?)(?:youtu\\.?be(?:\\.com)?\\/)(?:embed\\/)?(?:(?:(?:(?:watch\\?)?(?:time_continue=(?:[0-9]+))?.+v=)?([a-zA-Z0-9_-]+))(?:\\?t\\=(?:[0-9a-zA-Z]+))?)/g.exec(yt);\n              const url = 'https://www.youtube.com/embed/' + (ytUrl ? ytUrl[1] : yt) + '?feature=oembed&rel=0';\n              editor.insertContent('');\n            }\n          }\n        });\n      }\n    });\n\n    // TODO\n    /*editor.addButton('image', {\n      icon: 'image',\n      onclick: function (edit, element) {\n        const id = Date.now();\n        const window = editor.windowManager.open({\n          title: 'Bild/Datei einfügen',\n          body: [{\n            type: 'container',\n            html: '' +\n            'Alt-Text' +\n            '' +\n            'Text' +\n            '' +\n            '' +\n            ' automatische Breite'\n          }],\n        });\n      }\n    });*/\n  }\n}\n                        \n                    \n\n                \n                    \n                        Default settings for tinymce editor. \n\n                    \n                \n\n            \n        \n\n    packages/data/src/auth/email-available.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : (control: FormControl, delay: number = 500) => {\n  /*return Datamanager.api().emailAvailable(control.value).then((available) => {\n    if (available) {\n      return null;\n    }\n    return { emailUnavailable: true };\n  });*/\n}\n                        \n                    \n\n                \n                    \n                        TODO use this.sdk.accounts.emailAvailable \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/utility/validators/email.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailValidator:     ValidatorFn\n\n                    \n                \n                    \n                        \n                            Type :     ValidatorFn\n\n                        \n                    \n                    \n                        \n                            Default value : Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\n                        \n                    \n\n                \n                    \n                        Validates an email. Used for email inputs \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/icon/emoji-icons.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emojiIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emojiIcons:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { name: 'add', content: '➕' },\n    { name: 'close', content: '❌' },\n    { name: 'bitcoin-coin', content: '&#x1F4B0;' },\n    { name: 'bookmark', content: '&#x1F516;' },\n    { name: 'bus', content: '&#x1F68C;' },\n    { name: 'calendar', content: '&#x1F4C5;' },\n    { name: 'camera', content: '&#x1F4F7;' },\n    { name: 'check-box', content: '✅' },\n    { name: 'cloud', content: '☁' },\n    { name: 'computer-screen', content: '&#x1F5A5;' },\n    { name: 'note', content: '&#x1F3B5;' },\n    { name: 'email', content: '&#x1F4E7;' },\n    { name: 'find', content: '&#x1F50D;' }\n]\n                        \n                    \n\n                \n                    \n                        Contains fonts using emojis. \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/utility/validators/field-validators.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FieldValidators\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FieldValidators:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  email: emailValidator\n}\n                        \n                    \n\n                \n                    \n                        Groups together all validators that are meant to be used on fields. \n\n                    \n                \n\n            \n        \n\n    packages/location/src/geocode.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        declares google namespace \n\n                    \n                \n\n            \n        \n\n    packages/location/src/location.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LOCATION_COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOCATION_COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    LocationMapComponent,\n    LocationSearchComponent,\n    LocationPickerComponent,\n]\n                        \n                    \n\n                \n                    \n                        The components of this module \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/notifications/notifications.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            window\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        window:     \n\n                    \n                \n\n                \n                    \n                        Workaround to get window without typescript complaining \n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial.html":{"url":"additional-documentation/project-setup-tutorial.html","title":"additional-page - Project Setup Tutorial","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up a new project with ec.components\nThis tutorial will show you how to set up a new project with the ec.components.\n1. Prequisites\nInstall angular-cli globally:\nnpm install -g @angular/cliThe following versions have been used for this tutorial:\n\n@angular/cli: 1.3.2\n@angular/animations: 4.3.6\n@angular/common: 4.3.6\n@angular/compiler: 4.3.6\n@angular/core: 4.3.6\n@angular/forms: 4.3.6\n@angular/http: 4.3.6\n@angular/platform-browser: 4.3.6\n@angular/platform-browser-dynamic: 4.3.6\n@angular/router: 4.3.6\n@angular/cli: 1.3.2\n@angular/compiler-cli: 4.3.6\n@angular/language-service: 4.3.6\ntypescript: 2.4.2\n\nYou can lookup your versions with ng --version\n2. Generate new Project\nng new ec-project --prefix ec-admin --routing true --style scssMake sure you replace ec-project with your project name and the prefix ec-admin with a project related shorthand symbol.\nMore info on the options for new.\n3. Install @ec.components/data\ncd ec-project\nyarn add @ec.components/data --save\nyarn add @ec.components/style --saveThis will install the data package which depends on ui and core packages.\nThe style package contains styles for ui and data.\n4. Import Styles\nInto your styles.scss, import the following styles:\n@import \"~xlcss/sass/xlcss.scss\";\n@import \"~x.ui/src/_config\";\n@import \"~x.ui/src/x.ui-sandbox.scss\";\n@import \"~@ec.components/style/components.scss\";5. Setup environment\nIn src/environments, you can find the different environment files.\nBy Default, there is a dev and a prod environment. For this tutorial, those two should be enough. We will use the dev environment for dev and staging and the prod environment for live. You could also add more environments, for more information, look here. \nsrc/environments/environment.ts:\nexport const environment = {\n  production: false,\n  environment: 'stage', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-dev-client' // your clientID\n};src/environments/environment.prod.ts:\nexport const environment = {\n  production: true,\n  environment: 'live', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-live-client' // your clientID\n};The .prod environment will be used when running ng build for production.\nThe client should use token method body. The callback URL does not matter.\n6. Add DataModule\nGo to src/app/app.module and add DataModule to your imports:\nimport { DataModule } from '@ec.components/data';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    DataModule.forEnvironment(environment),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }Here we are importing the DataModule along with the environment to then import it into our AppModule with the forEnvironment method.\n7. Add --ssl flag\nin your package.json, edit your start script to look like this:\n\"start\": \"ng serve --ssl\",Without the --ssl flag, the authorization won't work, because it enforces https.\n8. Add a component\ne.g. add to src/app/app.component.html:\nThis assumes that the model muffin exists inside the datamanager provided through your environment.\n9. Run the fun\nThats it! Now you can run the app using:\nnpm run startnow navigate to https://localhost:4200\n10. Add Notifications\nTo your app.component, you can add a global notification component, outside of your routing:\nThis will display all messages sent by the components or your own modules.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/routes.html":{"url":"additional-documentation/project-setup-tutorial/routes.html","title":"additional-page - Routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding Routes\nThis short tutorial demonstrates how to quickly generate routes with components.\nIn the following tutorials, refer to this when you are called to create a new route.\n1. Create Component\nGenerate a new component\nng generate component muffinsAdd template to src/app/muffins/muffins.component.html\n2. Add a Route\nsrc/app/app-routing.module.ts:\nimport { MuffinsComponent } from './muffins/muffins.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: []\n  },\n  {\n    path: 'muffins',\n    component: MuffinsComponent\n  }\n];3. Run the Route\nNow you can access the muffin crud at https://localhost:4200/muffins\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/authorization.html":{"url":"additional-documentation/project-setup-tutorial/authorization.html","title":"additional-page - Authorization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n  constructor(public router: Router) {\n  }\n\n  redirect() {\n    this.router.navigate(['profile'])\n  }3. Add Login Component to template\nUse this in your login.component.html template:\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-fields.html":{"url":"additional-documentation/project-setup-tutorial/custom-fields.html","title":"additional-page - Custom Fields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustom Field Configuration\nAdd a model config\nYou can configure a models behaviour over the ModelConfigService.\nIt is recommended to configure a model in a parent component of all possible ec-crud lists or nested forms.\nexport class MuffinsComponent {\n  constructor(private modelConfig: ModelConfigService) {\n    moment.locale('de'); //set moment locale\n\n    this.modelConfig.set('muffin', {\n      fields: {\n        pictures: {\n          label: 'Bilder' //this label is shown above the form field and in the table header\n        },\n        name: {\n          label: 'Muffin Name',\n          group: (name) => {\n            return name[0].toUpperCase() //the return value is used to show group headers in a sorted list\n          },\n          required: true //when required, a new entry form cannot be saved without a value set for the field\n        },\n        _created: { //you can also access the system properties\n          label: 'Erstellt',\n          form: false, //this will hide the field inside the form\n          group: (value) => moment(value).format('YYYY')\n        },\n        amazement_factor: {\n          label: 'Amazement Faktor',\n          display: (value) => { //this will transform the value for output e.g. in a list cell\n            return (value * 10) + '%'\n          },\n          group: (value) => {\n            return value > 5 ? 'Größer als 50%' : 'Kleiner als 50%';\n          },\n          validate: (value) => { //this function will run when validating the value inside a form\n            if (typeof value !== 'number') {\n              return; //value is valid\n            }\n            if (value  10) {\n              return 'Darf maximal 10 sein';\n            }\n          }\n        },\n      }\n    });\n}Using custom inputs and outputs\n1. Create Custom Input Component\nng g c custom-inputThis component will serve as a container for all possible custom input fields.\n2. Extend InputComponent (custom-input.component.ts)\nTo make the current field information available to the template, you need to extend InputComponent from @ec.components/ui:\nimport { Component } from '@angular/core';\nimport { InputComponent } from '@ec.components/ui';\n\n@Component({\n  selector: 'clubapp-custom-input',\n  templateUrl: './custom-input.component.html',\n  styleUrls: ['./custom-input.component.scss']\n})\nexport class CustomInputComponent extends InputComponent {\n}CMD+Click on InputComponent to see which properties you can now use!\n3. Add Markup (custom-input.component.html)\nNow we can decide which custom input should be used, based on e.g. the fields view value:\n\n  \n  \n    \n  \n  \n     -->\n  \nOf course you could also switch based on property name or type, depending on your application.\nThe id property of field is referenced in the label of the form. By adding it to the input makes sure your label click enters the input.\n4. Add CustomInputComponent to entryComponents:\nBecause the custom component will be loaded dynamically, your module needs to declare it as entryComponent:\n@NgModule({\n  entryComponents: [\n    CustomInputComponent\n  ]\n  /** more stuff **/\n})\nexport class AppModule {\n}5. Add CustomInputComponent to field config:\nNow you can add the Component as input to your field config:\nthis.modelConfig.set('muffin', {\n      fields: {\n        url: {\n          label: 'URL',\n          view: 'speakingurl',\n          input: CustomInputComponent\n        },\n        openingHours: {\n          label: 'Öffnungszeiten',\n          view: 'openingHours',\n          input: CustomInputComponent\n        }\n})By changing the view option, we can now decide which case will be met!\nCustom Form Controls\nNow what if you want to use a custom form control that does not rely on primitve inputs like number or text?\nIn the above custom-input.component template, we use  with a formControl input.\nTo have access to the form control's value, you need to provide a ControlValueAccessor:\nimport { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { InputComponent } from '@ec.components/ui';\n\n@Component({\n  selector: 'ec-opening-hours',\n  templateUrl: './opening-hours.component.html',\n  styleUrls: ['./opening-hours.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OpeningHoursComponent),\n      multi: true\n    }\n  ]\n})\nexport class OpeningHoursComponent extends InputComponent implements ControlValueAccessor {\n\n  writeValue(value: any) {\n    console.log('received value', value);\n  }\n\n  propagateChange = (_: any) => {\n  };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {\n  }\n\n}Now you can implement your own logic and call propagateChange when you change the value from your component, and react to change via the writeValue method!\nYou now could also use your component with ngModel or formControl in another context!\nMore information on this pattern: https://blog.thoughtram.io/angular/2016/07/27/custom-form-controls-in-angular-2.html\nUPDATE: Custom Fields without wrapper\nYou can now also use custom components as input directly without needing to wrap them explicitly.\nWhat you need to is:\n\nExtend DefaultInputComponent\n\nexport class JsonEditorComponent extends extends DefaultInputComponent\nadd the input component as member variable:\n\n/** Form input component */\ninput: InputComponent;and propagate the change to the input as well:\nthis.propagateChange(this.value);\nif (this.input) { // this is the important part\n this.input.propagateChange(this.value);\n}input will be defined when the component is used as input component inside ec-form.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{"url":"additional-documentation/project-setup-tutorial/adding-new-packages.html","title":"additional-page - Adding New Packages","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding a new package\nTo add a new package to @ec.components, follow this guide!\n1. Create folder in packages\nCreate a new folder, e.g. mkdir packages/medium-editor\n2. init npm\ncd packages/medium-editor && npm init\n\nMake sure to name the package scoped: ```@ec.components/*`\nAdd dependencies according to your needs, e.g. angular etc.\n\n3. Create src folder\nCreate a src folder and add your super cool typescript code.\n\nMake sure your package.json main file is correct.\nMake sure you have all dependencies up to date.\n\n4. add package to symlinks.sh\n\nAdd your package name to the symlinks script.\n\n5. add package to delete-modules.sh script\n\nAdd your package name to the delete-modules script.\n\n6. add package to main package.json dependencies\n\nKeep version up to date (or use * as wildcard)\nrun npm i\n\n7. add package to lerna.json\n\nThis integrates the package to the bootstrap/publish cycle of lerna.\n\n8. Manually Publish package the first time\nBefore being able to publish with lerna, you have to publish it manually the first time:\nnpm publish --access=publicsee https://docs.npmjs.com/cli/access#details.\n9. Add Demo\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/publishing.html":{"url":"additional-documentation/project-setup-tutorial/publishing.html","title":"additional-page - Publishing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n  constructor(public router: Router) {\n  }\n\n  redirect() {\n    this.router.navigate(['profile'])\n  }3. Add Login Component to template\nUse this in your login.component.html template:\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui.html":{"url":"additional-documentation/ui.html","title":"additional-page - UI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUI Components Overview\nNow that the Core classes were discussed, lets have a look at its application in the ui components.\nThe ui components, which lay inside the ui package are all basic angular components.\nThey are API agnostic, meaning they do not contain any datamanager logic (or similar).\nAPI related components are meant to inherit from the base ui components to eliminate redundancies.\nInstallation\nnpm i @ec.components/uiDemo\nTBD:\n\nList\nCustom Cell Components\nTransform fields\n\n\nForm\nCustom Field Components\nInline Forms\n\n\nLogin\nPop\nTabs\nSelect\n\nNotifications\n\nLoader\nMenu\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/icons.html":{"url":"additional-documentation/ui/icons.html","title":"additional-page - Icons","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIcon\nDisplays an icon:\nThe default icon set uses ec-icons. You have to embedd them to your index.html (or similar):\n  Using another icon set\nYou can also use other icons:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.use(emojiIcons);\n    }\n}Overriding icons\nYou can also override the current icon registry:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.set(emojiIcons);\n    }\n}This will override the icon registry with the given icons, but keep the rest.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/notificationscomponent.html":{"url":"additional-documentation/ui/notificationscomponent.html","title":"additional-page - NotificationsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNotifications\nThe Notifications Module is a combination of the NotificationsService and the NotificationsComponent.\nSimple Usage\n\nPlace the component somewhere in your app template:\n\n\nEmit notifications via the service\n\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  showNotification() {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        message: 'Das ist die Beschreibung'\n      });\n  }\n\n  doSomethingRisky() {\n      return Promise.reject('Fehler')\n      .catch((err) => {\n          this.notifications.emit({\n              error: err, // passing the error Object\n              title: 'Fehler!'\n          })\n      })\n  }\n}The given type will be added as class. The classes that are available by default can be looked up here.\nAdvanced Usage\nYou can also use multiple ec-notifications at different places:\n\n\nA\nBAll you have to do, is pass the instance of the component that should display the notification via the host property:\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  emit(host) {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        host: host\n      });\n  }\n}Hiding previous errors\nHere is an example usage of a typical success/error handling.\nIt features hiding previous notifications. We recommended you to use the WithNotifications interface for that case.\nexport class MuffinComponent implements WithNotifications {\n  /** Recent Error notification */\n  notifications: Notification[] = [];\n\nconstructor(\n    public bakery:BakeryService,\n    public notificationService: NotificationsService,\n    )\n\n  bake() {\n    this.bakery.bake().then(()=> {\n        this.notificationService.emit({\n            title: 'Muffin was baken!',\n            hide: this.notifications // this will hide all preceding notifications\n        })\n    }).catch(error=>{\n        this.notificationService.emit({\n            title: 'Error while baking',\n            sticky: true,\n            hide: this.notifications, // this will hide all preceding notifications\n            replace: this.notifications // this will replace the given array with the new notification\n        })\n    });\n  }\n}The hide option is useful to hide obsolete errors. E.g. If you successfully log in after one failiure, the sticky error notification of the first attempt will be hidden. This enables you to keep errors messages as long as they are needed.\nInstead of replace, you could also use append (see notification.component.ts for implementation).\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/loadercomponent.html":{"url":"additional-documentation/ui/loadercomponent.html","title":"additional-page - LoaderComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLoader\nThe loader can be used to indicate any kind of loading activity\nTemplate\n\n\nGlobal Loader\nLocal LoaderThe default classes can be found here.\nUsage\nYou can use a global loader that handles every action or use multiple local loaders:\nimport { LoaderComponent, LoaderService } from '@ec.components/ui';\nexport class MyApp {\n  @ViewChild('globalLoader') globalLoader: LoaderComponent;\n  @ViewChild('localLoader') localLoader: LoaderComponent;\n  constructor(private loaderService: LoaderService) {\n      this.loaderService.use(this.globalLoader); // set global loader\n  }\n  globalLoader() { // When not passing a loader to .wait, the global loader (set by .use) is used.\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)));\n  }\n  localLoader() {\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)), this.localLoader);\n    // this.localLoader.wait(new Promise((resolve) => setTimeout(resolve, 2000))); // alternative way\n  }\n}The advantage of local loaders is that you can place them in specific places of your template to only \"disable\" a part of your site while loading and not the whole page.\nSee the commented out line in localLoader for a direct way to trigger a loader without the service.\nHow it works\nEach time .wait is called on the LoaderService, the target loader throws the given promise on a stack. When all promises on the stack have been resolved, the loader is hidden. This is better than just a boolean switch because multiple loading activies do not interfere with each other.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/listcomponent.html":{"url":"additional-documentation/ui/listcomponent.html","title":"additional-page - ListComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nList\nThe List is one of the main components to work with.\nThe basic idea is to display collections of data in a structured but flexible way.\nYou can create a new List like this:\nthis.trees = new List(\n//first argument: Array of Objects\n[{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}],\n//second (optional) argument: ListConfig\n{\n  fields: {\n    name: {\n      label: 'Name'\n    },\n    height: {\n      label: 'Height',\n      group: (h) => h > 10 ? 'Higher than 10m' : 'Lower than 10m'\n    },\n    fruits: {\n      label: 'Has Fruits?',\n      display: (value) => value ? 'yes' : 'no'\n    },\n  }\n})This is how you display a List instance into your template:\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/formcomponent.html":{"url":"additional-documentation/ui/formcomponent.html","title":"additional-page - FormComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nForm\nTBD\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/logincomponent.html":{"url":"additional-documentation/ui/logincomponent.html","title":"additional-page - LoginComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLogin Form\nThe Login Form UI component is meant to be extended by a component that communicates with an API.\n    \n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/popcomponent.html":{"url":"additional-documentation/ui/popcomponent.html","title":"additional-page - PopComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPop\nA Pop is not just a modal, but a section of markup that appears (pops) anywhere and with any style on your page.\nUsage\n\n    \n        Close\n    \n    \n        Some body content\n    \n    \n        This is the footer\n    \n\nShow popThe default pop classes can be looked up here.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/tabscomponent.html":{"url":"additional-documentation/ui/tabscomponent.html","title":"additional-page - TabsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTabs\nThis is how you use Tabs:\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \nTODO:\n\n*ngIf\nSlot for templated Tab Header\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/selectcomponent.html":{"url":"additional-documentation/ui/selectcomponent.html","title":"additional-page - SelectComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSelect\nYou can pass an array of items that will be used for a selection instance.\n\n\n{{values | json}}TODO: update\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/data.html":{"url":"additional-documentation/data.html","title":"additional-page - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Components Overview\nDemo\n\nSdkService\nModelConfig\nHow to set up custom fields (input/output)\n\n\nentry-list\nentry-form\nentry-select\ncrud\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/medium.html":{"url":"additional-documentation/medium.html","title":"additional-page - Medium","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/medium-editor\nThis package wraps the medium-editor as an Angular Directive.\nInstallation\n\nInstall package\n\nnpm install @ec.components/medium-editor --save\nAdd Module\n\nimport { MediumModule } from '@ec.components/medium-editor';\n\n@NgModule({\n  imports: [\n    MediumModule\n  ]\n})\nexport class AppModule {\n}\nUse it\n\n \n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinymce.html":{"url":"additional-documentation/tinymce.html","title":"additional-page - TinyMCE","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/tinymce\nThis package wraps the tinymce editor as an Angular Component.\nInstallation\n\nInstall package\n\nnpm install @ec.components/tinymce --save\nAdd Module\n\nimport { TinymceModule } from '@ec.components/tinymce';\n\n@NgModule({\n  imports: [\n    TinymceModule\n  ]\n})\nexport class AppModule {\n}\nUse it\n\n \n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ace.html":{"url":"additional-documentation/ace.html","title":"additional-page - Ace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/ace\nThis package wraps the ace editor as an Angular Component.\nInstallation\n\nInstall package\n\nnpm install @ec.components/ace --save\nAdd Module\n\nimport { AceModule } from '@ec.components/ace';\n\n@NgModule({\n  imports: [\n    AceModule\n  ]\n})\nexport class AppModule {\n}\nAdd CDN\n\nEither add the cdn src to your index.html:\n  \n`Or import from ace-builds (in app.module):\nimport 'ace-builds/src-noconflict/ace.js';When importing, you also need to import all extensions/modes/themes that you want to use manually.\n\nUse it\n\n \n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes.html":{"url":"additional-documentation/core-classes.html","title":"additional-page - Core Classes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction\nThis is the Tutorial for ec.components.\nIt will take a look at all the major concepts in a didactic order.\nHINT: if you are looking for more information than this tutorial, have a look at the tests or the\nDemos!\nCore Classes\nThe core classes, which lay inside the core package are the abstract base for all components.\nThey are typescript only, without using any angular or datamanager code.\nInstead of EventEmitters there the Observables are served via RxJS subjects.\nInstallation\nnpm i @ec.components/core\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/field.html":{"url":"additional-documentation/core-classes/field.html","title":"additional-page - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nField\nA Field represents a property of an Object, without a specific value.\nIt is used to describe a column or field of one or multiple equally structured objects.\nThe field config (see FieldConfigProperty) can contain different transformation methods, such as:\n\nresolve: This method is used to resolve the field value from the object body.\nIt runs before all other transformation methods.\ndisplay: Transforms the resolved value to a human readable output. It is used for e.g. in list cells.\ngroup: Should return a value that is suitable for grouping multiple different values together, like in a list.\n\nExample Usage:\nconst field = new Field('name', {\n    resolve: (body) => body.value.name,\n    display: (value) => value.toUpperCase(),\n    group: (value) => value.length + ' Buchstaben',\n    sort: (value) => value.length\n    });\nconst name = field.resolve({value:{name:'bobby'}}); // 'bobby'\nfield.display(name); // => 'Bobby'\nfield.group(name); // => '5 Buchstaben'\nfield.sort(name); // => 5The above example is of course only viable to show the concept.\nWhen using the components as a whole, those methods will be called automatically from Item, List or Form.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/item.html":{"url":"additional-documentation/core-classes/item.html","title":"additional-page - Item","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nItem\nThe foundation for all entities is the Item class.\nIt consists of a body (value) and a config (see ItemConfig).\nIt can be used with arbitrary body values but is mainly thought to be a wrapper for objects.\nPrimitive use:\nconst primitive = new Item('a');\nprimitive.resolve(); //'a'Default use:\nconst tommy = new Item({ name: 'tommy' });\ntommy.resolve('name'); //'tommy'\ntommy.display('name'); //'tommy'\ntommy.group('name'); //'tommy'\ntommy.sort('name'); //'tommy'Item with fields definition\nWhen using it with objects, it can be passed a config (see ItemConfig) to set up its field config (see FieldConfig.\nEach item can call directly call a transformation function for a field:\nconst bobby = new Item({ value: { name: 'bobby' } }, {\n  fields: {\n    name: {\n      resolve: (body) => body.value.name,\n      display: (value) => value.toUpperCase(),\n      group: (value) => value.length + ' Buchstaben',\n      sort: (value) => value.length\n    }\n  }\n});\nbobby.resolve('name'); //'bobby'\nbobby.display('name'); //'Bobby'\nbobby.group('name'); //'5 Buchstaben'\nbobby.sort('name'); //5Identifiers and labels\nAn Item also brings the concept of identifiers and labels:\nconst e = new Item({ nr: '#AYQ', title: 'Wurst' }, { identifier: 'nr', label: 'title');\ne.id(); //'#AYQ'\ne.display(); //'Wurst'Saving items\nYou can set up a callback that is invoked when calling item.save():\nconst n = new Item(1, { onSave: (item, body) => body+1 });\nn.save();\nn.resolve(); //2\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/form.html":{"url":"additional-documentation/core-classes/form.html","title":"additional-page - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nForm\nForm is an Item with extra functions:\n\ninstantiates fields to iterate over\ngetters for fields and property values, including prefills.\n\nconst tommy = new Form({ name: 'tommy' }); //init without config\ntommy.getValue('name')); //'tommy'\nconst bobby = new Form(null, { fields: { name: { prefill:'bobby' }}}); //init with config only\ntommy.getValue('name')); //'bobby'\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/collection.html":{"url":"additional-documentation/core-classes/collection.html","title":"additional-page - Collection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCollection\nCollection is a more sophisticated Array:\nconst collection = new Collection([1, 2, 3]);\ncollection.has(1); //true\ncollection.has(4); //false\ncollection.add(4);\ncollection.remove(4);\ncollection.index(1); //0\ncollection.addAll([10,11,12]); //true\ncollection.hasAll([1,10,11]); //true\ncollection.removeAll();It is the Parent Class of List and Selection.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/pagination.html":{"url":"additional-documentation/core-classes/pagination.html","title":"additional-page - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPagination\nPagination can be used to keep track of the pages of arbitrary items.\nconst pagination = new Pagination({ size: 10 });\npagination.setTotal(50); //tells the pagination that it should paginate over 50 items.\npagination.getPages(); //5See list.ts/list.component for example usage.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/list.html":{"url":"additional-documentation/core-classes/list.html","title":"additional-page - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nList\nList is a Collection with list specific features:\n\nIt instantiates each array value as an Item\nIt instantiates each field property config as a Field.\nIt supports getting items by identifier via the id method (if identifier is set)\nIt supports filtering, sorting, grouping and pagination.\n\nthis.trees = new List([{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}, {\n  name: 'Cinnamon',\n  height: 10,\n  fruits: true\n}], {\n  size: 3,\n  fields: {\n    name: {\n      label: 'Name',\n      view: 'string',\n      required: true,\n      input: CoolStringComponent,\n      output: CoolStringComponent\n    },\n    height: {\n      label: 'Höhe',\n      group: (h) => h > 10 ? 'Höher als 10m' : 'Niedriger als 10m',\n      view: 'number',\n      required: true,\n      validate: (value) => {\n        if (value  value ? 'ja' : 'nein',\n      view: 'boolean'\n    },\n  },\n});Here is an easy example of using a List instance in a template with Angular:\n\n    \n        {{tree.display('name')}}\n        Früchte? {{tree.display('fruits')}}\n    \n\nNach Name sortierenFor all the features, have a look at the List documentation.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/selection.html":{"url":"additional-documentation/core-classes/selection.html","title":"additional-page - Selection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSelection\nSelection is a List with selection specific features:\n\nsupports select method with solo option\noverrides the index method to allow all items with the same identifier to be recognized as selected.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/sorter.html":{"url":"additional-documentation/core-classes/sorter.html","title":"additional-page - Sorter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSorter\nThe Sorter is a static class that acts as a helper to sort different primitive types. See the tests for example usage.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
